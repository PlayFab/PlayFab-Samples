#if 0
//
// Generated by Microsoft (R) D3D Shader Disassembler for Durango
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// COLOR                    0   xyzw        3     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xy          0     NONE   float   xy  
// TEXCOORD                 1   xyzw        1     NONE   float   xyzw
// TEXCOORD                 2   xyz         2     NONE   float   xyz 
// COLOR                    0   xyzw        3     NONE   float   xyzw
// SV_Position              0   xyzw        4      POS   float   xyzw
//
vs_5_0
// Opaque Custom Data - XBOX Precompiled Shader Header
// First Precompiled Shader at offset:[185]
// Embedded Data:
//  0x000000b9 - Offset To First Precompiled Shader
//  0x00010050 - Original Shader Descriptor
//  0x000000b4 - Original Shader Size
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[13], immediateIndexed
dcl_input v0.xyzw
dcl_input v1.xyz
dcl_input v2.xy
dcl_input v3.xyzw
dcl_output o0.xy
dcl_output o1.xyzw
dcl_output o2.xyz
dcl_output o3.xyzw
dcl_output_siv o4.xyzw, position
dcl_temps 2
mov o0.xy, v2.xyxx
dp4 r0.x, v0.xyzw, cb0[2].xyzw
dp4 r0.y, v0.xyzw, cb0[3].xyzw
dp4 r0.z, v0.xyzw, cb0[4].xyzw
mov r0.w, l(1.000000)
mov o1.xyzw, r0.xyzw
mad r0.xyz, v1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
dp3 r1.x, r0.xyzx, cb0[6].xyzx
dp3 r1.y, r0.xyzx, cb0[7].xyzx
dp3 r1.z, r0.xyzx, cb0[8].xyzx
dp3 r0.x, r1.xyzx, r1.xyzx
rsq r0.x, r0.x
mul o2.xyz, r0.xxxx, r1.xyzx
mul o3.w, v3.w, cb0[0].w
mov o3.xyz, v3.xyzx
dp4 o4.x, v0.xyzw, cb0[9].xyzw
dp4 o4.y, v0.xyzw, cb0[10].xyzw
dp4 o4.z, v0.xyzw, cb0[11].xyzw
dp4 o4.w, v0.xyzw, cb0[12].xyzw
ret 
// Opaque Custom Data - XBOX Precompiled Shader Object
// Offset:[185], bundle is:[191] DWORDS.
// Disassembled Precompiled Shader Object:
// Shader Type               : (VS)
// Shader Hw Stage           : (VS)
// PDB Filename              : D:\ATG\st_dev\Kits\DirectXTK\src\Shaders\Compiled\XboxOneDebugEffect_VSDebugVcBn.pdb
// Shader Semantic Hash      : 0x4a8def06b7513fc1
//
// Shader Data:
; ----------------- VS Data ------------------------
; Input Semantic Mappings
;   [0] generic, usageIdx  0, channelMask 15, v[4:7]
;   [1] generic, usageIdx  1, channelMask  7, v[8:10]
;   [2] generic, usageIdx  2, channelMask  3, v[12:13]
;   [3] generic, usageIdx  3, channelMask 15, v[16:19]
; Output Semantic Mappings
;   [0] generic,  usageIdx 0, paramIdx 0, paramSlot 0
;   [1] generic,  usageIdx 1, paramIdx 1, paramSlot 0
;   [2] generic,  usageIdx 2, paramIdx 2, paramSlot 0
;   [3] generic,  usageIdx 3, paramIdx 3, paramSlot 0

codeLenInByte        = 308 bytes;

; launchModeFlags    = 0x0000000E
srdTableSupport      = TRUE
immediateSupportExt  = TRUE
srdTableSupportExt   = TRUE

userElementCount     = 3;
;  userElements[0]      = PTR_VERTEX_BUFFER_TABLE, Element=1 dwords, s[0x2:3]
;  userElements[1]      = PTR_EXTENDED_USER_DATA, ReferencedExtUserElements=1, s[0x2:3]
;  userElements[2]      = SUB_PTR_FETCH_SHADER, s[0x2:3]
extUserElementCount  = 1;
;  extUserElements 1[0] = IMM_CONST_BUFFER 0, offset 0x0:3 dwords
NumVgprs             = 20;
NumSgprs             = 46;
FloatMode            = 192;
IeeeMode             = 0;
FlatPtr32            = 0;
ScratchSize          = 0 dwords/thread;
LDSByteSize          = 0 bytes/workgroup (compile time only);
ScratchWaveOffsetReg = s65535;
; texSamplerUsage         = 0x00000000
; constBufUsage           = 0x00000001

; SPI_SHADER_PGM_RSRC2_VS = 0x00000008
SSPRV:USER_SGPR             = 4
; PA_CL_VS_OUT_CNTL       = 0x00000000
; SPI_VS_OUT_CONFIG       = 0x00000006
SVOC:VS_EXPORT_COUNT        = 3
SVOC:VS_HALF_PACK           = 0
SVOC:VS_EXPORTS_FOG         = 0
SVOC:VS_OUT_FOG_VEC_ADDR    = 0
; SPI_SHADER_POS_FORMAT     = 0x00000004
SSPF:POS0_EXPORT_FORMAT     = 4
SSPF:POS1_EXPORT_FORMAT     = 0
SSPF:POS2_EXPORT_FORMAT     = 0
SSPF:POS3_EXPORT_FORMAT     = 0
VGT_STRMOUT_CONFIG = 0x0
VGT_STRMOUT_CONFIG:RAST_STREAM = 0
VGT_STRMOUT_CONFIG:STREAMOUT_0_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_1_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_2_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_3_EN = 0
; exportVertexSize          = 4

// Shader Instructions:
shader main
  asic(CI)
  type(VS)
  s_swappc_b64  s[2:3], s[2:3]                          // 000000000000: BE822102
  s_load_dwordx4  s[0:3], s[2:3], 0x00                  // 000000000004: C0800300
  s_waitcnt     lgkmcnt(0)                              // 000000000008: BF8C007F
  s_buffer_load_dwordx4  s[4:7], s[0:3], 0x20           // 00000000000C: C2820120
  s_buffer_load_dwordx4  s[8:11], s[0:3], 0x1c          // 000000000010: C284011C
  s_buffer_load_dwordx4  s[12:15], s[0:3], 0x18         // 000000000014: C2860118
  s_buffer_load_dwordx8  s[16:23], s[0:3], 0x08         // 000000000018: C2C80108
  s_buffer_load_dwordx4  s[24:27], s[0:3], 0x10         // 00000000001C: C28C0110
  s_buffer_load_dwordx16  s[28:43], s[0:3], 0x24        // 000000000020: C30E0124
  s_waitcnt     vmcnt(0)                                // 000000000024: BF8C0F70
  v_mad_f32     v0, v10, 2.0, -1.0                      // 000000000028: D2820000 03CDE90A
  v_mad_f32     v1, v9, 2.0, -1.0                       // 000000000030: D2820001 03CDE909
  s_waitcnt     lgkmcnt(0)                              // 000000000038: BF8C007F
  v_mul_legacy_f32  v2, s6, v0                          // 00000000003C: 0E040006
  v_mad_f32     v3, v8, 2.0, -1.0                       // 000000000040: D2820003 03CDE908
  v_mul_legacy_f32  v8, s10, v0                         // 000000000048: 0E10000A
  v_mac_f32     v2, s5, v1                              // 00000000004C: 3E040205
  s_buffer_load_dword  s0, s[0:3], 0x03                 // 000000000050: C2000103
  v_mul_legacy_f32  v0, s14, v0                         // 000000000054: 0E00000E
  v_mac_f32     v8, s9, v1                              // 000000000058: 3E100209
  v_mac_f32     v2, s4, v3                              // 00000000005C: 3E040604
  v_mac_f32     v0, s13, v1                             // 000000000060: 3E00020D
  v_mac_f32     v8, s8, v3                              // 000000000064: 3E100608
  v_mul_legacy_f32  v1, v2, v2                          // 000000000068: 0E020502
  v_mul_legacy_f32  v9, s19, v7                         // 00000000006C: 0E120E13
  v_mul_legacy_f32  v10, s23, v7                        // 000000000070: 0E140E17
  v_mul_legacy_f32  v11, s27, v7                        // 000000000074: 0E160E1B
  v_mac_f32     v0, s12, v3                             // 000000000078: 3E00060C
  v_mac_f32     v1, v8, v8                              // 00000000007C: 3E021108
  v_mul_legacy_f32  v3, s31, v7                         // 000000000080: 0E060E1F
  v_mul_legacy_f32  v14, s35, v7                        // 000000000084: 0E1C0E23
  v_mul_legacy_f32  v15, s39, v7                        // 000000000088: 0E1E0E27
  v_mul_legacy_f32  v7, s43, v7                         // 00000000008C: 0E0E0E2B
  v_mac_f32     v9, s18, v6                             // 000000000090: 3E120C12
  v_mac_f32     v10, s22, v6                            // 000000000094: 3E140C16
  v_mac_f32     v11, s26, v6                            // 000000000098: 3E160C1A
  v_mac_f32     v1, v0, v0                              // 00000000009C: 3E020100
  v_mac_legacy_f32  v3, s30, v6                         // 0000000000A0: 0C060C1E
  v_mac_legacy_f32  v14, s34, v6                        // 0000000000A4: 0C1C0C22
  v_mac_legacy_f32  v15, s38, v6                        // 0000000000A8: 0C1E0C26
  v_mac_legacy_f32  v7, s42, v6                         // 0000000000AC: 0C0E0C2A
  v_mac_f32     v9, s17, v5                             // 0000000000B0: 3E120A11
  v_mac_f32     v10, s21, v5                            // 0000000000B4: 3E140A15
  v_mac_f32     v11, s25, v5                            // 0000000000B8: 3E160A19
  v_rsq_f32     v1, v1                                  // 0000000000BC: 7E025D01
  v_mac_legacy_f32  v3, s29, v5                         // 0000000000C0: 0C060A1D
  v_mac_legacy_f32  v14, s33, v5                        // 0000000000C4: 0C1C0A21
  v_mac_legacy_f32  v15, s37, v5                        // 0000000000C8: 0C1E0A25
  v_mac_legacy_f32  v7, s41, v5                         // 0000000000CC: 0C0E0A29
  v_mac_f32     v9, s16, v4                             // 0000000000D0: 3E120810
  v_mac_f32     v10, s20, v4                            // 0000000000D4: 3E140814
  v_mac_f32     v11, s24, v4                            // 0000000000D8: 3E160818
  v_mul_legacy_f32  v0, v0, v1                          // 0000000000DC: 0E000300
  v_mul_legacy_f32  v5, v8, v1                          // 0000000000E0: 0E0A0308
  v_mul_legacy_f32  v1, v2, v1                          // 0000000000E4: 0E020302
  s_waitcnt     lgkmcnt(0)                              // 0000000000E8: BF8C007F
  v_mul_legacy_f32  v2, s0, v19                         // 0000000000EC: 0E042600
  v_mac_legacy_f32  v3, s28, v4                         // 0000000000F0: 0C06081C
  v_mac_legacy_f32  v14, s32, v4                        // 0000000000F4: 0C1C0820
  v_mac_legacy_f32  v15, s36, v4                        // 0000000000F8: 0C1E0824
  v_mac_legacy_f32  v7, s40, v4                         // 0000000000FC: 0C0E0828
  v_mov_b32     v4, 0                                   // 000000000100: 7E080280
  v_mov_b32     v6, 1.0                                 // 000000000104: 7E0C02F2
  exp           pos0, v3, v14, v15, v7 done             // 000000000108: F80008CF 070F0E03
  exp           param0, v12, v13, v4, v6                // 000000000110: F800020F 06040D0C
  exp           param1, v9, v10, v11, v6                // 000000000118: F800021F 060B0A09
  exp           param2, v0, v5, v1, v6                  // 000000000120: F800022F 06010500
  exp           param3, v16, v17, v18, v2               // 000000000128: F800023F 02121110
  s_endpgm                                              // 000000000130: BF810000
end


// Shader Statistics:
//  NumActiveWaveFront:         40
//  WorkgroupSize:              64
//  NumVRegs:                   20
//  NumSRegs:                   46
//  NumActiveWaveFrontByVReg:   40
//  NumActiveWaveFrontBySReg:   40
//  NumActiveWaveFrontByLDS:    40
//  CycleSim:                   86
//  CycleSimNWaves:             86
//  Code Size:                  308
//Assembler Counts:
//  num_32bit_ops                     : 61
//  num_64bit_ops                     : 8
//  num_alu                           : 50
//  num_fc                            : 14
//  num_inst_exp                      : 5
//  num_inst_ldsgds                   : 0
//  num_inst_mimg                     : 0
//  num_inst_mtbuf                    : 0
//  num_inst_mubuf                    : 0
//  num_inst_sopp                     : 5
//  num_inst_sopc                     : 0
//  num_inst_sop1                     : 1
//  num_inst_sop2                     : 0
//  num_inst_smrd                     : 0
//  num_inst_sopk                     : 0
//  num_inst_vop1                     : 3
//  num_inst_vop2                     : 44
//  num_inst_vop3                     : 0
//  num_inst_vopc                     : 0
//  num_inst_vintrp                   : 0
//  constant_literal_operands         : 0
//  num_tex                           : 5
//  num_vmem_group                    : 0
//  vmem_grouping_started             : 0
// Shader Statistics:
// m_uNumActiveWaveFront             : 40
// m_uVRegLimit                      : 256
// m_uSRegLimit                      : 512
// m_uNumVRegs                       : 20
// m_uNumSRegs                       : 46
// m_uSCCodeSize                     : 308
// m_uWorkgroupSize                  : 64
// m_uNumActiveWaveFrontByVReg       : 40
// m_uNumActiveWaveFrontBySReg       : 40
// m_uNumActiveWaveFrontByLDS        : 40
// m_uCycleSim1Wave                  : 86
// m_uCycleSimNWaves                 : 86

// Assembler Counts:
// num_32bit_ops                     : 61
// num_64bit_ops                     : 8
// num_alu                           : 50
// num_fc                            : 14
// num_inst_exp                      : 5
// num_inst_ldsgds                   : 0
// num_inst_mimg                     : 0
// num_inst_mtbuf                    : 0
// num_inst_mubuf                    : 0
// num_inst_sopp                     : 5
// num_inst_sopc                     : 0
// num_inst_sop1                     : 1
// num_inst_sop2                     : 0
// num_inst_smrd                     : 0
// num_inst_sopk                     : 0
// num_inst_vop1                     : 3
// num_inst_vop2                     : 44
// num_inst_vop3                     : 0
// num_inst_vopc                     : 0
// num_inst_vintrp                   : 0
// num_inst_smem                     : 8
// constant_literal_operands         : 0
// num_tex                           : 5
// num_vmem_group                    : 0
// vmem_grouping_started             : 0
// m_fFullPrecompilePromise          : 0
// m_fIntegerDivideExpansion         : 0
// m_fIntegerModExpansion            : 0
// m_fDoubleDivideExpansion          : 0
// m_fUsesScratch                    : 0
// m_fPerThreadIndirection           : 0
// m_fUsingTableLoads                : 0
// m_fUsingSHmemLoads                : 1
// fSemanticHashFlagOverrideApplied  : 0
// fPSHasNoUAVWrite                  : 0
// m_fRenderTargetsCanBeCompacted    : 0
// version                           : 3
// fCodePatched                      : 0

// Opaque Custom Data - XBOX Precompiled Shader Object
// Offset:[378], bundle is:[208] DWORDS.
// Disassembled Precompiled Shader Object:
// Shader Type               : (VS)
// Shader Hw Stage           : (ES)
// PDB Filename              : D:\ATG\st_dev\Kits\DirectXTK\src\Shaders\Compiled\XboxOneDebugEffect_VSDebugVcBn.pdb
// Shader Semantic Hash      : 0x4a8def06b7513fc1
//
// Shader Data:
; ----------------- VS Data ------------------------
; Input Semantic Mappings
;   [0] generic, usageIdx  0, channelMask 15, v[4:7]
;   [1] generic, usageIdx  1, channelMask  7, v[8:10]
;   [2] generic, usageIdx  2, channelMask  3, v[12:13]
;   [3] generic, usageIdx  3, channelMask 15, v[16:19]
; Output Semantic Mappings
;   [0] position,  usageIdx 4, paramIdx 4, paramSlot 0
;   [1] generic,  usageIdx 0, paramIdx 0, paramSlot 0
;   [2] generic,  usageIdx 1, paramIdx 1, paramSlot 0
;   [3] generic,  usageIdx 2, paramIdx 2, paramSlot 0
;   [4] generic,  usageIdx 3, paramIdx 3, paramSlot 0

codeLenInByte        = 404 bytes;

; launchModeFlags    = 0x0000000E
srdTableSupport      = TRUE
immediateSupportExt  = TRUE
srdTableSupportExt   = TRUE

userElementCount     = 4;
;  userElements[0]      = PTR_VERTEX_BUFFER_TABLE, Element=1 dwords, s[0x2:3]
;  userElements[1]      = PTR_EXTENDED_USER_DATA, ReferencedExtUserElements=1, s[0x2:3]
;  userElements[2]      = PTR_INTERNAL_GLOBAL_TABLE, Element=1 dwords, s[0x2:3]
;  userElements[3]      = SUB_PTR_FETCH_SHADER, s[0x2:3]
extUserElementCount  = 1;
;  extUserElements 1[0] = IMM_CONST_BUFFER 0, offset 0x0:3 dwords
NumVgprs             = 20;
NumSgprs             = 54;
FloatMode            = 192;
IeeeMode             = 0;
FlatPtr32            = 0;
ScratchSize          = 0 dwords/thread;
LDSByteSize          = 0 bytes/workgroup (compile time only);
ScratchWaveOffsetReg = s65535;
; texSamplerUsage         = 0x00000000
; constBufUsage           = 0x00000001

; SPI_SHADER_PGM_RSRC2_VS = 0x00000008
SSPRV:USER_SGPR             = 4
; PA_CL_VS_OUT_CNTL       = 0x00000000
; SPI_VS_OUT_CONFIG       = 0x00000000
SVOC:VS_EXPORT_COUNT        = 0
SVOC:VS_HALF_PACK           = 0
SVOC:VS_EXPORTS_FOG         = 0
SVOC:VS_OUT_FOG_VEC_ADDR    = 0
; SPI_SHADER_POS_FORMAT     = 0x00000004
SSPF:POS0_EXPORT_FORMAT     = 4
SSPF:POS1_EXPORT_FORMAT     = 0
SSPF:POS2_EXPORT_FORMAT     = 0
SSPF:POS3_EXPORT_FORMAT     = 0
VGT_STRMOUT_CONFIG = 0x0
VGT_STRMOUT_CONFIG:RAST_STREAM = 0
VGT_STRMOUT_CONFIG:STREAMOUT_0_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_1_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_2_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_3_EN = 0
; exportVertexSize          = 20
; esGsRingItemSize          = 20

// Shader Instructions:
shader main
  asic(CI)
  type(VS)
  s_swappc_b64  s[2:3], s[2:3]                          // 000000000000: BE822102
  s_load_dwordx4  s[8:11], s[2:3], 0x00                 // 000000000004: C0840300
  s_waitcnt     lgkmcnt(0)                              // 000000000008: BF8C007F
  s_buffer_load_dwordx16  s[12:27], s[8:11], 0x24       // 00000000000C: C3060924
  s_waitcnt     vmcnt(0) & lgkmcnt(0)                   // 000000000010: BF8C0070
  v_mul_legacy_f32  v0, s15, v7                         // 000000000014: 0E000E0F
  s_buffer_load_dwordx8  s[28:35], s[8:11], 0x08        // 000000000018: C2CE0908
  s_buffer_load_dwordx4  s[36:39], s[8:11], 0x20        // 00000000001C: C2920920
  s_load_dwordx4  s[0:3], s[2:3], 0x0c                  // 000000000020: C080030C
  v_mac_legacy_f32  v0, s14, v6                         // 000000000024: 0C000C0E
  v_mul_legacy_f32  v1, s19, v7                         // 000000000028: 0E020E13
  s_buffer_load_dwordx4  s[40:43], s[8:11], 0x1c        // 00000000002C: C294091C
  v_mac_legacy_f32  v0, s13, v5                         // 000000000030: 0C000A0D
  v_mac_legacy_f32  v1, s18, v6                         // 000000000034: 0C020C12
  v_mul_legacy_f32  v2, s23, v7                         // 000000000038: 0E040E17
  s_buffer_load_dwordx4  s[44:47], s[8:11], 0x10        // 00000000003C: C2960910
  s_buffer_load_dwordx4  s[48:51], s[8:11], 0x18        // 000000000040: C2980918
  v_mac_legacy_f32  v0, s12, v4                         // 000000000044: 0C00080C
  v_mac_legacy_f32  v1, s17, v5                         // 000000000048: 0C020A11
  v_mac_legacy_f32  v2, s22, v6                         // 00000000004C: 0C040C16
  v_mul_legacy_f32  v3, s27, v7                         // 000000000050: 0E060E1B
  v_mac_legacy_f32  v1, s16, v4                         // 000000000054: 0C020810
  v_mac_legacy_f32  v2, s21, v5                         // 000000000058: 0C040A15
  v_mac_legacy_f32  v3, s26, v6                         // 00000000005C: 0C060C1A
  v_mad_legacy_f32  v10, v10, 2.0, -1.0                 // 000000000060: D280000A 03CDE90A
  v_mac_legacy_f32  v2, s20, v4                         // 000000000068: 0C040814
  v_mac_legacy_f32  v3, s25, v5                         // 00000000006C: 0C060A19
  s_waitcnt     lgkmcnt(0)                              // 000000000070: BF8C007F
  v_mul_legacy_f32  v11, s31, v7                        // 000000000074: 0E160E1F
  v_mad_legacy_f32  v9, v9, 2.0, -1.0                   // 000000000078: D2800009 03CDE909
  v_mul_legacy_f32  v14, s38, v10                       // 000000000080: 0E1C1426
  v_mac_legacy_f32  v3, s24, v4                         // 000000000084: 0C060818
  buffer_store_dword  v0, v0, s[0:3], s4 offset:64 glc slc // 000000000088: E0704040 04400000
  v_mac_legacy_f32  v11, s30, v6                        // 000000000090: 0C160C1E
  v_mul_legacy_f32  v0, s35, v7                         // 000000000094: 0E000E23
  v_mad_legacy_f32  v8, v8, 2.0, -1.0                   // 000000000098: D2800008 03CDE908
  v_mul_legacy_f32  v15, s42, v10                       // 0000000000A0: 0E1E142A
  v_mac_legacy_f32  v14, s37, v9                        // 0000000000A4: 0C1C1225
  buffer_store_dword  v1, v0, s[0:3], s4 offset:68 glc slc // 0000000000A8: E0704044 04400100
  v_mac_legacy_f32  v11, s29, v5                        // 0000000000B0: 0C160A1D
  v_mac_legacy_f32  v0, s34, v6                         // 0000000000B4: 0C000C22
  v_mul_legacy_f32  v1, s47, v7                         // 0000000000B8: 0E020E2F
  v_mul_legacy_f32  v7, s50, v10                        // 0000000000BC: 0E0E1432
  v_mac_legacy_f32  v15, s41, v9                        // 0000000000C0: 0C1E1229
  v_mac_legacy_f32  v14, s36, v8                        // 0000000000C4: 0C1C1024
  buffer_store_dword  v2, v0, s[0:3], s4 offset:72 glc slc // 0000000000C8: E0704048 04400200
  v_mac_legacy_f32  v11, s28, v4                        // 0000000000D0: 0C16081C
  v_mac_legacy_f32  v0, s33, v5                         // 0000000000D4: 0C000A21
  v_mac_legacy_f32  v1, s46, v6                         // 0000000000D8: 0C020C2E
  v_mac_legacy_f32  v7, s49, v9                         // 0000000000DC: 0C0E1231
  v_mac_legacy_f32  v15, s40, v8                        // 0000000000E0: 0C1E1028
  v_mul_legacy_f32  v2, v14, v14                        // 0000000000E4: 0E041D0E
  buffer_store_dword  v3, v0, s[0:3], s4 offset:76 glc slc // 0000000000E8: E070404C 04400300
  v_mac_legacy_f32  v0, s32, v4                         // 0000000000F0: 0C000820
  v_mac_legacy_f32  v1, s45, v5                         // 0000000000F4: 0C020A2D
  v_mac_legacy_f32  v7, s48, v8                         // 0000000000F8: 0C0E1030
  v_mac_legacy_f32  v2, v15, v15                        // 0000000000FC: 0C041F0F
  buffer_store_dword  v12, v0, s[0:3], s4 glc slc       // 000000000100: E0704000 04400C00
  v_mac_legacy_f32  v1, s44, v4                         // 000000000108: 0C02082C
  v_mac_legacy_f32  v2, v7, v7                          // 00000000010C: 0C040F07
  buffer_store_dword  v13, v0, s[0:3], s4 offset:4 glc slc // 000000000110: E0704004 04400D00
  v_rsq_f32     v2, v2                                  // 000000000118: 7E045D02
  buffer_store_dword  v11, v0, s[0:3], s4 offset:16 glc slc // 00000000011C: E0704010 04400B00
  v_mov_b32     v3, 1.0                                 // 000000000124: 7E0602F2
  v_mul_legacy_f32  v4, v7, v2                          // 000000000128: 0E080507
  buffer_store_dword  v0, v0, s[0:3], s4 offset:20 glc slc // 00000000012C: E0704014 04400000
  s_buffer_load_dword  s5, s[8:11], 0x03                // 000000000134: C2028903
  v_mul_legacy_f32  v0, v15, v2                         // 000000000138: 0E00050F
  buffer_store_dword  v1, v0, s[0:3], s4 offset:24 glc slc // 00000000013C: E0704018 04400100
  v_mul_legacy_f32  v1, v14, v2                         // 000000000144: 0E02050E
  buffer_store_dword  v3, v0, s[0:3], s4 offset:28 glc slc // 000000000148: E070401C 04400300
  buffer_store_dword  v4, v0, s[0:3], s4 offset:32 glc slc // 000000000150: E0704020 04400400
  buffer_store_dword  v0, v0, s[0:3], s4 offset:36 glc slc // 000000000158: E0704024 04400000
  buffer_store_dword  v1, v0, s[0:3], s4 offset:40 glc slc // 000000000160: E0704028 04400100
  s_waitcnt     lgkmcnt(0)                              // 000000000168: BF8C007F
  v_mul_legacy_f32  v0, s5, v19                         // 00000000016C: 0E002605
  buffer_store_dword  v16, v0, s[0:3], s4 offset:48 glc slc // 000000000170: E0704030 04401000
  buffer_store_dword  v17, v0, s[0:3], s4 offset:52 glc slc // 000000000178: E0704034 04401100
  buffer_store_dword  v18, v0, s[0:3], s4 offset:56 glc slc // 000000000180: E0704038 04401200
  buffer_store_dword  v0, v0, s[0:3], s4 offset:60 glc slc // 000000000188: E070403C 04400000
  s_endpgm                                              // 000000000190: BF810000
end


// Shader Statistics:
//  NumActiveWaveFront:         36
//  WorkgroupSize:              64
//  NumVRegs:                   20
//  NumSRegs:                   54
//  NumActiveWaveFrontByVReg:   40
//  NumActiveWaveFrontBySReg:   36
//  NumActiveWaveFrontByLDS:    40
//  CycleSim:                   86
//  CycleSimNWaves:             86
//  Code Size:                  404
//Assembler Counts:
//  num_32bit_ops                     : 61
//  num_64bit_ops                     : 20
//  num_alu                           : 49
//  num_fc                            : 15
//  num_inst_exp                      : 0
//  num_inst_ldsgds                   : 0
//  num_inst_mimg                     : 0
//  num_inst_mtbuf                    : 0
//  num_inst_mubuf                    : 17
//  num_inst_sopp                     : 5
//  num_inst_sopc                     : 0
//  num_inst_sop1                     : 1
//  num_inst_sop2                     : 0
//  num_inst_smrd                     : 0
//  num_inst_sopk                     : 0
//  num_inst_vop1                     : 2
//  num_inst_vop2                     : 44
//  num_inst_vop3                     : 0
//  num_inst_vopc                     : 0
//  num_inst_vintrp                   : 0
//  constant_literal_operands         : 0
//  num_tex                           : 17
//  num_vmem_group                    : 11
//  vmem_grouping_started             : 0
// Shader Statistics:
// m_uNumActiveWaveFront             : 36
// m_uVRegLimit                      : 256
// m_uSRegLimit                      : 512
// m_uNumVRegs                       : 20
// m_uNumSRegs                       : 54
// m_uSCCodeSize                     : 404
// m_uWorkgroupSize                  : 64
// m_uNumActiveWaveFrontByVReg       : 40
// m_uNumActiveWaveFrontBySReg       : 36
// m_uNumActiveWaveFrontByLDS        : 40
// m_uCycleSim1Wave                  : 86
// m_uCycleSimNWaves                 : 86

// Assembler Counts:
// num_32bit_ops                     : 61
// num_64bit_ops                     : 20
// num_alu                           : 49
// num_fc                            : 15
// num_inst_exp                      : 0
// num_inst_ldsgds                   : 0
// num_inst_mimg                     : 0
// num_inst_mtbuf                    : 0
// num_inst_mubuf                    : 17
// num_inst_sopp                     : 5
// num_inst_sopc                     : 0
// num_inst_sop1                     : 1
// num_inst_sop2                     : 0
// num_inst_smrd                     : 0
// num_inst_sopk                     : 0
// num_inst_vop1                     : 2
// num_inst_vop2                     : 44
// num_inst_vop3                     : 0
// num_inst_vopc                     : 0
// num_inst_vintrp                   : 0
// num_inst_smem                     : 9
// constant_literal_operands         : 0
// num_tex                           : 17
// num_vmem_group                    : 11
// vmem_grouping_started             : 0
// m_fFullPrecompilePromise          : 0
// m_fIntegerDivideExpansion         : 0
// m_fIntegerModExpansion            : 0
// m_fDoubleDivideExpansion          : 0
// m_fUsesScratch                    : 0
// m_fPerThreadIndirection           : 0
// m_fUsingTableLoads                : 0
// m_fUsingSHmemLoads                : 1
// fSemanticHashFlagOverrideApplied  : 0
// fPSHasNoUAVWrite                  : 0
// m_fRenderTargetsCanBeCompacted    : 0
// version                           : 3
// fCodePatched                      : 0

// Opaque Custom Data - XBOX Precompiled Shader Object
// Offset:[588], bundle is:[202] DWORDS.
// Disassembled Precompiled Shader Object:
// Shader Type               : (VS)
// Shader Hw Stage           : (LS)
// PDB Filename              : D:\ATG\st_dev\Kits\DirectXTK\src\Shaders\Compiled\XboxOneDebugEffect_VSDebugVcBn.pdb
// Shader Semantic Hash      : 0x4a8def06b7513fc1
//
// Shader Data:
; ----------------- VS Data ------------------------
; Input Semantic Mappings
;   [0] generic, usageIdx  0, channelMask 15, v[4:7]
;   [1] generic, usageIdx  1, channelMask  7, v[8:10]
;   [2] generic, usageIdx  2, channelMask  3, v[12:13]
;   [3] generic, usageIdx  3, channelMask 15, v[16:19]
; Output Semantic Mappings
;   [0] position,  usageIdx 4, paramIdx 4, paramSlot 0
;   [1] generic,  usageIdx 0, paramIdx 0, paramSlot 0
;   [2] generic,  usageIdx 1, paramIdx 1, paramSlot 0
;   [3] generic,  usageIdx 2, paramIdx 2, paramSlot 0
;   [4] generic,  usageIdx 3, paramIdx 3, paramSlot 0

codeLenInByte        = 356 bytes;

; launchModeFlags    = 0x0000000E
srdTableSupport      = TRUE
immediateSupportExt  = TRUE
srdTableSupportExt   = TRUE

userElementCount     = 3;
;  userElements[0]      = PTR_VERTEX_BUFFER_TABLE, Element=1 dwords, s[0x2:3]
;  userElements[1]      = PTR_EXTENDED_USER_DATA, ReferencedExtUserElements=1, s[0x2:3]
;  userElements[2]      = SUB_PTR_FETCH_SHADER, s[0x2:3]
extUserElementCount  = 1;
;  extUserElements 1[0] = IMM_CONST_BUFFER 0, offset 0x0:3 dwords
NumVgprs             = 22;
NumSgprs             = 46;
FloatMode            = 192;
IeeeMode             = 0;
FlatPtr32            = 0;
ScratchSize          = 0 dwords/thread;
LDSByteSize          = 0 bytes/workgroup (compile time only);
ScratchWaveOffsetReg = s65535;
; texSamplerUsage         = 0x00000000
; constBufUsage           = 0x00000001

; SPI_SHADER_PGM_RSRC2_VS = 0x00000008
SSPRV:USER_SGPR             = 4
; PA_CL_VS_OUT_CNTL       = 0x00000000
; SPI_VS_OUT_CONFIG       = 0x00000000
SVOC:VS_EXPORT_COUNT        = 0
SVOC:VS_HALF_PACK           = 0
SVOC:VS_EXPORTS_FOG         = 0
SVOC:VS_OUT_FOG_VEC_ADDR    = 0
; SPI_SHADER_POS_FORMAT     = 0x00000004
SSPF:POS0_EXPORT_FORMAT     = 4
SSPF:POS1_EXPORT_FORMAT     = 0
SSPF:POS2_EXPORT_FORMAT     = 0
SSPF:POS3_EXPORT_FORMAT     = 0
VGT_STRMOUT_CONFIG = 0x0
VGT_STRMOUT_CONFIG:RAST_STREAM = 0
VGT_STRMOUT_CONFIG:STREAMOUT_0_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_1_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_2_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_3_EN = 0
; vgprCompCnt               = 1
; exportVertexSize          = 20
; lsStride                  = 80

// Shader Instructions:
shader main
  asic(CI)
  type(VS)
  s_swappc_b64  s[2:3], s[2:3]                          // 000000000000: BE822102
  s_load_dwordx4  s[0:3], s[2:3], 0x00                  // 000000000004: C0800300
  s_waitcnt     lgkmcnt(0)                              // 000000000008: BF8C007F
  s_buffer_load_dwordx16  s[4:19], s[0:3], 0x24         // 00000000000C: C3020124
  s_buffer_load_dwordx4  s[20:23], s[0:3], 0x20         // 000000000010: C28A0120
  s_buffer_load_dwordx4  s[24:27], s[0:3], 0x1c         // 000000000014: C28C011C
  s_buffer_load_dwordx8  s[28:35], s[0:3], 0x08         // 000000000018: C2CE0108
  s_buffer_load_dwordx4  s[36:39], s[0:3], 0x18         // 00000000001C: C2920118
  s_buffer_load_dwordx4  s[40:43], s[0:3], 0x10         // 000000000020: C2940110
  s_waitcnt     vmcnt(0)                                // 000000000024: BF8C0F70
  v_mad_legacy_f32  v0, v10, 2.0, -1.0                  // 000000000028: D2800000 03CDE90A
  s_waitcnt     lgkmcnt(0)                              // 000000000030: BF8C007F
  v_mul_legacy_f32  v2, s7, v7                          // 000000000034: 0E040E07
  v_mul_legacy_f32  v3, s11, v7                         // 000000000038: 0E060E0B
  v_mad_legacy_f32  v9, v9, 2.0, -1.0                   // 00000000003C: D2800009 03CDE909
  v_mul_legacy_f32  v10, s22, v0                        // 000000000044: 0E140016
  v_mac_legacy_f32  v2, s6, v6                          // 000000000048: 0C040C06
  v_mac_legacy_f32  v3, s10, v6                         // 00000000004C: 0C060C0A
  v_mul_legacy_f32  v11, s15, v7                        // 000000000050: 0E160E0F
  v_mul_legacy_f32  v14, s19, v7                        // 000000000054: 0E1C0E13
  v_mad_legacy_f32  v8, v8, 2.0, -1.0                   // 000000000058: D2800008 03CDE908
  v_mul_legacy_f32  v15, s26, v0                        // 000000000060: 0E1E001A
  v_mac_legacy_f32  v10, s21, v9                        // 000000000064: 0C141215
  v_mac_legacy_f32  v2, s5, v5                          // 000000000068: 0C040A05
  v_mac_legacy_f32  v3, s9, v5                          // 00000000006C: 0C060A09
  v_mac_legacy_f32  v11, s14, v6                        // 000000000070: 0C160C0E
  v_mac_legacy_f32  v14, s18, v6                        // 000000000074: 0C1C0C12
  s_movk_i32    s5, 0x0050                              // 000000000078: B0050050
  s_mov_b32     m0, 0x00010000                          // 00000000007C: BEFC03FF 00010000
  v_mul_legacy_f32  v20, s31, v7                        // 000000000084: 0E280E1F
  v_mul_legacy_f32  v21, s35, v7                        // 000000000088: 0E2A0E23
  v_mul_legacy_f32  v0, s38, v0                         // 00000000008C: 0E000026
  v_mac_legacy_f32  v15, s25, v9                        // 000000000090: 0C1E1219
  v_mac_legacy_f32  v10, s20, v8                        // 000000000094: 0C141014
  v_mac_legacy_f32  v2, s4, v4                          // 000000000098: 0C040804
  v_mac_legacy_f32  v3, s8, v4                          // 00000000009C: 0C060808
  v_mac_legacy_f32  v11, s13, v5                        // 0000000000A0: 0C160A0D
  v_mac_legacy_f32  v14, s17, v5                        // 0000000000A4: 0C1C0A11
  v_mul_lo_i32  v1, v1, s5                              // 0000000000A8: D2D60001 00000B01
  v_mac_legacy_f32  v20, s30, v6                        // 0000000000B0: 0C280C1E
  v_mac_legacy_f32  v21, s34, v6                        // 0000000000B4: 0C2A0C22
  v_mul_legacy_f32  v7, s43, v7                         // 0000000000B8: 0E0E0E2B
  v_mac_legacy_f32  v0, s37, v9                         // 0000000000BC: 0C001225
  v_mac_legacy_f32  v15, s24, v8                        // 0000000000C0: 0C1E1018
  v_mul_legacy_f32  v9, v10, v10                        // 0000000000C4: 0E12150A
  v_mac_legacy_f32  v11, s12, v4                        // 0000000000C8: 0C16080C
  v_mac_legacy_f32  v14, s16, v4                        // 0000000000CC: 0C1C0810
  ds_write2_b32  v1, v2, v3 offset0:16 offset1:17       // 0000000000D0: D8381110 00030201
  v_mac_legacy_f32  v20, s29, v5                        // 0000000000D8: 0C280A1D
  v_mac_legacy_f32  v21, s33, v5                        // 0000000000DC: 0C2A0A21
  v_mac_legacy_f32  v7, s42, v6                         // 0000000000E0: 0C0E0C2A
  v_mac_legacy_f32  v0, s36, v8                         // 0000000000E4: 0C001024
  v_mac_legacy_f32  v9, v15, v15                        // 0000000000E8: 0C121F0F
  ds_write2_b32  v1, v11, v14 offset0:18 offset1:19     // 0000000000EC: D8381312 000E0B01
  s_buffer_load_dword  s0, s[0:3], 0x03                 // 0000000000F4: C2000103
  v_mac_legacy_f32  v20, s28, v4                        // 0000000000F8: 0C28081C
  v_mac_legacy_f32  v21, s32, v4                        // 0000000000FC: 0C2A0820
  v_mac_legacy_f32  v7, s41, v5                         // 000000000100: 0C0E0A29
  v_mac_legacy_f32  v9, v0, v0                          // 000000000104: 0C120100
  ds_write2_b32  v1, v12, v13 offset1:1                 // 000000000108: D8380100 000D0C01
  v_mac_legacy_f32  v7, s40, v4                         // 000000000110: 0C0E0828
  v_rsq_f32     v2, v9                                  // 000000000114: 7E045D09
  ds_write2_b32  v1, v20, v21 offset0:4 offset1:5       // 000000000118: D8380504 00151401
  v_mov_b32     v3, 1.0                                 // 000000000120: 7E0602F2
  v_mul_legacy_f32  v0, v0, v2                          // 000000000124: 0E000500
  v_mul_legacy_f32  v4, v15, v2                         // 000000000128: 0E08050F
  ds_write2_b32  v1, v7, v3 offset0:6 offset1:7         // 00000000012C: D8380706 00030701
  v_mul_legacy_f32  v2, v10, v2                         // 000000000134: 0E04050A
  ds_write2_b32  v1, v0, v4 offset0:8 offset1:9         // 000000000138: D8380908 00040001
  ds_write_b32  v1, v2 offset:40                        // 000000000140: D8340028 00000201
  s_waitcnt     lgkmcnt(0)                              // 000000000148: BF8C007F
  v_mul_legacy_f32  v0, s0, v19                         // 00000000014C: 0E002600
  ds_write2_b32  v1, v16, v17 offset0:12 offset1:13     // 000000000150: D8380D0C 00111001
  ds_write2_b32  v1, v18, v0 offset0:14 offset1:15      // 000000000158: D8380F0E 00001201
  s_endpgm                                              // 000000000160: BF810000
end


// Shader Statistics:
//  NumActiveWaveFront:         40
//  WorkgroupSize:              64
//  NumVRegs:                   22
//  NumSRegs:                   46
//  NumActiveWaveFrontByVReg:   40
//  NumActiveWaveFrontBySReg:   40
//  NumActiveWaveFrontByLDS:    40
//  CycleSim:                   93
//  CycleSimNWaves:             93
//  Code Size:                  356
//Assembler Counts:
//  num_32bit_ops                     : 62
//  num_64bit_ops                     : 13
//  num_alu                           : 50
//  num_fc                            : 16
//  num_inst_exp                      : 0
//  num_inst_ldsgds                   : 9
//  num_inst_mimg                     : 0
//  num_inst_mtbuf                    : 0
//  num_inst_mubuf                    : 0
//  num_inst_sopp                     : 5
//  num_inst_sopc                     : 0
//  num_inst_sop1                     : 2
//  num_inst_sop2                     : 0
//  num_inst_smrd                     : 0
//  num_inst_sopk                     : 1
//  num_inst_vop1                     : 2
//  num_inst_vop2                     : 44
//  num_inst_vop3                     : 0
//  num_inst_vopc                     : 0
//  num_inst_vintrp                   : 0
//  constant_literal_operands         : 0
//  num_tex                           : 9
//  num_vmem_group                    : 0
//  vmem_grouping_started             : 0
// Shader Statistics:
// m_uNumActiveWaveFront             : 40
// m_uVRegLimit                      : 256
// m_uSRegLimit                      : 512
// m_uNumVRegs                       : 22
// m_uNumSRegs                       : 46
// m_uSCCodeSize                     : 356
// m_uWorkgroupSize                  : 64
// m_uNumActiveWaveFrontByVReg       : 40
// m_uNumActiveWaveFrontBySReg       : 40
// m_uNumActiveWaveFrontByLDS        : 40
// m_uCycleSim1Wave                  : 93
// m_uCycleSimNWaves                 : 93

// Assembler Counts:
// num_32bit_ops                     : 62
// num_64bit_ops                     : 13
// num_alu                           : 50
// num_fc                            : 16
// num_inst_exp                      : 0
// num_inst_ldsgds                   : 9
// num_inst_mimg                     : 0
// num_inst_mtbuf                    : 0
// num_inst_mubuf                    : 0
// num_inst_sopp                     : 5
// num_inst_sopc                     : 0
// num_inst_sop1                     : 2
// num_inst_sop2                     : 0
// num_inst_smrd                     : 0
// num_inst_sopk                     : 1
// num_inst_vop1                     : 2
// num_inst_vop2                     : 44
// num_inst_vop3                     : 0
// num_inst_vopc                     : 0
// num_inst_vintrp                   : 0
// num_inst_smem                     : 8
// constant_literal_operands         : 0
// num_tex                           : 9
// num_vmem_group                    : 0
// vmem_grouping_started             : 0
// m_fFullPrecompilePromise          : 0
// m_fIntegerDivideExpansion         : 0
// m_fIntegerModExpansion            : 0
// m_fDoubleDivideExpansion          : 0
// m_fUsesScratch                    : 0
// m_fPerThreadIndirection           : 0
// m_fUsingTableLoads                : 0
// m_fUsingSHmemLoads                : 1
// fSemanticHashFlagOverrideApplied  : 0
// fPSHasNoUAVWrite                  : 0
// m_fRenderTargetsCanBeCompacted    : 0
// version                           : 3
// fCodePatched                      : 0

// Approximately 0 instruction slots used
#endif

const BYTE DebugEffect_VSDebugVcBn[] =
{
     68,  88,  66,  67,  88,  16, 
     36, 225, 145, 206, 236, 125, 
      3,   2, 125,  98, 105,  50, 
     56,  70,   1,   0,   0,   0, 
     64,  14,   0,   0,   5,   0, 
      0,   0,  52,   0,   0,   0, 
    200,   0,   0,   0, 108,   1, 
      0,   0, 212,  13,   0,   0, 
    228,  13,   0,   0,  73,  83, 
     71,  78, 140,   0,   0,   0, 
      4,   0,   0,   0,   8,   0, 
      0,   0, 104,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      0,   0,   0,   0,  15,  15, 
      0,   0, 116,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   0,   0,   7,   7, 
      0,   0, 123,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      2,   0,   0,   0,   3,   3, 
      0,   0, 132,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      3,   0,   0,   0,  15,  15, 
      0,   0,  83,  86,  95,  80, 
    111, 115, 105, 116, 105, 111, 
    110,   0,  78,  79,  82,  77, 
     65,  76,   0,  84,  69,  88, 
     67,  79,  79,  82,  68,   0, 
     67,  79,  76,  79,  82,   0, 
    171, 171,  79,  83,  71,  78, 
    156,   0,   0,   0,   5,   0, 
      0,   0,   8,   0,   0,   0, 
    128,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      3,   0,   0,   0,   0,   0, 
      0,   0,   3,  12,   0,   0, 
    128,   0,   0,   0,   1,   0, 
      0,   0,   0,   0,   0,   0, 
      3,   0,   0,   0,   1,   0, 
      0,   0,  15,   0,   0,   0, 
    128,   0,   0,   0,   2,   0, 
      0,   0,   0,   0,   0,   0, 
      3,   0,   0,   0,   2,   0, 
      0,   0,   7,   8,   0,   0, 
    137,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      3,   0,   0,   0,   3,   0, 
      0,   0,  15,   0,   0,   0, 
    143,   0,   0,   0,   0,   0, 
      0,   0,   1,   0,   0,   0, 
      3,   0,   0,   0,   4,   0, 
      0,   0,  15,   0,   0,   0, 
     84,  69,  88,  67,  79,  79, 
     82,  68,   0,  67,  79,  76, 
     79,  82,   0,  83,  86,  95, 
     80, 111, 115, 105, 116, 105, 
    111, 110,   0, 171,  83,  72, 
     69,  88,  96,  12,   0,   0, 
     80,   0,   1,   0,  24,   3, 
      0,   0,  53,  16,   0,   0, 
      5,   0,   0,   0, 185,   0, 
      0,   0,  80,   0,   1,   0, 
    180,   0,   0,   0, 106,   8, 
      0,   1,  89,   0,   0,   4, 
     70, 142,  32,   0,   0,   0, 
      0,   0,  13,   0,   0,   0, 
     95,   0,   0,   3, 242,  16, 
     16,   0,   0,   0,   0,   0, 
     95,   0,   0,   3, 114,  16, 
     16,   0,   1,   0,   0,   0, 
     95,   0,   0,   3,  50,  16, 
     16,   0,   2,   0,   0,   0, 
     95,   0,   0,   3, 242,  16, 
     16,   0,   3,   0,   0,   0, 
    101,   0,   0,   3,  50,  32, 
     16,   0,   0,   0,   0,   0, 
    101,   0,   0,   3, 242,  32, 
     16,   0,   1,   0,   0,   0, 
    101,   0,   0,   3, 114,  32, 
     16,   0,   2,   0,   0,   0, 
    101,   0,   0,   3, 242,  32, 
     16,   0,   3,   0,   0,   0, 
    103,   0,   0,   4, 242,  32, 
     16,   0,   4,   0,   0,   0, 
      1,   0,   0,   0, 104,   0, 
      0,   2,   2,   0,   0,   0, 
     54,   0,   0,   5,  50,  32, 
     16,   0,   0,   0,   0,   0, 
     70,  16,  16,   0,   2,   0, 
      0,   0,  17,   0,   0,   8, 
     18,   0,  16,   0,   0,   0, 
      0,   0,  70,  30,  16,   0, 
      0,   0,   0,   0,  70, 142, 
     32,   0,   0,   0,   0,   0, 
      2,   0,   0,   0,  17,   0, 
      0,   8,  34,   0,  16,   0, 
      0,   0,   0,   0,  70,  30, 
     16,   0,   0,   0,   0,   0, 
     70, 142,  32,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
     17,   0,   0,   8,  66,   0, 
     16,   0,   0,   0,   0,   0, 
     70,  30,  16,   0,   0,   0, 
      0,   0,  70, 142,  32,   0, 
      0,   0,   0,   0,   4,   0, 
      0,   0,  54,   0,   0,   5, 
    130,   0,  16,   0,   0,   0, 
      0,   0,   1,  64,   0,   0, 
      0,   0, 128,  63,  54,   0, 
      0,   5, 242,  32,  16,   0, 
      1,   0,   0,   0,  70,  14, 
     16,   0,   0,   0,   0,   0, 
     50,   0,   0,  15, 114,   0, 
     16,   0,   0,   0,   0,   0, 
     70,  18,  16,   0,   1,   0, 
      0,   0,   2,  64,   0,   0, 
      0,   0,   0,  64,   0,   0, 
      0,  64,   0,   0,   0,  64, 
      0,   0,   0,   0,   2,  64, 
      0,   0,   0,   0, 128, 191, 
      0,   0, 128, 191,   0,   0, 
    128, 191,   0,   0,   0,   0, 
     16,   0,   0,   8,  18,   0, 
     16,   0,   1,   0,   0,   0, 
     70,   2,  16,   0,   0,   0, 
      0,   0,  70, 130,  32,   0, 
      0,   0,   0,   0,   6,   0, 
      0,   0,  16,   0,   0,   8, 
     34,   0,  16,   0,   1,   0, 
      0,   0,  70,   2,  16,   0, 
      0,   0,   0,   0,  70, 130, 
     32,   0,   0,   0,   0,   0, 
      7,   0,   0,   0,  16,   0, 
      0,   8,  66,   0,  16,   0, 
      1,   0,   0,   0,  70,   2, 
     16,   0,   0,   0,   0,   0, 
     70, 130,  32,   0,   0,   0, 
      0,   0,   8,   0,   0,   0, 
     16,   0,   0,   7,  18,   0, 
     16,   0,   0,   0,   0,   0, 
     70,   2,  16,   0,   1,   0, 
      0,   0,  70,   2,  16,   0, 
      1,   0,   0,   0,  68,   0, 
      0,   5,  18,   0,  16,   0, 
      0,   0,   0,   0,  10,   0, 
     16,   0,   0,   0,   0,   0, 
     56,   0,   0,   7, 114,  32, 
     16,   0,   2,   0,   0,   0, 
      6,   0,  16,   0,   0,   0, 
      0,   0,  70,   2,  16,   0, 
      1,   0,   0,   0,  56,   0, 
      0,   8, 130,  32,  16,   0, 
      3,   0,   0,   0,  58,  16, 
     16,   0,   3,   0,   0,   0, 
     58, 128,  32,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
     54,   0,   0,   5, 114,  32, 
     16,   0,   3,   0,   0,   0, 
     70,  18,  16,   0,   3,   0, 
      0,   0,  17,   0,   0,   8, 
     18,  32,  16,   0,   4,   0, 
      0,   0,  70,  30,  16,   0, 
      0,   0,   0,   0,  70, 142, 
     32,   0,   0,   0,   0,   0, 
      9,   0,   0,   0,  17,   0, 
      0,   8,  34,  32,  16,   0, 
      4,   0,   0,   0,  70,  30, 
     16,   0,   0,   0,   0,   0, 
     70, 142,  32,   0,   0,   0, 
      0,   0,  10,   0,   0,   0, 
     17,   0,   0,   8,  66,  32, 
     16,   0,   4,   0,   0,   0, 
     70,  30,  16,   0,   0,   0, 
      0,   0,  70, 142,  32,   0, 
      0,   0,   0,   0,  11,   0, 
      0,   0,  17,   0,   0,   8, 
    130,  32,  16,   0,   4,   0, 
      0,   0,  70,  30,  16,   0, 
      0,   0,   0,   0,  70, 142, 
     32,   0,   0,   0,   0,   0, 
     12,   0,   0,   0,  62,   0, 
      0,   1,  53,  16,   0,   0, 
    193,   0,   0,   0,  23,   0, 
      1,   0,  32,  69,  23,   0, 
    120,   1, 237, 152,  63,  76, 
     19,  81,  28, 199, 223, 189, 
    187,  62, 174, 199, 235, 235, 
    181, 148, 242, 175, 148, 162, 
    136, 248,  39, 136, 134, 201, 
    196,  67,  17, 162, 145, 129, 
     16, 144,  48, 156,  33,  64, 
    139, 144,  40,  84, 138, 196, 
      9,  43,  49, 186,  64, 226, 
    170, 131, 147, 131, 137, 139, 
    131, 137, 155,  96,  89,  24, 
     36,  26,  39,  71,  87,  39, 
     19, 227, 192, 166, 223,  95, 
    185, 211,   6, 112, 214, 152, 
    251, 164, 159, 247, 123, 255, 
    238, 238, 119, 239,  93, 151, 
    215,  95, 199, 202, 116, 143, 
     61,  93, 163, 248, 169, 227, 
    197, 171,  15, 156, 177,  16, 
     53, 128,  65,   5, 200,  39, 
    168, 100, 236, 123,  45, 149, 
    140, 117,  80, 161,  65, 204, 
    165, 161,  78, 216, 141, 246, 
    121,  68,  26, 243, 125, 242, 
    248,  86, 239, 246, 187, 165, 
    222,  33, 212,  79,  66, 186, 
    124, 212, 243,  28,  52, 225, 
     25, 168, 160, 255, 204,  74, 
    252,  62, 122,  84,  37,  58, 
    164, 251,  85,  66, 247,  34, 
    246, 221, 103, 130, 138, 131, 
    233, 135, 222, 171,  29,   8, 
    229, 230,  67, 247, 165,  60, 
      9, 122, 223, 127,  13,  90, 
     35, 127, 159,   8, 218, 143, 
     74,  40, 119,  90,  55, 226, 
    153, 183, 143, 254, 148, 207, 
     94, 155,  46, 167, 119, 219, 
    128, 127, 226,   7, 240, 191, 
     11,  31, 191,  77,  81, 176, 
    193,  46, 161,  61, 204,   8, 
    190, 105,  11,  61, 122,  90, 
    160,  83,  96, 241, 132, 128, 
     85,  16,  27,  37, 194, 208, 
    130, 213,  80, 194,   8,  68, 
    130,  34,  10, 109,  24, 131, 
    113,  88,   3, 145, 148,  64, 
    126,  34,   9, 241, 189, 138, 
    122, 216,   0,  27,  97,  19, 
     76, 193, 102, 152, 134,  45, 
    126,  14, 187,   8, 109, 247, 
     13,   5, 199, 135,  10, 132, 
    238, 175, 192, 255,  13, 173, 
    129, 255, 127, 160, 181, 160, 
    182,  79, 101,  61,  32,  32, 
     32,  32,  32,  32,  32,  32, 
     32,  32,  32,  32,  32,  32, 
     32, 224, 111, 193,  91,  87, 
    222,  48, 189, 184, 113, 151, 
    173, 174, 103, 180, 149,  82, 
     74, 187,  95, 170, 215,  30, 
    148,  76, 109, 171, 100, 107, 
    171, 165,  54,  77, 109, 230, 
    163, 171, 235, 140, 173, 124, 
    180, 190, 108, 235,  26,  98, 
     24, 145, 230,  11, 102,  40, 
     29, 109,  19, 109, 139, 217, 
     42, 196,  13,   7,  19,  74, 
    138,  49,  21, 230, 182,  99, 
      8, 195, 137, 112, 230, 152, 
    194, 118, 120, 136, 171,  26, 
     21,  87, 117,  42, 161, 154, 
     84,  82,  73, 129, 254,  24, 
    119,  90, 148,  80, 135,  85, 
     74,  29,  85, 105, 117,  66, 
     41,  21, 151, 113,  39,  41, 
     19,  78, 163,  76,  58,  76, 
    227,  78,  90,  10, 121,  72, 
    166, 100, 187,  76, 203, 227, 
     82, 201, 152,  21, 119, 106, 
    173, 132, 211,  96,  37,  29, 
    237,  26,  95, 110, 182, 132, 
    108, 181,  82, 242, 136, 149, 
    150, 199,  44,  37, 109,  51, 
    238,  36, 204, 132,  83, 111, 
    226, 122, 157,  41,  83, 183, 
     20, 215, 185, 162, 124,  89, 
    187, 161,  82, 166, 144,  25, 
     51,  37, 219, 204, 180, 236, 
     48, 149,  44, 114, 115, 249, 
     27, 151, 203, 239,  77, 182, 
    163, 171, 104,  85, 148, 179, 
     29,  25,  49,  68,  11,  98, 
    216, 170,  22, 167,  16,  89, 
     72,  19,  61, 136, 118,  44, 
    206,  25, 187, 183,  94,  62, 
    194,  67,  13, 191,  95,  52, 
    208, 241, 215, 158,  62, 155, 
    138,  61, 125, 229, 186, 177, 
    123,  86, 230, 211, 149, 164, 
    146,  49, 233, 197,  54,  24, 
    134, 154, 119, 138,  24, 129, 
    134, 119, 210, 246, 182, 103, 
    232, 181, 248, 186, 118, 133, 
    234, 196, 140, 119, 205, 101, 
     47, 102, 160, 132, 191,  41, 
     82, 177, 143,  71, 222, 252, 
    162,  23,  41,  87,  58, 175, 
     82, 254, 169,  46,  54, 145, 
    120, 233, 141,  63, 247,  34, 
    157, 117,  85, 195, 189, 121, 
    108, 121, 227,  87,  33, 101, 
    218, 119, 214, 189,  48, 114, 
    201,  45,  44, 142, 103, 115, 
     75, 238, 192, 236,  98, 193, 
    237, 155,  93, 200,  77,  45, 
    142, 141,  12, 184, 133, 133, 
     41, 119, 120, 102,  34, 155, 
     91,  40, 184,  23, 231, 111, 
    230, 103, 111, 228, 178, 238, 
    216, 228, 252, 157, 193, 185, 
     92,  95, 110, 242, 246, 245, 
    254, 233, 105,  76,  29,  31, 
     29,  46, 183,  70, 167, 122, 
    231,  58, 243, 217,  73, 246, 
     19, 211, 206, 127,  31,   0, 
     53,  16,   0,   0, 210,   0, 
      0,   0,  23,   0,   1,   0, 
     16, 185,  23,   0, 120,   1, 
    237, 152,  75, 104,  19,  65, 
     28, 198,  39, 155, 201, 116, 
     55,  78,  38, 219,  24, 211, 
    212, 166, 105, 213,  40,  85, 
    124, 180,  34,  34, 162, 184, 
    214, 138, 162, 130, 136, 181, 
    244, 176, 162, 182, 137,  90, 
    240,  17, 218,  42, 158, 106, 
     21,  65, 196, 199,  65, 138, 
    120, 240, 232, 205, 171,  40, 
    130, 104,  77,  15, 158, 124, 
    224, 201, 131,   7, 175, 158, 
      4, 209, 179, 126,  95, 119, 
     83,  75, 212, 179,  34, 251, 
    131, 111, 254, 243, 159, 199, 
    238, 183,  51, 123, 250,  63, 
    105,  17, 179, 124, 187, 247, 
    102,  21, 227, 251, 174,   7, 
     15, 223,  90,  66,  36, 152, 
      0, 116, 103, 169, 102, 217, 
     10, 113,  50, 199,  86, 136, 
     18, 155,  24, 132,   5, 156, 
    218,   8,  77,  33, 247,  16, 
    187,  32, 206,  51,  22,  94, 
     94, 239, 125, 116, 244,  86, 
    175, 143, 126,  15, 180,   8, 
     26,   8, 181,  21, 226,  94, 
    142, 167, 161,  70, 154, 161, 
    186,  15, 190, 106,  62, 244, 
    181,  26, 154, 143, 195,   6, 
    112, 223,   2, 104, 142,  99, 
    108, 126, 207,   1, 136,  30, 
    254,   4, 189, 241, 121, 117, 
    234,  62, 249, 189, 255,  26, 
     60, 163, 250,  61,  17, 222, 
    199, 124,  12,  36,  33,  34, 
    195, 123, 172,  47, 233,  15, 
    115, 110, 231, 183,  77,  67, 
    127, 226,  59, 168,  63, 135, 
    176, 191,   1,  34, 236,  43, 
    177, 191,  91, 197, 174, 118, 
     42, 107, 198,  85, 241, 116, 
    143, 194, 160, 194,  69,  42, 
      5,  53,  65,  54, 132, 203, 
     82,  73,   8,  23, 165,  52, 
    148, 130,  96,  80, 225, 128, 
    149,  11, 225, 208,  85,   6, 
     90,   8, 193, 148, 194, 143, 
    163, 224,  81, 225, 127,  85, 
    121, 168,  21,  90,  12, 181, 
     65,   5, 168,  29,  42,  66, 
     29, 225,  63,  35, 233,   4, 
     57,  27, 160,  98, 193, 151, 
     42, 139, 127,  14,  98,  60, 
    206, 240, 223, 194,  51, 192, 
     49, 207,  17, 156,  70,   0, 
    239, 152, 138, 136, 136, 136, 
    136, 136, 136, 136, 136, 136, 
    136, 136, 136, 136, 136, 136, 
    248, 155,  88,  75,  46,  63, 
     19, 241,  43, 211,  23, 197, 
    141, 231,  37,  71, 205,  84, 
     17, 211,  70,  24, 219, 121, 
     93, 235, 116, 110, 215, 116, 
    124, 114, 218, 104, 161,  23, 
     26, 203,  20, 156, 169,  90, 
     42,  41, 116,  70,  91, 186, 
    197,  72, 227,  58, 119, 106, 
    121, 231, 110,  77, 219,  66, 
     55,  39,  45, 157, 211,  82, 
    183,  25, 101,  92, 219, 210, 
    139, 146,  82,  47, 214,  74, 
     39, 197, 228, 187, 228, 167, 
     87, 241, 172,  45, 117, 107, 
     82, 105, 190, 167, 195, 228, 
    140, 131, 113,   7, 227,  43, 
    178,   5, 147, 183, 149, 246, 
    188, 234,  71,  33,  60,  89, 
    196,  83, 150, 241, 253, 152, 
    183,  49, 191,  42,  91,  52, 
    203,  51,   5, 221, 199, 249, 
    152,  39, 219, 147,  57, 189, 
     20, 126, 214, 193, 207, 250, 
    172,  49,  43,  51,  69,  93, 
    114,  11, 122,  55, 231,  45, 
     79,  22, 236, 156,  94,   2, 
    143, 107, 225, 177,  39,  99, 
    116, 151,  91, 212, 166,  93, 
    154, 125, 156, 143, 123, 178, 
     19,  94, 215, 192, 107, 183, 
    107, 116, 186,  67, 106, 193, 
    113, 237, 201, 213, 240, 220, 
    148, 150,  90,  50,  79, 121, 
    210,  58,  44,  39,  92, 246, 
     23, 120, 242, 139, 165,  38, 
    154,  18, 182, 201,  50, 135, 
    199, 248,  53, 171, 150,  78, 
      8, 147, 103,  14,  79,  38, 
    129, 179,  97, 159, 207, 103, 
    148, 158,  44,  49,  98, 109, 
     23,  35, 214, 240, 187,  19, 
     43, 132, 233, 102, 238, 122, 
    114,   3,  99, 179,  39,  55, 
     49, 102,  60, 185, 133,  17, 
    235, 133, 184, 244, 156, 181, 
     91,  22,  94, 131,  10,  90, 
     64,  43, 203, 106,  13,  99, 
    121,  54,  13,  99,  46, 155, 
    134, 177, 217, 190,  12, 234, 
    114, 117, 238, 135, 117, 200, 
    201,  48, 178, 142, 204, 186, 
    110,  76,   4, 245, 186,  20, 
     36, 195, 170, 222, 139, 109, 
      7,  30, 171, 207,  55, 247, 
    176,  79,  62, 132, 123, 158, 
    134, 177,  19, 210, 208,  79, 
     88, 157, 254,  21,  25, 214, 
    192, 191, 134, 251, 232, 149, 
    245,  50,  19,  84,  18, 131, 
    194,  41,  40, 133, 235,  10, 
     97, 100, 125, 141, 117, 230, 
     70,  31,  91, 194, 249,  67, 
     16, 157, 246, 109, 246, 183, 
    247, 239, 242, 199, 198, 143, 
    148,  43, 231, 253, 189,  35, 
    227,  99, 126, 223, 200, 104, 
    101, 120, 124, 176, 127, 175, 
     63,  54,  58, 236,  31,  60, 
    121, 172,  92,  25,  29, 243, 
    119, 156,  61,  93,  29,  57, 
     85,  41, 251, 131,  67, 103, 
     47, 236,  63,  83, 233, 171, 
     12, 157,  59, 177, 243, 248, 
    113,  44,  61,  50, 112, 112, 
     54,  27,  24, 238,  61, 179, 
    182,  90,  30,  18,  63,   0, 
    253,  19, 153, 127,   0,   0, 
     53,  16,   0,   0, 204,   0, 
      0,   0,  23,   0,   1,   0, 
      0, 117,  23,   0, 120,   1, 
    237, 152, 207,  79,  19,  81, 
     16, 199, 103, 187, 219, 215, 
    237,  50, 188,  46,  75, 169, 
    128, 165,  84,  69,  83, 235, 
    111, 227, 193,  24, 227,  15, 
    196, 152, 200,   1,  13,  72, 
     56, 148, 160, 208, 162,  36, 
     10,   4, 208, 120,  82,  36, 
     49,  38,   6,  47, 198, 131, 
    255, 131,  23,  14,  38, 222, 
      0, 203,  85, 140,  33, 198, 
    112, 244, 234, 201, 196, 147, 
      7,  19, 252,  78, 187, 139, 
     13, 106,  60, 106, 204, 126, 
    210, 239, 204, 251, 181, 187, 
    243, 230, 189,  94, 230, 246, 
     54, 170, 176, 152, 152,  63, 
     36, 126,  61, 247, 226, 229, 
    187,   8,  81,  84,  58,  53, 
     76,  38, 197,  18, 117, 164, 
    196,  18, 229, 196,  24,  16, 
    214, 202, 208,  65, 168, 136, 
    254,  25, 120, 153,  11, 180, 
    250, 102, 174, 115, 116, 244, 
     97,  39, 154, 116,   0, 146, 
    207,  13, 250,  58,   5, 213, 
     67,  71,  33,  23,  18, 226, 
     98, 106,   8, 226, 192, 103, 
     54, 241,  63,  75, 251, 161, 
     90, 108,  49,  96, 235,  59, 
    232, 154, 152,  95, 211,  13, 
    249,  91, 250,  37,  18, 155, 
     16, 188,  51, 136,  83, 246, 
    251, 175,  33, 121,   9, 206, 
     73, 144, 243, 168,  69,  67, 
     38,  36, 188, 111,  18,  91, 
    125,  70, 112, 253,  36, 136, 
    147, 189,  45,  67, 191,  99, 
      3,  88, 210, 168,  33, 232, 
    139,  87, 212, 115,  88,  25, 
    143, 178,  42, 178, 226,  42, 
     51, 113,  68,  97,  80, 225, 
     32, 149, 130,  98,  16,  14, 
     74,  33, 161, 202, 129, 234, 
     32, 134, 112,  17,  20,   2, 
     84,   9,   8,  73,  86,  13, 
    144,   7,  53,  66, 216, 147, 
     66, 188,  10, 193,  41,  92, 
     32, 213,  12, 181,  64, 173, 
    208, 118,  40,  13, 181,  65, 
     25, 168, 221, 191,  51, 150, 
     68, 130, 190,  24, 160, 140, 
    234,  78,  85, 164, 122, 147, 
    148,  25, 100, 226, 255,  68, 
    114,  16, 252,  31, 132, 106, 
     54, 170, 231,  29,  92, 145, 
     75,  98,  66,  66,  66,  66, 
     66,  66,  66,  66,  66,  66, 
     66,  66,  66,  66,  66,  66, 
    254,  18, 145,  29, 115, 139, 
    100, 206,  46, 223, 167, 249, 
    165,  14,  35, 178, 146,  53, 
     30, 151, 211, 198, 124, 217, 
     54, 222, 150, 155, 141, 167, 
    101, 215, 120,  86, 158,  76, 
    204,  47,  17, 205, 174,  57, 
    159,  86,  77,  89,  23, 211, 
    150, 174, 211,  74, 199,  49, 
     22, 199,  88, 138, 146,  90, 
    177, 197,  14,  43,  78, 232, 
    148, 110, 212, 105, 109,  99, 
    206, 198,  92,  43, 101, 116, 
    147, 151, 228, 168,  99, 113, 
    220,  81, 172,  57, 197,  30, 
    167, 249,  18,  69,  23,  54, 
    204, 111, 139,  82,  41, 105, 
    215,  57, 189,  75, 231, 245, 
     30,  34, 221, 226, 101,  56, 
    233,  38, 217, 178,  45, 182, 
    109, 197, 245,  78, 138,  27, 
    156,  52,  27, 244,  97, 205, 
    168,  35, 202, 112, 142, 119, 
    114, 158, 247, 105, 173, 119, 
    123, 196, 205, 110, 134, 157, 
     38,  79, 179, 157,  98, 215, 
     78, 179, 219, 112, 124, 221, 
    136, 152, 212, 230, 228, 120, 
    135, 147, 199,  74, 205,  29, 
     46, 113, 162, 221,  99, 175, 
     17, 115, 117, 154,  76, 131, 
    202, 105,  59, 199,  89,  59, 
    207, 123,  29, 205, 100, 120, 
     16, 230, 184, 158, 114, 182, 
    230, 248, 160, 117, 207, 138, 
    162, 159, 108, 162,  47,  17, 
    117, 143, 162, 164,  19,  81, 
     91, 171,  24, 198,  98,  38, 
     57,  81,  75, 219, 113, 180, 
    201, 162,  28,  29, 195, 247, 
    136,  36,  47, 180, 135,  52, 
    215,  99, 220, 109, 192,   3, 
    240, 158, 100, 248, 193,  82, 
    165,   4, 136,  53, 248, 109, 
    210,  34,   5, 162,  45,  99, 
    149, 154, 231, 150, 177,  74, 
    219, 146, 197,  63, 184,  42, 
    197,  67, 112, 210, 247,  29, 
    144, 212,  77,  13, 191, 234, 
     40, 181,  94, 203, 175, 200, 
    189,  62, 125, 249, 149, 250, 
    252, 228, 162, 180, 133, 231, 
    254,  51, 119, 125, 159, 133, 
     24, 250,  19, 203, 254, 250, 
      5, 223,  75, 172,  82, 235, 
    210, 149,  10,  24, 144, 162, 
     39, 248, 232, 207, 175, 251, 
     94, 106,  99,  56, 182, 159, 
    226, 248, 234, 207,  95, 129, 
     36, 210, 174,  19, 133, 179, 
    125,  23,  10, 211,  51,  67, 
    197, 210, 157,  66, 247, 216, 
    204, 116, 161, 107, 108, 170, 
     52,  50,  51, 208, 215,  93, 
    152, 158,  26,  41, 244, 222, 
    184,  86,  44,  77,  77,  23, 
    206,  77, 220, 154,  28, 187, 
     89,  42,  22,   6, 134,  39, 
    238, 246, 140, 151, 186,  74, 
    195, 183, 175, 159,  31,  29, 
    197, 210, 161, 254, 222,  74, 
    175, 127, 164, 115, 252, 224, 
    100, 113, 152, 190,   3, 193, 
     11, 133, 173,   0,   0,   0, 
     88,  72,  83,  72,   8,   0, 
      0,   0, 193,  63,  81, 183, 
      6, 239, 141,  74,  88,  80, 
     68,  80,  84,   0,   0,   0, 
     68,  58,  92,  65,  84,  71, 
     92, 115, 116,  95, 100, 101, 
    118,  92,  75, 105, 116, 115, 
     92,  68, 105, 114, 101,  99, 
    116,  88,  84,  75,  92, 115, 
    114,  99,  92,  83, 104,  97, 
    100, 101, 114, 115,  92,  67, 
    111, 109, 112, 105, 108, 101, 
    100,  92,  88,  98, 111, 120, 
     79, 110, 101,  68, 101,  98, 
    117, 103,  69, 102, 102, 101, 
     99, 116,  95,  86,  83,  68, 
    101,  98, 117, 103,  86,  99, 
     66, 110,  46, 112, 100,  98
};
