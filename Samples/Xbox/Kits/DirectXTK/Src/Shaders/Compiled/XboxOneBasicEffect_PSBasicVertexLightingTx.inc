#if 0
//
// Generated by Microsoft (R) D3D Shader Disassembler for Durango
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// COLOR                    0   xyzw        0     NONE   float   xyzw
// COLOR                    1   xyzw        1     NONE   float   xyzw
// TEXCOORD                 0   xy          2     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
// Opaque Custom Data - XBOX Precompiled Shader Header
// First Precompiled Shader at offset:[86]
// Embedded Data:
//  0x00000056 - Offset To First Precompiled Shader
//  0x00000050 - Original Shader Descriptor
//  0x00000051 - Original Shader Size
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[26], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_input_ps linear v0.xyzw
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v2.xy
dcl_output o0.xyzw
dcl_temps 2
sample_indexable(texture2d)(float,float,float,float) r0.xyzw, v2.xyxx, t0.xyzw, s0
mul r0.xyzw, r0.xyzw, v0.xyzw
mad r0.xyz, v1.xyzx, r0.wwww, r0.xyzx
mad r1.xyz, cb0[13].xyzx, r0.wwww, -r0.xyzx
mov o0.w, r0.w
mad o0.xyz, v1.wwww, r1.xyzx, r0.xyzx
ret 
// Opaque Custom Data - XBOX Precompiled Shader Object
// Offset:[86], bundle is:[178] DWORDS.
// Disassembled Precompiled Shader Object:
// Shader Type               : (PS)
// Shader Hw Stage           : (PS)
// PDB Filename              : D:\ATG\st_dev\Kits\DirectXTK\src\Shaders\Compiled\XboxOneBasicEffect_PSBasicVertexLightingTx.pdb
// Shader Semantic Hash      : 0x1a638c60ff047219
//
// Shader Data:
; ----------------- PS Data ------------------------
; Input Semantic Mappings
;   [0] generic,  usageIdx 0, channelMask 15, param0, paramSlot0, DefaultVal={0,0,0,0}
;   [1] generic,  usageIdx 1, channelMask 15, param1, paramSlot1, DefaultVal={0,0,0,0}
;   [2] generic,  usageIdx 2, channelMask  3, param2, paramSlot2, DefaultVal={0,0,0,0}

codeLenInByte        = 208 bytes;

; launchModeFlags    = 0x0000000E
srdTableSupport      = TRUE
immediateSupportExt  = TRUE
srdTableSupportExt   = TRUE

userElementCount     = 1;
;  userElements[0]      = PTR_EXTENDED_USER_DATA, ReferencedExtUserElements=1, s[0x0:1]
extUserElementCount  = 3;
;  extUserElements 1[0] = IMM_RESOURCE 0, offset 0x0:7 dwords
;  extUserElements 1[1] = IMM_SAMPLER 0, offset 0x8:11 dwords
;  extUserElements 1[2] = IMM_CONST_BUFFER 0, offset 0xc:15 dwords
NumVgprs             = 13;
NumSgprs             = 24;
FloatMode            = 192;
IeeeMode             = 0;
FlatPtr32            = 0;
ScratchSize          = 0 dwords/thread;
LDSByteSize          = 0 bytes/workgroup (compile time only);
ScratchWaveOffsetReg = s65535;
; texSamplerUsage         = 0x00000001
; constBufUsage           = 0x00000001

; SPI_SHADER_PGM_RSRC2_PS = 0x00000004
SSPRP:SCRATCH_EN            = 0
SSPRP:USER_SGPR             = 2
SSPRP:TRAP_PRESENT          = 0
SSPRP:WAVE_CNT_EN           = 0
SSPRP:EXTRA_LDS_SIZE        = 0
SSPRP:EXCP_EN               = 0
; SPI_SHADER_Z_FORMAT     = 0x00000000
SPZF:Z_EXPORT_FORMAT        = 0; SPI_SHADER_ZERO
; SPI_PS_IN_CONTROL       = 0x00000003
SPIC:NUM_INTERP             = 3
SPIC:PARAM_GEN              = 0
SPIC:FOG_ADDR               = 0
SPIC:BC_OPTIMIZE_DISABLE    = 0
SPIC:PASS_FOG_THROUGH_PS    = 0
; SPI_PS_INPUT_ADDR       = 0x00000002
SPIA:PERSP_CENTER_ENA       = 1
; DB_SHADER_CONTROL       = 0x00000010
DB:Z_ORDER                  = 1
DB:CONSERVATIVE_Z_EXPORT    = 0; EXPORT_ANY_Z
; CB_SHADER_MASK          = 0x0000000F
CB:OUTPUT0_ENABLE           = 15

; export table for mrt0 [patch@(bytes=0xBC, dwords=0x2F)]
// Export Patch Code (FMT_ZERO):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_nop         0x0000                                  // 000000000000: BF800000
  s_nop         0x0000                                  // 000000000004: BF800000
  exp           null, off, off, off, off done vm        // 000000000008: F8001890 00000000
end
// Export Patch Code (FMT_32_R):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_nop         0x0000                                  // 000000000000: BF800000
  s_nop         0x0000                                  // 000000000004: BF800000
  exp           mrt0, v2, off, off, off done vm         // 000000000008: F8001801 00000002
end
// Export Patch Code (FMT_32_GR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_nop         0x0000                                  // 000000000000: BF800000
  s_nop         0x0000                                  // 000000000004: BF800000
  exp           mrt0, v2, v3, off, off done vm          // 000000000008: F8001803 00000302
end
// Export Patch Code (FMT_32_AR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_nop         0x0000                                  // 000000000000: BF800000
  s_nop         0x0000                                  // 000000000004: BF800000
  exp           mrt0, v2, v5, off, off done vm          // 000000000008: F8001803 00000502
end
// Export Patch Code (FMT_FP16_ABGR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  v_cvt_pkrtz_f16_f32  v0, v2, v3                       // 000000000000: 5E000702
  v_cvt_pkrtz_f16_f32  v1, v4, v5                       // 000000000004: 5E020B04
  exp           mrt0, v0, v0, v1, v1 done compr vm      // 000000000008: F8001C0F 00000100
end
// Export Patch Code (FMT_UNORM16_ABGR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  v_cvt_pknorm_u16_f32  v0, v2, v3                      // 000000000000: 5C000702
  v_cvt_pknorm_u16_f32  v1, v4, v5                      // 000000000004: 5C020B04
  exp           mrt0, v0, v0, v1, v1 done compr vm      // 000000000008: F8001C0F 00000100
end
// Export Patch Code (FMT_SNORM16_ABGR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  v_cvt_pknorm_i16_f32  v0, v2, v3                      // 000000000000: 5A000702
  v_cvt_pknorm_i16_f32  v1, v4, v5                      // 000000000004: 5A020B04
  exp           mrt0, v0, v0, v1, v1 done compr vm      // 000000000008: F8001C0F 00000100
end
// Export Patch Code (FMT_UINT16_ABGR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  v_cvt_pk_u16_u32  v0, v2, v3                          // 000000000000: 60000702
  v_cvt_pk_u16_u32  v1, v4, v5                          // 000000000004: 60020B04
  exp           mrt0, v0, v0, v1, v1 done compr vm      // 000000000008: F8001C0F 00000100
end
// Export Patch Code (FMT_SINT16_ABGR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  v_cvt_pk_i16_i32  v0, v2, v3                          // 000000000000: 62000702
  v_cvt_pk_i16_i32  v1, v4, v5                          // 000000000004: 62020B04
  exp           mrt0, v0, v0, v1, v1 done compr vm      // 000000000008: F8001C0F 00000100
end
// Export Patch Code (FMT_32_ABGR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_nop         0x0000                                  // 000000000000: BF800000
  s_nop         0x0000                                  // 000000000004: BF800000
  exp           mrt0, v2, v3, v4, v5 done vm            // 000000000008: F800180F 05040302
end

// Shader Instructions:
shader main
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_mov_b64     s[20:21], exec                          // 000000000000: BE94047E
  s_wqm_b64     exec, exec // wrscc                     // 000000000004: BEFE0A7E
  s_load_dwordx16  s[4:19], s[0:1], 0x00                // 000000000008: C1020100
  s_mov_b32     m0, s2                                  // 00000000000C: BEFC0302
  v_interp_p1_f32  v2, v0, attr2.x                      // 000000000010: C8080800
  v_interp_p1_f32  v3, v0, attr2.y                      // 000000000014: C80C0900
  v_interp_p2_f32  v2, v1, attr2.x                      // 000000000018: C8090801
  v_interp_p2_f32  v3, v1, attr2.y                      // 00000000001C: C80D0901
  s_waitcnt     lgkmcnt(0)                              // 000000000020: BF8C007F
  image_sample  v[2:5], v[2:3], s[4:11], s[12:15] dmask:0xf // 000000000024: F0800F00 00610202
  s_buffer_load_dwordx4  s[0:3], s[16:19], 0x34         // 00000000002C: C2801134
  v_interp_p1_f32  v6, v0, attr0.x                      // 000000000030: C8180000
  v_interp_p1_f32  v7, v0, attr0.y                      // 000000000034: C81C0100
  v_interp_p1_f32  v8, v0, attr0.z                      // 000000000038: C8200200
  v_interp_p1_f32  v9, v0, attr0.w                      // 00000000003C: C8240300
  v_interp_p2_f32  v6, v1, attr0.x                      // 000000000040: C8190001
  v_interp_p2_f32  v7, v1, attr0.y                      // 000000000044: C81D0101
  v_interp_p2_f32  v8, v1, attr0.z                      // 000000000048: C8210201
  v_interp_p2_f32  v9, v1, attr0.w                      // 00000000004C: C8250301
  v_interp_p1_f32  v10, v0, attr1.x                     // 000000000050: C8280400
  v_interp_p1_f32  v11, v0, attr1.y                     // 000000000054: C82C0500
  v_interp_p1_f32  v12, v0, attr1.z                     // 000000000058: C8300600
  s_waitcnt     vmcnt(0)                                // 00000000005C: BF8C0F70
  v_mul_legacy_f32  v2, v2, v6                          // 000000000060: 0E040D02
  v_mul_legacy_f32  v3, v3, v7                          // 000000000064: 0E060F03
  v_mul_legacy_f32  v4, v4, v8                          // 000000000068: 0E081104
  v_mul_legacy_f32  v5, v5, v9                          // 00000000006C: 0E0A1305
  v_interp_p2_f32  v10, v1, attr1.x                     // 000000000070: C8290401
  v_interp_p2_f32  v11, v1, attr1.y                     // 000000000074: C82D0501
  v_interp_p2_f32  v12, v1, attr1.z                     // 000000000078: C8310601
  v_mac_f32     v2, v10, v5                             // 00000000007C: 3E040B0A
  v_mac_f32     v3, v11, v5                             // 000000000080: 3E060B0B
  v_mac_f32     v4, v12, v5                             // 000000000084: 3E080B0C
  v_interp_p1_f32  v0, v0, attr1.w                      // 000000000088: C8000700
  s_waitcnt     lgkmcnt(0)                              // 00000000008C: BF8C007F
  v_mad_legacy_f32  v6, s0, v5, -v2                     // 000000000090: D2800006 840A0A00
  v_mad_legacy_f32  v7, s1, v5, -v3                     // 000000000098: D2800007 840E0A01
  v_mad_legacy_f32  v8, s2, v5, -v4                     // 0000000000A0: D2800008 84120A02
  v_interp_p2_f32  v0, v1, attr1.w                      // 0000000000A8: C8010701
  v_mac_f32     v2, v0, v6                              // 0000000000AC: 3E040D00
  v_mac_f32     v3, v0, v7                              // 0000000000B0: 3E060F00
  v_mac_f32     v4, v0, v8                              // 0000000000B4: 3E081100
  s_mov_b64     exec, s[20:21]                          // 0000000000B8: BEFE0414
  v_cvt_pkrtz_f16_f32  v0, v2, v3                       // 0000000000BC: 5E000702
  v_cvt_pkrtz_f16_f32  v1, v4, v5                       // 0000000000C0: 5E020B04
  exp           mrt0, v0, v0, v1, v1 done compr vm      // 0000000000C4: F8001C0F 00000100
  s_endpgm                                              // 0000000000CC: BF810000
end


// Shader Statistics:
//  NumActiveWaveFront:         40
//  WorkgroupSize:              64
//  NumVRegs:                   13
//  NumSRegs:                   24
//  NumActiveWaveFrontByVReg:   40
//  NumActiveWaveFrontBySReg:   40
//  NumActiveWaveFrontByLDS:    40
//  CycleSim:                   78
//  CycleSimNWaves:             78
//  Code Size:                  208
//Assembler Counts:
//  num_32bit_ops                     : 42
//  num_64bit_ops                     : 5
//  num_alu                           : 35
//  num_fc                            : 10
//  num_inst_exp                      : 1
//  num_inst_ldsgds                   : 0
//  num_inst_mimg                     : 1
//  num_inst_mtbuf                    : 0
//  num_inst_mubuf                    : 0
//  num_inst_sopp                     : 4
//  num_inst_sopc                     : 0
//  num_inst_sop1                     : 4
//  num_inst_sop2                     : 0
//  num_inst_smrd                     : 0
//  num_inst_sopk                     : 0
//  num_inst_vop1                     : 0
//  num_inst_vop2                     : 12
//  num_inst_vop3                     : 6
//  num_inst_vopc                     : 0
//  num_inst_vintrp                   : 20
//  constant_literal_operands         : 0
//  num_tex                           : 2
//  num_vmem_group                    : 1
//  vmem_grouping_started             : 0
//
//Compilation Notes:
//
//  PS has no UAV writes, consider forcing REZ/LATEZ.
// Shader Statistics:
// m_uNumActiveWaveFront             : 40
// m_uVRegLimit                      : 256
// m_uSRegLimit                      : 512
// m_uNumVRegs                       : 13
// m_uNumSRegs                       : 24
// m_uSCCodeSize                     : 208
// m_uWorkgroupSize                  : 64
// m_uNumActiveWaveFrontByVReg       : 40
// m_uNumActiveWaveFrontBySReg       : 40
// m_uNumActiveWaveFrontByLDS        : 40
// m_uCycleSim1Wave                  : 78
// m_uCycleSimNWaves                 : 78

// Assembler Counts:
// num_32bit_ops                     : 42
// num_64bit_ops                     : 5
// num_alu                           : 35
// num_fc                            : 10
// num_inst_exp                      : 1
// num_inst_ldsgds                   : 0
// num_inst_mimg                     : 1
// num_inst_mtbuf                    : 0
// num_inst_mubuf                    : 0
// num_inst_sopp                     : 4
// num_inst_sopc                     : 0
// num_inst_sop1                     : 4
// num_inst_sop2                     : 0
// num_inst_smrd                     : 0
// num_inst_sopk                     : 0
// num_inst_vop1                     : 0
// num_inst_vop2                     : 12
// num_inst_vop3                     : 6
// num_inst_vopc                     : 0
// num_inst_vintrp                   : 20
// num_inst_smem                     : 2
// constant_literal_operands         : 0
// num_tex                           : 2
// num_vmem_group                    : 1
// vmem_grouping_started             : 0
// m_fFullPrecompilePromise          : 0
// m_fIntegerDivideExpansion         : 0
// m_fIntegerModExpansion            : 0
// m_fDoubleDivideExpansion          : 0
// m_fUsesScratch                    : 0
// m_fPerThreadIndirection           : 0
// m_fUsingTableLoads                : 0
// m_fUsingSHmemLoads                : 1
// fSemanticHashFlagOverrideApplied  : 0
// fPSHasNoUAVWrite                  : 1
// m_fRenderTargetsCanBeCompacted    : 0
// version                           : 3
// fCodePatched                      : 0

// Approximately 0 instruction slots used
#endif

const BYTE BasicEffect_PSBasicVertexLightingTx[] =
{
     68,  88,  66,  67, 132, 116, 
    188,  18,   0,  41, 123,  71, 
    170, 127, 171, 249, 233,  41, 
    130, 219,   1,   0,   0,   0, 
    120,   5,   0,   0,   5,   0, 
      0,   0,  52,   0,   0,   0, 
    156,   0,   0,   0, 208,   0, 
      0,   0,   0,   5,   0,   0, 
     16,   5,   0,   0,  73,  83, 
     71,  78,  96,   0,   0,   0, 
      3,   0,   0,   0,   8,   0, 
      0,   0,  80,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      0,   0,   0,   0,  15,  15, 
      0,   0,  80,   0,   0,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   0,   0,  15,  15, 
      0,   0,  86,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      2,   0,   0,   0,   3,   3, 
      0,   0,  67,  79,  76,  79, 
     82,   0,  84,  69,  88,  67, 
     79,  79,  82,  68,   0, 171, 
     79,  83,  71,  78,  44,   0, 
      0,   0,   1,   0,   0,   0, 
      8,   0,   0,   0,  32,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   3,   0, 
      0,   0,   0,   0,   0,   0, 
     15,   0,   0,   0,  83,  86, 
     95,  84,  97, 114, 103, 101, 
    116,   0, 171, 171,  83,  72, 
     69,  88,  40,   4,   0,   0, 
     80,   0,   0,   0,  10,   1, 
      0,   0,  53,  16,   0,   0, 
      5,   0,   0,   0,  86,   0, 
      0,   0,  80,   0,   0,   0, 
     81,   0,   0,   0, 106,   8, 
      0,   1,  89,   0,   0,   4, 
     70, 142,  32,   0,   0,   0, 
      0,   0,  26,   0,   0,   0, 
     90,   0,   0,   3,   0,  96, 
     16,   0,   0,   0,   0,   0, 
     88,  24,   0,   4,   0, 112, 
     16,   0,   0,   0,   0,   0, 
     85,  85,   0,   0,  98,  16, 
      0,   3, 242,  16,  16,   0, 
      0,   0,   0,   0,  98,  16, 
      0,   3, 242,  16,  16,   0, 
      1,   0,   0,   0,  98,  16, 
      0,   3,  50,  16,  16,   0, 
      2,   0,   0,   0, 101,   0, 
      0,   3, 242,  32,  16,   0, 
      0,   0,   0,   0, 104,   0, 
      0,   2,   2,   0,   0,   0, 
     69,   0,   0, 139, 194,   0, 
      0, 128,  67,  85,  21,   0, 
    242,   0,  16,   0,   0,   0, 
      0,   0,  70,  16,  16,   0, 
      2,   0,   0,   0,  70, 126, 
     16,   0,   0,   0,   0,   0, 
      0,  96,  16,   0,   0,   0, 
      0,   0,  56,   0,   0,   7, 
    242,   0,  16,   0,   0,   0, 
      0,   0,  70,  14,  16,   0, 
      0,   0,   0,   0,  70,  30, 
     16,   0,   0,   0,   0,   0, 
     50,   0,   0,   9, 114,   0, 
     16,   0,   0,   0,   0,   0, 
     70,  18,  16,   0,   1,   0, 
      0,   0, 246,  15,  16,   0, 
      0,   0,   0,   0,  70,   2, 
     16,   0,   0,   0,   0,   0, 
     50,   0,   0,  11, 114,   0, 
     16,   0,   1,   0,   0,   0, 
     70, 130,  32,   0,   0,   0, 
      0,   0,  13,   0,   0,   0, 
    246,  15,  16,   0,   0,   0, 
      0,   0,  70,   2,  16, 128, 
     65,   0,   0,   0,   0,   0, 
      0,   0,  54,   0,   0,   5, 
    130,  32,  16,   0,   0,   0, 
      0,   0,  58,   0,  16,   0, 
      0,   0,   0,   0,  50,   0, 
      0,   9, 114,  32,  16,   0, 
      0,   0,   0,   0, 246,  31, 
     16,   0,   1,   0,   0,   0, 
     70,   2,  16,   0,   1,   0, 
      0,   0,  70,   2,  16,   0, 
      0,   0,   0,   0,  62,   0, 
      0,   1,  53,  16,   0,   0, 
    180,   0,   0,   0,  23,   0, 
      1,   0,  41,  21,  16,   0, 
    120,   1, 237,  87, 207, 107, 
     19,  65,  20, 126, 179, 153, 
    108,  54, 155, 100, 215, 104, 
    133,  70,  42,  86, 109, 161, 
    106, 253,  69,  61, 121,   8, 
     26,  35, 130,  21,  21,  26, 
    164, 148, 165, 205, 175, 109, 
     27, 168, 109,  72, 130, 228, 
     32,  53, 133,  30, 115, 240, 
    224,  65, 239, 254,  17, 158, 
     18, 245,  52,   7, 133, 226, 
    191, 224,  63, 224, 193, 131, 
    130, 180, 190, 183, 153, 137, 
    219, 106, 111,  11, 138, 236, 
      7, 223, 251, 246, 219, 153, 
    121, 121, 179,  51, 129, 153, 
    227,  71, 192, 195, 231, 177, 
    187, 147, 164, 223,  95, 109, 
     77, 229,  25,  64,  20, 159, 
     81,  60,  37, 188,  76,  81, 
      4, 120,  99,  81,   4, 152, 
    162,  64,  29,  52,   0, 106, 
     26,  69, 238,  32, 111,  32, 
    169,  77, 241, 227, 135,  51, 
    185, 153, 153,  11,  57, 124, 
    132,  52, 146, 250, 222, 151, 
     60, 143, 164, 252, 103, 145, 
     38, 146, 210,  17, 148,  18, 
     56,   5, 132,  82,  63, 146, 
     72,  29,  73,  24,  65,  98, 
     41,  30,  72, 253,  57, 192, 
    165, 240, 103,  92,  70,  82, 
     77, 135, 129, 106,  83, 185, 
     72, 169,  78,   2, 205, 247, 
    111,  99,  80, 215, 175,  72, 
     84, 235,  68, 160, 245, 240, 
    131, 150, 142, 250,  16,  86, 
    229,  58,  70,  40,  32, 158, 
     74,  79, 195, 105, 110, 111, 
    145, 135,  97,  15,  33, 183, 
    205,  16, 202,  83,  62,  29, 
    108, 140, 168, 236,  20, 128, 
    129, 170, 225,  87,  60,  56, 
    224,  63, 134, 218, 171, 244, 
     45, 104,  47, 210, 212,   7, 
     95, 100,   0, 213,  78, 123, 
     15, 160, 211,  39,  62,  31, 
    133, 111, 228, 148, 103, 232, 
    105, 172, 242,  17, 242, 148, 
    208, 239, 241, 207, 163, 197, 
     96, 145,  39, 180,  69, 123, 
     12, 199, 227, 226, 162, 119, 
    208,  59,  62, 191, 128, 126, 
    193, 231, 139, 232, 139,  62, 
     95,  70,  95,  86,  94, 229, 
    183, 189, 223, 227,  81,  90, 
    107, 124, 185, 249,  47,  51, 
    172,  49,  24, 134,  53,   6, 
    195, 176, 198,  96,  24, 214, 
     24,  12, 195,  26, 131,  97, 
     88,  99,  48,  12, 107,  12, 
    140, 176, 201,  95, 244,  54, 
    205, 221,  30,  48, 237, 157, 
     22, 249, 209,   3, 195,  16, 
     16,  79,  10, 102, 196,   5, 
    139, 167, 196,  51, 232, 246, 
    193, 238, 124, 209, 180,  18, 
     92,  75, 119, 222, 227, 233, 
     94,   0,  27,  19, 160, 141, 
     11, 136,  76,   8,   6,  25, 
    193, 216,  73, 193, 180, 211, 
    130,  69,  38,   5, 240,  41, 
      1, 209, 105,   1, 250,  21, 
     81, 183, 187, 125,  45, 197, 
    173, 136, 173,  91,  60, 109, 
     88, 209,  99, 166, 197, 248, 
     57, 193, 162,  23,   5, 211, 
    175,  10,  51, 193, 179, 137, 
    132, 158,  77,  38, 140,  44, 
    196, 192, 251,  45,  29,  58, 
    159, 192,  52, 183,  99, 168, 
    204, 180, 182,  13,  84, 205, 
     60, 186, 205,  98,  76,  64, 
    138, 103, 193, 214, 179, 144, 
     54, 178,  35, 124, 183, 135, 
    103, 207, 125, 103,  87, 128, 
    173, 126, 134, 116, 112, 240, 
    221,  15, 195, 235,  48, 132, 
    231,  56, 163, 235, 197,  16, 
    222,  48, 124,  71, 247,  66, 
    133, 175, 242,  94, 179,  35, 
    117,   2,  25,  71,  50, 239, 
    116,  14, 112,   2, 201, 229, 
     45,  50, 211, 224, 123, 197, 
    110, 133,  94, 121, 152, 150, 
    135, 246, 164, 212, 113, 164, 
     63,  55, 192, 107,  10, 191, 
    161,  32, 251, 231, 165, 210, 
    249, 159, 206, 252, 150, 186, 
     77, 203,  90,  90, 178, 125, 
     77,  42, 205,  37, 129,  60, 
     88,  71,  87, 182, 151, 144, 
     84, 105, 254, 186, 115, 179, 
    112, 199, 105, 182, 150, 170, 
    238,  19, 103, 182, 214, 106, 
     58, 249,  90, 195, 173, 180, 
    230,  11, 179,  78, 179,  81, 
    113, 230,  86,  75,  85, 183, 
    209, 116, 110, 109,  60, 174, 
    215, 214, 220, 170,  51,  95, 
    222, 104,  63,  88, 119, 115, 
    165, 102, 173, 114, 123, 121, 
     25, 187,  46,  61, 156, 243, 
    220,  35, 183, 209, 114, 219, 
    247, 106,  43, 171, 173, 218, 
    250,  74, 161, 125, 169,  94, 
     45, 195,  79,  14, 125, 244, 
    183,   0,  88,  72,  83,  72, 
      8,   0,   0,   0,  25, 114, 
      4, 255,  96, 140,  99,  26, 
     88,  80,  68,  80,  96,   0, 
      0,   0,  68,  58,  92,  65, 
     84,  71,  92, 115, 116,  95, 
    100, 101, 118,  92,  75, 105, 
    116, 115,  92,  68, 105, 114, 
    101,  99, 116,  88,  84,  75, 
     92, 115, 114,  99,  92,  83, 
    104,  97, 100, 101, 114, 115, 
     92,  67, 111, 109, 112, 105, 
    108, 101, 100,  92,  88,  98, 
    111, 120,  79, 110, 101,  66, 
     97, 115, 105,  99,  69, 102, 
    102, 101,  99, 116,  95,  80, 
     83,  66,  97, 115, 105,  99, 
     86, 101, 114, 116, 101, 120, 
     76, 105, 103, 104, 116, 105, 
    110, 103,  84, 120,  46, 112, 
    100,  98
};
