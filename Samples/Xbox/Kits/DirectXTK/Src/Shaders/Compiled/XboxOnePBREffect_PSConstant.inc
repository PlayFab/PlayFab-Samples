#if 0
//
// Generated by Microsoft (R) D3D Shader Disassembler for Durango
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xy          0     NONE   float       
// TEXCOORD                 1   xyzw        1     NONE   float   xyz 
// TEXCOORD                 2   xyz         2     NONE   float   xyz 
// COLOR                    0   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
// Opaque Custom Data - XBOX Precompiled Shader Header
// First Precompiled Shader at offset:[617]
// Embedded Data:
//  0x00000269 - Offset To First Precompiled Shader
//  0x00000050 - Original Shader Descriptor
//  0x00000264 - Original Shader Size
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[25], dynamicIndexed
dcl_sampler s1, mode_default
dcl_resource_texturecube (float,float,float,float) t4
dcl_resource_texturecube (float,float,float,float) t5
dcl_input_ps linear v1.xyz
dcl_input_ps linear v2.xyz
dcl_output o0.xyzw
dcl_temps 8
add r0.xyz, -v1.xyzx, cb0[0].xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
dp3 r0.w, v2.xyzx, v2.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, v2.xyzx
dp3_sat r0.w, r1.xyzx, r0.xyzx
mul r1.w, cb0[23].y, cb0[23].y
mad r2.xyz, cb0[23].xxxx, -cb0[22].xyzx, cb0[22].xyzx
add r3.xyz, l(-0.040000, -0.040000, -0.040000, 0.000000), cb0[22].xyzx
mad r3.xyz, cb0[23].xxxx, r3.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
add r2.w, cb0[23].y, cb0[23].y
add r0.w, -r0.w, l(1.000000)
mul r3.w, r0.w, r0.w
mul r3.w, r3.w, r3.w
mul r0.w, r0.w, r3.w
mul r3.w, r1.w, r1.w
mad r1.w, r1.w, r1.w, l(-1.000000)
add r4.xyz, -r3.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mul r4.w, r3.w, l(0.250000)
mov r5.xyzw, l(0,0,0,0)
loop 
  ige r6.x, r5.w, l(3)
  breakc_nz r6.x
  dp3 r6.x, -cb0[r5.w + 16].xyzx, -cb0[r5.w + 16].xyzx
  rsq r6.x, r6.x
  mul r6.yzw, r6.xxxx, -cb0[r5.w + 16].xxyz
  mad r7.xyz, -cb0[r5.w + 16].xyzx, r6.xxxx, r0.xyzx
  dp3 r6.x, r7.xyzx, r7.xyzx
  rsq r6.x, r6.x
  mul r7.xyz, r6.xxxx, r7.xyzx
  dp3_sat r6.x, r1.xyzx, r6.yzwy
  dp3_sat r6.y, r6.yzwy, r7.xyzx
  dp3_sat r6.z, r1.xyzx, r7.xyzx
  mul r6.zw, r6.zzzy, r6.zzzy
  mad r7.x, r6.w, r2.w, l(-0.500000)
  add r7.y, -r6.x, l(1.000000)
  mul r7.z, r7.y, r7.y
  mul r7.z, r7.z, r7.z
  mul r7.y, r7.z, r7.y
  mad r7.y, r7.x, r7.y, l(1.000000)
  mad r7.x, r7.x, r0.w, l(1.000000)
  mul r7.x, r7.x, r7.y
  mad r6.z, r6.z, r1.w, l(1.000000)
  mul r6.z, r6.z, r6.z
  mul r6.z, r6.z, l(3.141593)
  max r6.z, r6.z, l(0.000001)
  div r6.z, r3.w, r6.z
  add r7.y, -r6.y, l(1.000000)
  mul r7.z, r7.y, r7.y
  mul r7.z, r7.z, r7.z
  mul r7.y, r7.z, r7.y
  mad r7.yzw, r4.xxyz, r7.yyyy, r3.xxyz
  mad r6.y, -r6.y, r6.y, l(1.000000)
  mad r6.y, r4.w, r6.y, r6.w
  rcp r6.y, r6.y
  mul r7.yzw, r6.zzzz, r7.yyzw
  mul r6.yzw, r6.yyyy, r7.yyzw
  mul r7.yzw, r6.xxxx, cb0[r5.w + 19].xxyz
  mad r6.xyz, r2.xyzx, r7.xxxx, r6.yzwy
  mad r5.xyz, r7.yzwy, r6.xyzx, r5.xyzx
  iadd r5.w, r5.w, l(1)
endloop 
sample_indexable(texturecube)(float,float,float,float) r4.xyz, r1.xyzx, t5.xyzw, s1
mad r2.xyz, r2.xyzx, r4.xyzx, r5.xyzx
itof r0.w, cb0[23].z
mul r0.w, r0.w, cb0[23].y
dp3 r1.w, -r0.xyzx, r1.xyzx
add r1.w, r1.w, r1.w
mad r0.xyz, r1.xyzx, -r1.wwww, -r0.xyzx
sample_l_indexable(texturecube)(float,float,float,float) r0.xyz, r0.xyzx, t4.xyzw, s1, r0.w
mad o0.xyz, r3.xyzx, r0.xyzx, r2.xyzx
mov o0.w, cb0[22].w
ret 
// Opaque Custom Data - XBOX Precompiled Shader Object
// Offset:[617], bundle is:[447] DWORDS.
// Disassembled Precompiled Shader Object:
// Shader Type               : (PS)
// Shader Hw Stage           : (PS)
// PDB Filename              : D:\ATG\st_dev\Kits\DirectXTK\src\Shaders\Compiled\XboxOnePBREffect_PSConstant.pdb
// Shader Semantic Hash      : 0x3a83ea2c969e5c9b
//
// Shader Data:
; ----------------- PS Data ------------------------
; Input Semantic Mappings
;   [0] generic,  usageIdx 1, channelMask  7, param0, paramSlot1, DefaultVal={0,0,0,0}
;   [1] generic,  usageIdx 2, channelMask  7, param1, paramSlot2, DefaultVal={0,0,0,0}

codeLenInByte        = 1728 bytes;

; launchModeFlags    = 0x0000000E
srdTableSupport      = TRUE
immediateSupportExt  = TRUE
srdTableSupportExt   = TRUE

userElementCount     = 1;
;  userElements[0]      = PTR_EXTENDED_USER_DATA, ReferencedExtUserElements=1, s[0x0:1]
extUserElementCount  = 4;
;  extUserElements 1[0] = IMM_RESOURCE 4, offset 0x0:7 dwords
;  extUserElements 1[1] = IMM_RESOURCE 5, offset 0x8:15 dwords
;  extUserElements 1[2] = IMM_SAMPLER 1, offset 0x10:19 dwords
;  extUserElements 1[3] = IMM_CONST_BUFFER 0, offset 0x14:23 dwords
NumVgprs             = 31;
NumSgprs             = 60;
FloatMode            = 192;
IeeeMode             = 0;
FlatPtr32            = 0;
ScratchSize          = 0 dwords/thread;
LDSByteSize          = 0 bytes/workgroup (compile time only);
ScratchWaveOffsetReg = s65535;
; texSamplerUsage         = 0x00000002
; constBufUsage           = 0x00000001

; SPI_SHADER_PGM_RSRC2_PS = 0x00000004
SSPRP:SCRATCH_EN            = 0
SSPRP:USER_SGPR             = 2
SSPRP:TRAP_PRESENT          = 0
SSPRP:WAVE_CNT_EN           = 0
SSPRP:EXTRA_LDS_SIZE        = 0
SSPRP:EXCP_EN               = 0
; SPI_SHADER_Z_FORMAT     = 0x00000000
SPZF:Z_EXPORT_FORMAT        = 0; SPI_SHADER_ZERO
; SPI_PS_IN_CONTROL       = 0x00000002
SPIC:NUM_INTERP             = 2
SPIC:PARAM_GEN              = 0
SPIC:FOG_ADDR               = 0
SPIC:BC_OPTIMIZE_DISABLE    = 0
SPIC:PASS_FOG_THROUGH_PS    = 0
; SPI_PS_INPUT_ADDR       = 0x00000002
SPIA:PERSP_CENTER_ENA       = 1
; DB_SHADER_CONTROL       = 0x00000010
DB:Z_ORDER                  = 1
DB:CONSERVATIVE_Z_EXPORT    = 0; EXPORT_ANY_Z
; CB_SHADER_MASK          = 0x0000000F
CB:OUTPUT0_ENABLE           = 15

dx9TexCubeMask           = 0x00000030

; export table for mrt0 [patch@(bytes=0x6AC, dwords=0x1AB)]
// Export Patch Code (FMT_ZERO):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_nop         0x0000                                  // 000000000000: BF800000
  s_nop         0x0000                                  // 000000000004: BF800000
  exp           null, off, off, off, off done vm        // 000000000008: F8001890 00000000
end
// Export Patch Code (FMT_32_R):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_nop         0x0000                                  // 000000000000: BF800000
  s_nop         0x0000                                  // 000000000004: BF800000
  exp           mrt0, v17, off, off, off done vm        // 000000000008: F8001801 00000011
end
// Export Patch Code (FMT_32_GR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_nop         0x0000                                  // 000000000000: BF800000
  s_nop         0x0000                                  // 000000000004: BF800000
  exp           mrt0, v17, v18, off, off done vm        // 000000000008: F8001803 00001211
end
// Export Patch Code (FMT_32_AR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_nop         0x0000                                  // 000000000000: BF800000
  s_nop         0x0000                                  // 000000000004: BF800000
  exp           mrt0, v17, v0, off, off done vm         // 000000000008: F8001803 00000011
end
// Export Patch Code (FMT_FP16_ABGR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  v_cvt_pkrtz_f16_f32  v1, v17, v18                     // 000000000000: 5E022511
  v_cvt_pkrtz_f16_f32  v0, v16, v0                      // 000000000004: 5E000110
  exp           mrt0, v1, v1, v0, v0 done compr vm      // 000000000008: F8001C0F 00000001
end
// Export Patch Code (FMT_UNORM16_ABGR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  v_cvt_pknorm_u16_f32  v1, v17, v18                    // 000000000000: 5C022511
  v_cvt_pknorm_u16_f32  v0, v16, v0                     // 000000000004: 5C000110
  exp           mrt0, v1, v1, v0, v0 done compr vm      // 000000000008: F8001C0F 00000001
end
// Export Patch Code (FMT_SNORM16_ABGR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  v_cvt_pknorm_i16_f32  v1, v17, v18                    // 000000000000: 5A022511
  v_cvt_pknorm_i16_f32  v0, v16, v0                     // 000000000004: 5A000110
  exp           mrt0, v1, v1, v0, v0 done compr vm      // 000000000008: F8001C0F 00000001
end
// Export Patch Code (FMT_UINT16_ABGR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  v_cvt_pk_u16_u32  v1, v17, v18                        // 000000000000: 60022511
  v_cvt_pk_u16_u32  v0, v16, v0                         // 000000000004: 60000110
  exp           mrt0, v1, v1, v0, v0 done compr vm      // 000000000008: F8001C0F 00000001
end
// Export Patch Code (FMT_SINT16_ABGR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  v_cvt_pk_i16_i32  v1, v17, v18                        // 000000000000: 62022511
  v_cvt_pk_i16_i32  v0, v16, v0                         // 000000000004: 62000110
  exp           mrt0, v1, v1, v0, v0 done compr vm      // 000000000008: F8001C0F 00000001
end
// Export Patch Code (FMT_32_ABGR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_nop         0x0000                                  // 000000000000: BF800000
  s_nop         0x0000                                  // 000000000004: BF800000
  exp           mrt0, v17, v18, v16, v0 done vm         // 000000000008: F800180F 00101211
end

// Shader Instructions:
shader main
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_mov_b64     s[56:57], exec                          // 000000000000: BEB8047E
  s_wqm_b64     exec, exec // wrscc                     // 000000000004: BEFE0A7E
  s_mov_b32     s52, s0                                 // 000000000008: BEB40300
  s_mov_b32     s53, s1                                 // 00000000000C: BEB50301
  s_mov_b32     s54, s2                                 // 000000000010: BEB60302
  s_load_dwordx4  s[0:3], s[52:53], 0x14                // 000000000014: C0803514
  s_waitcnt     lgkmcnt(0)                              // 000000000018: BF8C007F
  s_buffer_load_dwordx4  s[16:19], s[0:3], 0x00         // 00000000001C: C2880100
  s_buffer_load_dwordx4  s[20:23], s[0:3], 0x5c         // 000000000020: C28A015C
  s_buffer_load_dwordx4  s[24:27], s[0:3], 0x58         // 000000000024: C28C0158
  s_buffer_load_dwordx4  s[28:31], s[0:3], 0x40         // 000000000028: C28E0140
  s_buffer_load_dwordx4  s[32:35], s[0:3], 0x4c         // 00000000002C: C290014C
  s_buffer_load_dwordx4  s[36:39], s[0:3], 0x44         // 000000000030: C2920144
  s_buffer_load_dwordx4  s[40:43], s[0:3], 0x50         // 000000000034: C2940150
  s_buffer_load_dwordx4  s[44:47], s[0:3], 0x48         // 000000000038: C2960148
  s_buffer_load_dwordx4  s[48:51], s[0:3], 0x54         // 00000000003C: C2980154
  s_load_dwordx16  s[0:15], s[52:53], 0x00              // 000000000040: C1003500
  s_mov_b32     m0, s54                                 // 000000000044: BEFC0336
  v_interp_p1_f32  v2, v0, attr0.x                      // 000000000048: C8080000
  v_interp_p2_f32  v2, v1, attr0.x                      // 00000000004C: C8090001
  v_interp_p1_f32  v3, v0, attr0.y                      // 000000000050: C80C0100
  v_interp_p2_f32  v3, v1, attr0.y                      // 000000000054: C80D0101
  v_interp_p1_f32  v4, v0, attr0.z                      // 000000000058: C8100200
  v_interp_p2_f32  v4, v1, attr0.z                      // 00000000005C: C8110201
  s_waitcnt     lgkmcnt(0)                              // 000000000060: BF8C007F
  v_sub_f32     v2, s16, v2                             // 000000000064: 08040410
  v_sub_f32     v3, s17, v3                             // 000000000068: 08060611
  v_sub_f32     v4, s18, v4                             // 00000000006C: 08080812
  v_mul_legacy_f32  v5, v4, v4                          // 000000000070: 0E0A0904
  v_mac_f32     v5, v3, v3                              // 000000000074: 3E0A0703
  v_mac_f32     v5, v2, v2                              // 000000000078: 3E0A0502
  v_rsq_f32     v5, v5                                  // 00000000007C: 7E0A5D05
  v_mul_legacy_f32  v2, v2, v5                          // 000000000080: 0E040B02
  v_mul_legacy_f32  v3, v3, v5                          // 000000000084: 0E060B03
  v_mul_legacy_f32  v4, v4, v5                          // 000000000088: 0E080B04
  v_interp_p1_f32  v5, v0, attr1.x                      // 00000000008C: C8140400
  v_interp_p2_f32  v5, v1, attr1.x                      // 000000000090: C8150401
  v_interp_p1_f32  v6, v0, attr1.y                      // 000000000094: C8180500
  v_interp_p2_f32  v6, v1, attr1.y                      // 000000000098: C8190501
  v_interp_p1_f32  v0, v0, attr1.z                      // 00000000009C: C8000600
  v_interp_p2_f32  v0, v1, attr1.z                      // 0000000000A0: C8010601
  v_mul_legacy_f32  v1, v0, v0                          // 0000000000A4: 0E020100
  v_mac_f32     v1, v6, v6                              // 0000000000A8: 3E020D06
  v_mac_f32     v1, v5, v5                              // 0000000000AC: 3E020B05
  v_rsq_f32     v1, v1                                  // 0000000000B0: 7E025D01
  v_mul_legacy_f32  v5, v5, v1                          // 0000000000B4: 0E0A0305
  v_mul_legacy_f32  v6, v6, v1                          // 0000000000B8: 0E0C0306
  v_mul_legacy_f32  v0, v0, v1                          // 0000000000BC: 0E000300
  v_mul_legacy_f32  v1, v4, v0                          // 0000000000C0: 0E020104
  v_mac_f32     v1, v6, v3                              // 0000000000C4: 3E020706
  v_mad_legacy_f32  v1, v5, v2, v1 clamp                // 0000000000C8: D2800801 04060505
  v_mul_legacy_f32  v7, s21, s21                        // 0000000000D0: D20E0007 00002A15
  v_mov_b32     v8, s24                                 // 0000000000D8: 7E100218
  v_mad_legacy_f32  v8, s20, -v8, v8                    // 0000000000DC: D2800008 44221014
  v_mov_b32     v9, s25                                 // 0000000000E4: 7E120219
  v_mad_legacy_f32  v9, s20, -v9, v9                    // 0000000000E8: D2800009 44261214
  v_mov_b32     v10, s26                                // 0000000000F0: 7E14021A
  v_mad_legacy_f32  v10, s20, -v10, v10                 // 0000000000F4: D280000A 442A1414
  v_mov_b32     v11, 0xbd23d70a                         // 0000000000FC: 7E1602FF BD23D70A
  v_add_f32     v12, s24, v11                           // 000000000104: 06181618
  v_add_f32     v13, s25, v11                           // 000000000108: 061A1619
  v_add_f32     v11, s26, v11                           // 00000000010C: 0616161A
  v_mov_b32     v14, 0x3d23d70a                         // 000000000110: 7E1C02FF 3D23D70A
  v_mad_f32     v12, s20, v12, v14                      // 000000000118: D282000C 043A1814
  v_mad_f32     v13, s20, v13, v14                      // 000000000120: D282000D 043A1A14
  v_mac_f32     v14, s20, v11                           // 000000000128: 3E1C1614
  v_max_f32     v11, s21, s21 mul:2                     // 00000000012C: D220000B 08002A15
  v_sub_f32     v15, 1.0, v1                            // 000000000134: 081E02F2
  v_mad_legacy_f32  v15, -v1, v15, v15                  // 000000000138: D280000F 243E1F01
  v_mul_legacy_f32  v15, v15, v15                       // 000000000140: 0E1E1F0F
  v_mad_legacy_f32  v15, -v1, v15, v15                  // 000000000144: D280000F 243E1F01
  v_mul_legacy_f32  v1, v7, v7                          // 00000000014C: 0E020F07
  v_mul_legacy_f32  v16, s30, s30                       // 000000000150: D20E0010 00003C1E
  v_mad_f32     v16, s29, s29, v16                      // 000000000158: D2820010 04403A1D
  v_mad_f32     v16, s28, s28, v16                      // 000000000160: D2820010 0440381C
  v_rsq_f32     v16, v16                                // 000000000168: 7E205D10
  v_mul_legacy_f32  v17, -s28, v16                      // 00000000016C: D20E0011 2002201C
  v_mul_legacy_f32  v18, -s29, v16                      // 000000000174: D20E0012 2002201D
  v_mul_legacy_f32  v19, -s30, v16                      // 00000000017C: D20E0013 2002201E
  v_mad_legacy_f32  v20, -s28, v16, v2                  // 000000000184: D2800014 240A201C
  v_mad_legacy_f32  v21, -s29, v16, v3                  // 00000000018C: D2800015 240E201D
  v_mad_legacy_f32  v16, -s30, v16, v4                  // 000000000194: D2800010 2412201E
  s_load_dwordx4  s[16:19], s[52:53], 0x10              // 00000000019C: C0883510
  v_mul_legacy_f32  v22, v16, v16                       // 0000000001A0: 0E2C2110
  v_mac_f32     v22, v21, v21                           // 0000000001A4: 3E2C2B15
  v_mac_f32     v22, v20, v20                           // 0000000001A8: 3E2C2914
  v_rsq_f32     v22, v22                                // 0000000001AC: 7E2C5D16
  v_mul_legacy_f32  v20, v20, v22                       // 0000000001B0: 0E282D14
  v_mul_legacy_f32  v21, v21, v22                       // 0000000001B4: 0E2A2D15
  v_mul_legacy_f32  v16, v16, v22                       // 0000000001B8: 0E202D10
  v_mul_legacy_f32  v22, v0, v19                        // 0000000001BC: 0E2C2700
  v_mac_f32     v22, v6, v18                            // 0000000001C0: 3E2C2506
  v_mad_legacy_f32  v22, v5, v17, v22 clamp             // 0000000001C4: D2800816 045A2305
  v_mul_legacy_f32  v19, v19, v16                       // 0000000001CC: 0E262113
  v_mac_f32     v19, v18, v21                           // 0000000001D0: 3E262B12
  v_mad_legacy_f32  v19, v17, v20, v19 clamp            // 0000000001D4: D2800813 044E2911
  v_mul_legacy_f32  v16, v0, v16                        // 0000000001DC: 0E202100
  v_mac_f32     v16, v6, v21                            // 0000000001E0: 3E202B06
  v_mad_legacy_f32  v16, v5, v20, v16 clamp             // 0000000001E4: D2800810 04422905
  v_mul_legacy_f32  v16, v16, v16                       // 0000000001EC: 0E202110
  v_mul_legacy_f32  v17, v19, v19                       // 0000000001F0: 0E222713
  v_mad_f32     v18, v17, v11, -0.5                     // 0000000001F4: D2820012 03C61711
  v_sub_f32     v20, 1.0, v22                           // 0000000001FC: 08282CF2
  v_mad_legacy_f32  v20, -v22, v20, v20                 // 000000000200: D2800014 24522916
  v_mul_legacy_f32  v20, v20, v20                       // 000000000208: 0E282914
  v_mad_legacy_f32  v20, -v22, v20, v20                 // 00000000020C: D2800014 24522916
  v_mad_f32     v20, v18, v20, 1.0                      // 000000000214: D2820014 03CA2912
  v_mad_f32     v18, v18, v15, 1.0                      // 00000000021C: D2820012 03CA1F12
  v_mul_legacy_f32  v18, v20, v18                       // 000000000224: 0E242514
  v_mad_f32     v7, v7, v7, -1.0                        // 000000000228: D2820007 03CE0F07
  v_mad_f32     v16, v16, v7, 1.0                       // 000000000230: D2820010 03CA0F10
  v_mul_legacy_f32  v16, v16, v16                       // 000000000238: 0E202110
  s_mov_b32     s20, 0x40490fdb                         // 00000000023C: BE9403FF 40490FDB
  v_mul_legacy_f32  v16, s20, v16                       // 000000000244: 0E202014
  s_mov_b32     s23, 0x358637bd                         // 000000000248: BE9703FF 358637BD
  v_max_legacy_f32  v16, s23, v16                       // 000000000250: 1C202017
  v_rcp_f32     v16, v16                                // 000000000254: 7E205510
  v_mul_f32     v16, v1, v16                            // 000000000258: 10202101
  v_sub_f32     v20, 1.0, v19                           // 00000000025C: 082826F2
  v_mad_legacy_f32  v20, -v19, v20, v20                 // 000000000260: D2800014 24522913
  v_mul_legacy_f32  v20, v20, v20                       // 000000000268: 0E282914
  v_mad_legacy_f32  v20, -v19, v20, v20                 // 00000000026C: D2800014 24522913
  v_sub_f32     v21, 1.0, v12                           // 000000000274: 082A18F2
  v_mad_f32     v23, v21, v20, v12                      // 000000000278: D2820017 04322915
  v_sub_f32     v24, 1.0, v13                           // 000000000280: 08301AF2
  v_mad_f32     v25, v24, v20, v13                      // 000000000284: D2820019 04362918
  v_sub_f32     v26, 1.0, v14                           // 00000000028C: 08341CF2
  v_mad_f32     v20, v26, v20, v14                      // 000000000290: D2820014 043A291A
  v_mul_legacy_f32  v27, 0x3e800000, v1                 // 000000000298: 0E3602FF 3E800000
  v_mad_legacy_f32  v19, -v19, v19, 1.0                 // 0000000002A0: D2800013 23CA2713
  v_mac_f32     v17, v27, v19                           // 0000000002A8: 3E22271B
  v_mul_legacy_f32  v19, v16, v23                       // 0000000002AC: 0E262F10
  v_mul_legacy_f32  v23, v16, v25                       // 0000000002B0: 0E2E3310
  v_mul_legacy_f32  v16, v16, v20                       // 0000000002B4: 0E202910
  v_rcp_f32     v17, v17                                // 0000000002B8: 7E225511
  v_mul_legacy_f32  v19, v17, v19                       // 0000000002BC: 0E262711
  v_mul_legacy_f32  v20, v17, v23                       // 0000000002C0: 0E282F11
  v_mul_legacy_f32  v16, v17, v16                       // 0000000002C4: 0E202111
  v_mul_legacy_f32  v17, s32, v22                       // 0000000002C8: 0E222C20
  v_mul_legacy_f32  v23, s33, v22                       // 0000000002CC: 0E2E2C21
  v_mul_legacy_f32  v22, s34, v22                       // 0000000002D0: 0E2C2C22
  v_mac_f32     v19, v8, v18                            // 0000000002D4: 3E262508
  v_mac_f32     v20, v9, v18                            // 0000000002D8: 3E282509
  v_mac_f32     v16, v10, v18                           // 0000000002DC: 3E20250A
  v_mul_legacy_f32  v17, v17, v19                       // 0000000002E0: 0E222711
  v_mul_legacy_f32  v18, v23, v20                       // 0000000002E4: 0E242917
  v_mul_legacy_f32  v16, v22, v16                       // 0000000002E8: 0E202116
  v_mul_legacy_f32  v19, s38, s38                       // 0000000002EC: D20E0013 00004C26
  v_mad_f32     v19, s37, s37, v19                      // 0000000002F4: D2820013 044C4A25
  v_mad_f32     v19, s36, s36, v19                      // 0000000002FC: D2820013 044C4824
  v_rsq_f32     v19, v19                                // 000000000304: 7E265D13
  v_mul_legacy_f32  v20, -s36, v19                      // 000000000308: D20E0014 20022624
  v_mul_legacy_f32  v22, -s37, v19                      // 000000000310: D20E0016 20022625
  v_mul_legacy_f32  v23, -s38, v19                      // 000000000318: D20E0017 20022626
  v_mad_legacy_f32  v25, -s36, v19, v2                  // 000000000320: D2800019 240A2624
  v_mad_legacy_f32  v28, -s37, v19, v3                  // 000000000328: D280001C 240E2625
  v_mad_legacy_f32  v19, -s38, v19, v4                  // 000000000330: D2800013 24122626
  v_mul_legacy_f32  v29, v19, v19                       // 000000000338: 0E3A2713
  v_mac_f32     v29, v28, v28                           // 00000000033C: 3E3A391C
  v_mac_f32     v29, v25, v25                           // 000000000340: 3E3A3319
  v_rsq_f32     v29, v29                                // 000000000344: 7E3A5D1D
  v_mul_legacy_f32  v25, v25, v29                       // 000000000348: 0E323B19
  v_mul_legacy_f32  v28, v28, v29                       // 00000000034C: 0E383B1C
  v_mul_legacy_f32  v19, v19, v29                       // 000000000350: 0E263B13
  v_mul_legacy_f32  v29, v0, v23                        // 000000000354: 0E3A2F00
  v_mac_f32     v29, v6, v22                            // 000000000358: 3E3A2D06
  v_mad_legacy_f32  v29, v5, v20, v29 clamp             // 00000000035C: D280081D 04762905
  v_mul_legacy_f32  v23, v23, v19                       // 000000000364: 0E2E2717
  v_mac_f32     v23, v22, v28                           // 000000000368: 3E2E3916
  v_mad_legacy_f32  v23, v20, v25, v23 clamp            // 00000000036C: D2800817 045E3314
  v_mul_legacy_f32  v19, v0, v19                        // 000000000374: 0E262700
  v_mac_f32     v19, v6, v28                            // 000000000378: 3E263906
  v_mad_legacy_f32  v19, v5, v25, v19 clamp             // 00000000037C: D2800813 044E3305
  v_mul_legacy_f32  v19, v19, v19                       // 000000000384: 0E262713
  v_mul_legacy_f32  v20, v23, v23                       // 000000000388: 0E282F17
  v_mad_f32     v22, v20, v11, -0.5                     // 00000000038C: D2820016 03C61714
  v_sub_f32     v25, 1.0, v29                           // 000000000394: 08323AF2
  v_mad_legacy_f32  v25, -v29, v25, v25                 // 000000000398: D2800019 2466331D
  v_mul_legacy_f32  v25, v25, v25                       // 0000000003A0: 0E323319
  v_mad_legacy_f32  v25, -v29, v25, v25                 // 0000000003A4: D2800019 2466331D
  v_mad_f32     v25, v22, v25, 1.0                      // 0000000003AC: D2820019 03CA3316
  v_mad_f32     v22, v22, v15, 1.0                      // 0000000003B4: D2820016 03CA1F16
  v_mul_legacy_f32  v22, v25, v22                       // 0000000003BC: 0E2C2D19
  v_mad_f32     v19, v19, v7, 1.0                       // 0000000003C0: D2820013 03CA0F13
  v_mul_legacy_f32  v19, v19, v19                       // 0000000003C8: 0E262713
  v_mul_legacy_f32  v19, s20, v19                       // 0000000003CC: 0E262614
  v_max_legacy_f32  v19, s23, v19                       // 0000000003D0: 1C262617
  v_rcp_f32     v19, v19                                // 0000000003D4: 7E265513
  v_mul_f32     v19, v1, v19                            // 0000000003D8: 10262701
  v_sub_f32     v25, 1.0, v23                           // 0000000003DC: 08322EF2
  v_mad_legacy_f32  v25, -v23, v25, v25                 // 0000000003E0: D2800019 24663317
  v_mul_legacy_f32  v25, v25, v25                       // 0000000003E8: 0E323319
  v_mad_legacy_f32  v25, -v23, v25, v25                 // 0000000003EC: D2800019 24663317
  v_mad_f32     v28, v21, v25, v12                      // 0000000003F4: D282001C 04323315
  v_mad_f32     v30, v24, v25, v13                      // 0000000003FC: D282001E 04363318
  v_mad_f32     v25, v26, v25, v14                      // 000000000404: D2820019 043A331A
  v_mad_legacy_f32  v23, -v23, v23, 1.0                 // 00000000040C: D2800017 23CA2F17
  v_mac_f32     v20, v27, v23                           // 000000000414: 3E282F1B
  v_mul_legacy_f32  v23, v19, v28                       // 000000000418: 0E2E3913
  v_mul_legacy_f32  v28, v19, v30                       // 00000000041C: 0E383D13
  v_mul_legacy_f32  v19, v19, v25                       // 000000000420: 0E263313
  v_rcp_f32     v20, v20                                // 000000000424: 7E285514
  v_mul_legacy_f32  v23, v20, v23                       // 000000000428: 0E2E2F14
  v_mul_legacy_f32  v25, v20, v28                       // 00000000042C: 0E323914
  v_mul_legacy_f32  v19, v20, v19                       // 000000000430: 0E262714
  v_mul_legacy_f32  v20, s40, v29                       // 000000000434: 0E283A28
  v_mul_legacy_f32  v28, s41, v29                       // 000000000438: 0E383A29
  v_mul_legacy_f32  v29, s42, v29                       // 00000000043C: 0E3A3A2A
  v_mac_f32     v23, v8, v22                            // 000000000440: 3E2E2D08
  v_mac_f32     v25, v9, v22                            // 000000000444: 3E322D09
  v_mac_f32     v19, v10, v22                           // 000000000448: 3E262D0A
  v_mac_f32     v17, v20, v23                           // 00000000044C: 3E222F14
  v_mac_f32     v18, v28, v25                           // 000000000450: 3E24331C
  v_mac_f32     v16, v29, v19                           // 000000000454: 3E20271D
  v_mul_legacy_f32  v19, s46, s46                       // 000000000458: D20E0013 00005C2E
  v_mad_f32     v19, s45, s45, v19                      // 000000000460: D2820013 044C5A2D
  v_mad_f32     v19, s44, s44, v19                      // 000000000468: D2820013 044C582C
  v_rsq_f32     v19, v19                                // 000000000470: 7E265D13
  v_mul_legacy_f32  v20, -s44, v19                      // 000000000474: D20E0014 2002262C
  v_mul_legacy_f32  v22, -s45, v19                      // 00000000047C: D20E0016 2002262D
  v_mul_legacy_f32  v23, -s46, v19                      // 000000000484: D20E0017 2002262E
  v_mad_legacy_f32  v25, -s44, v19, v2                  // 00000000048C: D2800019 240A262C
  v_mad_legacy_f32  v28, -s45, v19, v3                  // 000000000494: D280001C 240E262D
  v_mad_legacy_f32  v19, -s46, v19, v4                  // 00000000049C: D2800013 2412262E
  v_mul_legacy_f32  v29, v19, v19                       // 0000000004A4: 0E3A2713
  v_mac_f32     v29, v28, v28                           // 0000000004A8: 3E3A391C
  v_mac_f32     v29, v25, v25                           // 0000000004AC: 3E3A3319
  v_rsq_f32     v29, v29                                // 0000000004B0: 7E3A5D1D
  v_mul_legacy_f32  v25, v25, v29                       // 0000000004B4: 0E323B19
  v_mul_legacy_f32  v28, v28, v29                       // 0000000004B8: 0E383B1C
  v_mul_legacy_f32  v19, v19, v29                       // 0000000004BC: 0E263B13
  v_mul_legacy_f32  v29, v0, v23                        // 0000000004C0: 0E3A2F00
  v_mac_f32     v29, v6, v22                            // 0000000004C4: 3E3A2D06
  v_mad_legacy_f32  v29, v5, v20, v29 clamp             // 0000000004C8: D280081D 04762905
  v_mul_legacy_f32  v23, v23, v19                       // 0000000004D0: 0E2E2717
  v_mac_f32     v23, v22, v28                           // 0000000004D4: 3E2E3916
  v_mad_legacy_f32  v23, v20, v25, v23 clamp            // 0000000004D8: D2800817 045E3314
  v_mul_legacy_f32  v19, v0, v19                        // 0000000004E0: 0E262700
  v_mac_f32     v19, v6, v28                            // 0000000004E4: 3E263906
  v_mad_legacy_f32  v19, v5, v25, v19 clamp             // 0000000004E8: D2800813 044E3305
  v_mul_legacy_f32  v19, v19, v19                       // 0000000004F0: 0E262713
  v_mul_legacy_f32  v20, v23, v23                       // 0000000004F4: 0E282F17
  v_mad_f32     v11, v20, v11, -0.5                     // 0000000004F8: D282000B 03C61714
  v_sub_f32     v22, 1.0, v29                           // 000000000500: 082C3AF2
  v_mad_legacy_f32  v22, -v29, v22, v22                 // 000000000504: D2800016 245A2D1D
  v_mul_legacy_f32  v22, v22, v22                       // 00000000050C: 0E2C2D16
  v_mad_legacy_f32  v22, -v29, v22, v22                 // 000000000510: D2800016 245A2D1D
  v_mad_f32     v22, v11, v22, 1.0                      // 000000000518: D2820016 03CA2D0B
  v_mad_f32     v11, v11, v15, 1.0                      // 000000000520: D282000B 03CA1F0B
  v_mul_legacy_f32  v11, v22, v11                       // 000000000528: 0E161716
  v_mad_f32     v7, v19, v7, 1.0                        // 00000000052C: D2820007 03CA0F13
  v_mul_legacy_f32  v7, v7, v7                          // 000000000534: 0E0E0F07
  v_mul_legacy_f32  v7, s20, v7                         // 000000000538: 0E0E0E14
  v_max_legacy_f32  v7, s23, v7                         // 00000000053C: 1C0E0E17
  v_rcp_f32     v7, v7                                  // 000000000540: 7E0E5507
  v_mul_f32     v1, v1, v7                              // 000000000544: 10020F01
  v_sub_f32     v7, 1.0, v23                            // 000000000548: 080E2EF2
  v_mad_legacy_f32  v7, -v23, v7, v7                    // 00000000054C: D2800007 241E0F17
  v_mul_legacy_f32  v7, v7, v7                          // 000000000554: 0E0E0F07
  v_mad_legacy_f32  v7, -v23, v7, v7                    // 000000000558: D2800007 241E0F17
  v_mad_f32     v15, v21, v7, v12                       // 000000000560: D282000F 04320F15
  v_mad_f32     v19, v24, v7, v13                       // 000000000568: D2820013 04360F18
  v_mad_f32     v7, v26, v7, v14                        // 000000000570: D2820007 043A0F1A
  v_mad_legacy_f32  v21, -v23, v23, 1.0                 // 000000000578: D2800015 23CA2F17
  v_mac_f32     v20, v27, v21                           // 000000000580: 3E282B1B
  v_mul_legacy_f32  v15, v1, v15                        // 000000000584: 0E1E1F01
  v_mul_legacy_f32  v19, v1, v19                        // 000000000588: 0E262701
  v_mul_legacy_f32  v1, v1, v7                          // 00000000058C: 0E020F01
  v_rcp_f32     v7, v20                                 // 000000000590: 7E0E5514
  v_mul_legacy_f32  v15, v7, v15                        // 000000000594: 0E1E1F07
  v_mul_legacy_f32  v19, v7, v19                        // 000000000598: 0E262707
  v_mul_legacy_f32  v1, v7, v1                          // 00000000059C: 0E020307
  v_mul_legacy_f32  v7, s48, v29                        // 0000000005A0: 0E0E3A30
  v_mul_legacy_f32  v20, s49, v29                       // 0000000005A4: 0E283A31
  v_mul_legacy_f32  v21, s50, v29                       // 0000000005A8: 0E2A3A32
  v_mac_f32     v15, v8, v11                            // 0000000005AC: 3E1E1708
  v_mac_f32     v19, v9, v11                            // 0000000005B0: 3E261709
  v_mac_f32     v1, v10, v11                            // 0000000005B4: 3E02170A
  v_mac_f32     v17, v7, v15                            // 0000000005B8: 3E221F07
  v_mac_f32     v18, v20, v19                           // 0000000005BC: 3E242714
  v_mac_f32     v16, v21, v1                            // 0000000005C0: 3E200315
  v_cubetc_f32  v1, v5, v6, v0                          // 0000000005C4: D28C0001 04020D05
  v_cubesc_f32  v7, v5, v6, v0                          // 0000000005CC: D28A0007 04020D05
  v_cubema_f32  v11, v5, v6, v0                         // 0000000005D4: D28E000B 04020D05
  v_cubeid_f32  v23, v5, v6, v0                         // 0000000005DC: D2880017 04020D05
  v_rcp_f32     v11, abs(v11)                           // 0000000005E4: D354010B 0000010B
  v_madak_f32   v22, v1, v11, 0x3fc00000                // 0000000005EC: 422C1701 3FC00000
  v_madak_f32   v21, v7, v11, 0x3fc00000                // 0000000005F4: 422A1707 3FC00000
  v_cvt_f32_i32  v11, s22                               // 0000000005FC: 7E160A16
  v_mul_legacy_f32  v27, s21, v11                       // 000000000600: 0E361615
  s_nop         0x0000                                  // 000000000604: BF800000
  v_mul_legacy_f32  v19, -v4, v0                        // 000000000608: D20E0013 20020104
  v_mad_legacy_f32  v19, -v3, v6, v19                   // 000000000610: D2800013 244E0D03
  v_mad_legacy_f32  v19, -v2, v5, v19 mul:2             // 000000000618: D2800013 2C4E0B02
  v_mad_legacy_f32  v2, v5, -v19, -v2                   // 000000000620: D2800002 C40A2705
  v_mad_legacy_f32  v3, v6, -v19, -v3                   // 000000000628: D2800003 C40E2706
  v_mad_legacy_f32  v4, v0, -v19, -v4                   // 000000000630: D2800004 C4122700
  v_cubetc_f32  v0, v2, v3, v4                          // 000000000638: D28C0000 04120702
  v_cubesc_f32  v5, v2, v3, v4                          // 000000000640: D28A0005 04120702
  v_cubema_f32  v6, v2, v3, v4                          // 000000000648: D28E0006 04120702
  v_cubeid_f32  v26, v2, v3, v4                         // 000000000650: D288001A 04120702
  v_rcp_f32     v2, abs(v6)                             // 000000000658: D3540102 00000106
  v_madak_f32   v25, v0, v2, 0x3fc00000                 // 000000000660: 42320500 3FC00000
  v_madak_f32   v24, v5, v2, 0x3fc00000                 // 000000000668: 42300505 3FC00000
  s_waitcnt     lgkmcnt(0)                              // 000000000670: BF8C007F
  image_sample  v[4:7], v[21:22], s[8:15], s[16:19] dmask:0x7 // 000000000674: F0800700 00820415
  image_sample_l  v[0:3], v[24:25], s[0:7], s[16:19] dmask:0x7 // 00000000067C: F0900700 00800018
  s_waitcnt     vmcnt(1)                                // 000000000684: BF8C0F71
  v_mac_f32     v17, v8, v4                             // 000000000688: 3E220908
  v_mac_f32     v18, v9, v5                             // 00000000068C: 3E240B09
  v_mac_f32     v16, v10, v6                            // 000000000690: 3E200D0A
  s_waitcnt     vmcnt(0)                                // 000000000694: BF8C0F70
  v_mac_f32     v17, v12, v0                            // 000000000698: 3E22010C
  v_mac_f32     v18, v13, v1                            // 00000000069C: 3E24030D
  v_mac_f32     v16, v14, v2                            // 0000000006A0: 3E20050E
  v_mov_b32     v0, s27                                 // 0000000006A4: 7E00021B
  s_mov_b64     exec, s[56:57]                          // 0000000006A8: BEFE0438
  v_cvt_pkrtz_f16_f32  v1, v17, v18                     // 0000000006AC: 5E022511
  v_cvt_pkrtz_f16_f32  v0, v16, v0                      // 0000000006B0: 5E000110
  exp           mrt0, v1, v1, v0, v0 done compr vm      // 0000000006B4: F8001C0F 00000001
  s_endpgm                                              // 0000000006BC: BF810000
end


// Shader Statistics:
//  NumActiveWaveFront:         32
//  WorkgroupSize:              64
//  NumVRegs:                   31
//  NumSRegs:                   60
//  NumActiveWaveFrontByVReg:   32
//  NumActiveWaveFrontBySReg:   32
//  NumActiveWaveFrontByLDS:    40
//  CycleSim:                   349
//  CycleSimNWaves:             349
//  Code Size:                  1728
//Assembler Counts:
//  num_32bit_ops                     : 219
//  num_64bit_ops                     : 102
//  num_alu                           : 290
//  num_fc                            : 28
//  num_inst_exp                      : 1
//  num_inst_ldsgds                   : 0
//  num_inst_mimg                     : 2
//  num_inst_mtbuf                    : 0
//  num_inst_mubuf                    : 0
//  num_inst_sopp                     : 7
//  num_inst_sopc                     : 0
//  num_inst_sop1                     : 9
//  num_inst_sop2                     : 0
//  num_inst_smrd                     : 0
//  num_inst_sopk                     : 0
//  num_inst_vop1                     : 21
//  num_inst_vop2                     : 158
//  num_inst_vop3                     : 66
//  num_inst_vopc                     : 0
//  num_inst_vintrp                   : 12
//  constant_literal_operands         : 0
//  num_tex                           : 3
//  num_vmem_group                    : 1
//  vmem_grouping_started             : 0
//
//Compilation Notes:
//
//  PS has no UAV writes, consider forcing REZ/LATEZ.
// Shader Statistics:
// m_uNumActiveWaveFront             : 32
// m_uVRegLimit                      : 35
// m_uSRegLimit                      : 72
// m_uNumVRegs                       : 31
// m_uNumSRegs                       : 60
// m_uSCCodeSize                     : 1728
// m_uWorkgroupSize                  : 64
// m_uNumActiveWaveFrontByVReg       : 32
// m_uNumActiveWaveFrontBySReg       : 32
// m_uNumActiveWaveFrontByLDS        : 40
// m_uCycleSim1Wave                  : 349
// m_uCycleSimNWaves                 : 349

// Assembler Counts:
// num_32bit_ops                     : 219
// num_64bit_ops                     : 102
// num_alu                           : 290
// num_fc                            : 28
// num_inst_exp                      : 1
// num_inst_ldsgds                   : 0
// num_inst_mimg                     : 2
// num_inst_mtbuf                    : 0
// num_inst_mubuf                    : 0
// num_inst_sopp                     : 7
// num_inst_sopc                     : 0
// num_inst_sop1                     : 9
// num_inst_sop2                     : 0
// num_inst_smrd                     : 0
// num_inst_sopk                     : 0
// num_inst_vop1                     : 21
// num_inst_vop2                     : 158
// num_inst_vop3                     : 66
// num_inst_vopc                     : 0
// num_inst_vintrp                   : 12
// num_inst_smem                     : 12
// constant_literal_operands         : 0
// num_tex                           : 3
// num_vmem_group                    : 1
// vmem_grouping_started             : 0
// m_fFullPrecompilePromise          : 0
// m_fIntegerDivideExpansion         : 0
// m_fIntegerModExpansion            : 0
// m_fDoubleDivideExpansion          : 0
// m_fUsesScratch                    : 0
// m_fPerThreadIndirection           : 0
// m_fUsingTableLoads                : 0
// m_fUsingSHmemLoads                : 1
// fSemanticHashFlagOverrideApplied  : 0
// fPSHasNoUAVWrite                  : 1
// m_fRenderTargetsCanBeCompacted    : 0
// version                           : 3
// fCodePatched                      : 0

// Approximately 0 instruction slots used
#endif

const BYTE PBREffect_PSConstant[] =
{
     68,  88,  66,  67, 219, 233, 
     72,  94, 134,  26, 110, 140, 
    247,  24,  65, 203, 110, 232, 
     49, 164,   1,   0,   0,   0, 
      1,  18,   0,   0,   5,   0, 
      0,   0,  52,   0,   0,   0, 
    180,   0,   0,   0, 232,   0, 
      0,   0, 152,  17,   0,   0, 
    168,  17,   0,   0,  73,  83, 
     71,  78, 120,   0,   0,   0, 
      4,   0,   0,   0,   8,   0, 
      0,   0, 104,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      0,   0,   0,   0,   3,   0, 
      0,   0, 104,   0,   0,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   0,   0,  15,   7, 
      0,   0, 104,   0,   0,   0, 
      2,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      2,   0,   0,   0,   7,   7, 
      0,   0, 113,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      3,   0,   0,   0,  15,   0, 
      0,   0,  84,  69,  88,  67, 
     79,  79,  82,  68,   0,  67, 
     79,  76,  79,  82,   0, 171, 
     79,  83,  71,  78,  44,   0, 
      0,   0,   1,   0,   0,   0, 
      8,   0,   0,   0,  32,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   3,   0, 
      0,   0,   0,   0,   0,   0, 
     15,   0,   0,   0,  83,  86, 
     95,  84,  97, 114, 103, 101, 
    116,   0, 171, 171,  83,  72, 
     69,  88, 168,  16,   0,   0, 
     80,   0,   0,   0,  42,   4, 
      0,   0,  53,  16,   0,   0, 
      5,   0,   0,   0, 105,   2, 
      0,   0,  80,   0,   0,   0, 
    100,   2,   0,   0, 106,   8, 
      0,   1,  89,   8,   0,   4, 
     70, 142,  32,   0,   0,   0, 
      0,   0,  25,   0,   0,   0, 
     90,   0,   0,   3,   0,  96, 
     16,   0,   1,   0,   0,   0, 
     88,  48,   0,   4,   0, 112, 
     16,   0,   4,   0,   0,   0, 
     85,  85,   0,   0,  88,  48, 
      0,   4,   0, 112,  16,   0, 
      5,   0,   0,   0,  85,  85, 
      0,   0,  98,  16,   0,   3, 
    114,  16,  16,   0,   1,   0, 
      0,   0,  98,  16,   0,   3, 
    114,  16,  16,   0,   2,   0, 
      0,   0, 101,   0,   0,   3, 
    242,  32,  16,   0,   0,   0, 
      0,   0, 104,   0,   0,   2, 
      8,   0,   0,   0,   0,   0, 
      0,   9, 114,   0,  16,   0, 
      0,   0,   0,   0,  70,  18, 
     16, 128,  65,   0,   0,   0, 
      1,   0,   0,   0,  70, 130, 
     32,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,  16,   0, 
      0,   7, 130,   0,  16,   0, 
      0,   0,   0,   0,  70,   2, 
     16,   0,   0,   0,   0,   0, 
     70,   2,  16,   0,   0,   0, 
      0,   0,  68,   0,   0,   5, 
    130,   0,  16,   0,   0,   0, 
      0,   0,  58,   0,  16,   0, 
      0,   0,   0,   0,  56,   0, 
      0,   7, 114,   0,  16,   0, 
      0,   0,   0,   0, 246,  15, 
     16,   0,   0,   0,   0,   0, 
     70,   2,  16,   0,   0,   0, 
      0,   0,  16,   0,   0,   7, 
    130,   0,  16,   0,   0,   0, 
      0,   0,  70,  18,  16,   0, 
      2,   0,   0,   0,  70,  18, 
     16,   0,   2,   0,   0,   0, 
     68,   0,   0,   5, 130,   0, 
     16,   0,   0,   0,   0,   0, 
     58,   0,  16,   0,   0,   0, 
      0,   0,  56,   0,   0,   7, 
    114,   0,  16,   0,   1,   0, 
      0,   0, 246,  15,  16,   0, 
      0,   0,   0,   0,  70,  18, 
     16,   0,   2,   0,   0,   0, 
     16,  32,   0,   7, 130,   0, 
     16,   0,   0,   0,   0,   0, 
     70,   2,  16,   0,   1,   0, 
      0,   0,  70,   2,  16,   0, 
      0,   0,   0,   0,  56,   0, 
      0,   9, 130,   0,  16,   0, 
      1,   0,   0,   0,  26, 128, 
     32,   0,   0,   0,   0,   0, 
     23,   0,   0,   0,  26, 128, 
     32,   0,   0,   0,   0,   0, 
     23,   0,   0,   0,  50,   0, 
      0,  13, 114,   0,  16,   0, 
      2,   0,   0,   0,   6, 128, 
     32,   0,   0,   0,   0,   0, 
     23,   0,   0,   0,  70, 130, 
     32, 128,  65,   0,   0,   0, 
      0,   0,   0,   0,  22,   0, 
      0,   0,  70, 130,  32,   0, 
      0,   0,   0,   0,  22,   0, 
      0,   0,   0,   0,   0,  11, 
    114,   0,  16,   0,   3,   0, 
      0,   0,   2,  64,   0,   0, 
     10, 215,  35, 189,  10, 215, 
     35, 189,  10, 215,  35, 189, 
      0,   0,   0,   0,  70, 130, 
     32,   0,   0,   0,   0,   0, 
     22,   0,   0,   0,  50,   0, 
      0,  13, 114,   0,  16,   0, 
      3,   0,   0,   0,   6, 128, 
     32,   0,   0,   0,   0,   0, 
     23,   0,   0,   0,  70,   2, 
     16,   0,   3,   0,   0,   0, 
      2,  64,   0,   0,  10, 215, 
     35,  61,  10, 215,  35,  61, 
     10, 215,  35,  61,   0,   0, 
      0,   0,   0,   0,   0,   9, 
    130,   0,  16,   0,   2,   0, 
      0,   0,  26, 128,  32,   0, 
      0,   0,   0,   0,  23,   0, 
      0,   0,  26, 128,  32,   0, 
      0,   0,   0,   0,  23,   0, 
      0,   0,   0,   0,   0,   8, 
    130,   0,  16,   0,   0,   0, 
      0,   0,  58,   0,  16, 128, 
     65,   0,   0,   0,   0,   0, 
      0,   0,   1,  64,   0,   0, 
      0,   0, 128,  63,  56,   0, 
      0,   7, 130,   0,  16,   0, 
      3,   0,   0,   0,  58,   0, 
     16,   0,   0,   0,   0,   0, 
     58,   0,  16,   0,   0,   0, 
      0,   0,  56,   0,   0,   7, 
    130,   0,  16,   0,   3,   0, 
      0,   0,  58,   0,  16,   0, 
      3,   0,   0,   0,  58,   0, 
     16,   0,   3,   0,   0,   0, 
     56,   0,   0,   7, 130,   0, 
     16,   0,   0,   0,   0,   0, 
     58,   0,  16,   0,   0,   0, 
      0,   0,  58,   0,  16,   0, 
      3,   0,   0,   0,  56,   0, 
      0,   7, 130,   0,  16,   0, 
      3,   0,   0,   0,  58,   0, 
     16,   0,   1,   0,   0,   0, 
     58,   0,  16,   0,   1,   0, 
      0,   0,  50,   0,   0,   9, 
    130,   0,  16,   0,   1,   0, 
      0,   0,  58,   0,  16,   0, 
      1,   0,   0,   0,  58,   0, 
     16,   0,   1,   0,   0,   0, 
      1,  64,   0,   0,   0,   0, 
    128, 191,   0,   0,   0,  11, 
    114,   0,  16,   0,   4,   0, 
      0,   0,  70,   2,  16, 128, 
     65,   0,   0,   0,   3,   0, 
      0,   0,   2,  64,   0,   0, 
      0,   0, 128,  63,   0,   0, 
    128,  63,   0,   0, 128,  63, 
      0,   0,   0,   0,  56,   0, 
      0,   7, 130,   0,  16,   0, 
      4,   0,   0,   0,  58,   0, 
     16,   0,   3,   0,   0,   0, 
      1,  64,   0,   0,   0,   0, 
    128,  62,  54,   0,   0,   8, 
    242,   0,  16,   0,   5,   0, 
      0,   0,   2,  64,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,  48,   0, 
      0,   1,  33,   0,   0,   7, 
     18,   0,  16,   0,   6,   0, 
      0,   0,  58,   0,  16,   0, 
      5,   0,   0,   0,   1,  64, 
      0,   0,   3,   0,   0,   0, 
      3,   0,   4,   3,  10,   0, 
     16,   0,   6,   0,   0,   0, 
     16,   0,   0,  15,  18,   0, 
     16,   0,   6,   0,   0,   0, 
     70, 130,  32, 134,  65,   0, 
      0,   0,   0,   0,   0,   0, 
     16,   0,   0,   0,  58,   0, 
     16,   0,   5,   0,   0,   0, 
     70, 130,  32, 134,  65,   0, 
      0,   0,   0,   0,   0,   0, 
     16,   0,   0,   0,  58,   0, 
     16,   0,   5,   0,   0,   0, 
     68,   0,   0,   5,  18,   0, 
     16,   0,   6,   0,   0,   0, 
     10,   0,  16,   0,   6,   0, 
      0,   0,  56,   0,   0,  11, 
    226,   0,  16,   0,   6,   0, 
      0,   0,   6,   0,  16,   0, 
      6,   0,   0,   0,   6, 137, 
     32, 134,  65,   0,   0,   0, 
      0,   0,   0,   0,  16,   0, 
      0,   0,  58,   0,  16,   0, 
      5,   0,   0,   0,  50,   0, 
      0,  13, 114,   0,  16,   0, 
      7,   0,   0,   0,  70, 130, 
     32, 134,  65,   0,   0,   0, 
      0,   0,   0,   0,  16,   0, 
      0,   0,  58,   0,  16,   0, 
      5,   0,   0,   0,   6,   0, 
     16,   0,   6,   0,   0,   0, 
     70,   2,  16,   0,   0,   0, 
      0,   0,  16,   0,   0,   7, 
     18,   0,  16,   0,   6,   0, 
      0,   0,  70,   2,  16,   0, 
      7,   0,   0,   0,  70,   2, 
     16,   0,   7,   0,   0,   0, 
     68,   0,   0,   5,  18,   0, 
     16,   0,   6,   0,   0,   0, 
     10,   0,  16,   0,   6,   0, 
      0,   0,  56,   0,   0,   7, 
    114,   0,  16,   0,   7,   0, 
      0,   0,   6,   0,  16,   0, 
      6,   0,   0,   0,  70,   2, 
     16,   0,   7,   0,   0,   0, 
     16,  32,   0,   7,  18,   0, 
     16,   0,   6,   0,   0,   0, 
     70,   2,  16,   0,   1,   0, 
      0,   0, 150,   7,  16,   0, 
      6,   0,   0,   0,  16,  32, 
      0,   7,  34,   0,  16,   0, 
      6,   0,   0,   0, 150,   7, 
     16,   0,   6,   0,   0,   0, 
     70,   2,  16,   0,   7,   0, 
      0,   0,  16,  32,   0,   7, 
     66,   0,  16,   0,   6,   0, 
      0,   0,  70,   2,  16,   0, 
      1,   0,   0,   0,  70,   2, 
     16,   0,   7,   0,   0,   0, 
     56,   0,   0,   7, 194,   0, 
     16,   0,   6,   0,   0,   0, 
    166,   6,  16,   0,   6,   0, 
      0,   0, 166,   6,  16,   0, 
      6,   0,   0,   0,  50,   0, 
      0,   9,  18,   0,  16,   0, 
      7,   0,   0,   0,  58,   0, 
     16,   0,   6,   0,   0,   0, 
     58,   0,  16,   0,   2,   0, 
      0,   0,   1,  64,   0,   0, 
      0,   0,   0, 191,   0,   0, 
      0,   8,  34,   0,  16,   0, 
      7,   0,   0,   0,  10,   0, 
     16, 128,  65,   0,   0,   0, 
      6,   0,   0,   0,   1,  64, 
      0,   0,   0,   0, 128,  63, 
     56,   0,   0,   7,  66,   0, 
     16,   0,   7,   0,   0,   0, 
     26,   0,  16,   0,   7,   0, 
      0,   0,  26,   0,  16,   0, 
      7,   0,   0,   0,  56,   0, 
      0,   7,  66,   0,  16,   0, 
      7,   0,   0,   0,  42,   0, 
     16,   0,   7,   0,   0,   0, 
     42,   0,  16,   0,   7,   0, 
      0,   0,  56,   0,   0,   7, 
     34,   0,  16,   0,   7,   0, 
      0,   0,  42,   0,  16,   0, 
      7,   0,   0,   0,  26,   0, 
     16,   0,   7,   0,   0,   0, 
     50,   0,   0,   9,  34,   0, 
     16,   0,   7,   0,   0,   0, 
     10,   0,  16,   0,   7,   0, 
      0,   0,  26,   0,  16,   0, 
      7,   0,   0,   0,   1,  64, 
      0,   0,   0,   0, 128,  63, 
     50,   0,   0,   9,  18,   0, 
     16,   0,   7,   0,   0,   0, 
     10,   0,  16,   0,   7,   0, 
      0,   0,  58,   0,  16,   0, 
      0,   0,   0,   0,   1,  64, 
      0,   0,   0,   0, 128,  63, 
     56,   0,   0,   7,  18,   0, 
     16,   0,   7,   0,   0,   0, 
     10,   0,  16,   0,   7,   0, 
      0,   0,  26,   0,  16,   0, 
      7,   0,   0,   0,  50,   0, 
      0,   9,  66,   0,  16,   0, 
      6,   0,   0,   0,  42,   0, 
     16,   0,   6,   0,   0,   0, 
     58,   0,  16,   0,   1,   0, 
      0,   0,   1,  64,   0,   0, 
      0,   0, 128,  63,  56,   0, 
      0,   7,  66,   0,  16,   0, 
      6,   0,   0,   0,  42,   0, 
     16,   0,   6,   0,   0,   0, 
     42,   0,  16,   0,   6,   0, 
      0,   0,  56,   0,   0,   7, 
     66,   0,  16,   0,   6,   0, 
      0,   0,  42,   0,  16,   0, 
      6,   0,   0,   0,   1,  64, 
      0,   0, 219,  15,  73,  64, 
     52,   0,   0,   7,  66,   0, 
     16,   0,   6,   0,   0,   0, 
     42,   0,  16,   0,   6,   0, 
      0,   0,   1,  64,   0,   0, 
    189,  55, 134,  53,  14,   0, 
      0,   7,  66,   0,  16,   0, 
      6,   0,   0,   0,  58,   0, 
     16,   0,   3,   0,   0,   0, 
     42,   0,  16,   0,   6,   0, 
      0,   0,   0,   0,   0,   8, 
     34,   0,  16,   0,   7,   0, 
      0,   0,  26,   0,  16, 128, 
     65,   0,   0,   0,   6,   0, 
      0,   0,   1,  64,   0,   0, 
      0,   0, 128,  63,  56,   0, 
      0,   7,  66,   0,  16,   0, 
      7,   0,   0,   0,  26,   0, 
     16,   0,   7,   0,   0,   0, 
     26,   0,  16,   0,   7,   0, 
      0,   0,  56,   0,   0,   7, 
     66,   0,  16,   0,   7,   0, 
      0,   0,  42,   0,  16,   0, 
      7,   0,   0,   0,  42,   0, 
     16,   0,   7,   0,   0,   0, 
     56,   0,   0,   7,  34,   0, 
     16,   0,   7,   0,   0,   0, 
     42,   0,  16,   0,   7,   0, 
      0,   0,  26,   0,  16,   0, 
      7,   0,   0,   0,  50,   0, 
      0,   9, 226,   0,  16,   0, 
      7,   0,   0,   0,   6,   9, 
     16,   0,   4,   0,   0,   0, 
     86,   5,  16,   0,   7,   0, 
      0,   0,   6,   9,  16,   0, 
      3,   0,   0,   0,  50,   0, 
      0,  10,  34,   0,  16,   0, 
      6,   0,   0,   0,  26,   0, 
     16, 128,  65,   0,   0,   0, 
      6,   0,   0,   0,  26,   0, 
     16,   0,   6,   0,   0,   0, 
      1,  64,   0,   0,   0,   0, 
    128,  63,  50,   0,   0,   9, 
     34,   0,  16,   0,   6,   0, 
      0,   0,  58,   0,  16,   0, 
      4,   0,   0,   0,  26,   0, 
     16,   0,   6,   0,   0,   0, 
     58,   0,  16,   0,   6,   0, 
      0,   0, 129,   0,   0,   5, 
     34,   0,  16,   0,   6,   0, 
      0,   0,  26,   0,  16,   0, 
      6,   0,   0,   0,  56,   0, 
      0,   7, 226,   0,  16,   0, 
      7,   0,   0,   0, 166,  10, 
     16,   0,   6,   0,   0,   0, 
     86,  14,  16,   0,   7,   0, 
      0,   0,  56,   0,   0,   7, 
    226,   0,  16,   0,   6,   0, 
      0,   0,  86,   5,  16,   0, 
      6,   0,   0,   0,  86,  14, 
     16,   0,   7,   0,   0,   0, 
     56,   0,   0,  10, 226,   0, 
     16,   0,   7,   0,   0,   0, 
      6,   0,  16,   0,   6,   0, 
      0,   0,   6, 137,  32,   6, 
      0,   0,   0,   0,  19,   0, 
      0,   0,  58,   0,  16,   0, 
      5,   0,   0,   0,  50,   0, 
      0,   9, 114,   0,  16,   0, 
      6,   0,   0,   0,  70,   2, 
     16,   0,   2,   0,   0,   0, 
      6,   0,  16,   0,   7,   0, 
      0,   0, 150,   7,  16,   0, 
      6,   0,   0,   0,  50,   0, 
      0,   9, 114,   0,  16,   0, 
      5,   0,   0,   0, 150,   7, 
     16,   0,   7,   0,   0,   0, 
     70,   2,  16,   0,   6,   0, 
      0,   0,  70,   2,  16,   0, 
      5,   0,   0,   0,  30,   0, 
      0,   7, 130,   0,  16,   0, 
      5,   0,   0,   0,  58,   0, 
     16,   0,   5,   0,   0,   0, 
      1,  64,   0,   0,   1,   0, 
      0,   0,  22,   0,   0,   1, 
     69,   0,   0, 139, 130,   1, 
      0, 128,  67,  85,  21,   0, 
    114,   0,  16,   0,   4,   0, 
      0,   0,  70,   2,  16,   0, 
      1,   0,   0,   0,  70, 126, 
     16,   0,   5,   0,   0,   0, 
      0,  96,  16,   0,   1,   0, 
      0,   0,  50,   0,   0,   9, 
    114,   0,  16,   0,   2,   0, 
      0,   0,  70,   2,  16,   0, 
      2,   0,   0,   0,  70,   2, 
     16,   0,   4,   0,   0,   0, 
     70,   2,  16,   0,   5,   0, 
      0,   0,  43,   0,   0,   6, 
    130,   0,  16,   0,   0,   0, 
      0,   0,  42, 128,  32,   0, 
      0,   0,   0,   0,  23,   0, 
      0,   0,  56,   0,   0,   8, 
    130,   0,  16,   0,   0,   0, 
      0,   0,  58,   0,  16,   0, 
      0,   0,   0,   0,  26, 128, 
     32,   0,   0,   0,   0,   0, 
     23,   0,   0,   0,  16,   0, 
      0,   8, 130,   0,  16,   0, 
      1,   0,   0,   0,  70,   2, 
     16, 128,  65,   0,   0,   0, 
      0,   0,   0,   0,  70,   2, 
     16,   0,   1,   0,   0,   0, 
      0,   0,   0,   7, 130,   0, 
     16,   0,   1,   0,   0,   0, 
     58,   0,  16,   0,   1,   0, 
      0,   0,  58,   0,  16,   0, 
      1,   0,   0,   0,  50,   0, 
      0,  11, 114,   0,  16,   0, 
      0,   0,   0,   0,  70,   2, 
     16,   0,   1,   0,   0,   0, 
    246,  15,  16, 128,  65,   0, 
      0,   0,   1,   0,   0,   0, 
     70,   2,  16, 128,  65,   0, 
      0,   0,   0,   0,   0,   0, 
     72,   0,   0, 141, 130,   1, 
      0, 128,  67,  85,  21,   0, 
    114,   0,  16,   0,   0,   0, 
      0,   0,  70,   2,  16,   0, 
      0,   0,   0,   0,  70, 126, 
     16,   0,   4,   0,   0,   0, 
      0,  96,  16,   0,   1,   0, 
      0,   0,  58,   0,  16,   0, 
      0,   0,   0,   0,  50,   0, 
      0,   9, 114,  32,  16,   0, 
      0,   0,   0,   0,  70,   2, 
     16,   0,   3,   0,   0,   0, 
     70,   2,  16,   0,   0,   0, 
      0,   0,  70,   2,  16,   0, 
      2,   0,   0,   0,  54,   0, 
      0,   6, 130,  32,  16,   0, 
      0,   0,   0,   0,  58, 128, 
     32,   0,   0,   0,   0,   0, 
     22,   0,   0,   0,  62,   0, 
      0,   1,  53,  16,   0,   0, 
    193,   1,   0,   0,  23,   0, 
      1,   0,  41,  26,  23,   0, 
    120,   1, 237,  88,  93, 108, 
     27,  89,  21, 190, 243, 227, 
    153, 137, 157,  92, 143, 237, 
    241, 140, 157, 117, 146, 137, 
     51,  25, 219, 169, 237,   4, 
    155, 102, 155,  41, 123, 201, 
    182,  65,   4, 182,  42,  85, 
    183, 145, 162, 224, 116, 187, 
    221, 166, 162, 210, 210, 150, 
     38,  90, 173, 120,  24,  66, 
    145,  80,  89,  85, 171,   8, 
    173, 118,  87,  66, 218,  39, 
     30, 144, 120,   1, 137, 191, 
      7,  54,  41,  81, 133, 172, 
     60, 240,  16, 144, 120, 216, 
     55,  94, 144, 144, 144,  86, 
    121, 170,  16, 218, 240, 157, 
    241, 184, 132, 133, 125,  11, 
      2,  65,  62, 233, 155, 239, 
    156, 123, 239, 156, 123, 238, 
    185, 246, 216, 115, 135,  29, 
     22,  97,  34, 241, 157, 175, 
    147, 254, 224, 143,  79, 106, 
     91,   3, 140,  37,  96,  75, 
     32,  41, 225, 221,  33, 186, 
     50, 246,  75, 139, 174, 140, 
    185, 224,   4, 184,   8, 142, 
    129, 159,   1,  31, 105, 140, 
    205,  67, 169, 143,  88,   5, 
    111, 127, 249,  71, 231, 127, 
    254, 231,  31, 159, 167,  88, 
    207, 130,  52, 118,  21,  14, 
    241,   3, 216,  55, 193,  50, 
    236,  18,  20,  18,  65, 166, 
     75,  12, 157,  46,   0,  82, 
    250,   7, 228, 193, 247, 192, 
    115,  32,  97,  48,  38,  65, 
      1, 251, 177,  34, 172, 209, 
    229,  95, 227, 121,  12, 164, 
    156,  62,   9, 148,  91,  63, 
     31, 152,  81, 158,   4,  90, 
    239, 127,  26, 148, 143, 202, 
     80, 116, 128, 114,  36, 191, 
    191,  79,   4, 218, 143, 163, 
    224,  32, 141,  33,  44, 199, 
    251, 168, 210,   5, 120,  53, 
    246, 169,  22, 209,  94, 130, 
    159, 132,  67, 160,  64, 198, 
     17, 244, 125, 202,  67, 147, 
    176, 107,   6,  84, 198, 135, 
    203,  68, 195, 255,  25, 250, 
     53, 165,  90,  16, 169,   4, 
    105, 176, 143, 126, 255,  15, 
    163, 205, 216, 220,  33, 110, 
     21, 216,  19, 242, 250, 190, 
      4,  63,  67, 110, 236,  43, 
    228, 103,  63, 230, 195, 203, 
     76, 202,  87,  77, 137,  93, 
     77, 151, 216,  19,  10,   7, 
    191,   3, 191, 115, 196,  95, 
    129, 191, 114, 196, 191,   6, 
    255, 218,  17, 255,  58, 252, 
    235, 125, 191,  31,  63,  29, 
    205, 103,  70, 123, 141, 198, 
    240, 191, 153,  39,  57,  30, 
     15,  79, 114,  60,  30, 158, 
    228, 120,  60,  60, 201, 241, 
    120, 120, 146, 227, 241, 240, 
     36, 199, 227, 225,  73, 142, 
    199, 195,  25, 186, 168, 191, 
    216,  14, 147,  31, 109,  51, 
    229,  39, 219, 146, 242, 211, 
    109,  89, 249, 217, 182, 117, 
    122, 243, 209,  55, 216, 195, 
     29,  38,  61, 216, 237,  72, 
    111, 236,  46,  75,  15, 119, 
    231, 165,  55, 119,  47,  72, 
     91, 187,  11, 210, 119, 119, 
     47,  73, 111, 237,  46,  74, 
    111, 239,  94, 145, 222, 221, 
    101, 167, 217, 175, 102, 149, 
    191, 110, 227,  15, 123,  87, 
     98,   3,  93,  38,  13, 118, 
     37, 105, 168, 203, 100, 179, 
     43, 201, 153,  46, 197,  49, 
     85, 213, 200, 104, 154, 145, 
     53,  12,  67,  29,  72, 114, 
     69,  79,  10,  57, 145,  20, 
    137, 213, 100,  40, 167,  84, 
    174, 164,  52, 174, 166,  12, 
    206,  84, 171,  43, 169, 249, 
     46,  75,  20, 186,  82, 162, 
    216, 197, 171,  73,  87, 210, 
     36, 196, 148, 185,  54,  36, 
    139,  68,  74,  22, 210, 170, 
     28,  38, 148,  36, 215, 148, 
     65, 142,  23,  53, 174,  82, 
    159, 142, 118,  99, 115,  63, 
    145, 208,  84, 157, 241, 253, 
    252,  20, 222,  39, 100,  51, 
     52, 216, 230, 190, 101, 150, 
     23, 138, 114,  54,  28,  32, 
     59, 235,  47,  12, 203,  86, 
    152,  36, 219, 154,  90,  56, 
    148, 237,  48, 249, 251, 137, 
    247,  11, 118,  65,  43, 218, 
    195, 218, 176, 109, 107, 135, 
    114, 137, 218, 158,  27, 100, 
    247, 247, 173,  66, 160,  14, 
    145,  14,   7, 170, 101, 151, 
     68, 138, 185,  20, 219,  56, 
    144,  71, 141,  52,  98,  72, 
     99, 194,  75, 143, 141, 242, 
    190, 173, 167, 101, 110,  98, 
    254,  81, 188,   0, 153, 184, 
    111,  36, 152,  87,  73,  75, 
    103, 160, 171, 110, 152,  65, 
     95, 201, 149, 221,  44, 116, 
      4, 154, 131, 142,  66,  45, 
    220,  95, 114, 147,  94,  30, 
     58, 226, 114, 207, 132, 142, 
    186,  89, 207,  60, 253, 224, 
    145,  57,  94, 231, 249,  83, 
    117,  97, 213, 234, 194,  94, 
    173, 135,  86, 163, 202, 243, 
    141,  41, 110,  54,  92, 206, 
     42, 117, 174,  77, 162, 157, 
    214,  62, 177, 162, 230, 198, 
    125, 158,  61, 229, 139,  28, 
    252,  76, 237, 162, 202, 198, 
     93, 174, 157, 114, 133,  73, 
    253, 181, 115, 170,   9,  63, 
     87,  41, 243,  44, 114, 202, 
     56, 191,  86,  14, 234,  85, 
    131, 230, 182, 107, 151,  61, 
    171,  86, 229,  79, 109, 244, 
    103, 107, 123,  10, 141, 203, 
    142, 237,  41, 214, 164, 199, 
    117, 216, 122, 250,  55,  10, 
    173, 199,  76, 239,  41,  20, 
    235,  80, 121, 107, 251, 131, 
    244,  23, 230,  45, 151, 236, 
    119, 182, 223, 127, 246, 219, 
    167,  29, 215,  45, 153,  75, 
    110,  40, 141, 187, 230, 129, 
    223, 139, 159,  59,  18, 159, 
    236, 131, 194, 148, 225,  32, 
     78, 190, 214,  82,  15, 134, 
    103, 140,  34, 236,  66, 109, 
     86,  61,  40, 125,  26, 227, 
    239, 239,  15, 215,   2, 245, 
     80, 158, 197, 235, 230, 166, 
    200, 209,  61, 149, 189, 137, 
    103,  42, 101,  97,  78, 251, 
    220, 108,  55, 185,  89, 115, 
    121, 102, 169,  28, 102,  42, 
     62, 207,  76,  87, 121,   6, 
    185, 184, 245,  50,  31, 175, 
     55, 121, 185,  94, 231, 198, 
    164,  47,   6,  38, 171,  34, 
     57, 233, 138,  12, 214, 235, 
    212,  60, 110,  99,  12, 213, 
    219, 191, 192,  88,  14, 115, 
     76, 126, 241, 130,  74, 234, 
     45,  66,  87, 253, 208,  66, 
    159, 231, 203, 174,  13, 157, 
    132,  58,  80,  31,  90, 196, 
    252, 158, 159, 244,  74, 208, 
     73, 159, 123, 148, 143, 239, 
    103, 189,  92,  37, 224, 165, 
    185,  64,  20, 219, 129,  24, 
     89,  13, 194, 226, 217,  22, 
     47, 157,  61, 195, 115, 103, 
    125, 206, 166,   3, 174,  53, 
    208,  30, 213, 253,  53, 213, 
    169,  52, 185,  61, 215,  20, 
     14, 124, 171, 125,  85, 101, 
    200,  91, 155, 235, 237,  83, 
    162, 125,  81, 205, 193, 119, 
    176,  14,  27, 249,  88, 180, 
     47,  65,  11,  53, 193, 103, 
    161, 125, 211,  43, 182,  91, 
    252, 169, 141, 126, 187, 189, 
    167, 208,  56,  27, 251,  82, 
    108, 212, 177, 166, 251, 251, 
     57, 236,   7, 197, 176, 124, 
    196, 241, 253,  82, 110, 201, 
     15, 165, 138, 111,  30,  52, 
    123, 113, 156,  35, 113, 200, 
     46, 225, 158, 124, 187, 165, 
    142,  66,  11, 237,  89, 149, 
    226,  14, 183,   3, 213, 161, 
    254, 105, 212, 122, 186,  42, 
    114, 115,  77, 158, 123,  14, 
    235, 105,  35, 238,  82,  53, 
    180, 166, 155, 220, 154, 107, 
    113,  11, 243,  84, 131,  42, 
    175,   5, 103, 248,  84,  16, 
    112, 163, 209,  20,   3, 141, 
    150,  72,  54, 124,  97,  77, 
    151,  69, 169, 237, 137, 145, 
    138, 139, 125, 227, 251, 205, 
     78, 175, 214, 141, 149,  94, 
    173, 235, 203, 127, 175, 117, 
     29, 181, 165,  90,  55, 160, 
     84, 235,  38, 148, 242, 171, 
    199, 181, 110, 196, 181, 110, 
    254, 155, 106, 157,  66,  62, 
    189,  90, 215,  13,  27, 243, 
    140,  52,  86,  60,  27, 245, 
    124, 106, 163,  63, 213, 216, 
     83, 104,  92,  10, 181, 182, 
     29,  59, 250,  14,  80, 173, 
    245,  52, 231,  22, 231, 220, 
    225, 188, 164,  47, 241,  80, 
     74, 203, 168,  53,  55, 116, 
    220, 235, 164,  71, 241,  28, 
    224,  24, 219, 179, 211, 184, 
     39, 159, 110,  69, 235,  47, 
    164, 103, 241, 124,  66, 173, 
    211, 129,  74, 223, 245, 168, 
    214, 167, 170,  66, 194,  51, 
      4, 251, 197,  17,   7, 181, 
    230, 161,  14,  95, 135, 175, 
     43,  50, 159,   9,  56, 255, 
     20, 234, 221,  10, 166, 184, 
    225, 140, 138,   1, 199,  23, 
     73,  71,  22, 250,  88,  89, 
     88,  21,  79, 228,  21,  87, 
     72, 236, 225, 126,  98,  72, 
     70, 236,  55,  34,  77, 177, 
     55,  35, 117, 216, 131, 158, 
     47,  93, 249, 109,  10,  47, 
    231, 146,  83,  63, 199, 216, 
    163, 207, 234, 206,  84, 164, 
    118, 210,  14, 243, 118, 244, 
     61, 219, 161, 253, 194, 179, 
     20, 207, 164, 205, 125, 101, 
    232,  98,  84, 123,  57, 117, 
    177,  46,  67,  19, 149, 228, 
     99,   5, 170,  85, 248,  99, 
     21, 202,  42, 217, 199,  12, 
    115, 202, 122,  86,  77,  96, 
     78,  82,  13, 115, 146,  14, 
     99,  78,  82,  25, 115, 106, 
    116,  32, 144, 104,  69, 115, 
     37,  18,  51, 145,  70, 191, 
     43, 250, 230, 135, 121, 245, 
     62,  99, 250, 214, 135,   5, 
    182, 201, 190, 150, 126, 184, 
     99,  12, 148, 197,  64, 202, 
     19, 201,  33,  87, 220, 133, 
     63,  40, 149, 197, 144, 226, 
      9, 158, 112, 197,  51,  50, 
     11, 207, 168,  31, 109, 103, 
     62, 118,  86, 193, 216,  55, 
    119, 138, 100, 208,  33, 201, 
     81, 208,   1, 137, 209,  27, 
    241,  20, 116,  16, 137,  54, 
      3, 210, 135,  68,  67,  84, 
     41,  58,  95, 233,  35,  10, 
    133, 182, 248,  56,  43, 194, 
    147, 216, 249,  93, 172,  30, 
     72, 231, 137,  82, 116,  82, 
    200,  88,  17, 236, 159, 163, 
    125, 175, 243, 222, 219, 245, 
     63, 125,  43,  32, 155,  48, 
     67,   7, 141, 128,  25,  43, 
    157, 107, 246, 207,  25,  39, 
     48, 221,  34, 251,  62, 153, 
    255, 132, 229, 120, 252,  98, 
    172, 148,  35,  45, 139, 199, 
     39, 170, 155, 252,  26,   9, 
    123,  61, 238, 191,  27,  43, 
    173,  47,   5, 246, 243, 248, 
     67, 220, 190,  21, 235, 101, 
    144,  50,  93,   8,  58, 207, 
     95, 249, 124, 103, 125, 227, 
    165,  27, 107, 175, 117,  94, 
    184, 181, 177, 222,  89, 184, 
    117, 111, 237, 149, 141, 229, 
     43,  47, 116, 214, 239, 189, 
    210, 121, 241,  43,  47, 223, 
     88, 187, 183, 222,  57, 127, 
    231, 171, 119, 111, 189, 186, 
    118, 163, 179, 124, 253, 206, 
    235,  95, 186, 189, 118, 233, 
    220, 229, 207, 221, 188, 137, 
    129,  47,  93, 122, 241, 252, 
    157, 219, 235,  27,  47, 223, 
    222, 104, 222, 189, 113,  29, 
     49, 123, 248,  75,  60,  19, 
     29,  71, 245,  79,  82, 233, 
    223,  16, 101,  79, 232, 173, 
     26,  48, 231, 245,  28, 233, 
    255,  36,  24, 251,  27, 235, 
    163,  61, 180,   0,  88,  72, 
     83,  72,   8,   0,   0,   0, 
    155,  92, 158, 150,  44, 234, 
    131,  58,  88,  80,  68,  80, 
     81,   0,   0,   0,  68,  58, 
     92,  65,  84,  71,  92, 115, 
    116,  95, 100, 101, 118,  92, 
     75, 105, 116, 115,  92,  68, 
    105, 114, 101,  99, 116,  88, 
     84,  75,  92, 115, 114,  99, 
     92,  83, 104,  97, 100, 101, 
    114, 115,  92,  67, 111, 109, 
    112, 105, 108, 101, 100,  92, 
     88,  98, 111, 120,  79, 110, 
    101,  80,  66,  82,  69, 102, 
    102, 101,  99, 116,  95,  80, 
     83,  67, 111, 110, 115, 116, 
     97, 110, 116,  46, 112, 100, 
     98
};
