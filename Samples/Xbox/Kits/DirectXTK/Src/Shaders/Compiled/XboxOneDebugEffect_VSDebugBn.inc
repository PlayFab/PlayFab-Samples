#if 0
//
// Generated by Microsoft (R) D3D Shader Disassembler for Durango
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xy          0     NONE   float   xy  
// TEXCOORD                 1   xyzw        1     NONE   float   xyzw
// TEXCOORD                 2   xyz         2     NONE   float   xyz 
// COLOR                    0   xyzw        3     NONE   float   xyzw
// SV_Position              0   xyzw        4      POS   float   xyzw
//
vs_5_0
// Opaque Custom Data - XBOX Precompiled Shader Header
// First Precompiled Shader at offset:[183]
// Embedded Data:
//  0x000000b7 - Offset To First Precompiled Shader
//  0x00010050 - Original Shader Descriptor
//  0x000000b2 - Original Shader Size
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[13], immediateIndexed
dcl_input v0.xyzw
dcl_input v1.xyz
dcl_input v2.xy
dcl_output o0.xy
dcl_output o1.xyzw
dcl_output o2.xyz
dcl_output o3.xyzw
dcl_output_siv o4.xyzw, position
dcl_temps 2
mov o0.xy, v2.xyxx
dp4 r0.x, v0.xyzw, cb0[2].xyzw
dp4 r0.y, v0.xyzw, cb0[3].xyzw
dp4 r0.z, v0.xyzw, cb0[4].xyzw
mov r0.w, l(1.000000)
mov o1.xyzw, r0.xyzw
mad r0.xyz, v1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
dp3 r1.x, r0.xyzx, cb0[6].xyzx
dp3 r1.y, r0.xyzx, cb0[7].xyzx
dp3 r1.z, r0.xyzx, cb0[8].xyzx
dp3 r0.x, r1.xyzx, r1.xyzx
rsq r0.x, r0.x
mul o2.xyz, r0.xxxx, r1.xyzx
mov o3.xyz, l(1.000000,1.000000,1.000000,0)
mov o3.w, cb0[0].w
dp4 o4.x, v0.xyzw, cb0[9].xyzw
dp4 o4.y, v0.xyzw, cb0[10].xyzw
dp4 o4.z, v0.xyzw, cb0[11].xyzw
dp4 o4.w, v0.xyzw, cb0[12].xyzw
ret 
// Opaque Custom Data - XBOX Precompiled Shader Object
// Offset:[183], bundle is:[190] DWORDS.
// Disassembled Precompiled Shader Object:
// Shader Type               : (VS)
// Shader Hw Stage           : (VS)
// PDB Filename              : D:\ATG\st_dev\Kits\DirectXTK\src\Shaders\Compiled\XboxOneDebugEffect_VSDebugBn.pdb
// Shader Semantic Hash      : 0x6db9a9c113fa5444
//
// Shader Data:
; ----------------- VS Data ------------------------
; Input Semantic Mappings
;   [0] generic, usageIdx  0, channelMask 15, v[4:7]
;   [1] generic, usageIdx  1, channelMask  7, v[8:10]
;   [2] generic, usageIdx  2, channelMask  3, v[12:13]
; Output Semantic Mappings
;   [0] generic,  usageIdx 0, paramIdx 0, paramSlot 0
;   [1] generic,  usageIdx 1, paramIdx 1, paramSlot 0
;   [2] generic,  usageIdx 2, paramIdx 2, paramSlot 0
;   [3] generic,  usageIdx 3, paramIdx 3, paramSlot 0

codeLenInByte        = 308 bytes;

; launchModeFlags    = 0x0000000E
srdTableSupport      = TRUE
immediateSupportExt  = TRUE
srdTableSupportExt   = TRUE

userElementCount     = 3;
;  userElements[0]      = PTR_VERTEX_BUFFER_TABLE, Element=1 dwords, s[0x2:3]
;  userElements[1]      = PTR_EXTENDED_USER_DATA, ReferencedExtUserElements=1, s[0x2:3]
;  userElements[2]      = SUB_PTR_FETCH_SHADER, s[0x2:3]
extUserElementCount  = 1;
;  extUserElements 1[0] = IMM_CONST_BUFFER 0, offset 0x0:3 dwords
NumVgprs             = 16;
NumSgprs             = 46;
FloatMode            = 192;
IeeeMode             = 0;
FlatPtr32            = 0;
ScratchSize          = 0 dwords/thread;
LDSByteSize          = 0 bytes/workgroup (compile time only);
ScratchWaveOffsetReg = s65535;
; texSamplerUsage         = 0x00000000
; constBufUsage           = 0x00000001

; SPI_SHADER_PGM_RSRC2_VS = 0x00000008
SSPRV:USER_SGPR             = 4
; PA_CL_VS_OUT_CNTL       = 0x00000000
; SPI_VS_OUT_CONFIG       = 0x00000006
SVOC:VS_EXPORT_COUNT        = 3
SVOC:VS_HALF_PACK           = 0
SVOC:VS_EXPORTS_FOG         = 0
SVOC:VS_OUT_FOG_VEC_ADDR    = 0
; SPI_SHADER_POS_FORMAT     = 0x00000004
SSPF:POS0_EXPORT_FORMAT     = 4
SSPF:POS1_EXPORT_FORMAT     = 0
SSPF:POS2_EXPORT_FORMAT     = 0
SSPF:POS3_EXPORT_FORMAT     = 0
VGT_STRMOUT_CONFIG = 0x0
VGT_STRMOUT_CONFIG:RAST_STREAM = 0
VGT_STRMOUT_CONFIG:STREAMOUT_0_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_1_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_2_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_3_EN = 0
; exportVertexSize          = 4

// Shader Instructions:
shader main
  asic(CI)
  type(VS)
  s_swappc_b64  s[2:3], s[2:3]                          // 000000000000: BE822102
  s_load_dwordx4  s[0:3], s[2:3], 0x00                  // 000000000004: C0800300
  s_waitcnt     lgkmcnt(0)                              // 000000000008: BF8C007F
  s_buffer_load_dwordx4  s[4:7], s[0:3], 0x20           // 00000000000C: C2820120
  s_buffer_load_dwordx4  s[8:11], s[0:3], 0x1c          // 000000000010: C284011C
  s_buffer_load_dwordx4  s[12:15], s[0:3], 0x18         // 000000000014: C2860118
  s_buffer_load_dwordx8  s[16:23], s[0:3], 0x08         // 000000000018: C2C80108
  s_buffer_load_dwordx4  s[24:27], s[0:3], 0x10         // 00000000001C: C28C0110
  s_buffer_load_dwordx16  s[28:43], s[0:3], 0x24        // 000000000020: C30E0124
  s_waitcnt     vmcnt(0)                                // 000000000024: BF8C0F70
  v_mad_f32     v0, v10, 2.0, -1.0                      // 000000000028: D2820000 03CDE90A
  v_mad_f32     v1, v9, 2.0, -1.0                       // 000000000030: D2820001 03CDE909
  s_waitcnt     lgkmcnt(0)                              // 000000000038: BF8C007F
  v_mul_legacy_f32  v2, s6, v0                          // 00000000003C: 0E040006
  v_mad_f32     v3, v8, 2.0, -1.0                       // 000000000040: D2820003 03CDE908
  v_mul_legacy_f32  v8, s10, v0                         // 000000000048: 0E10000A
  v_mac_f32     v2, s5, v1                              // 00000000004C: 3E040205
  s_buffer_load_dword  s0, s[0:3], 0x03                 // 000000000050: C2000103
  v_mul_legacy_f32  v0, s14, v0                         // 000000000054: 0E00000E
  v_mac_f32     v8, s9, v1                              // 000000000058: 3E100209
  v_mac_f32     v2, s4, v3                              // 00000000005C: 3E040604
  v_mac_f32     v0, s13, v1                             // 000000000060: 3E00020D
  v_mac_f32     v8, s8, v3                              // 000000000064: 3E100608
  v_mul_legacy_f32  v1, v2, v2                          // 000000000068: 0E020502
  v_mul_legacy_f32  v9, s19, v7                         // 00000000006C: 0E120E13
  v_mul_legacy_f32  v10, s23, v7                        // 000000000070: 0E140E17
  v_mul_legacy_f32  v11, s27, v7                        // 000000000074: 0E160E1B
  v_mac_f32     v0, s12, v3                             // 000000000078: 3E00060C
  v_mac_f32     v1, v8, v8                              // 00000000007C: 3E021108
  v_mul_legacy_f32  v3, s31, v7                         // 000000000080: 0E060E1F
  v_mul_legacy_f32  v14, s35, v7                        // 000000000084: 0E1C0E23
  v_mul_legacy_f32  v15, s39, v7                        // 000000000088: 0E1E0E27
  v_mul_legacy_f32  v7, s43, v7                         // 00000000008C: 0E0E0E2B
  v_mac_f32     v9, s18, v6                             // 000000000090: 3E120C12
  v_mac_f32     v10, s22, v6                            // 000000000094: 3E140C16
  v_mac_f32     v11, s26, v6                            // 000000000098: 3E160C1A
  v_mac_f32     v1, v0, v0                              // 00000000009C: 3E020100
  v_mac_legacy_f32  v3, s30, v6                         // 0000000000A0: 0C060C1E
  v_mac_legacy_f32  v14, s34, v6                        // 0000000000A4: 0C1C0C22
  v_mac_legacy_f32  v15, s38, v6                        // 0000000000A8: 0C1E0C26
  v_mac_legacy_f32  v7, s42, v6                         // 0000000000AC: 0C0E0C2A
  v_mac_f32     v9, s17, v5                             // 0000000000B0: 3E120A11
  v_mac_f32     v10, s21, v5                            // 0000000000B4: 3E140A15
  v_mac_f32     v11, s25, v5                            // 0000000000B8: 3E160A19
  v_rsq_f32     v1, v1                                  // 0000000000BC: 7E025D01
  v_mac_legacy_f32  v3, s29, v5                         // 0000000000C0: 0C060A1D
  v_mac_legacy_f32  v14, s33, v5                        // 0000000000C4: 0C1C0A21
  v_mac_legacy_f32  v15, s37, v5                        // 0000000000C8: 0C1E0A25
  v_mac_legacy_f32  v7, s41, v5                         // 0000000000CC: 0C0E0A29
  v_mac_f32     v9, s16, v4                             // 0000000000D0: 3E120810
  v_mac_f32     v10, s20, v4                            // 0000000000D4: 3E140814
  v_mac_f32     v11, s24, v4                            // 0000000000D8: 3E160818
  v_mul_legacy_f32  v0, v0, v1                          // 0000000000DC: 0E000300
  v_mul_legacy_f32  v5, v8, v1                          // 0000000000E0: 0E0A0308
  v_mul_legacy_f32  v1, v2, v1                          // 0000000000E4: 0E020302
  v_mac_legacy_f32  v3, s28, v4                         // 0000000000E8: 0C06081C
  v_mac_legacy_f32  v14, s32, v4                        // 0000000000EC: 0C1C0820
  v_mac_legacy_f32  v15, s36, v4                        // 0000000000F0: 0C1E0824
  v_mac_legacy_f32  v7, s40, v4                         // 0000000000F4: 0C0E0828
  v_mov_b32     v2, 0                                   // 0000000000F8: 7E040280
  v_mov_b32     v4, 1.0                                 // 0000000000FC: 7E0802F2
  s_waitcnt     lgkmcnt(0)                              // 000000000100: BF8C007F
  v_mov_b32     v6, s0                                  // 000000000104: 7E0C0200
  exp           pos0, v3, v14, v15, v7 done             // 000000000108: F80008CF 070F0E03
  exp           param0, v12, v13, v2, v4                // 000000000110: F800020F 04020D0C
  exp           param1, v9, v10, v11, v4                // 000000000118: F800021F 040B0A09
  exp           param2, v0, v5, v1, v4                  // 000000000120: F800022F 04010500
  exp           param3, v4, v4, v4, v6                  // 000000000128: F800023F 06040404
  s_endpgm                                              // 000000000130: BF810000
end


// Shader Statistics:
//  NumActiveWaveFront:         40
//  WorkgroupSize:              64
//  NumVRegs:                   16
//  NumSRegs:                   46
//  NumActiveWaveFrontByVReg:   40
//  NumActiveWaveFrontBySReg:   40
//  NumActiveWaveFrontByLDS:    40
//  CycleSim:                   82
//  CycleSimNWaves:             82
//  Code Size:                  308
//Assembler Counts:
//  num_32bit_ops                     : 61
//  num_64bit_ops                     : 8
//  num_alu                           : 50
//  num_fc                            : 14
//  num_inst_exp                      : 5
//  num_inst_ldsgds                   : 0
//  num_inst_mimg                     : 0
//  num_inst_mtbuf                    : 0
//  num_inst_mubuf                    : 0
//  num_inst_sopp                     : 5
//  num_inst_sopc                     : 0
//  num_inst_sop1                     : 1
//  num_inst_sop2                     : 0
//  num_inst_smrd                     : 0
//  num_inst_sopk                     : 0
//  num_inst_vop1                     : 4
//  num_inst_vop2                     : 43
//  num_inst_vop3                     : 0
//  num_inst_vopc                     : 0
//  num_inst_vintrp                   : 0
//  constant_literal_operands         : 0
//  num_tex                           : 5
//  num_vmem_group                    : 0
//  vmem_grouping_started             : 0
// Shader Statistics:
// m_uNumActiveWaveFront             : 40
// m_uVRegLimit                      : 256
// m_uSRegLimit                      : 512
// m_uNumVRegs                       : 16
// m_uNumSRegs                       : 46
// m_uSCCodeSize                     : 308
// m_uWorkgroupSize                  : 64
// m_uNumActiveWaveFrontByVReg       : 40
// m_uNumActiveWaveFrontBySReg       : 40
// m_uNumActiveWaveFrontByLDS        : 40
// m_uCycleSim1Wave                  : 82
// m_uCycleSimNWaves                 : 82

// Assembler Counts:
// num_32bit_ops                     : 61
// num_64bit_ops                     : 8
// num_alu                           : 50
// num_fc                            : 14
// num_inst_exp                      : 5
// num_inst_ldsgds                   : 0
// num_inst_mimg                     : 0
// num_inst_mtbuf                    : 0
// num_inst_mubuf                    : 0
// num_inst_sopp                     : 5
// num_inst_sopc                     : 0
// num_inst_sop1                     : 1
// num_inst_sop2                     : 0
// num_inst_smrd                     : 0
// num_inst_sopk                     : 0
// num_inst_vop1                     : 4
// num_inst_vop2                     : 43
// num_inst_vop3                     : 0
// num_inst_vopc                     : 0
// num_inst_vintrp                   : 0
// num_inst_smem                     : 8
// constant_literal_operands         : 0
// num_tex                           : 5
// num_vmem_group                    : 0
// vmem_grouping_started             : 0
// m_fFullPrecompilePromise          : 0
// m_fIntegerDivideExpansion         : 0
// m_fIntegerModExpansion            : 0
// m_fDoubleDivideExpansion          : 0
// m_fUsesScratch                    : 0
// m_fPerThreadIndirection           : 0
// m_fUsingTableLoads                : 0
// m_fUsingSHmemLoads                : 1
// fSemanticHashFlagOverrideApplied  : 0
// fPSHasNoUAVWrite                  : 0
// m_fRenderTargetsCanBeCompacted    : 0
// version                           : 3
// fCodePatched                      : 0

// Opaque Custom Data - XBOX Precompiled Shader Object
// Offset:[375], bundle is:[205] DWORDS.
// Disassembled Precompiled Shader Object:
// Shader Type               : (VS)
// Shader Hw Stage           : (ES)
// PDB Filename              : D:\ATG\st_dev\Kits\DirectXTK\src\Shaders\Compiled\XboxOneDebugEffect_VSDebugBn.pdb
// Shader Semantic Hash      : 0x6db9a9c113fa5444
//
// Shader Data:
; ----------------- VS Data ------------------------
; Input Semantic Mappings
;   [0] generic, usageIdx  0, channelMask 15, v[4:7]
;   [1] generic, usageIdx  1, channelMask  7, v[8:10]
;   [2] generic, usageIdx  2, channelMask  3, v[12:13]
; Output Semantic Mappings
;   [0] position,  usageIdx 4, paramIdx 4, paramSlot 0
;   [1] generic,  usageIdx 0, paramIdx 0, paramSlot 0
;   [2] generic,  usageIdx 1, paramIdx 1, paramSlot 0
;   [3] generic,  usageIdx 2, paramIdx 2, paramSlot 0
;   [4] generic,  usageIdx 3, paramIdx 3, paramSlot 0

codeLenInByte        = 404 bytes;

; launchModeFlags    = 0x0000000E
srdTableSupport      = TRUE
immediateSupportExt  = TRUE
srdTableSupportExt   = TRUE

userElementCount     = 4;
;  userElements[0]      = PTR_VERTEX_BUFFER_TABLE, Element=1 dwords, s[0x2:3]
;  userElements[1]      = PTR_EXTENDED_USER_DATA, ReferencedExtUserElements=1, s[0x2:3]
;  userElements[2]      = PTR_INTERNAL_GLOBAL_TABLE, Element=1 dwords, s[0x2:3]
;  userElements[3]      = SUB_PTR_FETCH_SHADER, s[0x2:3]
extUserElementCount  = 1;
;  extUserElements 1[0] = IMM_CONST_BUFFER 0, offset 0x0:3 dwords
NumVgprs             = 16;
NumSgprs             = 54;
FloatMode            = 192;
IeeeMode             = 0;
FlatPtr32            = 0;
ScratchSize          = 0 dwords/thread;
LDSByteSize          = 0 bytes/workgroup (compile time only);
ScratchWaveOffsetReg = s65535;
; texSamplerUsage         = 0x00000000
; constBufUsage           = 0x00000001

; SPI_SHADER_PGM_RSRC2_VS = 0x00000008
SSPRV:USER_SGPR             = 4
; PA_CL_VS_OUT_CNTL       = 0x00000000
; SPI_VS_OUT_CONFIG       = 0x00000000
SVOC:VS_EXPORT_COUNT        = 0
SVOC:VS_HALF_PACK           = 0
SVOC:VS_EXPORTS_FOG         = 0
SVOC:VS_OUT_FOG_VEC_ADDR    = 0
; SPI_SHADER_POS_FORMAT     = 0x00000004
SSPF:POS0_EXPORT_FORMAT     = 4
SSPF:POS1_EXPORT_FORMAT     = 0
SSPF:POS2_EXPORT_FORMAT     = 0
SSPF:POS3_EXPORT_FORMAT     = 0
VGT_STRMOUT_CONFIG = 0x0
VGT_STRMOUT_CONFIG:RAST_STREAM = 0
VGT_STRMOUT_CONFIG:STREAMOUT_0_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_1_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_2_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_3_EN = 0
; exportVertexSize          = 20
; esGsRingItemSize          = 20

// Shader Instructions:
shader main
  asic(CI)
  type(VS)
  s_swappc_b64  s[2:3], s[2:3]                          // 000000000000: BE822102
  s_load_dwordx4  s[8:11], s[2:3], 0x00                 // 000000000004: C0840300
  s_waitcnt     lgkmcnt(0)                              // 000000000008: BF8C007F
  s_buffer_load_dwordx16  s[12:27], s[8:11], 0x24       // 00000000000C: C3060924
  s_waitcnt     vmcnt(0) & lgkmcnt(0)                   // 000000000010: BF8C0070
  v_mul_legacy_f32  v0, s15, v7                         // 000000000014: 0E000E0F
  s_buffer_load_dwordx8  s[28:35], s[8:11], 0x08        // 000000000018: C2CE0908
  s_buffer_load_dwordx4  s[36:39], s[8:11], 0x20        // 00000000001C: C2920920
  s_load_dwordx4  s[0:3], s[2:3], 0x0c                  // 000000000020: C080030C
  v_mac_legacy_f32  v0, s14, v6                         // 000000000024: 0C000C0E
  v_mul_legacy_f32  v1, s19, v7                         // 000000000028: 0E020E13
  s_buffer_load_dwordx4  s[40:43], s[8:11], 0x1c        // 00000000002C: C294091C
  v_mac_legacy_f32  v0, s13, v5                         // 000000000030: 0C000A0D
  v_mac_legacy_f32  v1, s18, v6                         // 000000000034: 0C020C12
  v_mul_legacy_f32  v2, s23, v7                         // 000000000038: 0E040E17
  s_buffer_load_dwordx4  s[44:47], s[8:11], 0x10        // 00000000003C: C2960910
  s_buffer_load_dwordx4  s[48:51], s[8:11], 0x18        // 000000000040: C2980918
  v_mac_legacy_f32  v0, s12, v4                         // 000000000044: 0C00080C
  v_mac_legacy_f32  v1, s17, v5                         // 000000000048: 0C020A11
  v_mac_legacy_f32  v2, s22, v6                         // 00000000004C: 0C040C16
  v_mul_legacy_f32  v3, s27, v7                         // 000000000050: 0E060E1B
  v_mac_legacy_f32  v1, s16, v4                         // 000000000054: 0C020810
  v_mac_legacy_f32  v2, s21, v5                         // 000000000058: 0C040A15
  v_mac_legacy_f32  v3, s26, v6                         // 00000000005C: 0C060C1A
  v_mad_legacy_f32  v10, v10, 2.0, -1.0                 // 000000000060: D280000A 03CDE90A
  v_mac_legacy_f32  v2, s20, v4                         // 000000000068: 0C040814
  v_mac_legacy_f32  v3, s25, v5                         // 00000000006C: 0C060A19
  s_waitcnt     lgkmcnt(0)                              // 000000000070: BF8C007F
  v_mul_legacy_f32  v11, s31, v7                        // 000000000074: 0E160E1F
  v_mad_legacy_f32  v9, v9, 2.0, -1.0                   // 000000000078: D2800009 03CDE909
  v_mul_legacy_f32  v14, s38, v10                       // 000000000080: 0E1C1426
  v_mac_legacy_f32  v3, s24, v4                         // 000000000084: 0C060818
  buffer_store_dword  v0, v0, s[0:3], s4 offset:64 glc slc // 000000000088: E0704040 04400000
  v_mac_legacy_f32  v11, s30, v6                        // 000000000090: 0C160C1E
  v_mul_legacy_f32  v0, s35, v7                         // 000000000094: 0E000E23
  v_mad_legacy_f32  v8, v8, 2.0, -1.0                   // 000000000098: D2800008 03CDE908
  v_mul_legacy_f32  v15, s42, v10                       // 0000000000A0: 0E1E142A
  v_mac_legacy_f32  v14, s37, v9                        // 0000000000A4: 0C1C1225
  buffer_store_dword  v1, v0, s[0:3], s4 offset:68 glc slc // 0000000000A8: E0704044 04400100
  v_mac_legacy_f32  v11, s29, v5                        // 0000000000B0: 0C160A1D
  v_mac_legacy_f32  v0, s34, v6                         // 0000000000B4: 0C000C22
  v_mul_legacy_f32  v1, s47, v7                         // 0000000000B8: 0E020E2F
  v_mul_legacy_f32  v7, s50, v10                        // 0000000000BC: 0E0E1432
  v_mac_legacy_f32  v15, s41, v9                        // 0000000000C0: 0C1E1229
  v_mac_legacy_f32  v14, s36, v8                        // 0000000000C4: 0C1C1024
  buffer_store_dword  v2, v0, s[0:3], s4 offset:72 glc slc // 0000000000C8: E0704048 04400200
  v_mac_legacy_f32  v11, s28, v4                        // 0000000000D0: 0C16081C
  v_mac_legacy_f32  v0, s33, v5                         // 0000000000D4: 0C000A21
  v_mac_legacy_f32  v1, s46, v6                         // 0000000000D8: 0C020C2E
  v_mac_legacy_f32  v7, s49, v9                         // 0000000000DC: 0C0E1231
  v_mac_legacy_f32  v15, s40, v8                        // 0000000000E0: 0C1E1028
  v_mul_legacy_f32  v2, v14, v14                        // 0000000000E4: 0E041D0E
  buffer_store_dword  v3, v0, s[0:3], s4 offset:76 glc slc // 0000000000E8: E070404C 04400300
  v_mac_legacy_f32  v0, s32, v4                         // 0000000000F0: 0C000820
  v_mac_legacy_f32  v1, s45, v5                         // 0000000000F4: 0C020A2D
  v_mac_legacy_f32  v7, s48, v8                         // 0000000000F8: 0C0E1030
  v_mac_legacy_f32  v2, v15, v15                        // 0000000000FC: 0C041F0F
  buffer_store_dword  v12, v0, s[0:3], s4 glc slc       // 000000000100: E0704000 04400C00
  v_mac_legacy_f32  v1, s44, v4                         // 000000000108: 0C02082C
  v_mac_legacy_f32  v2, v7, v7                          // 00000000010C: 0C040F07
  buffer_store_dword  v13, v0, s[0:3], s4 offset:4 glc slc // 000000000110: E0704004 04400D00
  v_rsq_f32     v2, v2                                  // 000000000118: 7E045D02
  buffer_store_dword  v11, v0, s[0:3], s4 offset:16 glc slc // 00000000011C: E0704010 04400B00
  v_mov_b32     v3, 1.0                                 // 000000000124: 7E0602F2
  v_mul_legacy_f32  v4, v7, v2                          // 000000000128: 0E080507
  buffer_store_dword  v0, v0, s[0:3], s4 offset:20 glc slc // 00000000012C: E0704014 04400000
  s_buffer_load_dword  s5, s[8:11], 0x03                // 000000000134: C2028903
  v_mul_legacy_f32  v0, v15, v2                         // 000000000138: 0E00050F
  buffer_store_dword  v1, v0, s[0:3], s4 offset:24 glc slc // 00000000013C: E0704018 04400100
  v_mul_legacy_f32  v1, v14, v2                         // 000000000144: 0E02050E
  buffer_store_dword  v3, v0, s[0:3], s4 offset:28 glc slc // 000000000148: E070401C 04400300
  buffer_store_dword  v4, v0, s[0:3], s4 offset:32 glc slc // 000000000150: E0704020 04400400
  buffer_store_dword  v0, v0, s[0:3], s4 offset:36 glc slc // 000000000158: E0704024 04400000
  buffer_store_dword  v1, v0, s[0:3], s4 offset:40 glc slc // 000000000160: E0704028 04400100
  buffer_store_dword  v3, v0, s[0:3], s4 offset:48 glc slc // 000000000168: E0704030 04400300
  s_waitcnt     lgkmcnt(0)                              // 000000000170: BF8C007F
  v_mov_b32     v0, s5                                  // 000000000174: 7E000205
  buffer_store_dword  v3, v0, s[0:3], s4 offset:52 glc slc // 000000000178: E0704034 04400300
  buffer_store_dword  v3, v0, s[0:3], s4 offset:56 glc slc // 000000000180: E0704038 04400300
  buffer_store_dword  v0, v0, s[0:3], s4 offset:60 glc slc // 000000000188: E070403C 04400000
  s_endpgm                                              // 000000000190: BF810000
end


// Shader Statistics:
//  NumActiveWaveFront:         36
//  WorkgroupSize:              64
//  NumVRegs:                   16
//  NumSRegs:                   54
//  NumActiveWaveFrontByVReg:   40
//  NumActiveWaveFrontBySReg:   36
//  NumActiveWaveFrontByLDS:    40
//  CycleSim:                   85
//  CycleSimNWaves:             85
//  Code Size:                  404
//Assembler Counts:
//  num_32bit_ops                     : 61
//  num_64bit_ops                     : 20
//  num_alu                           : 49
//  num_fc                            : 15
//  num_inst_exp                      : 0
//  num_inst_ldsgds                   : 0
//  num_inst_mimg                     : 0
//  num_inst_mtbuf                    : 0
//  num_inst_mubuf                    : 17
//  num_inst_sopp                     : 5
//  num_inst_sopc                     : 0
//  num_inst_sop1                     : 1
//  num_inst_sop2                     : 0
//  num_inst_smrd                     : 0
//  num_inst_sopk                     : 0
//  num_inst_vop1                     : 3
//  num_inst_vop2                     : 43
//  num_inst_vop3                     : 0
//  num_inst_vopc                     : 0
//  num_inst_vintrp                   : 0
//  constant_literal_operands         : 0
//  num_tex                           : 17
//  num_vmem_group                    : 11
//  vmem_grouping_started             : 0
// Shader Statistics:
// m_uNumActiveWaveFront             : 36
// m_uVRegLimit                      : 256
// m_uSRegLimit                      : 512
// m_uNumVRegs                       : 16
// m_uNumSRegs                       : 54
// m_uSCCodeSize                     : 404
// m_uWorkgroupSize                  : 64
// m_uNumActiveWaveFrontByVReg       : 40
// m_uNumActiveWaveFrontBySReg       : 36
// m_uNumActiveWaveFrontByLDS        : 40
// m_uCycleSim1Wave                  : 85
// m_uCycleSimNWaves                 : 85

// Assembler Counts:
// num_32bit_ops                     : 61
// num_64bit_ops                     : 20
// num_alu                           : 49
// num_fc                            : 15
// num_inst_exp                      : 0
// num_inst_ldsgds                   : 0
// num_inst_mimg                     : 0
// num_inst_mtbuf                    : 0
// num_inst_mubuf                    : 17
// num_inst_sopp                     : 5
// num_inst_sopc                     : 0
// num_inst_sop1                     : 1
// num_inst_sop2                     : 0
// num_inst_smrd                     : 0
// num_inst_sopk                     : 0
// num_inst_vop1                     : 3
// num_inst_vop2                     : 43
// num_inst_vop3                     : 0
// num_inst_vopc                     : 0
// num_inst_vintrp                   : 0
// num_inst_smem                     : 9
// constant_literal_operands         : 0
// num_tex                           : 17
// num_vmem_group                    : 11
// vmem_grouping_started             : 0
// m_fFullPrecompilePromise          : 0
// m_fIntegerDivideExpansion         : 0
// m_fIntegerModExpansion            : 0
// m_fDoubleDivideExpansion          : 0
// m_fUsesScratch                    : 0
// m_fPerThreadIndirection           : 0
// m_fUsingTableLoads                : 0
// m_fUsingSHmemLoads                : 1
// fSemanticHashFlagOverrideApplied  : 0
// fPSHasNoUAVWrite                  : 0
// m_fRenderTargetsCanBeCompacted    : 0
// version                           : 3
// fCodePatched                      : 0

// Opaque Custom Data - XBOX Precompiled Shader Object
// Offset:[582], bundle is:[201] DWORDS.
// Disassembled Precompiled Shader Object:
// Shader Type               : (VS)
// Shader Hw Stage           : (LS)
// PDB Filename              : D:\ATG\st_dev\Kits\DirectXTK\src\Shaders\Compiled\XboxOneDebugEffect_VSDebugBn.pdb
// Shader Semantic Hash      : 0x6db9a9c113fa5444
//
// Shader Data:
; ----------------- VS Data ------------------------
; Input Semantic Mappings
;   [0] generic, usageIdx  0, channelMask 15, v[4:7]
;   [1] generic, usageIdx  1, channelMask  7, v[8:10]
;   [2] generic, usageIdx  2, channelMask  3, v[12:13]
; Output Semantic Mappings
;   [0] position,  usageIdx 4, paramIdx 4, paramSlot 0
;   [1] generic,  usageIdx 0, paramIdx 0, paramSlot 0
;   [2] generic,  usageIdx 1, paramIdx 1, paramSlot 0
;   [3] generic,  usageIdx 2, paramIdx 2, paramSlot 0
;   [4] generic,  usageIdx 3, paramIdx 3, paramSlot 0

codeLenInByte        = 356 bytes;

; launchModeFlags    = 0x0000000E
srdTableSupport      = TRUE
immediateSupportExt  = TRUE
srdTableSupportExt   = TRUE

userElementCount     = 3;
;  userElements[0]      = PTR_VERTEX_BUFFER_TABLE, Element=1 dwords, s[0x2:3]
;  userElements[1]      = PTR_EXTENDED_USER_DATA, ReferencedExtUserElements=1, s[0x2:3]
;  userElements[2]      = SUB_PTR_FETCH_SHADER, s[0x2:3]
extUserElementCount  = 1;
;  extUserElements 1[0] = IMM_CONST_BUFFER 0, offset 0x0:3 dwords
NumVgprs             = 18;
NumSgprs             = 46;
FloatMode            = 192;
IeeeMode             = 0;
FlatPtr32            = 0;
ScratchSize          = 0 dwords/thread;
LDSByteSize          = 0 bytes/workgroup (compile time only);
ScratchWaveOffsetReg = s65535;
; texSamplerUsage         = 0x00000000
; constBufUsage           = 0x00000001

; SPI_SHADER_PGM_RSRC2_VS = 0x00000008
SSPRV:USER_SGPR             = 4
; PA_CL_VS_OUT_CNTL       = 0x00000000
; SPI_VS_OUT_CONFIG       = 0x00000000
SVOC:VS_EXPORT_COUNT        = 0
SVOC:VS_HALF_PACK           = 0
SVOC:VS_EXPORTS_FOG         = 0
SVOC:VS_OUT_FOG_VEC_ADDR    = 0
; SPI_SHADER_POS_FORMAT     = 0x00000004
SSPF:POS0_EXPORT_FORMAT     = 4
SSPF:POS1_EXPORT_FORMAT     = 0
SSPF:POS2_EXPORT_FORMAT     = 0
SSPF:POS3_EXPORT_FORMAT     = 0
VGT_STRMOUT_CONFIG = 0x0
VGT_STRMOUT_CONFIG:RAST_STREAM = 0
VGT_STRMOUT_CONFIG:STREAMOUT_0_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_1_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_2_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_3_EN = 0
; vgprCompCnt               = 1
; exportVertexSize          = 20
; lsStride                  = 80

// Shader Instructions:
shader main
  asic(CI)
  type(VS)
  s_swappc_b64  s[2:3], s[2:3]                          // 000000000000: BE822102
  s_load_dwordx4  s[0:3], s[2:3], 0x00                  // 000000000004: C0800300
  s_waitcnt     lgkmcnt(0)                              // 000000000008: BF8C007F
  s_buffer_load_dwordx16  s[4:19], s[0:3], 0x24         // 00000000000C: C3020124
  s_buffer_load_dwordx4  s[20:23], s[0:3], 0x20         // 000000000010: C28A0120
  s_buffer_load_dwordx4  s[24:27], s[0:3], 0x1c         // 000000000014: C28C011C
  s_buffer_load_dwordx8  s[28:35], s[0:3], 0x08         // 000000000018: C2CE0108
  s_buffer_load_dwordx4  s[36:39], s[0:3], 0x18         // 00000000001C: C2920118
  s_buffer_load_dwordx4  s[40:43], s[0:3], 0x10         // 000000000020: C2940110
  s_waitcnt     vmcnt(0)                                // 000000000024: BF8C0F70
  v_mad_legacy_f32  v0, v10, 2.0, -1.0                  // 000000000028: D2800000 03CDE90A
  s_waitcnt     lgkmcnt(0)                              // 000000000030: BF8C007F
  v_mul_legacy_f32  v2, s7, v7                          // 000000000034: 0E040E07
  v_mul_legacy_f32  v3, s11, v7                         // 000000000038: 0E060E0B
  v_mad_legacy_f32  v9, v9, 2.0, -1.0                   // 00000000003C: D2800009 03CDE909
  v_mul_legacy_f32  v10, s22, v0                        // 000000000044: 0E140016
  v_mac_legacy_f32  v2, s6, v6                          // 000000000048: 0C040C06
  v_mac_legacy_f32  v3, s10, v6                         // 00000000004C: 0C060C0A
  v_mul_legacy_f32  v11, s15, v7                        // 000000000050: 0E160E0F
  v_mul_legacy_f32  v14, s19, v7                        // 000000000054: 0E1C0E13
  v_mad_legacy_f32  v8, v8, 2.0, -1.0                   // 000000000058: D2800008 03CDE908
  v_mul_legacy_f32  v15, s26, v0                        // 000000000060: 0E1E001A
  v_mac_legacy_f32  v10, s21, v9                        // 000000000064: 0C141215
  v_mac_legacy_f32  v2, s5, v5                          // 000000000068: 0C040A05
  v_mac_legacy_f32  v3, s9, v5                          // 00000000006C: 0C060A09
  v_mac_legacy_f32  v11, s14, v6                        // 000000000070: 0C160C0E
  v_mac_legacy_f32  v14, s18, v6                        // 000000000074: 0C1C0C12
  s_movk_i32    s5, 0x0050                              // 000000000078: B0050050
  s_mov_b32     m0, 0x00010000                          // 00000000007C: BEFC03FF 00010000
  v_mul_legacy_f32  v16, s31, v7                        // 000000000084: 0E200E1F
  v_mul_legacy_f32  v17, s35, v7                        // 000000000088: 0E220E23
  v_mul_legacy_f32  v0, s38, v0                         // 00000000008C: 0E000026
  v_mac_legacy_f32  v15, s25, v9                        // 000000000090: 0C1E1219
  v_mac_legacy_f32  v10, s20, v8                        // 000000000094: 0C141014
  v_mac_legacy_f32  v2, s4, v4                          // 000000000098: 0C040804
  v_mac_legacy_f32  v3, s8, v4                          // 00000000009C: 0C060808
  v_mac_legacy_f32  v11, s13, v5                        // 0000000000A0: 0C160A0D
  v_mac_legacy_f32  v14, s17, v5                        // 0000000000A4: 0C1C0A11
  v_mul_lo_i32  v1, v1, s5                              // 0000000000A8: D2D60001 00000B01
  v_mac_legacy_f32  v16, s30, v6                        // 0000000000B0: 0C200C1E
  v_mac_legacy_f32  v17, s34, v6                        // 0000000000B4: 0C220C22
  v_mul_legacy_f32  v7, s43, v7                         // 0000000000B8: 0E0E0E2B
  v_mac_legacy_f32  v0, s37, v9                         // 0000000000BC: 0C001225
  v_mac_legacy_f32  v15, s24, v8                        // 0000000000C0: 0C1E1018
  v_mul_legacy_f32  v9, v10, v10                        // 0000000000C4: 0E12150A
  v_mac_legacy_f32  v11, s12, v4                        // 0000000000C8: 0C16080C
  v_mac_legacy_f32  v14, s16, v4                        // 0000000000CC: 0C1C0810
  ds_write2_b32  v1, v2, v3 offset0:16 offset1:17       // 0000000000D0: D8381110 00030201
  v_mac_legacy_f32  v16, s29, v5                        // 0000000000D8: 0C200A1D
  v_mac_legacy_f32  v17, s33, v5                        // 0000000000DC: 0C220A21
  v_mac_legacy_f32  v7, s42, v6                         // 0000000000E0: 0C0E0C2A
  v_mac_legacy_f32  v0, s36, v8                         // 0000000000E4: 0C001024
  v_mac_legacy_f32  v9, v15, v15                        // 0000000000E8: 0C121F0F
  ds_write2_b32  v1, v11, v14 offset0:18 offset1:19     // 0000000000EC: D8381312 000E0B01
  s_buffer_load_dword  s0, s[0:3], 0x03                 // 0000000000F4: C2000103
  v_mac_legacy_f32  v16, s28, v4                        // 0000000000F8: 0C20081C
  v_mac_legacy_f32  v17, s32, v4                        // 0000000000FC: 0C220820
  v_mac_legacy_f32  v7, s41, v5                         // 000000000100: 0C0E0A29
  v_mac_legacy_f32  v9, v0, v0                          // 000000000104: 0C120100
  ds_write2_b32  v1, v12, v13 offset1:1                 // 000000000108: D8380100 000D0C01
  v_mac_legacy_f32  v7, s40, v4                         // 000000000110: 0C0E0828
  v_rsq_f32     v2, v9                                  // 000000000114: 7E045D09
  ds_write2_b32  v1, v16, v17 offset0:4 offset1:5       // 000000000118: D8380504 00111001
  v_mov_b32     v3, 1.0                                 // 000000000120: 7E0602F2
  v_mul_legacy_f32  v0, v0, v2                          // 000000000124: 0E000500
  v_mul_legacy_f32  v4, v15, v2                         // 000000000128: 0E08050F
  ds_write2_b32  v1, v7, v3 offset0:6 offset1:7         // 00000000012C: D8380706 00030701
  v_mul_legacy_f32  v2, v10, v2                         // 000000000134: 0E04050A
  ds_write2_b32  v1, v0, v4 offset0:8 offset1:9         // 000000000138: D8380908 00040001
  ds_write_b32  v1, v2 offset:40                        // 000000000140: D8340028 00000201
  ds_write2_b32  v1, v3, v3 offset0:12 offset1:13       // 000000000148: D8380D0C 00030301
  s_waitcnt     lgkmcnt(0)                              // 000000000150: BF8C007F
  v_mov_b32     v0, s0                                  // 000000000154: 7E000200
  ds_write2_b32  v1, v3, v0 offset0:14 offset1:15       // 000000000158: D8380F0E 00000301
  s_endpgm                                              // 000000000160: BF810000
end


// Shader Statistics:
//  NumActiveWaveFront:         40
//  WorkgroupSize:              64
//  NumVRegs:                   18
//  NumSRegs:                   46
//  NumActiveWaveFrontByVReg:   40
//  NumActiveWaveFrontBySReg:   40
//  NumActiveWaveFrontByLDS:    40
//  CycleSim:                   95
//  CycleSimNWaves:             95
//  Code Size:                  356
//Assembler Counts:
//  num_32bit_ops                     : 62
//  num_64bit_ops                     : 13
//  num_alu                           : 50
//  num_fc                            : 16
//  num_inst_exp                      : 0
//  num_inst_ldsgds                   : 9
//  num_inst_mimg                     : 0
//  num_inst_mtbuf                    : 0
//  num_inst_mubuf                    : 0
//  num_inst_sopp                     : 5
//  num_inst_sopc                     : 0
//  num_inst_sop1                     : 2
//  num_inst_sop2                     : 0
//  num_inst_smrd                     : 0
//  num_inst_sopk                     : 1
//  num_inst_vop1                     : 3
//  num_inst_vop2                     : 43
//  num_inst_vop3                     : 0
//  num_inst_vopc                     : 0
//  num_inst_vintrp                   : 0
//  constant_literal_operands         : 0
//  num_tex                           : 9
//  num_vmem_group                    : 0
//  vmem_grouping_started             : 0
// Shader Statistics:
// m_uNumActiveWaveFront             : 40
// m_uVRegLimit                      : 256
// m_uSRegLimit                      : 512
// m_uNumVRegs                       : 18
// m_uNumSRegs                       : 46
// m_uSCCodeSize                     : 356
// m_uWorkgroupSize                  : 64
// m_uNumActiveWaveFrontByVReg       : 40
// m_uNumActiveWaveFrontBySReg       : 40
// m_uNumActiveWaveFrontByLDS        : 40
// m_uCycleSim1Wave                  : 95
// m_uCycleSimNWaves                 : 95

// Assembler Counts:
// num_32bit_ops                     : 62
// num_64bit_ops                     : 13
// num_alu                           : 50
// num_fc                            : 16
// num_inst_exp                      : 0
// num_inst_ldsgds                   : 9
// num_inst_mimg                     : 0
// num_inst_mtbuf                    : 0
// num_inst_mubuf                    : 0
// num_inst_sopp                     : 5
// num_inst_sopc                     : 0
// num_inst_sop1                     : 2
// num_inst_sop2                     : 0
// num_inst_smrd                     : 0
// num_inst_sopk                     : 1
// num_inst_vop1                     : 3
// num_inst_vop2                     : 43
// num_inst_vop3                     : 0
// num_inst_vopc                     : 0
// num_inst_vintrp                   : 0
// num_inst_smem                     : 8
// constant_literal_operands         : 0
// num_tex                           : 9
// num_vmem_group                    : 0
// vmem_grouping_started             : 0
// m_fFullPrecompilePromise          : 0
// m_fIntegerDivideExpansion         : 0
// m_fIntegerModExpansion            : 0
// m_fDoubleDivideExpansion          : 0
// m_fUsesScratch                    : 0
// m_fPerThreadIndirection           : 0
// m_fUsingTableLoads                : 0
// m_fUsingSHmemLoads                : 1
// fSemanticHashFlagOverrideApplied  : 0
// fPSHasNoUAVWrite                  : 0
// m_fRenderTargetsCanBeCompacted    : 0
// version                           : 3
// fCodePatched                      : 0

// Approximately 0 instruction slots used
#endif

const BYTE DebugEffect_VSDebugBn[] =
{
     68,  88,  66,  67, 109, 214, 
    167,  82, 118, 202, 103, 101, 
    135, 222, 111, 177, 238,   4, 
     47, 108,   1,   0,   0,   0, 
      2,  14,   0,   0,   5,   0, 
      0,   0,  52,   0,   0,   0, 
    168,   0,   0,   0,  76,   1, 
      0,   0, 152,  13,   0,   0, 
    168,  13,   0,   0,  73,  83, 
     71,  78, 108,   0,   0,   0, 
      3,   0,   0,   0,   8,   0, 
      0,   0,  80,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      0,   0,   0,   0,  15,  15, 
      0,   0,  92,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   0,   0,   7,   7, 
      0,   0,  99,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      2,   0,   0,   0,   3,   3, 
      0,   0,  83,  86,  95,  80, 
    111, 115, 105, 116, 105, 111, 
    110,   0,  78,  79,  82,  77, 
     65,  76,   0,  84,  69,  88, 
     67,  79,  79,  82,  68,   0, 
     79,  83,  71,  78, 156,   0, 
      0,   0,   5,   0,   0,   0, 
      8,   0,   0,   0, 128,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   3,   0, 
      0,   0,   0,   0,   0,   0, 
      3,  12,   0,   0, 128,   0, 
      0,   0,   1,   0,   0,   0, 
      0,   0,   0,   0,   3,   0, 
      0,   0,   1,   0,   0,   0, 
     15,   0,   0,   0, 128,   0, 
      0,   0,   2,   0,   0,   0, 
      0,   0,   0,   0,   3,   0, 
      0,   0,   2,   0,   0,   0, 
      7,   8,   0,   0, 137,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   3,   0, 
      0,   0,   3,   0,   0,   0, 
     15,   0,   0,   0, 143,   0, 
      0,   0,   0,   0,   0,   0, 
      1,   0,   0,   0,   3,   0, 
      0,   0,   4,   0,   0,   0, 
     15,   0,   0,   0,  84,  69, 
     88,  67,  79,  79,  82,  68, 
      0,  67,  79,  76,  79,  82, 
      0,  83,  86,  95,  80, 111, 
    115, 105, 116, 105, 111, 110, 
      0, 171,  83,  72,  69,  88, 
     68,  12,   0,   0,  80,   0, 
      1,   0,  17,   3,   0,   0, 
     53,  16,   0,   0,   5,   0, 
      0,   0, 183,   0,   0,   0, 
     80,   0,   1,   0, 178,   0, 
      0,   0, 106,   8,   0,   1, 
     89,   0,   0,   4,  70, 142, 
     32,   0,   0,   0,   0,   0, 
     13,   0,   0,   0,  95,   0, 
      0,   3, 242,  16,  16,   0, 
      0,   0,   0,   0,  95,   0, 
      0,   3, 114,  16,  16,   0, 
      1,   0,   0,   0,  95,   0, 
      0,   3,  50,  16,  16,   0, 
      2,   0,   0,   0, 101,   0, 
      0,   3,  50,  32,  16,   0, 
      0,   0,   0,   0, 101,   0, 
      0,   3, 242,  32,  16,   0, 
      1,   0,   0,   0, 101,   0, 
      0,   3, 114,  32,  16,   0, 
      2,   0,   0,   0, 101,   0, 
      0,   3, 242,  32,  16,   0, 
      3,   0,   0,   0, 103,   0, 
      0,   4, 242,  32,  16,   0, 
      4,   0,   0,   0,   1,   0, 
      0,   0, 104,   0,   0,   2, 
      2,   0,   0,   0,  54,   0, 
      0,   5,  50,  32,  16,   0, 
      0,   0,   0,   0,  70,  16, 
     16,   0,   2,   0,   0,   0, 
     17,   0,   0,   8,  18,   0, 
     16,   0,   0,   0,   0,   0, 
     70,  30,  16,   0,   0,   0, 
      0,   0,  70, 142,  32,   0, 
      0,   0,   0,   0,   2,   0, 
      0,   0,  17,   0,   0,   8, 
     34,   0,  16,   0,   0,   0, 
      0,   0,  70,  30,  16,   0, 
      0,   0,   0,   0,  70, 142, 
     32,   0,   0,   0,   0,   0, 
      3,   0,   0,   0,  17,   0, 
      0,   8,  66,   0,  16,   0, 
      0,   0,   0,   0,  70,  30, 
     16,   0,   0,   0,   0,   0, 
     70, 142,  32,   0,   0,   0, 
      0,   0,   4,   0,   0,   0, 
     54,   0,   0,   5, 130,   0, 
     16,   0,   0,   0,   0,   0, 
      1,  64,   0,   0,   0,   0, 
    128,  63,  54,   0,   0,   5, 
    242,  32,  16,   0,   1,   0, 
      0,   0,  70,  14,  16,   0, 
      0,   0,   0,   0,  50,   0, 
      0,  15, 114,   0,  16,   0, 
      0,   0,   0,   0,  70,  18, 
     16,   0,   1,   0,   0,   0, 
      2,  64,   0,   0,   0,   0, 
      0,  64,   0,   0,   0,  64, 
      0,   0,   0,  64,   0,   0, 
      0,   0,   2,  64,   0,   0, 
      0,   0, 128, 191,   0,   0, 
    128, 191,   0,   0, 128, 191, 
      0,   0,   0,   0,  16,   0, 
      0,   8,  18,   0,  16,   0, 
      1,   0,   0,   0,  70,   2, 
     16,   0,   0,   0,   0,   0, 
     70, 130,  32,   0,   0,   0, 
      0,   0,   6,   0,   0,   0, 
     16,   0,   0,   8,  34,   0, 
     16,   0,   1,   0,   0,   0, 
     70,   2,  16,   0,   0,   0, 
      0,   0,  70, 130,  32,   0, 
      0,   0,   0,   0,   7,   0, 
      0,   0,  16,   0,   0,   8, 
     66,   0,  16,   0,   1,   0, 
      0,   0,  70,   2,  16,   0, 
      0,   0,   0,   0,  70, 130, 
     32,   0,   0,   0,   0,   0, 
      8,   0,   0,   0,  16,   0, 
      0,   7,  18,   0,  16,   0, 
      0,   0,   0,   0,  70,   2, 
     16,   0,   1,   0,   0,   0, 
     70,   2,  16,   0,   1,   0, 
      0,   0,  68,   0,   0,   5, 
     18,   0,  16,   0,   0,   0, 
      0,   0,  10,   0,  16,   0, 
      0,   0,   0,   0,  56,   0, 
      0,   7, 114,  32,  16,   0, 
      2,   0,   0,   0,   6,   0, 
     16,   0,   0,   0,   0,   0, 
     70,   2,  16,   0,   1,   0, 
      0,   0,  54,   0,   0,   8, 
    114,  32,  16,   0,   3,   0, 
      0,   0,   2,  64,   0,   0, 
      0,   0, 128,  63,   0,   0, 
    128,  63,   0,   0, 128,  63, 
      0,   0,   0,   0,  54,   0, 
      0,   6, 130,  32,  16,   0, 
      3,   0,   0,   0,  58, 128, 
     32,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,  17,   0, 
      0,   8,  18,  32,  16,   0, 
      4,   0,   0,   0,  70,  30, 
     16,   0,   0,   0,   0,   0, 
     70, 142,  32,   0,   0,   0, 
      0,   0,   9,   0,   0,   0, 
     17,   0,   0,   8,  34,  32, 
     16,   0,   4,   0,   0,   0, 
     70,  30,  16,   0,   0,   0, 
      0,   0,  70, 142,  32,   0, 
      0,   0,   0,   0,  10,   0, 
      0,   0,  17,   0,   0,   8, 
     66,  32,  16,   0,   4,   0, 
      0,   0,  70,  30,  16,   0, 
      0,   0,   0,   0,  70, 142, 
     32,   0,   0,   0,   0,   0, 
     11,   0,   0,   0,  17,   0, 
      0,   8, 130,  32,  16,   0, 
      4,   0,   0,   0,  70,  30, 
     16,   0,   0,   0,   0,   0, 
     70, 142,  32,   0,   0,   0, 
      0,   0,  12,   0,   0,   0, 
     62,   0,   0,   1,  53,  16, 
      0,   0, 192,   0,   0,   0, 
     23,   0,   1,   0,  32,  67, 
     23,   0, 120,   1, 237, 152, 
    205,  79,  19,  65,  24, 135, 
    103, 103, 183, 195, 118, 153, 
     78,  75,  41, 229, 171, 148, 
    162, 168,  40,   6, 137, 241, 
    100, 226, 170,  80, 162, 137, 
      7,  18,  75, 148, 195,  26, 
      2, 180,  21,  18, 129, 134, 
    162, 241,  98,  45, 196, 232, 
    133, 131,  87,  61, 121, 240, 
    160,  55, 175, 198,  68, 160, 
     92, 184,  24,  19, 255,   2, 
    175,  94, 141,   7, 226,  69, 
    127, 111, 217, 213,   6, 228, 
    172,  49, 243, 132, 103, 222, 
    157, 143, 206, 190, 187, 179, 
     92, 222, 209, 118,  86, 231, 
     69,  49, 183,  69, 241, 219, 
     59, 183, 103, 135,  51,  22, 
    162,  14, 176, 168,   1, 165, 
      4, 181, 152, 111, 163, 150, 
    177,   1, 106,  12, 136, 181, 
     49, 132,  33, 120,  14, 253, 
     75, 136,  52,  23, 248, 252, 
    217, 131, 145,  98, 113, 117, 
    228,  38, 174,  79,  67, 218, 
    230, 186, 239,   5, 104, 195, 
    179,  80, 193, 224, 158, 141, 
      4,  99, 116, 171,  70,  40, 
    175,  65, 216,   8, 237,  69, 
     28, 216, 103, 154, 154,  63, 
     51,   6,  41, 255, 195, 160, 
    220,   2, 104,  95, 202, 147, 
    160, 231, 253, 215, 160, 119, 
     20, 156,  19,  65, 231, 209, 
      8, 229, 110,  66, 226, 165, 
    127, 142, 193, 146, 207, 126, 
     63,  56, 203,  77, 120,  24, 
     63,  64, 240,  93,   4,   4, 
    125, 218,  95, 176, 241,  97, 
     97,  60, 201,   8, 190,  29, 
     19,  24,  16, 152,  20, 120, 
    121,  66, 192,  38, 136, 131, 
     18,  97, 232, 192, 102,  40, 
     97,   4,  34,  65,  17, 133, 
     72,  66, 180, 192,  56, 108, 
    133, 120,  38, 129, 252,  68, 
     18, 226, 123,  21,  29, 176, 
     19, 118, 193, 110, 152, 130, 
     61,  48,  13, 123, 247, 114, 
    193, 173, 234,   8,  99, 239, 
      9,   5, 199, 135,  10, 132, 
     73,  25, 254, 255, 208,  59, 
      8, 254,  31, 232,  93,  80, 
     63, 160, 241,  90, 163, 209, 
    104,  52,  26, 141,  70, 163, 
    209, 104,  52,  26, 141, 230, 
    111, 193, 251, 214, 222,  51, 
    179, 186, 249, 144, 173, 111, 
    100, 140, 181,  90, 202, 120, 
     84, 235,  48,  30, 215, 108, 
     99, 167,  22,  51, 214, 107, 
    253, 134, 218,  46,  69, 215, 
     55,  24,  91, 251, 228, 124, 
    249,  96,  26, 136,  97,  68, 
     90,  47, 152, 165,  76, 244, 
    109, 244,  29,  22,  83,  33, 
    110, 185,  88,  80,  83, 140, 
    169,  48, 143, 185, 150, 176, 
    220,   8, 103, 174,  45,  98, 
     46,  15, 113, 213, 170, 226, 
    170,  93,  37,  84, 183,  74, 
     42,  41,  48, 222, 194, 221, 
     94,  37, 212,  81, 149,  82, 
     39,  84,  90,  13,  42, 165, 
    226,  50, 238,  38, 101, 194, 
    237, 146,  73, 151,  25, 220, 
     77,  75,  33, 143, 200, 148, 
     60,  46, 211, 242, 148,  84, 
    178, 197, 137, 187, 109,  78, 
    194, 237, 116, 146, 174, 113, 
    139,  87, 122,  28,  33, 251, 
    156, 148,  60, 230, 164, 229, 
     73,  71, 201, 152,  29, 119, 
     19, 118, 194, 237, 176, 241, 
    123, 147,  41, 219, 116,  20, 
     55, 185,  74, 217,  66, 102, 
    236, 148, 236, 183, 211, 114, 
    192,  86, 178, 202, 173, 202, 
     87, 110,  87, 232,  57,  24, 
    151, 149, 143,  54, 219,  53, 
     85, 180,  41, 202, 217, 174, 
    140, 112, 171,  23,  49, 236, 
     52,  91, 103,  16,  89, 200, 
    176,  46,  34,  90, 150,  37, 
     24,  91, 221, 168, 151, 240, 
    120, 253, 239,  23, 157,  84, 
    254, 218,  55,  70,  53, 190, 
    253,  99, 245, 107, 107, 175, 
     86,  22,  48, 156, 164, 150, 
     49, 233, 199, 126,  24, 134, 
     70, 189, 202, 199,  88,   4, 
     90, 126, 165,  45,  59, 241, 
    189, 117, 235, 245, 219,   5, 
    186,  38, 230, 252, 223,  92, 
    245,  99,   6,  74, 248, 155, 
     42,  53,   7, 120, 234, 175, 
    175, 250, 145, 114, 165, 122, 
    149,  10, 170, 186,  56,  68, 
    226, 141,  63, 255, 202, 143, 
     84, 235, 106, 134, 251, 243, 
    216, 241, 231, 115, 144,  50, 
    205, 158, 247,  46,  79,  92, 
    241, 202,  43,  83, 249, 194, 
     61, 239, 218, 252,  74, 217, 
    203, 206,  47,  23, 102,  87, 
     38,  39, 174, 121, 229, 229, 
     89,  47,  55,  55, 157,  47, 
     44, 151, 189, 209, 165, 133, 
    210, 252, 157,  66, 222, 155, 
    156,  89, 186,  63, 190,  88, 
    200,  22, 102, 238, 222,  30, 
     43,  22, 177, 116, 234,  70, 
    174, 222,  27,  89,  28,  42, 
    229, 103, 216,  79,   5,  35, 
    126,  69,   0,   0,  53,  16, 
      0,   0, 207,   0,   0,   0, 
     23,   0,   1,   0,  16, 183, 
     23,   0, 120,   1, 237, 152, 
    205,  79,  19,  65,  24, 198, 
    167, 219, 233, 176, 187,  76, 
    167, 165, 148,  82, 160,  45, 
     85, 139, 193,  47,   4,  67, 
    140,  49, 104,  86, 172, 209, 
      4,  19,  98, 168, 134, 195, 
     26,   4,  90,  62,  18, 129, 
    134, 162, 241, 132, 104,  76, 
    140, 137,  23,  13,  49, 254, 
      1,  94, 252,   7,  52,  70, 
     35,  88,  14, 122, 209, 131, 
    137,  55,  15,  94, 189,  26, 
     78,  94, 244, 121, 183, 187, 
     72, 170, 156,  53, 102, 127, 
    217, 103, 222, 249, 120, 119, 
    247, 217, 153,  61, 189, 207, 
     91, 153, 195, 167, 174, 190, 
      4, 197, 205, 151,  39, 211, 
    239,  52, 198,  66,  52,   0, 
    232,  58, 148, 227, 212,  50, 
     54, 227, 100,  49, 150, 163, 
     38,   0,  33,  33, 138, 112, 
     20,  90, 197, 216,  66, 236, 
    134, 104, 157,  98, 234, 237, 
    131, 193, 103,  87,  86,   7, 
    167, 209, 239, 131, 154, 160, 
    139, 174,  78,  64, 244,  88, 
    154, 143,  64, 245,  80, 174, 
    231, 131,  94, 181, 157,  32, 
    116,   0, 218, 142,  65,  13, 
    160, 251,  26, 161,  45, 198, 
    169, 249,  51,  23,  32, 242, 
    191,  19, 158, 103,  15, 207, 
     39, 125, 239, 191,   6, 237, 
    145, 119,  78,   4, 157, 199, 
    118,  20, 196,  33, 130, 187, 
    231, 232, 165,  20, 220, 177, 
    119, 150, 235, 208,  78, 252, 
      0, 222, 115,   8, 234, 247, 
     67,   4, 157, 139,  96, 195, 
    189,  34, 112,  55,  43, 180, 
    141, 168, 192, 132,  64, 130, 
    192,  65,  10,   1,  53,  64, 
     58, 132, 195,  18,  38, 132, 
    131,  18,  18,  10,  67,  48, 
     40, 176, 193,   2,  38,   4, 
     54,  93, 196, 160, 102,   8, 
    223,  36,  90,  32, 120,  20, 
    248,  95,  69,  18, 106, 131, 
    218, 161,  14,  40,   5, 165, 
    161,  12, 212, 233, 254,  51, 
    156,  92,  97,  76,  13,  16, 
    129, 218, 151,  10, 173, 246, 
     71, 139,  32,  57, 253, 127, 
    161,  61, 192,  54, 111,  81, 
    219, 141,  26, 244, 139, 144, 
    124, 124, 124, 124, 124, 124, 
    124, 124, 124, 124, 124, 124, 
    124, 124, 124, 124, 254,  38, 
    218, 174, 219, 175,  89, 240, 
    206, 250,  77, 118, 127,  45, 
    103, 136, 141,  50,  98,  68, 
     49, 165,  27,  31, 170,  89, 
    227,  97,  85,   6,  87, 214, 
    149, 100, 178,  89, 105,  42, 
    101, 172,  86, 195,  38, 147, 
     49, 169, 201,  86, 197,  85, 
    212, 120,  84,  77,  26, 143, 
    171,  82, 103, 178, 201, 212, 
    100,  66, 114, 217, 161, 132, 
    138, 234, 154, 108,  49, 185, 
    108, 151,  66, 154, 108, 229, 
    163, 249, 245, 125,  48, 174, 
    115, 217, 102,  10,  73, 239, 
    233,  84,   9, 101,  96, 222, 
    192, 252, 222, 120,  74,  37, 
    117,  33,  45, 171, 252, 133, 
     49, 139, 103, 240, 148,  61, 
    244, 126, 172, 235,  88, 223, 
     31, 207, 168, 174,  88,  74, 
    230, 105,  61,  96, 241, 180, 
    153, 144, 187, 225, 231,  48, 
    252,  28, 137,  43, 181,  47, 
    150, 145, 185, 104,  74, 158, 
    163, 117, 205, 226,  41,  61, 
     33, 119, 193,  99,  15,  60, 
    246, 197, 148, 236, 142, 102, 
    164,  74, 115, 117, 158, 214, 
    131,  22, 207, 194, 235,  33, 
    120, 237, 141,  42,  25, 233, 
    228, 146, 209, 188, 180, 248, 
     65, 120, 110, 136, 112, 201, 
    105,  28, 182, 184, 118, 153, 
     47,  71, 169, 223, 104, 241, 
    111, 154,  88, 110,   8, 233, 
     42,  78,  99, 120,  12, 222, 
    211, 170, 145,  16,  83,  73, 
     26, 195, 147,  10,  97, 111, 
    168,  79, 207, 167, 200,  45, 
    158, 163, 136, 220, 110, 138, 
    200, 233, 165, 136, 117, 250, 
    254, 144, 198, 150, 251, 221, 
    241,  49,  55,  14,  80,  68, 
     62,  99, 183, 214,  90, 156, 
    131, 113, 174,  45, 218, 168, 
    172,  86,  55, 151, 164, 166, 
    110, 142, 234, 138, 245, 115, 
     78, 159, 215, 234, 114,  30, 
     79, 220,  58, 228, 138,  27, 
    169, 142,  76, 117, 221, 128, 
     83,  89, 100,  44,  12, 113, 
    183, 170, 151,  47, 124, 111, 
    126, 243, 244, 197,  28, 245, 
    137, 207, 238,  61, 175, 220, 
    152, 133,  36, 244,  11, 170, 
     78, 255,  14, 119, 107, 224, 
    155, 238, 125, 228, 149, 234, 
    101, 170,  86,  73, 172,  21, 
     78,  65, 206, 205,  75, 185, 
    145, 234, 107,  84, 103, 174, 
    247,  49, 224, 174, 143,  64, 
    228,  52, 127, 220,  62,  85, 
     56, 107,  87, 150, 198, 138, 
    165, 235, 246, 208, 236,  82, 
    197, 206, 207,  46, 150,  38, 
    151,  70,  11,  67, 118, 101, 
    113, 210,  30, 153,  25,  47, 
    150,  22,  43, 246, 233, 133, 
    185, 242, 236, 213,  82, 209, 
     30, 157,  88, 184,  49,  60, 
     95, 202, 151,  38, 174,  77, 
    159, 153, 154,  66, 234, 216, 
    165,  17, 103,  52,  56, 223, 
     83,  46,  78, 176, 159, 100, 
     61, 151, 196,   0,  53,  16, 
      0,   0, 203,   0,   0,   0, 
     23,   0,   1,   0,   0, 115, 
     23,   0, 120,   1, 237, 152, 
    207,  79,  19,  81,  16, 199, 
    103, 187, 219, 199, 118,  25, 
     94, 151, 165,  84, 192,  82, 
     10, 162,  65, 137, 196,  24, 
     15, 198,  24, 162, 136, 241, 
    192,   1,  18, 136, 225,  80, 
    131,  64, 139, 146, 240,  43, 
     20,  13,  39,  68,  47,  26, 
     37,  30, 140,   7, 255,   5, 
    111,  92, 141,   9,  96, 185, 
     24,  35,  30, 136,  49,  28, 
    189, 122,  53,  30, 140,  49, 
    193, 239, 180, 187, 216, 160, 
    196, 163, 198, 236, 167, 253, 
    206, 251,  49, 175, 251, 102, 
    223, 188,  94, 166, 112, 136, 
     74, 188, 153, 218, 125,  44, 
    237, 151, 151, 221, 205, 175, 
     35,  68,  81,  25,  84,  48, 
    151,  16,  75, 212, 158,  20, 
     75, 212,  33, 198, 128, 176, 
    214,  67, 211,   5, 229,  48, 
    190, 128,  86, 124, 129, 182, 
    222,  62, 232, 153, 152, 120, 
    212, 131,  46, 157, 132, 234, 
    160,  17,  95, 221,  80,  13, 
    116,  26, 114,  33,  33,  38, 
    166, 130,  32,  14, 108, 179, 
    135, 108, 107,  66, 157,  80, 
     37, 182,  24, 176, 255,  25, 
     52,  42, 230, 247, 244,  65, 
     18, 255,  65,  72, 108,  66, 
    240, 204,  32,  78, 121, 223, 
    127,  13,  57, 151,  32,  79, 
    130, 228, 163,  18,  13, 201, 
    185,   9, 239, 235, 197, 150, 
    127,  35, 184, 126,  94, 131, 
     92, 110,  64,   7, 177,  11, 
     44, 233,  84,  16, 140, 229, 
    249, 138, 250,  79,  41, 227, 
    126,  70,  69,  54,  93, 133, 
      9,   5, 167,  66,  34, 149, 
    130, 170,  32,  36,  74, 225, 
     64, 149,   3,  85,  67,  12, 
    225,  34,  40,   4, 168, 226, 
     16,  14,  89, 213,  66,   8, 
     70, 225, 194,  40, 188, 147, 
     66, 188,  10,  49,  42, 220, 
     87, 213,   0,  53,  66,  77, 
    208,  97,  40,   5,  53,  67, 
    105, 168, 197, 191,  51,  86, 
     57,  34, 108,  89,  66,  25, 
    229,  55,  85, 145, 242,  77, 
     82, 166,  68, 250, 255,  34, 
    103,  16, 252,  31, 132, 242, 
    105, 148, 243,  29,  92, 145, 
      1,  49,  33,  33,  33,  33, 
     33,  33,  33,  33,  33,  33, 
     33,  33,  33,  33,  33,  33, 
    127, 137,  72, 235, 189,  53, 
     50, 151,  55, 238, 208, 202, 
    122, 187,  17, 217, 204,  24, 
     15, 139,  41,  99, 165, 104, 
     27, 239, 138,  13, 198, 147, 
    162, 107,  60,  45, 206, 197, 
     87, 214, 137, 150, 183, 157, 
     79,  91, 166, 172, 171, 210, 
    150, 174, 214,  74, 199,  48, 
     23, 195,  92, 146,  18,  90, 
    177, 197,  14,  43, 142, 235, 
    164, 174, 211,  41, 109, 195, 
    103, 195, 215,  68, 105,  93, 
    239,  37,  56, 234,  88,  28, 
    115,  20, 107,  78, 178, 199, 
     41,  30, 160, 232, 234, 174, 
    249, 125,  77,  42,  37,  45, 
     58, 163, 143, 232,  54, 125, 
    140,  72,  55, 122, 105,  78, 
    184,   9, 182, 108, 139, 109, 
     91, 113, 141, 147, 228,  90, 
     39, 197,   6, 125, 216,  54, 
    170, 137, 210, 156, 225,  54, 
    124,  58, 181, 214,  71,  61, 
    226,   6,  55, 205,  78, 189, 
    167, 217,  78, 178, 107, 167, 
    216, 173,  61, 187,  99,  68, 
     76, 106, 118,  50, 220, 234, 
    180, 241,   9, 236, 216, 238, 
     18, 199,  91,  60, 246, 234, 
    224, 171, 214, 100,  26,  84, 
     76, 217,  25, 206, 216, 109, 
    124, 220, 209,  76, 134,   7, 
    193, 199,  53, 212,  97, 107, 
    142,  93, 179, 150, 172,  40, 
    198, 110,  45, 125, 142, 168, 
     37, 138, 146, 142,  71, 109, 
    173, 170,  48,  87, 101, 146, 
     19, 181, 180,  29,  67, 159, 
     44, 234, 160,  51, 216, 143, 
    136, 107,  48,  54,  77, 146, 
    243, 161,   8,  45, 233, 184, 
    140, 229, 132, 239, 174, 151, 
     74, 128,  88, 131, 239,  30, 
    141,  82,  32, 218,  55,  87, 
    170, 121, 238, 155,  43, 245, 
     45,  89, 252, 147, 235, 126, 
     13, 241, 188, 223, 182,  67, 
     82,  55,  53, 252, 170, 163, 
    212, 122,  45, 191,  34, 215, 
     59, 244, 173, 238, 213, 243, 
     23, 211, 210,  23, 158, 249, 
    191,  89, 244, 219,  12, 196, 
    208, 159, 216, 240, 215, 175, 
    250, 173, 196,  42, 181,  46, 
     93, 170, 128,   1,  41, 122, 
    130, 143, 190, 127, 199, 111, 
    165,  54, 134, 180, 253,  18, 
    199,  87, 223,  63,   8,  73, 
    164, 189, 231, 178,  23, 135, 
    174, 100,  11,  11,  35, 185, 
    252, 237, 108, 223, 228,  66, 
     33, 219,  59,  57, 159,  31, 
     95,  24,  30, 234, 203,  22, 
    230, 199, 179, 131,  55,  71, 
    115, 249, 249,  66, 246, 210, 
    236, 244, 220, 228,  84,  62, 
    151,  29,  30, 155,  93, 236, 
    159, 201, 247, 230, 199, 110, 
    221, 184,  60,  49, 129, 165, 
     35,  87,   7,  75, 163, 158, 
    153, 174, 185, 220,  24, 253, 
      0, 165, 131, 134,  41,   0, 
     88,  72,  83,  72,   8,   0, 
      0,   0,  68,  84, 250,  19, 
    193, 169, 185, 109,  88,  80, 
     68,  80,  82,   0,   0,   0, 
     68,  58,  92,  65,  84,  71, 
     92, 115, 116,  95, 100, 101, 
    118,  92,  75, 105, 116, 115, 
     92,  68, 105, 114, 101,  99, 
    116,  88,  84,  75,  92, 115, 
    114,  99,  92,  83, 104,  97, 
    100, 101, 114, 115,  92,  67, 
    111, 109, 112, 105, 108, 101, 
    100,  92,  88,  98, 111, 120, 
     79, 110, 101,  68, 101,  98, 
    117, 103,  69, 102, 102, 101, 
     99, 116,  95,  86,  83,  68, 
    101,  98, 117, 103,  66, 110, 
     46, 112, 100,  98
};
