#if 0
//
// Generated by Microsoft (R) D3D Shader Disassembler for Durango
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// COLOR                    0   xyzw        0     NONE   float   xyzw
// COLOR                    1   xyzw        1     NONE   float      w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
// Opaque Custom Data - XBOX Precompiled Shader Header
// First Precompiled Shader at offset:[49]
// Embedded Data:
//  0x00000031 - Offset To First Precompiled Shader
//  0x00000050 - Original Shader Descriptor
//  0x0000002c - Original Shader Size
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[26], immediateIndexed
dcl_input_ps linear v0.xyzw
dcl_input_ps linear v1.w
dcl_output o0.xyzw
dcl_temps 1
mad r0.xyz, cb0[13].xyzx, v0.wwww, -v0.xyzx
mad o0.xyz, v1.wwww, r0.xyzx, v0.xyzx
mov o0.w, v0.w
ret 
// Opaque Custom Data - XBOX Precompiled Shader Object
// Offset:[49], bundle is:[147] DWORDS.
// Disassembled Precompiled Shader Object:
// Shader Type               : (PS)
// Shader Hw Stage           : (PS)
// PDB Filename              : D:\ATG\st_dev\Kits\DirectXTK\src\Shaders\Compiled\XboxOneBasicEffect_PSBasic.pdb
// Shader Semantic Hash      : 0x28fcd23850698c10
//
// Shader Data:
; ----------------- PS Data ------------------------
; Input Semantic Mappings
;   [0] generic,  usageIdx 0, channelMask 15, param0, paramSlot0, DefaultVal={0,0,0,0}
;   [1] generic,  usageIdx 1, channelMask  8, param1, paramSlot1, DefaultVal={0,0,0,0}

codeLenInByte        = 116 bytes;

; launchModeFlags    = 0x0000000E
srdTableSupport      = TRUE
immediateSupportExt  = TRUE
srdTableSupportExt   = TRUE

userElementCount     = 1;
;  userElements[0]      = PTR_EXTENDED_USER_DATA, ReferencedExtUserElements=1, s[0x0:1]
extUserElementCount  = 1;
;  extUserElements 1[0] = IMM_CONST_BUFFER 0, offset 0x0:3 dwords
NumVgprs             = 9;
NumSgprs             = 6;
FloatMode            = 192;
IeeeMode             = 0;
FlatPtr32            = 0;
ScratchSize          = 0 dwords/thread;
LDSByteSize          = 0 bytes/workgroup (compile time only);
ScratchWaveOffsetReg = s65535;
; texSamplerUsage         = 0x00000000
; constBufUsage           = 0x00000001

; SPI_SHADER_PGM_RSRC2_PS = 0x00000004
SSPRP:SCRATCH_EN            = 0
SSPRP:USER_SGPR             = 2
SSPRP:TRAP_PRESENT          = 0
SSPRP:WAVE_CNT_EN           = 0
SSPRP:EXTRA_LDS_SIZE        = 0
SSPRP:EXCP_EN               = 0
; SPI_SHADER_Z_FORMAT     = 0x00000000
SPZF:Z_EXPORT_FORMAT        = 0; SPI_SHADER_ZERO
; SPI_PS_IN_CONTROL       = 0x00000002
SPIC:NUM_INTERP             = 2
SPIC:PARAM_GEN              = 0
SPIC:FOG_ADDR               = 0
SPIC:BC_OPTIMIZE_DISABLE    = 0
SPIC:PASS_FOG_THROUGH_PS    = 0
; SPI_PS_INPUT_ADDR       = 0x00000002
SPIA:PERSP_CENTER_ENA       = 1
; DB_SHADER_CONTROL       = 0x00000010
DB:Z_ORDER                  = 1
DB:CONSERVATIVE_Z_EXPORT    = 0; EXPORT_ANY_Z
; CB_SHADER_MASK          = 0x0000000F
CB:OUTPUT0_ENABLE           = 15

; export table for mrt0 [patch@(bytes=0x60, dwords=0x18)]
// Export Patch Code (FMT_ZERO):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_nop         0x0000                                  // 000000000000: BF800000
  s_nop         0x0000                                  // 000000000004: BF800000
  exp           null, off, off, off, off done vm        // 000000000008: F8001890 00000000
end
// Export Patch Code (FMT_32_R):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_nop         0x0000                                  // 000000000000: BF800000
  s_nop         0x0000                                  // 000000000004: BF800000
  exp           mrt0, v3, off, off, off done vm         // 000000000008: F8001801 00000003
end
// Export Patch Code (FMT_32_GR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_nop         0x0000                                  // 000000000000: BF800000
  s_nop         0x0000                                  // 000000000004: BF800000
  exp           mrt0, v3, v4, off, off done vm          // 000000000008: F8001803 00000403
end
// Export Patch Code (FMT_32_AR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_nop         0x0000                                  // 000000000000: BF800000
  s_nop         0x0000                                  // 000000000004: BF800000
  exp           mrt0, v3, v2, off, off done vm          // 000000000008: F8001803 00000203
end
// Export Patch Code (FMT_FP16_ABGR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  v_cvt_pkrtz_f16_f32  v0, v3, v4                       // 000000000000: 5E000903
  v_cvt_pkrtz_f16_f32  v1, v5, v2                       // 000000000004: 5E020505
  exp           mrt0, v0, v0, v1, v1 done compr vm      // 000000000008: F8001C0F 00000100
end
// Export Patch Code (FMT_UNORM16_ABGR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  v_cvt_pknorm_u16_f32  v0, v3, v4                      // 000000000000: 5C000903
  v_cvt_pknorm_u16_f32  v1, v5, v2                      // 000000000004: 5C020505
  exp           mrt0, v0, v0, v1, v1 done compr vm      // 000000000008: F8001C0F 00000100
end
// Export Patch Code (FMT_SNORM16_ABGR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  v_cvt_pknorm_i16_f32  v0, v3, v4                      // 000000000000: 5A000903
  v_cvt_pknorm_i16_f32  v1, v5, v2                      // 000000000004: 5A020505
  exp           mrt0, v0, v0, v1, v1 done compr vm      // 000000000008: F8001C0F 00000100
end
// Export Patch Code (FMT_UINT16_ABGR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  v_cvt_pk_u16_u32  v0, v3, v4                          // 000000000000: 60000903
  v_cvt_pk_u16_u32  v1, v5, v2                          // 000000000004: 60020505
  exp           mrt0, v0, v0, v1, v1 done compr vm      // 000000000008: F8001C0F 00000100
end
// Export Patch Code (FMT_SINT16_ABGR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  v_cvt_pk_i16_i32  v0, v3, v4                          // 000000000000: 62000903
  v_cvt_pk_i16_i32  v1, v5, v2                          // 000000000004: 62020505
  exp           mrt0, v0, v0, v1, v1 done compr vm      // 000000000008: F8001C0F 00000100
end
// Export Patch Code (FMT_32_ABGR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_nop         0x0000                                  // 000000000000: BF800000
  s_nop         0x0000                                  // 000000000004: BF800000
  exp           mrt0, v3, v4, v5, v2 done vm            // 000000000008: F800180F 02050403
end

// Shader Instructions:
shader main
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_mov_b32     m0, s2                                  // 000000000000: BEFC0302
  s_load_dwordx4  s[0:3], s[0:1], 0x00                  // 000000000004: C0800100
  s_waitcnt     lgkmcnt(0)                              // 000000000008: BF8C007F
  s_buffer_load_dwordx4  s[0:3], s[0:3], 0x34           // 00000000000C: C2800134
  v_interp_p1_f32  v2, v0, attr0.w                      // 000000000010: C8080300
  v_interp_p2_f32  v2, v1, attr0.w                      // 000000000014: C8090301
  v_interp_p1_f32  v3, v0, attr0.x                      // 000000000018: C80C0000
  v_interp_p2_f32  v3, v1, attr0.x                      // 00000000001C: C80D0001
  v_interp_p1_f32  v4, v0, attr0.y                      // 000000000020: C8100100
  v_interp_p2_f32  v4, v1, attr0.y                      // 000000000024: C8110101
  v_interp_p1_f32  v5, v0, attr0.z                      // 000000000028: C8140200
  v_interp_p2_f32  v5, v1, attr0.z                      // 00000000002C: C8150201
  s_waitcnt     lgkmcnt(0)                              // 000000000030: BF8C007F
  v_mad_legacy_f32  v6, s0, v2, -v3                     // 000000000034: D2800006 840E0400
  v_mad_legacy_f32  v7, s1, v2, -v4                     // 00000000003C: D2800007 84120401
  v_mad_legacy_f32  v8, s2, v2, -v5                     // 000000000044: D2800008 84160402
  v_interp_p1_f32  v0, v0, attr1.w                      // 00000000004C: C8000700
  v_interp_p2_f32  v0, v1, attr1.w                      // 000000000050: C8010701
  v_mac_f32     v3, v0, v6                              // 000000000054: 3E060D00
  v_mac_f32     v4, v0, v7                              // 000000000058: 3E080F00
  v_mac_f32     v5, v0, v8                              // 00000000005C: 3E0A1100
  v_cvt_pkrtz_f16_f32  v0, v3, v4                       // 000000000060: 5E000903
  v_cvt_pkrtz_f16_f32  v1, v5, v2                       // 000000000064: 5E020505
  exp           mrt0, v0, v0, v1, v1 done compr vm      // 000000000068: F8001C0F 00000100
  s_endpgm                                              // 000000000070: BF810000
end


// Shader Statistics:
//  NumActiveWaveFront:         40
//  WorkgroupSize:              64
//  NumVRegs:                   9
//  NumSRegs:                   6
//  NumActiveWaveFrontByVReg:   40
//  NumActiveWaveFrontBySReg:   40
//  NumActiveWaveFrontByLDS:    40
//  CycleSim:                   79
//  CycleSimNWaves:             79
//  Code Size:                  116
//Assembler Counts:
//  num_32bit_ops                     : 21
//  num_64bit_ops                     : 4
//  num_alu                           : 18
//  num_fc                            : 6
//  num_inst_exp                      : 1
//  num_inst_ldsgds                   : 0
//  num_inst_mimg                     : 0
//  num_inst_mtbuf                    : 0
//  num_inst_mubuf                    : 0
//  num_inst_sopp                     : 3
//  num_inst_sopc                     : 0
//  num_inst_sop1                     : 1
//  num_inst_sop2                     : 0
//  num_inst_smrd                     : 0
//  num_inst_sopk                     : 0
//  num_inst_vop1                     : 0
//  num_inst_vop2                     : 5
//  num_inst_vop3                     : 3
//  num_inst_vopc                     : 0
//  num_inst_vintrp                   : 10
//  constant_literal_operands         : 0
//  num_tex                           : 1
//  num_vmem_group                    : 0
//  vmem_grouping_started             : 0
//
//Compilation Notes:
//
//  PS has no UAV writes, consider forcing REZ/LATEZ.
// Shader Statistics:
// m_uNumActiveWaveFront             : 40
// m_uVRegLimit                      : 256
// m_uSRegLimit                      : 512
// m_uNumVRegs                       : 9
// m_uNumSRegs                       : 6
// m_uSCCodeSize                     : 116
// m_uWorkgroupSize                  : 64
// m_uNumActiveWaveFrontByVReg       : 40
// m_uNumActiveWaveFrontBySReg       : 40
// m_uNumActiveWaveFrontByLDS        : 40
// m_uCycleSim1Wave                  : 79
// m_uCycleSimNWaves                 : 79

// Assembler Counts:
// num_32bit_ops                     : 21
// num_64bit_ops                     : 4
// num_alu                           : 18
// num_fc                            : 6
// num_inst_exp                      : 1
// num_inst_ldsgds                   : 0
// num_inst_mimg                     : 0
// num_inst_mtbuf                    : 0
// num_inst_mubuf                    : 0
// num_inst_sopp                     : 3
// num_inst_sopc                     : 0
// num_inst_sop1                     : 1
// num_inst_sop2                     : 0
// num_inst_smrd                     : 0
// num_inst_sopk                     : 0
// num_inst_vop1                     : 0
// num_inst_vop2                     : 5
// num_inst_vop3                     : 3
// num_inst_vopc                     : 0
// num_inst_vintrp                   : 10
// num_inst_smem                     : 2
// constant_literal_operands         : 0
// num_tex                           : 1
// num_vmem_group                    : 0
// vmem_grouping_started             : 0
// m_fFullPrecompilePromise          : 0
// m_fIntegerDivideExpansion         : 0
// m_fIntegerModExpansion            : 0
// m_fDoubleDivideExpansion          : 0
// m_fUsesScratch                    : 0
// m_fPerThreadIndirection           : 0
// m_fUsingTableLoads                : 0
// m_fUsingSHmemLoads                : 1
// fSemanticHashFlagOverrideApplied  : 0
// fPSHasNoUAVWrite                  : 1
// m_fRenderTargetsCanBeCompacted    : 0
// version                           : 3
// fCodePatched                      : 0

// Approximately 0 instruction slots used
#endif

const BYTE BasicEffect_PSBasic[] =
{
     68,  88,  66,  67,  46,  71, 
    231,   8, 238, 189, 255,  77, 
    177, 143, 149, 117,  84, 189, 
     75, 110,   1,   0,   0,   0, 
     56,   4,   0,   0,   5,   0, 
      0,   0,  52,   0,   0,   0, 
    124,   0,   0,   0, 176,   0, 
      0,   0, 208,   3,   0,   0, 
    224,   3,   0,   0,  73,  83, 
     71,  78,  64,   0,   0,   0, 
      2,   0,   0,   0,   8,   0, 
      0,   0,  56,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      0,   0,   0,   0,  15,  15, 
      0,   0,  56,   0,   0,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   0,   0,  15,   8, 
      0,   0,  67,  79,  76,  79, 
     82,   0, 171, 171,  79,  83, 
     71,  78,  44,   0,   0,   0, 
      1,   0,   0,   0,   8,   0, 
      0,   0,  32,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      0,   0,   0,   0,  15,   0, 
      0,   0,  83,  86,  95,  84, 
     97, 114, 103, 101, 116,   0, 
    171, 171,  83,  72,  69,  88, 
     24,   3,   0,   0,  80,   0, 
      0,   0, 198,   0,   0,   0, 
     53,  16,   0,   0,   5,   0, 
      0,   0,  49,   0,   0,   0, 
     80,   0,   0,   0,  44,   0, 
      0,   0, 106,   8,   0,   1, 
     89,   0,   0,   4,  70, 142, 
     32,   0,   0,   0,   0,   0, 
     26,   0,   0,   0,  98,  16, 
      0,   3, 242,  16,  16,   0, 
      0,   0,   0,   0,  98,  16, 
      0,   3, 130,  16,  16,   0, 
      1,   0,   0,   0, 101,   0, 
      0,   3, 242,  32,  16,   0, 
      0,   0,   0,   0, 104,   0, 
      0,   2,   1,   0,   0,   0, 
     50,   0,   0,  11, 114,   0, 
     16,   0,   0,   0,   0,   0, 
     70, 130,  32,   0,   0,   0, 
      0,   0,  13,   0,   0,   0, 
    246,  31,  16,   0,   0,   0, 
      0,   0,  70,  18,  16, 128, 
     65,   0,   0,   0,   0,   0, 
      0,   0,  50,   0,   0,   9, 
    114,  32,  16,   0,   0,   0, 
      0,   0, 246,  31,  16,   0, 
      1,   0,   0,   0,  70,   2, 
     16,   0,   0,   0,   0,   0, 
     70,  18,  16,   0,   0,   0, 
      0,   0,  54,   0,   0,   5, 
    130,  32,  16,   0,   0,   0, 
      0,   0,  58,  16,  16,   0, 
      0,   0,   0,   0,  62,   0, 
      0,   1,  53,  16,   0,   0, 
    149,   0,   0,   0,  23,   0, 
      1,   0,  41, 129,  15,   0, 
    120,   1, 237, 151,  63, 111, 
    211,  80,  20, 197, 239, 179, 
     29,  39,  41, 205, 159,  86, 
      4, 181, 136, 161,   3,   3, 
     19,  75,  59,  32, 134, 136, 
     66,  17,  67, 144,  90, 212, 
     14,  85, 101, 245,  79,  18, 
     87,  68,  42,  52, 138,  35, 
    196,   4, 169, 136,   4,  67, 
      7, 134,  14, 124,   0,   6, 
     70,  62,   1, 137, 152,  60, 
    162, 126,   7,  36,  70, 198, 
     14, 149, 224,  28, 231,  61, 
     48, 105, 187,  89,   2,   9, 
     31, 233, 247, 110, 142, 253, 
    222, 203, 141, 175,  35, 221, 
    119,  80, 146,  72, 165, 175, 
    229,  35, 198, 218, 235, 124, 
    229,  35,  98,   6,  40,  29, 
    169, 119,   5, 142,  34,  11, 
     69, 142,  34,  55,  56, 112, 
    130,  37, 146,  71, 112,  65, 
     23, 220,   1, 188, 103, 152, 
    159, 127, 181,  40, 114,   4, 
     68,  28,  48,   1, 150,  53, 
     21, 192, 107, 211, 128, 235, 
    185, 221, 184, 108,  14, 208, 
    121, 247, 152, 155, 185, 207, 
    125, 145,  74, 164,  51, 115, 
    125,  14, 231, 107,  22,  48, 
    255, 139, 196, 220, 140, 184, 
     47, 243, 164,  76, 252, 155, 
     26, 255, 157, 244, 166,  78, 
     20, 235,  17,  23,  75, 103, 
    214,  76, 234,  58,  26,  63, 
    167, 189, 169, 229,  16,  92, 
    164,  31,  16, 235,  22, 151, 
    241, 172, 129,  43, 163, 151, 
    202,  85,  51,  34,  57, 126, 
    250, 191,  20, 127,  22, 164, 
     12, 244, 223,  44, 146, 185, 
    143, 167,   3, 245,   6, 228, 
    237, 140, 156, 208,  25, 143, 
     71, 119,  50, 122, 183,  71, 
    222, 166, 143,  22, 198,  60, 
     54, 183, 243, 178, 153, 201, 
     88, 155, 165, 107,  88, 143, 
     98, 194, 123, 240,  94, 204, 
    111, 192, 111, 196, 252,  54, 
    252, 118, 204, 215, 225, 235, 
    198, 155, 253,  75, 209, 247, 
    101,  44, 214,  26,  23,  95, 
    252, 203, 164,  57,  38,  67, 
    154,  99,  50, 164,  57,  38, 
     67, 154,  99,  50, 164,  57, 
     38,  67, 154,  99,  50, 164, 
     57,  38, 134,  88, 246, 233, 
     39,  81, 189, 225,  75,  57, 
     28,  44, 168, 222, 103, 177, 
    115, 161, 178, 243,  33,  58, 
    252,  80,  73,  33,  20,  85, 
     14, 149, 154,  10, 197, 186, 
     28,  42, 171,  18, 114, 158, 
     43, 189,  99, 113, 138, 253, 
     44, 162, 114, 166, 251,  57, 
     68, 203, 185, 210, 151, 172, 
    132,  42, 171,  66,  41, 184, 
     85,  41, 229, 170,  50,  53, 
     81,  69, 127, 248,  71, 127, 
     41, 114,  48, 152, 101, 100, 
     99,  27,  83, 100, 157, 104, 
    194,  47, 181, 245, 153, 226, 
    161, 142, 215,   1, 207,  23, 
     74, 159, 218, 174,   2,  39, 
     58, 109, 160,  71,  62, 108, 
    173, 220,  58,  62, 229, 145, 
     49, 210,   7, 189, 230, 141, 
    142, 115,  96,  18, 252, 214, 
    123,  14, 103, 244,  69, 207, 
     31, 234, 200, 222, 155, 109, 
    115, 209, 156, 100, 245, 245, 
    239,  58, 126, 211, 145, 199, 
    148,  75,  96,  60, 143, 156, 
    110, 220,  31,   1, 102, 186, 
    116, 219,  91,  92, 123, 224, 
      5, 221, 173, 166, 255, 204, 
    171, 181, 186, 129, 183, 212, 
    234, 248, 141, 238, 250,  90, 
    205,  11,  58,  13, 111, 245, 
    241,  78, 211, 239,   4, 222, 
    189, 253,  39, 237, 214, 158, 
    223, 244, 214, 235, 251, 207, 
    151, 159, 250, 119, 119, 130, 
     86, 227, 254, 238,  46, 166, 
    110, 173, 172,  70, 238, 102, 
    187,  89, 151, 159, 163, 175, 
    215, 119,   0,   0,  88,  72, 
     83,  72,   8,   0,   0,   0, 
     16, 140, 105,  80,  56, 210, 
    252,  40,  88,  80,  68,  80, 
     80,   0,   0,   0,  68,  58, 
     92,  65,  84,  71,  92, 115, 
    116,  95, 100, 101, 118,  92, 
     75, 105, 116, 115,  92,  68, 
    105, 114, 101,  99, 116,  88, 
     84,  75,  92, 115, 114,  99, 
     92,  83, 104,  97, 100, 101, 
    114, 115,  92,  67, 111, 109, 
    112, 105, 108, 101, 100,  92, 
     88,  98, 111, 120,  79, 110, 
    101,  66,  97, 115, 105,  99, 
     69, 102, 102, 101,  99, 116, 
     95,  80,  83,  66,  97, 115, 
    105,  99,  46, 112, 100,  98
};
