#if 0
//
// Generated by Microsoft (R) D3D Shader Disassembler for Durango
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xy          0     NONE   float   xy  
// TEXCOORD                 1   xyzw        1     NONE   float   xyzw
// TEXCOORD                 2   xyz         2     NONE   float   xyz 
// COLOR                    0   xyzw        3     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
// Opaque Custom Data - XBOX Precompiled Shader Header
// First Precompiled Shader at offset:[656]
// Embedded Data:
//  0x00000290 - Offset To First Precompiled Shader
//  0x00000050 - Original Shader Descriptor
//  0x0000028b - Original Shader Size
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[26], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_input_ps linear v0.xy
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyzw
dcl_output o0.xyzw
dcl_temps 5
deriv_rtx_coarse r0.xyz, v1.yzxy
deriv_rty_coarse r1.xyz, v1.zxyz
mul r2.xyz, r0.xyzx, r1.yzxy
mad r2.xyz, r0.zxyz, r1.zxyz, -r2.xyzx
mul r3.xyz, r0.xyzx, r2.xyzx
mad r0.xyz, r2.zxyz, r0.yzxy, -r3.xyzx
deriv_rty_coarse r3.xy, v0.xyxx
mul r3.xzw, r0.xxyz, r3.xxxx
mul r0.xyz, r0.xyzx, r3.yyyy
mul r4.xyz, r1.xyzx, r2.zxyz
mad r1.xyz, r1.zxyz, r2.xyzx, -r4.xyzx
deriv_rtx_coarse r2.xy, v0.xyxx
mad r2.xzw, r2.xxxx, r1.xxyz, r3.xxzw
mad r0.xyz, r2.yyyy, r1.xyzx, r0.xyzx
dp3 r0.w, r2.xzwx, r2.xzwx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r2.xzwx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
sample_indexable(texture2d)(float,float,float,float) r2.xy, v0.xyxx, t2.xyzw, s0
mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r0.xyz, r0.xyzx, r2.yyyy
mad r0.xyz, r2.xxxx, r1.xyzx, r0.xyzx
dp2 r0.w, r2.xyxx, r2.xyxx
add r0.w, -r0.w, l(1.000000)
sqrt r0.w, r0.w
mad r0.xyz, r0.wwww, v2.xyzx, r0.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
add r1.xyz, -v1.xyzx, cb0[12].xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mad r2.xyz, r1.xyzx, r0.wwww, -cb0[3].xyzx
dp3 r1.w, r2.xyzx, r2.xyzx
rsq r1.w, r1.w
mul r2.xyz, r1.wwww, r2.xyzx
dp3 r2.x, r2.xyzx, r0.xyzx
mad r3.xyz, r1.xyzx, r0.wwww, -cb0[4].xyzx
mad r1.xyz, r1.xyzx, r0.wwww, -cb0[5].xyzx
dp3 r0.w, r3.xyzx, r3.xyzx
rsq r0.w, r0.w
mul r3.xyz, r0.wwww, r3.xyzx
dp3 r2.y, r3.xyzx, r0.xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r1.xyzx
dp3 r2.z, r1.xyzx, r0.xyzx
max r1.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
dp3 r2.x, -cb0[3].xyzx, r0.xyzx
dp3 r2.y, -cb0[4].xyzx, r0.xyzx
dp3 r2.z, -cb0[5].xyzx, r0.xyzx
ge r0.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
and r0.xyz, r0.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
mul r1.xyz, r0.xyzx, r1.xyzx
mul r0.xyz, r2.xyzx, r0.xyzx
log r1.xyz, r1.xyzx
mul r1.xyz, r1.xyzx, cb0[2].wwww
exp r1.xyz, r1.xyzx
mul r1.xyz, r2.xyzx, r1.xyzx
mul r2.xyz, r1.yyyy, cb0[10].xyzx
mad r1.xyw, r1.xxxx, cb0[9].xyxz, r2.xyxz
mad r1.xyz, r1.zzzz, cb0[11].xyzx, r1.xywx
mul r1.xyz, r1.xyzx, cb0[2].xyzx
sample_indexable(texture2d)(float,float,float,float) r2.xyz, v0.xyxx, t1.xyzw, s0
mul r1.xyz, r1.xyzx, r2.xyzx
sample_indexable(texture2d)(float,float,float,float) r2.xyzw, v0.xyxx, t0.xyzw, s0
mul r2.xyzw, r2.xyzw, v3.xyzw
mul r1.xyz, r1.xyzx, r2.wwww
mul r3.xyz, r0.yyyy, cb0[7].xyzx
mad r0.xyw, r0.xxxx, cb0[6].xyxz, r3.xyxz
mad r0.xyz, r0.zzzz, cb0[8].xyzx, r0.xywx
mad r0.xyz, r0.xyzx, cb0[0].xyzx, cb0[1].xyzx
mad r0.xyz, r2.xyzx, r0.xyzx, r1.xyzx
mad r1.xyz, cb0[13].xyzx, r2.wwww, -r0.xyzx
mad o0.xyz, v1.wwww, r1.xyzx, r0.xyzx
mov o0.w, r2.w
ret 
// Opaque Custom Data - XBOX Precompiled Shader Object
// Offset:[656], bundle is:[418] DWORDS.
// Disassembled Precompiled Shader Object:
// Shader Type               : (PS)
// Shader Hw Stage           : (PS)
// PDB Filename              : D:\ATG\st_dev\Kits\DirectXTK\src\Shaders\Compiled\XboxOneNormalMapEffect_PSNormalPixelLightingTx.pdb
// Shader Semantic Hash      : 0x5033a5b3555395c9
//
// Shader Data:
; ----------------- PS Data ------------------------
; Input Semantic Mappings
;   [0] generic,  usageIdx 0, channelMask  3, param0, paramSlot0, DefaultVal={0,0,0,0}
;   [1] generic,  usageIdx 1, channelMask 15, param1, paramSlot1, DefaultVal={0,0,0,0}
;   [2] generic,  usageIdx 2, channelMask  7, param2, paramSlot2, DefaultVal={0,0,0,0}
;   [3] generic,  usageIdx 3, channelMask 15, param3, paramSlot3, DefaultVal={0,0,0,0}

codeLenInByte        = 1424 bytes;

; launchModeFlags    = 0x0000000E
srdTableSupport      = TRUE
immediateSupportExt  = TRUE
srdTableSupportExt   = TRUE

userElementCount     = 1;
;  userElements[0]      = PTR_EXTENDED_USER_DATA, ReferencedExtUserElements=1, s[0x0:1]
extUserElementCount  = 5;
;  extUserElements 1[0] = IMM_RESOURCE 0, offset 0x0:7 dwords
;  extUserElements 1[1] = IMM_RESOURCE 1, offset 0x8:15 dwords
;  extUserElements 1[2] = IMM_RESOURCE 2, offset 0x10:23 dwords
;  extUserElements 1[3] = IMM_SAMPLER 0, offset 0x18:27 dwords
;  extUserElements 1[4] = IMM_CONST_BUFFER 0, offset 0x1c:31 dwords
NumVgprs             = 32;
NumSgprs             = 52;
FloatMode            = 192;
IeeeMode             = 0;
FlatPtr32            = 0;
ScratchSize          = 0 dwords/thread;
LDSByteSize          = 0 bytes/workgroup (compile time only);
ScratchWaveOffsetReg = s65535;
; texSamplerUsage         = 0x00000001
; constBufUsage           = 0x00000001

; SPI_SHADER_PGM_RSRC2_PS = 0x00000004
SSPRP:SCRATCH_EN            = 0
SSPRP:USER_SGPR             = 2
SSPRP:TRAP_PRESENT          = 0
SSPRP:WAVE_CNT_EN           = 0
SSPRP:EXTRA_LDS_SIZE        = 0
SSPRP:EXCP_EN               = 0
; SPI_SHADER_Z_FORMAT     = 0x00000000
SPZF:Z_EXPORT_FORMAT        = 0; SPI_SHADER_ZERO
; SPI_PS_IN_CONTROL       = 0x00000004
SPIC:NUM_INTERP             = 4
SPIC:PARAM_GEN              = 0
SPIC:FOG_ADDR               = 0
SPIC:BC_OPTIMIZE_DISABLE    = 0
SPIC:PASS_FOG_THROUGH_PS    = 0
; SPI_PS_INPUT_ADDR       = 0x00000002
SPIA:PERSP_CENTER_ENA       = 1
; DB_SHADER_CONTROL       = 0x00000010
DB:Z_ORDER                  = 1
DB:CONSERVATIVE_Z_EXPORT    = 0; EXPORT_ANY_Z
; CB_SHADER_MASK          = 0x0000000F
CB:OUTPUT0_ENABLE           = 15

; export table for mrt0 [patch@(bytes=0x57C, dwords=0x15F)]
// Export Patch Code (FMT_ZERO):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_nop         0x0000                                  // 000000000000: BF800000
  s_nop         0x0000                                  // 000000000004: BF800000
  exp           null, off, off, off, off done vm        // 000000000008: F8001890 00000000
end
// Export Patch Code (FMT_32_R):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_nop         0x0000                                  // 000000000000: BF800000
  s_nop         0x0000                                  // 000000000004: BF800000
  exp           mrt0, v3, off, off, off done vm         // 000000000008: F8001801 00000003
end
// Export Patch Code (FMT_32_GR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_nop         0x0000                                  // 000000000000: BF800000
  s_nop         0x0000                                  // 000000000004: BF800000
  exp           mrt0, v3, v5, off, off done vm          // 000000000008: F8001803 00000503
end
// Export Patch Code (FMT_32_AR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_nop         0x0000                                  // 000000000000: BF800000
  s_nop         0x0000                                  // 000000000004: BF800000
  exp           mrt0, v3, v4, off, off done vm          // 000000000008: F8001803 00000403
end
// Export Patch Code (FMT_FP16_ABGR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  v_cvt_pkrtz_f16_f32  v0, v3, v5                       // 000000000000: 5E000B03
  v_cvt_pkrtz_f16_f32  v1, v2, v4                       // 000000000004: 5E020902
  exp           mrt0, v0, v0, v1, v1 done compr vm      // 000000000008: F8001C0F 00000100
end
// Export Patch Code (FMT_UNORM16_ABGR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  v_cvt_pknorm_u16_f32  v0, v3, v5                      // 000000000000: 5C000B03
  v_cvt_pknorm_u16_f32  v1, v2, v4                      // 000000000004: 5C020902
  exp           mrt0, v0, v0, v1, v1 done compr vm      // 000000000008: F8001C0F 00000100
end
// Export Patch Code (FMT_SNORM16_ABGR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  v_cvt_pknorm_i16_f32  v0, v3, v5                      // 000000000000: 5A000B03
  v_cvt_pknorm_i16_f32  v1, v2, v4                      // 000000000004: 5A020902
  exp           mrt0, v0, v0, v1, v1 done compr vm      // 000000000008: F8001C0F 00000100
end
// Export Patch Code (FMT_UINT16_ABGR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  v_cvt_pk_u16_u32  v0, v3, v5                          // 000000000000: 60000B03
  v_cvt_pk_u16_u32  v1, v2, v4                          // 000000000004: 60020902
  exp           mrt0, v0, v0, v1, v1 done compr vm      // 000000000008: F8001C0F 00000100
end
// Export Patch Code (FMT_SINT16_ABGR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  v_cvt_pk_i16_i32  v0, v3, v5                          // 000000000000: 62000B03
  v_cvt_pk_i16_i32  v1, v2, v4                          // 000000000004: 62020902
  exp           mrt0, v0, v0, v1, v1 done compr vm      // 000000000008: F8001C0F 00000100
end
// Export Patch Code (FMT_32_ABGR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_nop         0x0000                                  // 000000000000: BF800000
  s_nop         0x0000                                  // 000000000004: BF800000
  exp           mrt0, v3, v5, v2, v4 done vm            // 000000000008: F800180F 04020503
end

// Shader Instructions:
shader main
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_mov_b64     s[48:49], exec                          // 000000000000: BEB0047E
  s_wqm_b64     exec, exec // wrscc                     // 000000000004: BEFE0A7E
  s_load_dwordx8  s[4:11], s[0:1], 0x10                 // 000000000008: C0C20110
  s_load_dwordx4  s[12:15], s[0:1], 0x18                // 00000000000C: C0860118
  s_mov_b32     m0, s2                                  // 000000000010: BEFC0302
  v_interp_p1_f32  v2, v0, attr0.x                      // 000000000014: C8080000
  v_interp_p1_f32  v3, v0, attr0.y                      // 000000000018: C80C0100
  v_interp_p2_f32  v2, v1, attr0.x                      // 00000000001C: C8090001
  v_interp_p2_f32  v3, v1, attr0.y                      // 000000000020: C80D0101
  s_waitcnt     lgkmcnt(0)                              // 000000000024: BF8C007F
  image_sample  v[6:9], v[2:3], s[4:11], s[12:15] dmask:0x3 // 000000000028: F0800300 00610602
  s_load_dwordx16  s[16:31], s[0:1], 0x00               // 000000000030: C1080100
  s_waitcnt     lgkmcnt(0)                              // 000000000034: BF8C007F
  image_sample  v[8:11], v[2:3], s[24:31], s[12:15] dmask:0x7 // 000000000038: F0800700 00660802
  image_sample  v[11:14], v[2:3], s[16:23], s[12:15] dmask:0xf // 000000000040: F0800F00 00640B02
  v_interp_p1_f32  v4, v0, attr1.x                      // 000000000048: C8100400
  v_interp_p1_f32  v5, v0, attr1.z                      // 00000000004C: C8140600
  v_interp_p2_f32  v4, v1, attr1.x                      // 000000000050: C8110401
  v_interp_p1_f32  v15, v0, attr1.y                     // 000000000054: C83C0500
  v_interp_p2_f32  v5, v1, attr1.z                      // 000000000058: C8150601
  s_load_dwordx4  s[0:3], s[0:1], 0x1c                  // 00000000005C: C080011C
  v_interp_p2_f32  v15, v1, attr1.y                     // 000000000060: C83D0501
  ds_swizzle_b32  v16, v4 offset:32853                  // 000000000064: D8D48055 10000004
  ds_swizzle_b32  v17, v4 offset:32768                  // 00000000006C: D8D48000 11000004
  ds_swizzle_b32  v18, v5 offset:32938                  // 000000000074: D8D480AA 12000005
  ds_swizzle_b32  v19, v5 offset:32768                  // 00000000007C: D8D48000 13000005
  ds_swizzle_b32  v20, v5 offset:32853                  // 000000000084: D8D48055 14000005
  ds_swizzle_b32  v21, v5 offset:32768                  // 00000000008C: D8D48000 15000005
  s_waitcnt     lgkmcnt(0)                              // 000000000094: BF8C007F
  v_sub_f32     v16, v16, v17                           // 000000000098: 08202310
  v_sub_f32     v17, v18, v19                           // 00000000009C: 08222712
  ds_swizzle_b32  v18, v4 offset:32938                  // 0000000000A0: D8D480AA 12000004
  ds_swizzle_b32  v19, v4 offset:32768                  // 0000000000A8: D8D48000 13000004
  ds_swizzle_b32  v22, v15 offset:32938                 // 0000000000B0: D8D480AA 1600000F
  ds_swizzle_b32  v23, v15 offset:32768                 // 0000000000B8: D8D48000 1700000F
  ds_swizzle_b32  v24, v15 offset:32853                 // 0000000000C0: D8D48055 1800000F
  ds_swizzle_b32  v25, v15 offset:32768                 // 0000000000C8: D8D48000 1900000F
  v_sub_f32     v20, v20, v21                           // 0000000000D0: 08282B14
  s_waitcnt     lgkmcnt(4)                              // 0000000000D4: BF8C047F
  v_sub_f32     v18, v18, v19                           // 0000000000D8: 08242712
  s_waitcnt     lgkmcnt(2)                              // 0000000000DC: BF8C027F
  v_sub_f32     v19, v22, v23                           // 0000000000E0: 08262F16
  v_mul_legacy_f32  v21, v16, v17                       // 0000000000E4: 0E2A2310
  s_waitcnt     lgkmcnt(0)                              // 0000000000E8: BF8C007F
  v_sub_f32     v22, v24, v25                           // 0000000000EC: 082C3318
  v_mul_legacy_f32  v23, v20, v19                       // 0000000000F0: 0E2E2714
  v_mad_legacy_f32  v21, v20, v18, -v21                 // 0000000000F4: D2800015 84562514
  v_mul_legacy_f32  v24, v22, v18                       // 0000000000FC: 0E302516
  v_mad_legacy_f32  v23, v22, v17, -v23                 // 000000000100: D2800017 845E2316
  v_mul_legacy_f32  v25, v16, v21                       // 000000000108: 0E322B10
  ds_swizzle_b32  v26, v3 offset:32938                  // 00000000010C: D8D480AA 1A000003
  ds_swizzle_b32  v27, v3 offset:32768                  // 000000000114: D8D48000 1B000003
  s_buffer_load_dwordx4  s[4:7], s[0:3], 0x30           // 00000000011C: C2820130
  v_mad_legacy_f32  v24, v16, v19, -v24                 // 000000000120: D2800018 84622710
  v_mul_legacy_f32  v28, v20, v23                       // 000000000128: 0E382F14
  v_mad_legacy_f32  v25, v23, v22, -v25                 // 00000000012C: D2800019 84662D17
  ds_swizzle_b32  v29, v2 offset:32938                  // 000000000134: D8D480AA 1D000002
  ds_swizzle_b32  v30, v2 offset:32768                  // 00000000013C: D8D48000 1E000002
  s_waitcnt     lgkmcnt(0)                              // 000000000144: BF8C007F
  v_sub_f32     v26, v26, v27                           // 000000000148: 0834371A
  v_mul_legacy_f32  v27, v19, v23                       // 00000000014C: 0E362F13
  ds_swizzle_b32  v31, v3 offset:32853                  // 000000000150: D8D48055 1F000003
  ds_swizzle_b32  v3, v3 offset:32768                   // 000000000158: D8D48000 03000003
  v_mul_legacy_f32  v22, v22, v24                       // 000000000160: 0E2C3116
  v_mad_legacy_f32  v28, v24, v16, -v28                 // 000000000164: D280001C 84722118
  v_sub_f32     v16, v29, v30                           // 00000000016C: 08203D1D
  v_mul_legacy_f32  v29, v25, v26                       // 000000000170: 0E3A3519
  v_mul_legacy_f32  v30, v18, v24                       // 000000000174: 0E3C3112
  v_mad_legacy_f32  v27, v18, v21, -v27                 // 000000000178: D280001B 846E2B12
  ds_swizzle_b32  v18, v2 offset:32853                  // 000000000180: D8D48055 12000002
  ds_swizzle_b32  v2, v2 offset:32768                   // 000000000188: D8D48000 02000002
  s_waitcnt     lgkmcnt(2)                              // 000000000190: BF8C027F
  v_sub_f32     v3, v31, v3                             // 000000000194: 0806071F
  v_mad_legacy_f32  v22, v21, v20, -v22                 // 000000000198: D2800016 845A2915
  v_mul_legacy_f32  v20, v25, v16                       // 0000000001A0: 0E282119
  v_mul_legacy_f32  v25, v28, v26                       // 0000000001A4: 0E32351C
  v_mul_legacy_f32  v21, v17, v21                       // 0000000001A8: 0E2A2B11
  v_mad_legacy_f32  v30, v17, v23, -v30                 // 0000000001AC: D280001E 847A2F11
  s_waitcnt     lgkmcnt(0)                              // 0000000001B4: BF8C007F
  v_sub_f32     v2, v18, v2                             // 0000000001B8: 08040512
  v_mac_f32     v29, v3, v27                            // 0000000001BC: 3E3A3703
  v_mul_legacy_f32  v17, v28, v16                       // 0000000001C0: 0E22211C
  v_mul_legacy_f32  v18, v22, v26                       // 0000000001C4: 0E243516
  v_mad_legacy_f32  v21, v19, v24, -v21                 // 0000000001C8: D2800015 84563113
  v_mac_f32     v20, v2, v27                            // 0000000001D0: 3E283702
  v_mac_f32     v25, v3, v30                            // 0000000001D4: 3E323D03
  v_mul_legacy_f32  v19, v29, v29                       // 0000000001D8: 0E263B1D
  v_mul_legacy_f32  v16, v22, v16                       // 0000000001DC: 0E202116
  v_mac_f32     v17, v2, v30                            // 0000000001E0: 3E223D02
  v_mac_f32     v18, v3, v21                            // 0000000001E4: 3E242B03
  v_mul_legacy_f32  v3, v20, v20                        // 0000000001E8: 0E062914
  v_mac_f32     v19, v25, v25                           // 0000000001EC: 3E263319
  s_buffer_load_dwordx4  s[8:11], s[0:3], 0x10          // 0000000001F0: C2840110
  v_mac_f32     v16, v2, v21                            // 0000000001F4: 3E202B02
  v_mac_f32     v3, v17, v17                            // 0000000001F8: 3E062311
  v_mac_f32     v19, v18, v18                           // 0000000001FC: 3E262512
  s_waitcnt     vmcnt(2)                                // 000000000200: BF8C0F72
  v_mad_f32     v2, v6, 2.0, -1.0                       // 000000000204: D2820002 03CDE906
  v_sub_f32     v5, s6, v5                              // 00000000020C: 080A0A06
  s_buffer_load_dwordx4  s[12:15], s[0:3], 0x0c         // 000000000210: C286010C
  v_mac_f32     v3, v16, v16                            // 000000000214: 3E062110
  v_rsq_f32     v6, v19                                 // 000000000218: 7E0C5D13
  v_mad_f32     v7, v7, 2.0, -1.0                       // 00000000021C: D2820007 03CDE907
  v_mul_legacy_f32  v19, v2, v2                         // 000000000224: 0E260502
  v_sub_f32     v15, s5, v15                            // 000000000228: 081E1E05
  v_mul_legacy_f32  v21, v5, v5                         // 00000000022C: 0E2A0B05
  s_buffer_load_dwordx4  s[16:19], s[0:3], 0x14         // 000000000230: C2880114
  v_rsq_f32     v3, v3                                  // 000000000234: 7E065D03
  v_mul_legacy_f32  v22, v29, v6                        // 000000000238: 0E2C0D1D
  v_mac_f32     v19, v7, v7                             // 00000000023C: 3E260F07
  v_sub_f32     v4, s4, v4                              // 000000000240: 08080804
  v_mac_f32     v21, v15, v15                           // 000000000244: 3E2A1F0F
  v_mul_legacy_f32  v20, v20, v3                        // 000000000248: 0E280714
  v_mul_legacy_f32  v23, v25, v6                        // 00000000024C: 0E2E0D19
  v_mul_legacy_f32  v22, v22, v7                        // 000000000250: 0E2C0F16
  v_sub_f32     v19, 1.0, v19                           // 000000000254: 082626F2
  v_interp_p1_f32  v24, v0, attr2.z                     // 000000000258: C8600A00
  v_mac_f32     v21, v4, v4                             // 00000000025C: 3E2A0904
  v_mul_legacy_f32  v17, v17, v3                        // 000000000260: 0E220711
  v_mul_legacy_f32  v6, v18, v6                         // 000000000264: 0E0C0D12
  v_mul_legacy_f32  v18, v23, v7                        // 000000000268: 0E240F17
  v_mac_f32     v22, v2, v20                            // 00000000026C: 3E2C2902
  v_sqrt_f32    v19, v19                                // 000000000270: 7E266713
  v_interp_p1_f32  v20, v0, attr2.y                     // 000000000274: C8500900
  v_interp_p2_f32  v24, v1, attr2.z                     // 000000000278: C8610A01
  v_rsq_f32     v21, v21                                // 00000000027C: 7E2A5D15
  v_mul_legacy_f32  v3, v16, v3                         // 000000000280: 0E060710
  v_mul_legacy_f32  v6, v6, v7                          // 000000000284: 0E0C0F06
  v_mac_f32     v18, v2, v17                            // 000000000288: 3E242302
  v_interp_p1_f32  v7, v0, attr2.x                      // 00000000028C: C81C0800
  v_interp_p2_f32  v20, v1, attr2.y                     // 000000000290: C8510901
  v_mac_f32     v22, v19, v24                           // 000000000294: 3E2C3113
  s_waitcnt     lgkmcnt(0)                              // 000000000298: BF8C007F
  v_mad_legacy_f32  v16, v5, v21, -s10                  // 00000000029C: D2800010 802A2B05
  v_mac_f32     v6, v2, v3                              // 0000000002A4: 3E0C0702
  v_interp_p2_f32  v7, v1, attr2.x                      // 0000000002A8: C81D0801
  v_mac_f32     v18, v19, v20                           // 0000000002AC: 3E242913
  v_mul_legacy_f32  v2, v22, v22                        // 0000000002B0: 0E042D16
  v_mad_legacy_f32  v3, v5, v21, -s14                   // 0000000002B4: D2800003 803A2B05
  v_mad_legacy_f32  v17, v15, v21, -s9                  // 0000000002BC: D2800011 80262B0F
  v_mul_legacy_f32  v20, v16, v16                       // 0000000002C4: 0E282110
  v_mac_f32     v6, v19, v7                             // 0000000002C8: 3E0C0F13
  v_mac_f32     v2, v18, v18                            // 0000000002CC: 3E042512
  v_mad_legacy_f32  v7, v15, v21, -s13                  // 0000000002D0: D2800007 80362B0F
  v_mul_legacy_f32  v19, v3, v3                         // 0000000002D8: 0E260703
  v_mad_legacy_f32  v23, v4, v21, -s8                   // 0000000002DC: D2800017 80222B04
  v_mad_legacy_f32  v5, v5, v21, -s18                   // 0000000002E4: D2800005 804A2B05
  v_mac_f32     v20, v17, v17                           // 0000000002EC: 3E282311
  v_mac_f32     v2, v6, v6                              // 0000000002F0: 3E040D06
  v_mad_legacy_f32  v24, v4, v21, -s12                  // 0000000002F4: D2800018 80322B04
  v_mac_f32     v19, v7, v7                             // 0000000002FC: 3E260F07
  v_mad_legacy_f32  v15, v15, v21, -s17                 // 000000000300: D280000F 80462B0F
  v_mac_f32     v20, v23, v23                           // 000000000308: 3E282F17
  v_mul_legacy_f32  v25, v5, v5                         // 00000000030C: 0E320B05
  v_rsq_f32     v2, v2                                  // 000000000310: 7E045D02
  v_mac_f32     v19, v24, v24                           // 000000000314: 3E263118
  v_mad_legacy_f32  v4, v4, v21, -s16                   // 000000000318: D2800004 80422B04
  v_rsq_f32     v20, v20                                // 000000000320: 7E285D14
  v_mac_f32     v25, v15, v15                           // 000000000324: 3E321F0F
  v_mul_legacy_f32  v21, v22, v2                        // 000000000328: 0E2A0516
  v_rsq_f32     v19, v19                                // 00000000032C: 7E265D13
  v_mul_legacy_f32  v16, v16, v20                       // 000000000330: 0E202910
  v_mac_f32     v25, v4, v4                             // 000000000334: 3E320904
  v_mul_legacy_f32  v18, v18, v2                        // 000000000338: 0E240512
  v_mul_legacy_f32  v3, v3, v19                         // 00000000033C: 0E062703
  v_mul_legacy_f32  v17, v17, v20                       // 000000000340: 0E222911
  v_mul_legacy_f32  v16, v21, v16                       // 000000000344: 0E202115
  v_rsq_f32     v22, v25                                // 000000000348: 7E2C5D19
  v_mul_legacy_f32  v25, v21, -s10                      // 00000000034C: D20E0019 40001515
  s_buffer_load_dwordx4  s[4:7], s[0:3], 0x08           // 000000000354: C2820108
  v_mul_legacy_f32  v2, v6, v2                          // 000000000358: 0E040506
  v_mul_legacy_f32  v6, v7, v19                         // 00000000035C: 0E0C2707
  v_mul_legacy_f32  v3, v21, v3                         // 000000000360: 0E060715
  v_mul_legacy_f32  v7, v23, v20                        // 000000000364: 0E0E2917
  v_mac_f32     v16, v17, v18                           // 000000000368: 3E202511
  v_mul_legacy_f32  v5, v5, v22                         // 00000000036C: 0E0A2D05
  v_mul_legacy_f32  v17, v21, -s14                      // 000000000370: D20E0011 40001D15
  v_mad_legacy_f32  v25, -s9, v18, v25                  // 000000000378: D2800019 24662409
  v_mul_legacy_f32  v19, v24, v19                       // 000000000380: 0E262718
  v_mac_f32     v3, v6, v18                             // 000000000384: 3E062506
  v_mac_f32     v16, v7, v2                             // 000000000388: 3E200507
  v_mul_legacy_f32  v6, v15, v22                        // 00000000038C: 0E0C2D0F
  v_mul_legacy_f32  v5, v21, v5                         // 000000000390: 0E0A0B15
  v_mad_legacy_f32  v17, -s13, v18, v17                 // 000000000394: D2800011 2446240D
  v_mad_legacy_f32  v25, -s8, v2, v25                   // 00000000039C: D2800019 24660408
  v_mul_legacy_f32  v7, v21, -s18                       // 0000000003A4: D20E0007 40002515
  v_mac_f32     v3, v19, v2                             // 0000000003AC: 3E060513
  v_mul_legacy_f32  v4, v4, v22                         // 0000000003B0: 0E082D04
  v_mac_f32     v5, v6, v18                             // 0000000003B4: 3E0A2506
  v_max_legacy_f32  v6, 0, v16                          // 0000000003B8: 1C0C2080
  v_mad_legacy_f32  v17, -s12, v2, v17                  // 0000000003BC: D2800011 2446040C
  v_mad_legacy_f32  v7, -s17, v18, v7                   // 0000000003C4: D2800007 241E2411
  v_cmp_ge_f32  s[8:9], v25, 0                          // 0000000003CC: D00C0008 00010119
  s_buffer_load_dwordx4  s[12:15], s[0:3], 0x28         // 0000000003D4: C2860128
  v_mac_f32     v5, v4, v2                              // 0000000003D8: 3E0A0504
  v_max_legacy_f32  v3, 0, v3                           // 0000000003DC: 1C060680
  v_mad_legacy_f32  v7, -s16, v2, v7                    // 0000000003E0: D2800007 241E0410
  v_cmp_ge_f32  s[10:11], v17, 0                        // 0000000003E8: D00C000A 00010111
  v_cndmask_b32  v2, 0, v6, s[8:9]                      // 0000000003F0: D2000002 00220C80
  s_buffer_load_dwordx4  s[16:19], s[0:3], 0x24         // 0000000003F8: C2880124
  v_max_legacy_f32  v4, 0, v5                           // 0000000003FC: 1C080A80
  v_cmp_ge_f32  s[20:21], v7, 0                         // 000000000400: D00C0014 00010107
  v_cndmask_b32  v3, 0, v3, s[10:11]                    // 000000000408: D2000003 002A0680
  v_log_f32     v2, v2                                  // 000000000410: 7E044F02
  s_buffer_load_dwordx4  s[24:27], s[0:3], 0x1c         // 000000000414: C28C011C
  s_buffer_load_dwordx4  s[28:31], s[0:3], 0x2c         // 000000000418: C28E012C
  v_cndmask_b32  v4, 0, v4, s[20:21]                    // 00000000041C: D2000004 00520880
  v_log_f32     v3, v3                                  // 000000000424: 7E064F03
  s_waitcnt     lgkmcnt(0)                              // 000000000428: BF8C007F
  v_mul_legacy_f32  v2, s7, v2                          // 00000000042C: 0E040407
  s_buffer_load_dwordx4  s[32:35], s[0:3], 0x18         // 000000000430: C2900118
  v_log_f32     v4, v4                                  // 000000000434: 7E084F04
  v_mul_legacy_f32  v3, s7, v3                          // 000000000438: 0E060607
  v_exp_f32     v2, v2                                  // 00000000043C: 7E044B02
  s_buffer_load_dwordx4  s[36:39], s[0:3], 0x04         // 000000000440: C2920104
  s_buffer_load_dwordx4  s[40:43], s[0:3], 0x20         // 000000000444: C2940120
  v_mul_legacy_f32  v4, s7, v4                          // 000000000448: 0E080807
  v_exp_f32     v3, v3                                  // 00000000044C: 7E064B03
  v_mul_legacy_f32  v2, v25, v2                         // 000000000450: 0E040519
  s_buffer_load_dwordx4  s[44:47], s[0:3], 0x00         // 000000000454: C2960100
  v_exp_f32     v4, v4                                  // 000000000458: 7E084B04
  v_mul_legacy_f32  v3, v17, v3                         // 00000000045C: 0E060711
  v_mul_legacy_f32  v5, s12, v2                         // 000000000460: 0E0A040C
  v_mul_legacy_f32  v6, s13, v2                         // 000000000464: 0E0C040D
  v_mul_legacy_f32  v2, s14, v2                         // 000000000468: 0E04040E
  v_cndmask_b32  v15, 0, v25, s[8:9]                    // 00000000046C: D200000F 00223280
  v_mul_legacy_f32  v4, v7, v4                          // 000000000474: 0E080907
  v_mac_f32     v5, s16, v3                             // 000000000478: 3E0A0610
  v_mac_f32     v6, s17, v3                             // 00000000047C: 3E0C0611
  v_mac_f32     v2, s18, v3                             // 000000000480: 3E040612
  s_buffer_load_dwordx4  s[0:3], s[0:3], 0x34           // 000000000484: C2800134
  v_cndmask_b32  v3, 0, v17, s[10:11]                   // 000000000488: D2000003 002A2280
  v_mac_f32     v5, s28, v4                             // 000000000490: 3E0A081C
  v_mac_f32     v6, s29, v4                             // 000000000494: 3E0C081D
  v_mac_f32     v2, s30, v4                             // 000000000498: 3E04081E
  v_interp_p1_f32  v4, v0, attr3.w                      // 00000000049C: C8100F00
  v_mul_legacy_f32  v16, s24, v15                       // 0000000004A0: 0E201E18
  v_mul_legacy_f32  v17, s25, v15                       // 0000000004A4: 0E221E19
  v_mul_legacy_f32  v15, s26, v15                       // 0000000004A8: 0E1E1E1A
  v_cndmask_b32  v7, 0, v7, s[20:21]                    // 0000000004AC: D2000007 00520E80
  v_mul_legacy_f32  v5, s4, v5                          // 0000000004B4: 0E0A0A04
  v_mul_legacy_f32  v6, s5, v6                          // 0000000004B8: 0E0C0C05
  v_mul_legacy_f32  v2, s6, v2                          // 0000000004BC: 0E040406
  v_interp_p1_f32  v18, v0, attr3.x                     // 0000000004C0: C8480C00
  v_interp_p1_f32  v19, v0, attr3.y                     // 0000000004C4: C84C0D00
  v_interp_p1_f32  v20, v0, attr3.z                     // 0000000004C8: C8500E00
  v_interp_p2_f32  v4, v1, attr3.w                      // 0000000004CC: C8110F01
  s_waitcnt     lgkmcnt(0)                              // 0000000004D0: BF8C007F
  v_mac_f32     v16, s32, v3                            // 0000000004D4: 3E200620
  v_mac_f32     v17, s33, v3                            // 0000000004D8: 3E220621
  v_mac_f32     v15, s34, v3                            // 0000000004DC: 3E1E0622
  s_waitcnt     vmcnt(1)                                // 0000000004E0: BF8C0F71
  v_mul_legacy_f32  v3, v5, v8                          // 0000000004E4: 0E061105
  v_mul_legacy_f32  v5, v6, v9                          // 0000000004E8: 0E0A1306
  v_mul_legacy_f32  v2, v2, v10                         // 0000000004EC: 0E041502
  v_interp_p2_f32  v18, v1, attr3.x                     // 0000000004F0: C8490C01
  v_interp_p2_f32  v19, v1, attr3.y                     // 0000000004F4: C84D0D01
  v_interp_p2_f32  v20, v1, attr3.z                     // 0000000004F8: C8510E01
  s_waitcnt     vmcnt(0)                                // 0000000004FC: BF8C0F70
  v_mul_legacy_f32  v4, v14, v4                         // 000000000500: 0E08090E
  v_mac_f32     v16, s40, v7                            // 000000000504: 3E200E28
  v_mac_f32     v17, s41, v7                            // 000000000508: 3E220E29
  v_mac_f32     v15, s42, v7                            // 00000000050C: 3E1E0E2A
  v_mov_b32     v6, s36                                 // 000000000510: 7E0C0224
  v_mov_b32     v7, s37                                 // 000000000514: 7E0E0225
  v_mov_b32     v8, s38                                 // 000000000518: 7E100226
  v_mul_legacy_f32  v9, v11, v18                        // 00000000051C: 0E12250B
  v_mul_legacy_f32  v10, v12, v19                       // 000000000520: 0E14270C
  v_mul_legacy_f32  v11, v13, v20                       // 000000000524: 0E16290D
  v_mul_legacy_f32  v3, v3, v4                          // 000000000528: 0E060903
  v_mul_legacy_f32  v5, v5, v4                          // 00000000052C: 0E0A0905
  v_mul_legacy_f32  v2, v2, v4                          // 000000000530: 0E040902
  v_mac_f32     v6, s44, v16                            // 000000000534: 3E0C202C
  v_mac_f32     v7, s45, v17                            // 000000000538: 3E0E222D
  v_mac_f32     v8, s46, v15                            // 00000000053C: 3E101E2E
  v_mac_f32     v3, v9, v6                              // 000000000540: 3E060D09
  v_mac_f32     v5, v10, v7                             // 000000000544: 3E0A0F0A
  v_mac_f32     v2, v11, v8                             // 000000000548: 3E04110B
  v_interp_p1_f32  v0, v0, attr1.w                      // 00000000054C: C8000700
  v_mad_legacy_f32  v6, s0, v4, -v3                     // 000000000550: D2800006 840E0800
  v_mad_legacy_f32  v7, s1, v4, -v5                     // 000000000558: D2800007 84160801
  v_mad_legacy_f32  v8, s2, v4, -v2                     // 000000000560: D2800008 840A0802
  v_interp_p2_f32  v0, v1, attr1.w                      // 000000000568: C8010701
  v_mac_f32     v3, v0, v6                              // 00000000056C: 3E060D00
  v_mac_f32     v5, v0, v7                              // 000000000570: 3E0A0F00
  v_mac_f32     v2, v0, v8                              // 000000000574: 3E041100
  s_mov_b64     exec, s[48:49]                          // 000000000578: BEFE0430
  v_cvt_pkrtz_f16_f32  v0, v3, v5                       // 00000000057C: 5E000B03
  v_cvt_pkrtz_f16_f32  v1, v2, v4                       // 000000000580: 5E020902
  exp           mrt0, v0, v0, v1, v1 done compr vm      // 000000000584: F8001C0F 00000100
  s_endpgm                                              // 00000000058C: BF810000
end


// Shader Statistics:
//  NumActiveWaveFront:         32
//  WorkgroupSize:              64
//  NumVRegs:                   32
//  NumSRegs:                   52
//  NumActiveWaveFrontByVReg:   32
//  NumActiveWaveFrontBySReg:   36
//  NumActiveWaveFrontByLDS:    40
//  CycleSim:                   291
//  CycleSimNWaves:             291
//  Code Size:                  1424
//Assembler Counts:
//  num_32bit_ops                     : 226
//  num_64bit_ops                     : 65
//  num_alu                           : 229
//  num_fc                            : 38
//  num_inst_exp                      : 1
//  num_inst_ldsgds                   : 20
//  num_inst_mimg                     : 3
//  num_inst_mtbuf                    : 0
//  num_inst_mubuf                    : 0
//  num_inst_sopp                     : 16
//  num_inst_sopc                     : 0
//  num_inst_sop1                     : 4
//  num_inst_sop2                     : 0
//  num_inst_smrd                     : 0
//  num_inst_sopk                     : 0
//  num_inst_vop1                     : 17
//  num_inst_vop2                     : 145
//  num_inst_vop3                     : 33
//  num_inst_vopc                     : 0
//  num_inst_vintrp                   : 26
//  constant_literal_operands         : 0
//  num_tex                           : 24
//  num_vmem_group                    : 2
//  vmem_grouping_started             : 0
//
//Compilation Notes:
//
//  PS has no UAV writes, consider forcing REZ/LATEZ.
// Shader Statistics:
// m_uNumActiveWaveFront             : 32
// m_uVRegLimit                      : 256
// m_uSRegLimit                      : 512
// m_uNumVRegs                       : 32
// m_uNumSRegs                       : 52
// m_uSCCodeSize                     : 1424
// m_uWorkgroupSize                  : 64
// m_uNumActiveWaveFrontByVReg       : 32
// m_uNumActiveWaveFrontBySReg       : 36
// m_uNumActiveWaveFrontByLDS        : 40
// m_uCycleSim1Wave                  : 291
// m_uCycleSimNWaves                 : 291

// Assembler Counts:
// num_32bit_ops                     : 226
// num_64bit_ops                     : 65
// num_alu                           : 229
// num_fc                            : 38
// num_inst_exp                      : 1
// num_inst_ldsgds                   : 20
// num_inst_mimg                     : 3
// num_inst_mtbuf                    : 0
// num_inst_mubuf                    : 0
// num_inst_sopp                     : 16
// num_inst_sopc                     : 0
// num_inst_sop1                     : 4
// num_inst_sop2                     : 0
// num_inst_smrd                     : 0
// num_inst_sopk                     : 0
// num_inst_vop1                     : 17
// num_inst_vop2                     : 145
// num_inst_vop3                     : 33
// num_inst_vopc                     : 0
// num_inst_vintrp                   : 26
// num_inst_smem                     : 18
// constant_literal_operands         : 0
// num_tex                           : 24
// num_vmem_group                    : 2
// vmem_grouping_started             : 0
// m_fFullPrecompilePromise          : 0
// m_fIntegerDivideExpansion         : 0
// m_fIntegerModExpansion            : 0
// m_fDoubleDivideExpansion          : 0
// m_fUsesScratch                    : 0
// m_fPerThreadIndirection           : 0
// m_fUsingTableLoads                : 0
// m_fUsingSHmemLoads                : 1
// fSemanticHashFlagOverrideApplied  : 0
// fPSHasNoUAVWrite                  : 1
// m_fRenderTargetsCanBeCompacted    : 0
// version                           : 3
// fCodePatched                      : 0

// Approximately 0 instruction slots used
#endif

const BYTE NormalMapEffect_PSNormalPixelLightingTx[] =
{
     68,  88,  66,  67, 254,  16, 
    123,  77, 150, 192, 225, 107, 
     44,  51,  93,  82, 178, 111, 
     61, 228,   1,   0,   0,   0, 
     60,  18,   0,   0,   5,   0, 
      0,   0,  52,   0,   0,   0, 
    180,   0,   0,   0, 232,   0, 
      0,   0, 192,  17,   0,   0, 
    208,  17,   0,   0,  73,  83, 
     71,  78, 120,   0,   0,   0, 
      4,   0,   0,   0,   8,   0, 
      0,   0, 104,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      0,   0,   0,   0,   3,   3, 
      0,   0, 104,   0,   0,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   0,   0,  15,  15, 
      0,   0, 104,   0,   0,   0, 
      2,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      2,   0,   0,   0,   7,   7, 
      0,   0, 113,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      3,   0,   0,   0,  15,  15, 
      0,   0,  84,  69,  88,  67, 
     79,  79,  82,  68,   0,  67, 
     79,  76,  79,  82,   0, 171, 
     79,  83,  71,  78,  44,   0, 
      0,   0,   1,   0,   0,   0, 
      8,   0,   0,   0,  32,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   3,   0, 
      0,   0,   0,   0,   0,   0, 
     15,   0,   0,   0,  83,  86, 
     95,  84,  97, 114, 103, 101, 
    116,   0, 171, 171,  83,  72, 
     69,  88, 208,  16,   0,   0, 
     80,   0,   0,   0,  52,   4, 
      0,   0,  53,  16,   0,   0, 
      5,   0,   0,   0, 144,   2, 
      0,   0,  80,   0,   0,   0, 
    139,   2,   0,   0, 106,   8, 
      0,   1,  89,   0,   0,   4, 
     70, 142,  32,   0,   0,   0, 
      0,   0,  26,   0,   0,   0, 
     90,   0,   0,   3,   0,  96, 
     16,   0,   0,   0,   0,   0, 
     88,  24,   0,   4,   0, 112, 
     16,   0,   0,   0,   0,   0, 
     85,  85,   0,   0,  88,  24, 
      0,   4,   0, 112,  16,   0, 
      1,   0,   0,   0,  85,  85, 
      0,   0,  88,  24,   0,   4, 
      0, 112,  16,   0,   2,   0, 
      0,   0,  85,  85,   0,   0, 
     98,  16,   0,   3,  50,  16, 
     16,   0,   0,   0,   0,   0, 
     98,  16,   0,   3, 242,  16, 
     16,   0,   1,   0,   0,   0, 
     98,  16,   0,   3, 114,  16, 
     16,   0,   2,   0,   0,   0, 
     98,  16,   0,   3, 242,  16, 
     16,   0,   3,   0,   0,   0, 
    101,   0,   0,   3, 242,  32, 
     16,   0,   0,   0,   0,   0, 
    104,   0,   0,   2,   5,   0, 
      0,   0, 122,   0,   0,   5, 
    114,   0,  16,   0,   0,   0, 
      0,   0, 150,  20,  16,   0, 
      1,   0,   0,   0, 124,   0, 
      0,   5, 114,   0,  16,   0, 
      1,   0,   0,   0,  38,  25, 
     16,   0,   1,   0,   0,   0, 
     56,   0,   0,   7, 114,   0, 
     16,   0,   2,   0,   0,   0, 
     70,   2,  16,   0,   0,   0, 
      0,   0, 150,   4,  16,   0, 
      1,   0,   0,   0,  50,   0, 
      0,  10, 114,   0,  16,   0, 
      2,   0,   0,   0,  38,   9, 
     16,   0,   0,   0,   0,   0, 
     38,   9,  16,   0,   1,   0, 
      0,   0,  70,   2,  16, 128, 
     65,   0,   0,   0,   2,   0, 
      0,   0,  56,   0,   0,   7, 
    114,   0,  16,   0,   3,   0, 
      0,   0,  70,   2,  16,   0, 
      0,   0,   0,   0,  70,   2, 
     16,   0,   2,   0,   0,   0, 
     50,   0,   0,  10, 114,   0, 
     16,   0,   0,   0,   0,   0, 
     38,   9,  16,   0,   2,   0, 
      0,   0, 150,   4,  16,   0, 
      0,   0,   0,   0,  70,   2, 
     16, 128,  65,   0,   0,   0, 
      3,   0,   0,   0, 124,   0, 
      0,   5,  50,   0,  16,   0, 
      3,   0,   0,   0,  70,  16, 
     16,   0,   0,   0,   0,   0, 
     56,   0,   0,   7, 210,   0, 
     16,   0,   3,   0,   0,   0, 
      6,   9,  16,   0,   0,   0, 
      0,   0,   6,   0,  16,   0, 
      3,   0,   0,   0,  56,   0, 
      0,   7, 114,   0,  16,   0, 
      0,   0,   0,   0,  70,   2, 
     16,   0,   0,   0,   0,   0, 
     86,   5,  16,   0,   3,   0, 
      0,   0,  56,   0,   0,   7, 
    114,   0,  16,   0,   4,   0, 
      0,   0,  70,   2,  16,   0, 
      1,   0,   0,   0,  38,   9, 
     16,   0,   2,   0,   0,   0, 
     50,   0,   0,  10, 114,   0, 
     16,   0,   1,   0,   0,   0, 
     38,   9,  16,   0,   1,   0, 
      0,   0,  70,   2,  16,   0, 
      2,   0,   0,   0,  70,   2, 
     16, 128,  65,   0,   0,   0, 
      4,   0,   0,   0, 122,   0, 
      0,   5,  50,   0,  16,   0, 
      2,   0,   0,   0,  70,  16, 
     16,   0,   0,   0,   0,   0, 
     50,   0,   0,   9, 210,   0, 
     16,   0,   2,   0,   0,   0, 
      6,   0,  16,   0,   2,   0, 
      0,   0,   6,   9,  16,   0, 
      1,   0,   0,   0,   6,  14, 
     16,   0,   3,   0,   0,   0, 
     50,   0,   0,   9, 114,   0, 
     16,   0,   0,   0,   0,   0, 
     86,   5,  16,   0,   2,   0, 
      0,   0,  70,   2,  16,   0, 
      1,   0,   0,   0,  70,   2, 
     16,   0,   0,   0,   0,   0, 
     16,   0,   0,   7, 130,   0, 
     16,   0,   0,   0,   0,   0, 
    134,   3,  16,   0,   2,   0, 
      0,   0, 134,   3,  16,   0, 
      2,   0,   0,   0,  68,   0, 
      0,   5, 130,   0,  16,   0, 
      0,   0,   0,   0,  58,   0, 
     16,   0,   0,   0,   0,   0, 
     56,   0,   0,   7, 114,   0, 
     16,   0,   1,   0,   0,   0, 
    246,  15,  16,   0,   0,   0, 
      0,   0, 134,   3,  16,   0, 
      2,   0,   0,   0,  16,   0, 
      0,   7, 130,   0,  16,   0, 
      0,   0,   0,   0,  70,   2, 
     16,   0,   0,   0,   0,   0, 
     70,   2,  16,   0,   0,   0, 
      0,   0,  68,   0,   0,   5, 
    130,   0,  16,   0,   0,   0, 
      0,   0,  58,   0,  16,   0, 
      0,   0,   0,   0,  56,   0, 
      0,   7, 114,   0,  16,   0, 
      0,   0,   0,   0, 246,  15, 
     16,   0,   0,   0,   0,   0, 
     70,   2,  16,   0,   0,   0, 
      0,   0,  69,   0,   0, 139, 
    194,   0,   0, 128,  67,  85, 
     21,   0,  50,   0,  16,   0, 
      2,   0,   0,   0,  70,  16, 
     16,   0,   0,   0,   0,   0, 
     70, 126,  16,   0,   2,   0, 
      0,   0,   0,  96,  16,   0, 
      0,   0,   0,   0,  50,   0, 
      0,  15,  50,   0,  16,   0, 
      2,   0,   0,   0,  70,   0, 
     16,   0,   2,   0,   0,   0, 
      2,  64,   0,   0,   0,   0, 
      0,  64,   0,   0,   0,  64, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   2,  64,   0,   0, 
      0,   0, 128, 191,   0,   0, 
    128, 191,   0,   0,   0,   0, 
      0,   0,   0,   0,  56,   0, 
      0,   7, 114,   0,  16,   0, 
      0,   0,   0,   0,  70,   2, 
     16,   0,   0,   0,   0,   0, 
     86,   5,  16,   0,   2,   0, 
      0,   0,  50,   0,   0,   9, 
    114,   0,  16,   0,   0,   0, 
      0,   0,   6,   0,  16,   0, 
      2,   0,   0,   0,  70,   2, 
     16,   0,   1,   0,   0,   0, 
     70,   2,  16,   0,   0,   0, 
      0,   0,  15,   0,   0,   7, 
    130,   0,  16,   0,   0,   0, 
      0,   0,  70,   0,  16,   0, 
      2,   0,   0,   0,  70,   0, 
     16,   0,   2,   0,   0,   0, 
      0,   0,   0,   8, 130,   0, 
     16,   0,   0,   0,   0,   0, 
     58,   0,  16, 128,  65,   0, 
      0,   0,   0,   0,   0,   0, 
      1,  64,   0,   0,   0,   0, 
    128,  63,  75,   0,   0,   5, 
    130,   0,  16,   0,   0,   0, 
      0,   0,  58,   0,  16,   0, 
      0,   0,   0,   0,  50,   0, 
      0,   9, 114,   0,  16,   0, 
      0,   0,   0,   0, 246,  15, 
     16,   0,   0,   0,   0,   0, 
     70,  18,  16,   0,   2,   0, 
      0,   0,  70,   2,  16,   0, 
      0,   0,   0,   0,  16,   0, 
      0,   7, 130,   0,  16,   0, 
      0,   0,   0,   0,  70,   2, 
     16,   0,   0,   0,   0,   0, 
     70,   2,  16,   0,   0,   0, 
      0,   0,  68,   0,   0,   5, 
    130,   0,  16,   0,   0,   0, 
      0,   0,  58,   0,  16,   0, 
      0,   0,   0,   0,  56,   0, 
      0,   7, 114,   0,  16,   0, 
      0,   0,   0,   0, 246,  15, 
     16,   0,   0,   0,   0,   0, 
     70,   2,  16,   0,   0,   0, 
      0,   0,   0,   0,   0,   9, 
    114,   0,  16,   0,   1,   0, 
      0,   0,  70,  18,  16, 128, 
     65,   0,   0,   0,   1,   0, 
      0,   0,  70, 130,  32,   0, 
      0,   0,   0,   0,  12,   0, 
      0,   0,  16,   0,   0,   7, 
    130,   0,  16,   0,   0,   0, 
      0,   0,  70,   2,  16,   0, 
      1,   0,   0,   0,  70,   2, 
     16,   0,   1,   0,   0,   0, 
     68,   0,   0,   5, 130,   0, 
     16,   0,   0,   0,   0,   0, 
     58,   0,  16,   0,   0,   0, 
      0,   0,  50,   0,   0,  11, 
    114,   0,  16,   0,   2,   0, 
      0,   0,  70,   2,  16,   0, 
      1,   0,   0,   0, 246,  15, 
     16,   0,   0,   0,   0,   0, 
     70, 130,  32, 128,  65,   0, 
      0,   0,   0,   0,   0,   0, 
      3,   0,   0,   0,  16,   0, 
      0,   7, 130,   0,  16,   0, 
      1,   0,   0,   0,  70,   2, 
     16,   0,   2,   0,   0,   0, 
     70,   2,  16,   0,   2,   0, 
      0,   0,  68,   0,   0,   5, 
    130,   0,  16,   0,   1,   0, 
      0,   0,  58,   0,  16,   0, 
      1,   0,   0,   0,  56,   0, 
      0,   7, 114,   0,  16,   0, 
      2,   0,   0,   0, 246,  15, 
     16,   0,   1,   0,   0,   0, 
     70,   2,  16,   0,   2,   0, 
      0,   0,  16,   0,   0,   7, 
     18,   0,  16,   0,   2,   0, 
      0,   0,  70,   2,  16,   0, 
      2,   0,   0,   0,  70,   2, 
     16,   0,   0,   0,   0,   0, 
     50,   0,   0,  11, 114,   0, 
     16,   0,   3,   0,   0,   0, 
     70,   2,  16,   0,   1,   0, 
      0,   0, 246,  15,  16,   0, 
      0,   0,   0,   0,  70, 130, 
     32, 128,  65,   0,   0,   0, 
      0,   0,   0,   0,   4,   0, 
      0,   0,  50,   0,   0,  11, 
    114,   0,  16,   0,   1,   0, 
      0,   0,  70,   2,  16,   0, 
      1,   0,   0,   0, 246,  15, 
     16,   0,   0,   0,   0,   0, 
     70, 130,  32, 128,  65,   0, 
      0,   0,   0,   0,   0,   0, 
      5,   0,   0,   0,  16,   0, 
      0,   7, 130,   0,  16,   0, 
      0,   0,   0,   0,  70,   2, 
     16,   0,   3,   0,   0,   0, 
     70,   2,  16,   0,   3,   0, 
      0,   0,  68,   0,   0,   5, 
    130,   0,  16,   0,   0,   0, 
      0,   0,  58,   0,  16,   0, 
      0,   0,   0,   0,  56,   0, 
      0,   7, 114,   0,  16,   0, 
      3,   0,   0,   0, 246,  15, 
     16,   0,   0,   0,   0,   0, 
     70,   2,  16,   0,   3,   0, 
      0,   0,  16,   0,   0,   7, 
     34,   0,  16,   0,   2,   0, 
      0,   0,  70,   2,  16,   0, 
      3,   0,   0,   0,  70,   2, 
     16,   0,   0,   0,   0,   0, 
     16,   0,   0,   7, 130,   0, 
     16,   0,   0,   0,   0,   0, 
     70,   2,  16,   0,   1,   0, 
      0,   0,  70,   2,  16,   0, 
      1,   0,   0,   0,  68,   0, 
      0,   5, 130,   0,  16,   0, 
      0,   0,   0,   0,  58,   0, 
     16,   0,   0,   0,   0,   0, 
     56,   0,   0,   7, 114,   0, 
     16,   0,   1,   0,   0,   0, 
    246,  15,  16,   0,   0,   0, 
      0,   0,  70,   2,  16,   0, 
      1,   0,   0,   0,  16,   0, 
      0,   7,  66,   0,  16,   0, 
      2,   0,   0,   0,  70,   2, 
     16,   0,   1,   0,   0,   0, 
     70,   2,  16,   0,   0,   0, 
      0,   0,  52,   0,   0,  10, 
    114,   0,  16,   0,   1,   0, 
      0,   0,  70,   2,  16,   0, 
      2,   0,   0,   0,   2,  64, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
     16,   0,   0,   9,  18,   0, 
     16,   0,   2,   0,   0,   0, 
     70, 130,  32, 128,  65,   0, 
      0,   0,   0,   0,   0,   0, 
      3,   0,   0,   0,  70,   2, 
     16,   0,   0,   0,   0,   0, 
     16,   0,   0,   9,  34,   0, 
     16,   0,   2,   0,   0,   0, 
     70, 130,  32, 128,  65,   0, 
      0,   0,   0,   0,   0,   0, 
      4,   0,   0,   0,  70,   2, 
     16,   0,   0,   0,   0,   0, 
     16,   0,   0,   9,  66,   0, 
     16,   0,   2,   0,   0,   0, 
     70, 130,  32, 128,  65,   0, 
      0,   0,   0,   0,   0,   0, 
      5,   0,   0,   0,  70,   2, 
     16,   0,   0,   0,   0,   0, 
     29,   0,   0,  10, 114,   0, 
     16,   0,   0,   0,   0,   0, 
     70,   2,  16,   0,   2,   0, 
      0,   0,   2,  64,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   1,   0, 
      0,  10, 114,   0,  16,   0, 
      0,   0,   0,   0,  70,   2, 
     16,   0,   0,   0,   0,   0, 
      2,  64,   0,   0,   0,   0, 
    128,  63,   0,   0, 128,  63, 
      0,   0, 128,  63,   0,   0, 
      0,   0,  56,   0,   0,   7, 
    114,   0,  16,   0,   1,   0, 
      0,   0,  70,   2,  16,   0, 
      0,   0,   0,   0,  70,   2, 
     16,   0,   1,   0,   0,   0, 
     56,   0,   0,   7, 114,   0, 
     16,   0,   0,   0,   0,   0, 
     70,   2,  16,   0,   2,   0, 
      0,   0,  70,   2,  16,   0, 
      0,   0,   0,   0,  47,   0, 
      0,   5, 114,   0,  16,   0, 
      1,   0,   0,   0,  70,   2, 
     16,   0,   1,   0,   0,   0, 
     56,   0,   0,   8, 114,   0, 
     16,   0,   1,   0,   0,   0, 
     70,   2,  16,   0,   1,   0, 
      0,   0, 246, 143,  32,   0, 
      0,   0,   0,   0,   2,   0, 
      0,   0,  25,   0,   0,   5, 
    114,   0,  16,   0,   1,   0, 
      0,   0,  70,   2,  16,   0, 
      1,   0,   0,   0,  56,   0, 
      0,   7, 114,   0,  16,   0, 
      1,   0,   0,   0,  70,   2, 
     16,   0,   2,   0,   0,   0, 
     70,   2,  16,   0,   1,   0, 
      0,   0,  56,   0,   0,   8, 
    114,   0,  16,   0,   2,   0, 
      0,   0,  86,   5,  16,   0, 
      1,   0,   0,   0,  70, 130, 
     32,   0,   0,   0,   0,   0, 
     10,   0,   0,   0,  50,   0, 
      0,  10, 178,   0,  16,   0, 
      1,   0,   0,   0,   6,   0, 
     16,   0,   1,   0,   0,   0, 
     70, 136,  32,   0,   0,   0, 
      0,   0,   9,   0,   0,   0, 
     70,   8,  16,   0,   2,   0, 
      0,   0,  50,   0,   0,  10, 
    114,   0,  16,   0,   1,   0, 
      0,   0, 166,  10,  16,   0, 
      1,   0,   0,   0,  70, 130, 
     32,   0,   0,   0,   0,   0, 
     11,   0,   0,   0,  70,   3, 
     16,   0,   1,   0,   0,   0, 
     56,   0,   0,   8, 114,   0, 
     16,   0,   1,   0,   0,   0, 
     70,   2,  16,   0,   1,   0, 
      0,   0,  70, 130,  32,   0, 
      0,   0,   0,   0,   2,   0, 
      0,   0,  69,   0,   0, 139, 
    194,   0,   0, 128,  67,  85, 
     21,   0, 114,   0,  16,   0, 
      2,   0,   0,   0,  70,  16, 
     16,   0,   0,   0,   0,   0, 
     70, 126,  16,   0,   1,   0, 
      0,   0,   0,  96,  16,   0, 
      0,   0,   0,   0,  56,   0, 
      0,   7, 114,   0,  16,   0, 
      1,   0,   0,   0,  70,   2, 
     16,   0,   1,   0,   0,   0, 
     70,   2,  16,   0,   2,   0, 
      0,   0,  69,   0,   0, 139, 
    194,   0,   0, 128,  67,  85, 
     21,   0, 242,   0,  16,   0, 
      2,   0,   0,   0,  70,  16, 
     16,   0,   0,   0,   0,   0, 
     70, 126,  16,   0,   0,   0, 
      0,   0,   0,  96,  16,   0, 
      0,   0,   0,   0,  56,   0, 
      0,   7, 242,   0,  16,   0, 
      2,   0,   0,   0,  70,  14, 
     16,   0,   2,   0,   0,   0, 
     70,  30,  16,   0,   3,   0, 
      0,   0,  56,   0,   0,   7, 
    114,   0,  16,   0,   1,   0, 
      0,   0,  70,   2,  16,   0, 
      1,   0,   0,   0, 246,  15, 
     16,   0,   2,   0,   0,   0, 
     56,   0,   0,   8, 114,   0, 
     16,   0,   3,   0,   0,   0, 
     86,   5,  16,   0,   0,   0, 
      0,   0,  70, 130,  32,   0, 
      0,   0,   0,   0,   7,   0, 
      0,   0,  50,   0,   0,  10, 
    178,   0,  16,   0,   0,   0, 
      0,   0,   6,   0,  16,   0, 
      0,   0,   0,   0,  70, 136, 
     32,   0,   0,   0,   0,   0, 
      6,   0,   0,   0,  70,   8, 
     16,   0,   3,   0,   0,   0, 
     50,   0,   0,  10, 114,   0, 
     16,   0,   0,   0,   0,   0, 
    166,  10,  16,   0,   0,   0, 
      0,   0,  70, 130,  32,   0, 
      0,   0,   0,   0,   8,   0, 
      0,   0,  70,   3,  16,   0, 
      0,   0,   0,   0,  50,   0, 
      0,  11, 114,   0,  16,   0, 
      0,   0,   0,   0,  70,   2, 
     16,   0,   0,   0,   0,   0, 
     70, 130,  32,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
     70, 130,  32,   0,   0,   0, 
      0,   0,   1,   0,   0,   0, 
     50,   0,   0,   9, 114,   0, 
     16,   0,   0,   0,   0,   0, 
     70,   2,  16,   0,   2,   0, 
      0,   0,  70,   2,  16,   0, 
      0,   0,   0,   0,  70,   2, 
     16,   0,   1,   0,   0,   0, 
     50,   0,   0,  11, 114,   0, 
     16,   0,   1,   0,   0,   0, 
     70, 130,  32,   0,   0,   0, 
      0,   0,  13,   0,   0,   0, 
    246,  15,  16,   0,   2,   0, 
      0,   0,  70,   2,  16, 128, 
     65,   0,   0,   0,   0,   0, 
      0,   0,  50,   0,   0,   9, 
    114,  32,  16,   0,   0,   0, 
      0,   0, 246,  31,  16,   0, 
      1,   0,   0,   0,  70,   2, 
     16,   0,   1,   0,   0,   0, 
     70,   2,  16,   0,   0,   0, 
      0,   0,  54,   0,   0,   5, 
    130,  32,  16,   0,   0,   0, 
      0,   0,  58,   0,  16,   0, 
      2,   0,   0,   0,  62,   0, 
      0,   1,  53,  16,   0,   0, 
    164,   1,   0,   0,  23,   0, 
      1,   0,  41,   1,  21,   0, 
    120,   1, 237,  88,  77, 108, 
     27, 199,  21, 158, 217, 157, 
    157,  29, 174, 150, 179, 187, 
    252,  19, 233,  80,  20,  69, 
    173, 150, 191, 146,  44, 217, 
    142,  11, 215, 154,  58, 117, 
    234, 180,  85,  92,  59, 177, 
     19,   4,   6, 101,  91, 138, 
     36,  71, 128,  99, 171, 178, 
     80,  24,  61, 172, 183,   1, 
     27, 244,  32,  20, 110, 250, 
    131,  30, 122, 232,  33, 185, 
    244,  84, 160, 151, 156,  44, 
    151, 167, 237,  33,  64,  65, 
    244, 208,  67,  79,   5, 122, 
    232, 173,  40, 122, 232, 161, 
     72, 251, 222, 138, 172, 149, 
    164, 185,   9, 104,  81, 232, 
      3, 190, 121, 243, 102, 222, 
     60, 190, 153, 247,  72,  12, 
    135, 230,  73, 130,  32, 216, 
    190, 140, 210, 206,  44, 125, 
    183,  99,  17,  98,  64, 159, 
      2,  81,  34, 126, 154, 198, 
    150, 144, 159, 103, 177,  37, 
    164, 138,  13,  26, 104,   7, 
    253, 211, 192, 199,  96, 124, 
      1,  36, 234,  62, 176,   1, 
     36, 143, 223, 187, 248, 209, 
    207, 126, 120,  17, 187, 115, 
     64, 156, 155, 134, 117, 200, 
     63,  66, 255,   5, 224, 159, 
    128,   1,  16, 134,  72,  14, 
    168,   3,  71, 112, 177,   1, 
     48, 108,  14, 193,   3, 254, 
      0,  56,   5,  68, 156,   0, 
    102, 128, 136,  34,  16, 194, 
    122, 134,  13, 108, 254,  51, 
     48,  14, 140, 233, 243, 128, 
    177,  97,  60,  24,  23, 198, 
    135, 113,  34, 112, 191, 255, 
    109,  96,  60, 163, 211, 194, 
     62, 114, 148,  39,   4, 230, 
    227,  48,  36,  16, 109,  16, 
    141,  97,  30,  71,  38, 231, 
     15, 229,  21, 247, 246,  20, 
    248, 121, 248,  39, 224, 211, 
    103,  54, 210,  49,  79, 124, 
     24,  19, 167, 147, 132,   8, 
    144,  90,  61,  73,  36, 215, 
    191, 116, 144, 156, 255, 115, 
    140, 106,  21,  37, 214,  33, 
    214, 176,   3,  28,  97,  52, 
    127,  43,  73,  70, 180, 143, 
    124,  92,  36, 127,  71, 109, 
    164,  83, 208,  15,  78, 241, 
     64, 215,  81,  79, 146, 117, 
     72,   7,  71, 250,  24, 185, 
    169, 165, 180, 155,  78,  25, 
    214, 131,  63, 208, 187, 160, 
    119,  15, 233,  55,  64, 191, 
    113,  72, 191,  13, 250, 237, 
     67, 250,  26, 232, 107,  35, 
    125, 228, 223,  73,  62,  79, 
     99, 152, 107,  24,  12, 255, 
    151, 121,  28, 227, 209, 240, 
     56, 198, 163, 225, 113, 140, 
     71, 195, 227,  24, 143, 134, 
    199,  49,  30,  13, 143,  99, 
     60,  26,  30, 199, 120, 100, 
     36,  33, 251, 229, 147, 208, 
    250, 248, 137,  75, 251,  79, 
    139, 244, 221, 167, 154, 254, 
    143,  39, 112, 233, 142,   9, 
    181,  99,  74,  82,  49, 165, 
    233, 248,  17, 217, 219,  39, 
    122, 244,  23, 141, 175, 194, 
     31,   0, 241, 235,  68,  55, 
     65,  23, 155, 112,  49,   5, 
     57, 182,  14, 151,  82,  55, 
     38,  60,  23,  83, 230, 197, 
    196,  56,  31,  83, 158, 143, 
    203,  52, 122,  74, 141, 165, 
    248, 181, 232, 119, 191, 135, 
    171, 166,  75,  14, 164, 247, 
     11, 144, 112,  21, 205, 160, 
     14,  50, 139, 243,  32, 115, 
     67,  61, 143, 254, 221, 233, 
    170, 200, 212, 107,   2, 109, 
     97,  77,  98,  11,  50, 139, 
     58, 220, 133,  11, 168, 131, 
     28, 199, 181,  32, 139,  67, 
    189, 148, 107,  55, 196,  35, 
    182, 183, 159, 169, 251, 226, 
    145, 182, 183,  95, 152,  15, 
    132,  59, 221, 146, 232, 179, 
    120, 170,  35, 114, 245,  57, 
    153,  39, 209,  32,  55, 243, 
    122, 175,  48, 115,  82, 142, 
     67, 191,  48, 125, 179, 231, 
    182,  23,  37, 250, 134,  59, 
    243,   9, 244,   5, 242, 185, 
    147, 244, 157,  62,  56,  30, 
    184, 245, 181,  94, 110, 254, 
     11, 178,   4, 253, 241, 217, 
    205,  30, 218, 193, 189, 124, 
      2, 237,  64,  86, 208, 247, 
    137, 179, 167,  69, 118, 254, 
    121, 137, 241, 192, 218, 201, 
    161,  15, 189, 176, 208, 145, 
    101,  88,  87, 156, 218, 233, 
     77,  44,  85,  69, 233, 204, 
     57, 153,  89,  56,  47, 159, 
    131, 177,  76, 251,  94,  15, 
    237, 193,  71, 178,  63, 144, 
     26, 198,  60, 105, 114,   1, 
     27,  28, 228, 155,  55, 122, 
    165, 169, 134,  44, 159,  89, 
    148,  94, 187,  37,  43,  48, 
    230, 205, 127, 187, 135, 159, 
    151,  49, 152, 208, 207, 158, 
     83, 229, 169, 154,  44, 156, 
    241, 147,  61, 101,  23,  94, 
    239, 105, 103,  27,  74,  95, 
     90,  84,  19,  95,  12, 100, 
     97, 170,  42, 181, 165, 154, 
    210, 219, 190, 202,  53, 185, 
     44, 157,  10, 148,  75, 123, 
    125, 173,  93,  85, 222,  52, 
     87, 153, 153,  64, 237,  56, 
    123, 251,  26, 121, 103, 192, 
    255, 252, 145, 206,  45,  75, 
    216, 244, 221, 190,  59, 197, 
     85, 118, 197,  14,  77,  24, 
     55,  97,  92,  51,   2, 105, 
     84,  42, 194,  24, 107, 201, 
     28, 253,  94,  95,  95, 225, 
    225,  68, 186,  35,  77,  39, 
     80,  76,   8, 225,  76, 182, 
     84, 206, 108, 200,  82, 122, 
     78,  22, 156, 142, 252, 107, 
     16,   8,  98, 221, 142,  89, 
    170, 165,  60, 179,  38,  51, 
    105,  91, 142,  59, 190, 212, 
    154,  29, 149, 189,  19, 132, 
     36, 117,  53, 166, 214, 106, 
    156,  95, 105, 133, 174, 201, 
     37, 119, 108, 169,  77, 251, 
    138, 136, 114,  76,  83, 175, 
    196, 217, 133, 142, 194,  61, 
     66, 193,  12, 140, 118,  43, 
    210,  76,  91,  81,  49,  17, 
    103, 155, 190,  42, 204,  50, 
    169,  39, 227, 231,  34,  15, 
    164, 211,  14,  34,  23, 206, 
     40, 235, 216, 176,  31, 166, 
    204, 100, 236, 249,  72,  55, 
    131,  36, 183, 172,  93, 139, 
     12, 144,  70, 251, 235, 145, 
     55, 221,  80,  60, 205,  20, 
    230, 148, 181,  23,  35, 140, 
    223, 129, 190, 211, 190,  20, 
    141, 207,  55, 148,  49, 182, 
     40, 181,  21,  22,  22,  23, 
     96,  95, 137, 205, 151, 163, 
    220,  74,  35, 116,  38,  23, 
     85, 193, 104, 201, 236,  74, 
     16, 186, 205, 170, 100, 169, 
     69, 149,  49, 124, 169, 215, 
    185, 244, 154,  53, 153, 135, 
    115,  46, 173, 116, 194,  18, 
    145, 131, 124, 158,  92,  16, 
     80,  55, 220,  96, 210, 172, 
    219,  50,  15, 251,  27, 111, 
     74, 233, 205,  84, 149,  49, 
    107,  73,  15, 109,  38, 200, 
      5, 172, 165, 148, 191, 233, 
     23, 235, 129, 228,  51,  92, 
    153,  70,  85,  57, 179,  96, 
     63, 134,  54, 209,  32, 237, 
     95, 242, 209,  70, 176,  77, 
    223, 196,  53,  51, 228,  66, 
    214, 224, 138, 205,  10, 176, 
    183,  84,  84, 181, 203, 104, 
    103, 179,  75,  48,  15, 117, 
    225,  87, 124,  65, 236, 223, 
    150,  40,  37,  13, 200,  33, 
     51, 192, 134, 243,  50, 206, 
    185, 172, 226,  91,  48, 231, 
    193,  28, 212, 216,  32, 178, 
    107, 196, 135,  60,  70, 150, 
     40, 231,  96, 220, 132, 113, 
    168, 213,  65, 196,  91,  68, 
    187, 194, 194,  50, 221, 235, 
    119, 232, 247, 251, 240, 125, 
     27,  68, 226,  85, 162,  95, 
    225,  33, 230, 195, 100,  76, 
     22, 233, 227,  62, 187,  34, 
     66, 147, 115, 169,  45, 179, 
    144, 209, 247, 250,  85, 250, 
    163, 190,  41, 132, 212, 151, 
    121,  88, 130, 125,  19, 250, 
    147,  62,  91,  22, 161,   7, 
    123, 183, 153,  37, 211, 204, 
    150,  18, 214, 194, 247, 115, 
     16,  45, 214, 136, 153,  18, 
    210, 229, 150, 242,  56, 228, 
    140,  51, 117, 154,  70, 253, 
    228, 243, 107,  45,  82,  22, 
    150, 154,  16, 182, 170,   8, 
    166, 136, 227, 198, 197,  10, 
    156, 109, 165,  38,  79,  84, 
     42, 210,  68,  27, 249,  42, 
     97, 150,  37,  13, 219, 150, 
     28, 124,  18, 251, 171,  49, 
     73, 191,  28,  19,   9,  53, 
    229, 120, 201, 111,  85, 149, 
     87, 213,  20, 175, 169,  26, 
    175, 168, 111,  66, 125,  27, 
     30, 212,  88, 214, 146,  90, 
    158,  73, 106, 127,  45, 166, 
    233, 203,  49, 149, 175, 196, 
    219,  48,  39,  33, 150, 134, 
    172, 170, 166, 172,  41, 248, 
    134,  41,  95, 179, 195,  25, 
     77, 134, 129, 230, 134,  99, 
     51,  25, 105, 215, 115,  50, 
    221,  44,  72,  61, 197, 165, 
    145,   2,  31,  41,  38,  59, 
     85,  91, 205, 214, 164, 154, 
    171, 184,  42, 149, 230, 202, 
    114,  44,  53, 230,  65, 188, 
     38, 137,  57, 156,  55,  17, 
    178, 135, 231,  78,  69, 161, 
     39,  64, 106, 194, 234,  81, 
    147,  66, 156,  28, 246, 100, 
     41,   2, 182,  39, 217, 199, 
     79, 224, 191, 243,  39, 254, 
    123,  19, 242, 157, 253,  18, 
     74,  72, 210, 103,  32,  18, 
    131, 103,  64,  21, 198,   4, 
    136, 127,   3, 215, 193,  24, 
    190,  23, 140, 144, 172,  98, 
    244,  19, 207,  38, 137, 123, 
     24,  43, 163,  28, 226,  15, 
    195, 247, 155,  15, 135,  18, 
    223, 223,  82, 192, 164,  50, 
      0, 248,  62, 198,   8, 135, 
    150, 144, 223, 252, 248, 218, 
    107, 191, 250, 224, 212,  85, 
    236,  35, 114, 248, 184,   5, 
    248, 219, 112,  45, 190, 229, 
    216, 192, 103, 120,  31, 155, 
    207, 224, 252, 112,  93, 103, 
     40,  49, 110, 168,  57,  34, 
     71, 175,  74, 248, 224,   4, 
    232,  14, 231, 175,  15,  37, 
    238, 121,  12, 248, 233,  56, 
    118, 135, 243, 248,  92, 135, 
    145, 190, 120, 174, 251, 194, 
    245, 151, 186,  15, 118, 111, 
    173, 111, 124, 171, 187, 188, 
    181, 251, 160, 251, 226, 214, 
    206, 198, 155, 187, 111,  92, 
     95, 238,  62, 216, 121, 179, 
    123, 237, 173, 213, 245, 141, 
    157,   7, 221, 139, 247, 223, 
    222, 222, 186, 187, 177, 222, 
    125,  99, 237, 254, 195,  43, 
    247,  54, 190, 113, 127, 231, 
    237, 213, 187, 151,  87, 183, 
    191, 178, 185,   9, 230, 183, 
    174,  94,  59,  24, 185, 186, 
    245, 112, 227, 238, 203,  91, 
    119, 222, 218, 221, 186, 119, 
    231, 250, 195, 185, 237, 245, 
     53, 242,  47, 236,  54, 249, 
    117,   0,  88,  72,  83,  72, 
      8,   0,   0,   0, 201, 149, 
     83,  85, 179, 165,  51,  80, 
     88,  80,  68,  80, 100,   0, 
      0,   0,  68,  58,  92,  65, 
     84,  71,  92, 115, 116,  95, 
    100, 101, 118,  92,  75, 105, 
    116, 115,  92,  68, 105, 114, 
    101,  99, 116,  88,  84,  75, 
     92, 115, 114,  99,  92,  83, 
    104,  97, 100, 101, 114, 115, 
     92,  67, 111, 109, 112, 105, 
    108, 101, 100,  92,  88,  98, 
    111, 120,  79, 110, 101,  78, 
    111, 114, 109,  97, 108,  77, 
     97, 112,  69, 102, 102, 101, 
     99, 116,  95,  80,  83,  78, 
    111, 114, 109,  97, 108,  80, 
    105, 120, 101, 108,  76, 105, 
    103, 104, 116, 105, 110, 103, 
     84, 120,  46, 112, 100,  98
};
