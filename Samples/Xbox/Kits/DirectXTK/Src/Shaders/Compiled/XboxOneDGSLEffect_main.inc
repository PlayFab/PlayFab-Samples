#if 0
//
// Generated by Microsoft (R) D3D Shader Disassembler for Durango
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// COLOR                    0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xyz         3     NONE   float   xyz 
// TEXCOORD                 2   xyz         4     NONE   float   xyz 
// TEXCOORD                 3   xyz         5     NONE   float   xyz 
// TEXCOORD                 4   xyzw        6     NONE   float   xyzw
// TEXCOORD                 5   xyz         7     NONE   float   xyz 
//
vs_5_0
// Opaque Custom Data - XBOX Precompiled Shader Header
// First Precompiled Shader at offset:[192]
// Embedded Data:
//  0x000000c0 - Offset To First Precompiled Shader
//  0x00010050 - Original Shader Descriptor
//  0x000000bb - Original Shader Size
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[5], immediateIndexed
dcl_constantbuffer CB2[21], immediateIndexed
dcl_input v0.xyzw
dcl_input v1.xyz
dcl_input v2.xyzw
dcl_input v3.xy
dcl_output_siv o0.xyzw, position
dcl_output o1.xyzw
dcl_output o2.xy
dcl_output o3.xyz
dcl_output o4.xyz
dcl_output o5.xyz
dcl_output o6.xyzw
dcl_output o7.xyz
dcl_temps 1
dp4 o0.x, v0.xyzw, cb2[4].xyzw
dp4 o0.y, v0.xyzw, cb2[5].xyzw
dp4 o0.z, v0.xyzw, cb2[6].xyzw
dp4 o0.w, v0.xyzw, cb2[7].xyzw
mov o1.xyzw, cb0[1].xyzw
mov r0.xy, v3.xyxx
mov r0.z, l(1.000000)
dp3 o2.x, r0.xyzx, cb2[16].xywx
dp3 o2.y, r0.xyzx, cb2[17].xywx
dp3 o3.x, v1.xyzx, cb2[0].xyzx
dp3 o3.y, v1.xyzx, cb2[1].xyzx
dp3 o3.z, v1.xyzx, cb2[2].xyzx
dp4 r0.x, v0.xyzw, cb2[0].xyzw
dp4 r0.y, v0.xyzw, cb2[1].xyzw
dp4 r0.z, v0.xyzw, cb2[2].xyzw
mov o4.xyz, r0.xyzx
add o5.xyz, -r0.xyzx, cb2[20].xyzx
mov o6.xyzw, v2.xyzw
mov o7.xyz, v1.xyzx
ret 
// Opaque Custom Data - XBOX Precompiled Shader Object
// Offset:[192], bundle is:[201] DWORDS.
// Disassembled Precompiled Shader Object:
// Shader Type               : (VS)
// Shader Hw Stage           : (VS)
// PDB Filename              : D:\ATG\st_dev\Kits\DirectXTK\src\Shaders\Compiled\XboxOneDGSLEffect_main.pdb
// Shader Semantic Hash      : 0xb3178b140629218d
//
// Shader Data:
; ----------------- VS Data ------------------------
; Input Semantic Mappings
;   [0] generic, usageIdx  0, channelMask 15, v[4:7]
;   [1] generic, usageIdx  1, channelMask  7, v[8:10]
;   [2] generic, usageIdx  2, channelMask 15, v[12:15]
;   [3] generic, usageIdx  3, channelMask  3, v[16:17]
; Output Semantic Mappings
;   [0] generic,  usageIdx 1, paramIdx 0, paramSlot 0
;   [1] generic,  usageIdx 2, paramIdx 1, paramSlot 0
;   [2] generic,  usageIdx 3, paramIdx 2, paramSlot 0
;   [3] generic,  usageIdx 4, paramIdx 3, paramSlot 0
;   [4] generic,  usageIdx 5, paramIdx 4, paramSlot 0
;   [5] generic,  usageIdx 6, paramIdx 5, paramSlot 0
;   [6] generic,  usageIdx 7, paramIdx 6, paramSlot 0

codeLenInByte        = 316 bytes;

; launchModeFlags    = 0x0000000E
srdTableSupport      = TRUE
immediateSupportExt  = TRUE
srdTableSupportExt   = TRUE

userElementCount     = 3;
;  userElements[0]      = PTR_VERTEX_BUFFER_TABLE, Element=1 dwords, s[0x2:3]
;  userElements[1]      = PTR_EXTENDED_USER_DATA, ReferencedExtUserElements=1, s[0x2:3]
;  userElements[2]      = SUB_PTR_FETCH_SHADER, s[0x2:3]
extUserElementCount  = 2;
;  extUserElements 1[0] = IMM_CONST_BUFFER 0, offset 0x0:3 dwords
;  extUserElements 1[1] = IMM_CONST_BUFFER 2, offset 0x4:7 dwords
NumVgprs             = 28;
NumSgprs             = 46;
FloatMode            = 192;
IeeeMode             = 0;
FlatPtr32            = 0;
ScratchSize          = 0 dwords/thread;
LDSByteSize          = 0 bytes/workgroup (compile time only);
ScratchWaveOffsetReg = s65535;
; texSamplerUsage         = 0x00000000
; constBufUsage           = 0x00000005

; SPI_SHADER_PGM_RSRC2_VS = 0x00000008
SSPRV:USER_SGPR             = 4
; PA_CL_VS_OUT_CNTL       = 0x00000000
; SPI_VS_OUT_CONFIG       = 0x0000000C
SVOC:VS_EXPORT_COUNT        = 6
SVOC:VS_HALF_PACK           = 0
SVOC:VS_EXPORTS_FOG         = 0
SVOC:VS_OUT_FOG_VEC_ADDR    = 0
; SPI_SHADER_POS_FORMAT     = 0x00000004
SSPF:POS0_EXPORT_FORMAT     = 4
SSPF:POS1_EXPORT_FORMAT     = 0
SSPF:POS2_EXPORT_FORMAT     = 0
SSPF:POS3_EXPORT_FORMAT     = 0
VGT_STRMOUT_CONFIG = 0x0
VGT_STRMOUT_CONFIG:RAST_STREAM = 0
VGT_STRMOUT_CONFIG:STREAMOUT_0_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_1_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_2_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_3_EN = 0
; exportVertexSize          = 4

// Shader Instructions:
shader main
  asic(CI)
  type(VS)
  s_swappc_b64  s[2:3], s[2:3]                          // 000000000000: BE822102
  s_load_dwordx8  s[0:7], s[2:3], 0x00                  // 000000000004: C0C00300
  s_waitcnt     lgkmcnt(0)                              // 000000000008: BF8C007F
  s_buffer_load_dwordx8  s[8:15], s[4:7], 0x00          // 00000000000C: C2C40500
  s_buffer_load_dwordx4  s[16:19], s[4:7], 0x08         // 000000000010: C2880508
  s_buffer_load_dwordx16  s[20:35], s[4:7], 0x10        // 000000000014: C30A0510
  s_buffer_load_dwordx8  s[36:43], s[4:7], 0x40         // 000000000018: C2D20540
  s_buffer_load_dwordx4  s[0:3], s[0:3], 0x04           // 00000000001C: C2800104
  s_buffer_load_dwordx4  s[4:7], s[4:7], 0x50           // 000000000020: C2820550
  s_waitcnt     vmcnt(0) & lgkmcnt(0)                   // 000000000024: BF8C0070
  v_mul_legacy_f32  v0, s11, v7                         // 000000000028: 0E000E0B
  v_mul_legacy_f32  v1, s15, v7                         // 00000000002C: 0E020E0F
  v_mul_legacy_f32  v2, s19, v7                         // 000000000030: 0E040E13
  v_mul_legacy_f32  v3, s23, v7                         // 000000000034: 0E060E17
  v_mul_legacy_f32  v11, s27, v7                        // 000000000038: 0E160E1B
  v_mul_legacy_f32  v18, s31, v7                        // 00000000003C: 0E240E1F
  v_mul_legacy_f32  v7, s35, v7                         // 000000000040: 0E0E0E23
  v_mac_f32     v0, s10, v6                             // 000000000044: 3E000C0A
  v_mac_f32     v1, s14, v6                             // 000000000048: 3E020C0E
  v_mac_f32     v2, s18, v6                             // 00000000004C: 3E040C12
  v_mac_legacy_f32  v3, s22, v6                         // 000000000050: 0C060C16
  v_mac_legacy_f32  v11, s26, v6                        // 000000000054: 0C160C1A
  v_mac_legacy_f32  v18, s30, v6                        // 000000000058: 0C240C1E
  v_mac_legacy_f32  v7, s34, v6                         // 00000000005C: 0C0E0C22
  v_mov_b32     v6, s39                                 // 000000000060: 7E0C0227
  v_mov_b32     v19, s43                                // 000000000064: 7E26022B
  v_mul_legacy_f32  v20, s10, v10                       // 000000000068: 0E28140A
  v_mul_legacy_f32  v21, s14, v10                       // 00000000006C: 0E2A140E
  v_mul_legacy_f32  v22, s18, v10                       // 000000000070: 0E2C1412
  v_mac_f32     v0, s9, v5                              // 000000000074: 3E000A09
  v_mac_f32     v1, s13, v5                             // 000000000078: 3E020A0D
  v_mac_f32     v2, s17, v5                             // 00000000007C: 3E040A11
  v_mac_legacy_f32  v3, s21, v5                         // 000000000080: 0C060A15
  v_mac_legacy_f32  v11, s25, v5                        // 000000000084: 0C160A19
  v_mac_legacy_f32  v18, s29, v5                        // 000000000088: 0C240A1D
  v_mac_legacy_f32  v7, s33, v5                         // 00000000008C: 0C0E0A21
  v_mac_f32     v6, s37, v17                            // 000000000090: 3E0C2225
  v_mac_f32     v19, s41, v17                           // 000000000094: 3E262229
  v_mac_f32     v20, s9, v9                             // 000000000098: 3E281209
  v_mac_f32     v21, s13, v9                            // 00000000009C: 3E2A120D
  v_mac_f32     v22, s17, v9                            // 0000000000A0: 3E2C1211
  v_mac_f32     v0, s8, v4                              // 0000000000A4: 3E000808
  v_mac_f32     v1, s12, v4                             // 0000000000A8: 3E02080C
  v_mac_f32     v2, s16, v4                             // 0000000000AC: 3E040810
  v_mac_legacy_f32  v3, s20, v4                         // 0000000000B0: 0C060814
  v_mac_legacy_f32  v11, s24, v4                        // 0000000000B4: 0C160818
  v_mac_legacy_f32  v18, s28, v4                        // 0000000000B8: 0C24081C
  v_mac_legacy_f32  v7, s32, v4                         // 0000000000BC: 0C0E0820
  v_mac_f32     v6, s36, v16                            // 0000000000C0: 3E0C2024
  v_mac_f32     v19, s40, v16                           // 0000000000C4: 3E262028
  v_mac_f32     v20, s8, v8                             // 0000000000C8: 3E281008
  v_mac_f32     v21, s12, v8                            // 0000000000CC: 3E2A100C
  v_mac_f32     v22, s16, v8                            // 0000000000D0: 3E2C1010
  v_sub_f32     v4, s4, v0                              // 0000000000D4: 08080004
  v_sub_f32     v5, s5, v1                              // 0000000000D8: 080A0205
  v_sub_f32     v16, s6, v2                             // 0000000000DC: 08200406
  v_mov_b32     v17, s0                                 // 0000000000E0: 7E220200
  v_mov_b32     v23, s1                                 // 0000000000E4: 7E2E0201
  v_mov_b32     v24, s2                                 // 0000000000E8: 7E300202
  v_mov_b32     v25, s3                                 // 0000000000EC: 7E320203
  v_mov_b32     v26, 0                                  // 0000000000F0: 7E340280
  v_mov_b32     v27, 1.0                                // 0000000000F4: 7E3602F2
  exp           pos0, v3, v11, v18, v7 done             // 0000000000F8: F80008CF 07120B03
  exp           param0, v17, v23, v24, v25              // 000000000100: F800020F 19181711
  exp           param1, v6, v19, v26, v27               // 000000000108: F800021F 1B1A1306
  exp           param2, v20, v21, v22, v27              // 000000000110: F800022F 1B161514
  exp           param3, v0, v1, v2, v27                 // 000000000118: F800023F 1B020100
  exp           param4, v4, v5, v16, v27                // 000000000120: F800024F 1B100504
  exp           param5, v12, v13, v14, v15              // 000000000128: F800025F 0F0E0D0C
  exp           param6, v8, v9, v10, v27                // 000000000130: F800026F 1B0A0908
  s_endpgm                                              // 000000000138: BF810000
end


// Shader Statistics:
//  NumActiveWaveFront:         36
//  WorkgroupSize:              64
//  NumVRegs:                   28
//  NumSRegs:                   46
//  NumActiveWaveFrontByVReg:   36
//  NumActiveWaveFrontBySReg:   40
//  NumActiveWaveFrontByLDS:    40
//  CycleSim:                   84
//  CycleSimNWaves:             84
//  Code Size:                  316
//Assembler Counts:
//  num_32bit_ops                     : 63
//  num_64bit_ops                     : 8
//  num_alu                           : 52
//  num_fc                            : 11
//  num_inst_exp                      : 8
//  num_inst_ldsgds                   : 0
//  num_inst_mimg                     : 0
//  num_inst_mtbuf                    : 0
//  num_inst_mubuf                    : 0
//  num_inst_sopp                     : 3
//  num_inst_sopc                     : 0
//  num_inst_sop1                     : 1
//  num_inst_sop2                     : 0
//  num_inst_smrd                     : 0
//  num_inst_sopk                     : 0
//  num_inst_vop1                     : 8
//  num_inst_vop2                     : 44
//  num_inst_vop3                     : 0
//  num_inst_vopc                     : 0
//  num_inst_vintrp                   : 0
//  constant_literal_operands         : 0
//  num_tex                           : 8
//  num_vmem_group                    : 0
//  vmem_grouping_started             : 0
// Shader Statistics:
// m_uNumActiveWaveFront             : 36
// m_uVRegLimit                      : 256
// m_uSRegLimit                      : 512
// m_uNumVRegs                       : 28
// m_uNumSRegs                       : 46
// m_uSCCodeSize                     : 316
// m_uWorkgroupSize                  : 64
// m_uNumActiveWaveFrontByVReg       : 36
// m_uNumActiveWaveFrontBySReg       : 40
// m_uNumActiveWaveFrontByLDS        : 40
// m_uCycleSim1Wave                  : 84
// m_uCycleSimNWaves                 : 84

// Assembler Counts:
// num_32bit_ops                     : 63
// num_64bit_ops                     : 8
// num_alu                           : 52
// num_fc                            : 11
// num_inst_exp                      : 8
// num_inst_ldsgds                   : 0
// num_inst_mimg                     : 0
// num_inst_mtbuf                    : 0
// num_inst_mubuf                    : 0
// num_inst_sopp                     : 3
// num_inst_sopc                     : 0
// num_inst_sop1                     : 1
// num_inst_sop2                     : 0
// num_inst_smrd                     : 0
// num_inst_sopk                     : 0
// num_inst_vop1                     : 8
// num_inst_vop2                     : 44
// num_inst_vop3                     : 0
// num_inst_vopc                     : 0
// num_inst_vintrp                   : 0
// num_inst_smem                     : 7
// constant_literal_operands         : 0
// num_tex                           : 8
// num_vmem_group                    : 0
// vmem_grouping_started             : 0
// m_fFullPrecompilePromise          : 0
// m_fIntegerDivideExpansion         : 0
// m_fIntegerModExpansion            : 0
// m_fDoubleDivideExpansion          : 0
// m_fUsesScratch                    : 0
// m_fPerThreadIndirection           : 0
// m_fUsingTableLoads                : 0
// m_fUsingSHmemLoads                : 1
// fSemanticHashFlagOverrideApplied  : 0
// fPSHasNoUAVWrite                  : 0
// m_fRenderTargetsCanBeCompacted    : 0
// version                           : 3
// fCodePatched                      : 0

// Opaque Custom Data - XBOX Precompiled Shader Object
// Offset:[395], bundle is:[215] DWORDS.
// Disassembled Precompiled Shader Object:
// Shader Type               : (VS)
// Shader Hw Stage           : (ES)
// PDB Filename              : D:\ATG\st_dev\Kits\DirectXTK\src\Shaders\Compiled\XboxOneDGSLEffect_main.pdb
// Shader Semantic Hash      : 0xb3178b140629218d
//
// Shader Data:
; ----------------- VS Data ------------------------
; Input Semantic Mappings
;   [0] generic, usageIdx  0, channelMask 15, v[4:7]
;   [1] generic, usageIdx  1, channelMask  7, v[8:10]
;   [2] generic, usageIdx  2, channelMask 15, v[12:15]
;   [3] generic, usageIdx  3, channelMask  3, v[16:17]
; Output Semantic Mappings
;   [0] position,  usageIdx 0, paramIdx 0, paramSlot 0
;   [1] generic,  usageIdx 1, paramIdx 1, paramSlot 0
;   [2] generic,  usageIdx 2, paramIdx 2, paramSlot 0
;   [3] generic,  usageIdx 3, paramIdx 3, paramSlot 0
;   [4] generic,  usageIdx 4, paramIdx 4, paramSlot 0
;   [5] generic,  usageIdx 5, paramIdx 5, paramSlot 0
;   [6] generic,  usageIdx 6, paramIdx 6, paramSlot 0
;   [7] generic,  usageIdx 7, paramIdx 7, paramSlot 0

codeLenInByte        = 468 bytes;

; launchModeFlags    = 0x0000000E
srdTableSupport      = TRUE
immediateSupportExt  = TRUE
srdTableSupportExt   = TRUE

userElementCount     = 4;
;  userElements[0]      = PTR_VERTEX_BUFFER_TABLE, Element=1 dwords, s[0x2:3]
;  userElements[1]      = PTR_EXTENDED_USER_DATA, ReferencedExtUserElements=1, s[0x2:3]
;  userElements[2]      = PTR_INTERNAL_GLOBAL_TABLE, Element=1 dwords, s[0x2:3]
;  userElements[3]      = SUB_PTR_FETCH_SHADER, s[0x2:3]
extUserElementCount  = 2;
;  extUserElements 1[0] = IMM_CONST_BUFFER 0, offset 0x0:3 dwords
;  extUserElements 1[1] = IMM_CONST_BUFFER 2, offset 0x4:7 dwords
NumVgprs             = 18;
NumSgprs             = 42;
FloatMode            = 192;
IeeeMode             = 0;
FlatPtr32            = 0;
ScratchSize          = 0 dwords/thread;
LDSByteSize          = 0 bytes/workgroup (compile time only);
ScratchWaveOffsetReg = s65535;
; texSamplerUsage         = 0x00000000
; constBufUsage           = 0x00000005

; SPI_SHADER_PGM_RSRC2_VS = 0x00000008
SSPRV:USER_SGPR             = 4
; PA_CL_VS_OUT_CNTL       = 0x00000000
; SPI_VS_OUT_CONFIG       = 0x00000000
SVOC:VS_EXPORT_COUNT        = 0
SVOC:VS_HALF_PACK           = 0
SVOC:VS_EXPORTS_FOG         = 0
SVOC:VS_OUT_FOG_VEC_ADDR    = 0
; SPI_SHADER_POS_FORMAT     = 0x00000004
SSPF:POS0_EXPORT_FORMAT     = 4
SSPF:POS1_EXPORT_FORMAT     = 0
SSPF:POS2_EXPORT_FORMAT     = 0
SSPF:POS3_EXPORT_FORMAT     = 0
VGT_STRMOUT_CONFIG = 0x0
VGT_STRMOUT_CONFIG:RAST_STREAM = 0
VGT_STRMOUT_CONFIG:STREAMOUT_0_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_1_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_2_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_3_EN = 0
; exportVertexSize          = 32
; esGsRingItemSize          = 32

// Shader Instructions:
shader main
  asic(CI)
  type(VS)
  s_swappc_b64  s[2:3], s[2:3]                          // 000000000000: BE822102
  s_load_dwordx8  s[8:15], s[2:3], 0x00                 // 000000000004: C0C40300
  s_waitcnt     lgkmcnt(0)                              // 000000000008: BF8C007F
  s_buffer_load_dwordx16  s[16:31], s[12:15], 0x10      // 00000000000C: C3080D10
  s_waitcnt     vmcnt(0) & lgkmcnt(0)                   // 000000000010: BF8C0070
  v_mul_legacy_f32  v0, s19, v7                         // 000000000014: 0E000E13
  s_load_dwordx4  s[0:3], s[2:3], 0x10                  // 000000000018: C0800310
  v_mac_legacy_f32  v0, s18, v6                         // 00000000001C: 0C000C12
  v_mul_legacy_f32  v1, s23, v7                         // 000000000020: 0E020E17
  s_buffer_load_dwordx4  s[8:11], s[8:11], 0x04         // 000000000024: C2840904
  v_mac_legacy_f32  v0, s17, v5                         // 000000000028: 0C000A11
  v_mac_legacy_f32  v1, s22, v6                         // 00000000002C: 0C020C16
  v_mul_legacy_f32  v2, s27, v7                         // 000000000030: 0E040E1B
  v_mac_legacy_f32  v0, s16, v4                         // 000000000034: 0C000810
  v_mac_legacy_f32  v1, s21, v5                         // 000000000038: 0C020A15
  v_mac_legacy_f32  v2, s26, v6                         // 00000000003C: 0C040C1A
  v_mul_legacy_f32  v3, s31, v7                         // 000000000040: 0E060E1F
  s_buffer_load_dwordx8  s[32:39], s[12:15], 0x40       // 000000000044: C2D00D40
  v_mac_legacy_f32  v1, s20, v4                         // 000000000048: 0C020814
  v_mac_legacy_f32  v2, s25, v5                         // 00000000004C: 0C040A19
  v_mac_legacy_f32  v3, s30, v6                         // 000000000050: 0C060C1E
  v_mac_legacy_f32  v2, s24, v4                         // 000000000054: 0C040818
  v_mac_legacy_f32  v3, s29, v5                         // 000000000058: 0C060A1D
  s_buffer_load_dwordx8  s[16:23], s[12:15], 0x00       // 00000000005C: C2C80D00
  v_mac_legacy_f32  v3, s28, v4                         // 000000000060: 0C06081C
  s_waitcnt     lgkmcnt(0)                              // 000000000064: BF8C007F
  buffer_store_dword  v0, v0, s[0:3], s4 glc slc        // 000000000068: E0704000 04400000
  buffer_store_dword  v1, v0, s[0:3], s4 offset:4 glc slc // 000000000070: E0704004 04400100
  v_mov_b32     v0, s8                                  // 000000000078: 7E000208
  s_buffer_load_dwordx4  s[24:27], s[12:15], 0x08       // 00000000007C: C28C0D08
  buffer_store_dword  v2, v0, s[0:3], s4 offset:8 glc slc // 000000000080: E0704008 04400200
  v_mov_b32     v1, s9                                  // 000000000088: 7E020209
  v_mov_b32     v2, s35                                 // 00000000008C: 7E040223
  buffer_store_dword  v3, v0, s[0:3], s4 offset:12 glc slc // 000000000090: E070400C 04400300
  v_mov_b32     v3, s10                                 // 000000000098: 7E06020A
  v_mac_legacy_f32  v2, s33, v17                        // 00000000009C: 0C042221
  v_mov_b32     v11, s39                                // 0000000000A0: 7E160227
  buffer_store_dword  v0, v0, s[0:3], s4 offset:16 glc slc // 0000000000A4: E0704010 04400000
  v_mov_b32     v0, s11                                 // 0000000000AC: 7E00020B
  v_mac_legacy_f32  v2, s32, v16                        // 0000000000B0: 0C042020
  v_mac_legacy_f32  v11, s37, v17                       // 0000000000B4: 0C162225
  v_mul_legacy_f32  v17, s18, v10                       // 0000000000B8: 0E221412
  buffer_store_dword  v1, v0, s[0:3], s4 offset:20 glc slc // 0000000000BC: E0704014 04400100
  v_mac_legacy_f32  v11, s36, v16                       // 0000000000C4: 0C162024
  v_mac_legacy_f32  v17, s17, v9                        // 0000000000C8: 0C221211
  v_mul_legacy_f32  v1, s22, v10                        // 0000000000CC: 0E021416
  buffer_store_dword  v3, v0, s[0:3], s4 offset:24 glc slc // 0000000000D0: E0704018 04400300
  v_mac_legacy_f32  v17, s16, v8                        // 0000000000D8: 0C221010
  v_mac_legacy_f32  v1, s21, v9                         // 0000000000DC: 0C021215
  s_waitcnt     lgkmcnt(0)                              // 0000000000E0: BF8C007F
  v_mul_legacy_f32  v3, s26, v10                        // 0000000000E4: 0E06141A
  v_mul_legacy_f32  v16, s19, v7                        // 0000000000E8: 0E200E13
  buffer_store_dword  v0, v0, s[0:3], s4 offset:28 glc slc // 0000000000EC: E070401C 04400000
  s_buffer_load_dwordx4  s[8:11], s[12:15], 0x50        // 0000000000F4: C2840D50
  v_mac_legacy_f32  v1, s20, v8                         // 0000000000F8: 0C021014
  v_mac_legacy_f32  v3, s25, v9                         // 0000000000FC: 0C061219
  v_mac_legacy_f32  v16, s18, v6                        // 000000000100: 0C200C12
  v_mul_legacy_f32  v0, s23, v7                         // 000000000104: 0E000E17
  buffer_store_dword  v2, v0, s[0:3], s4 offset:32 glc slc // 000000000108: E0704020 04400200
  v_mac_legacy_f32  v3, s24, v8                         // 000000000110: 0C061018
  v_mac_legacy_f32  v16, s17, v5                        // 000000000114: 0C200A11
  v_mac_legacy_f32  v0, s22, v6                         // 000000000118: 0C000C16
  v_mul_legacy_f32  v2, s27, v7                         // 00000000011C: 0E040E1B
  buffer_store_dword  v11, v0, s[0:3], s4 offset:36 glc slc // 000000000120: E0704024 04400B00
  v_mac_legacy_f32  v16, s16, v4                        // 000000000128: 0C200810
  v_mac_legacy_f32  v0, s21, v5                         // 00000000012C: 0C000A15
  v_mac_legacy_f32  v2, s26, v6                         // 000000000130: 0C040C1A
  buffer_store_dword  v17, v0, s[0:3], s4 offset:48 glc slc // 000000000134: E0704030 04401100
  v_mac_legacy_f32  v0, s20, v4                         // 00000000013C: 0C000814
  v_mac_legacy_f32  v2, s25, v5                         // 000000000140: 0C040A19
  buffer_store_dword  v1, v0, s[0:3], s4 offset:52 glc slc // 000000000144: E0704034 04400100
  v_mac_legacy_f32  v2, s24, v4                         // 00000000014C: 0C040818
  buffer_store_dword  v3, v0, s[0:3], s4 offset:56 glc slc // 000000000150: E0704038 04400300
  s_waitcnt     lgkmcnt(0)                              // 000000000158: BF8C007F
  v_sub_f32     v1, s8, v16                             // 00000000015C: 08022008
  buffer_store_dword  v16, v0, s[0:3], s4 offset:64 glc slc // 000000000160: E0704040 04401000
  v_sub_f32     v3, s9, v0                              // 000000000168: 08060009
  buffer_store_dword  v0, v0, s[0:3], s4 offset:68 glc slc // 00000000016C: E0704044 04400000
  v_sub_f32     v0, s10, v2                             // 000000000174: 0800040A
  buffer_store_dword  v2, v0, s[0:3], s4 offset:72 glc slc // 000000000178: E0704048 04400200
  buffer_store_dword  v1, v0, s[0:3], s4 offset:80 glc slc // 000000000180: E0704050 04400100
  buffer_store_dword  v3, v0, s[0:3], s4 offset:84 glc slc // 000000000188: E0704054 04400300
  buffer_store_dword  v0, v0, s[0:3], s4 offset:88 glc slc // 000000000190: E0704058 04400000
  buffer_store_dword  v12, v0, s[0:3], s4 offset:96 glc slc // 000000000198: E0704060 04400C00
  buffer_store_dword  v13, v0, s[0:3], s4 offset:100 glc slc // 0000000001A0: E0704064 04400D00
  buffer_store_dword  v14, v0, s[0:3], s4 offset:104 glc slc // 0000000001A8: E0704068 04400E00
  buffer_store_dword  v15, v0, s[0:3], s4 offset:108 glc slc // 0000000001B0: E070406C 04400F00
  buffer_store_dword  v8, v0, s[0:3], s4 offset:112 glc slc // 0000000001B8: E0704070 04400800
  buffer_store_dword  v9, v0, s[0:3], s4 offset:116 glc slc // 0000000001C0: E0704074 04400900
  buffer_store_dword  v10, v0, s[0:3], s4 offset:120 glc slc // 0000000001C8: E0704078 04400A00
  s_endpgm                                              // 0000000001D0: BF810000
end


// Shader Statistics:
//  NumActiveWaveFront:         40
//  WorkgroupSize:              64
//  NumVRegs:                   18
//  NumSRegs:                   42
//  NumActiveWaveFrontByVReg:   40
//  NumActiveWaveFrontBySReg:   40
//  NumActiveWaveFrontByLDS:    40
//  CycleSim:                   109
//  CycleSimNWaves:             109
//  Code Size:                  468
//Assembler Counts:
//  num_32bit_ops                     : 65
//  num_64bit_ops                     : 26
//  num_alu                           : 50
//  num_fc                            : 15
//  num_inst_exp                      : 0
//  num_inst_ldsgds                   : 0
//  num_inst_mimg                     : 0
//  num_inst_mtbuf                    : 0
//  num_inst_mubuf                    : 26
//  num_inst_sopp                     : 6
//  num_inst_sopc                     : 0
//  num_inst_sop1                     : 1
//  num_inst_sop2                     : 0
//  num_inst_smrd                     : 0
//  num_inst_sopk                     : 0
//  num_inst_vop1                     : 6
//  num_inst_vop2                     : 44
//  num_inst_vop3                     : 0
//  num_inst_vopc                     : 0
//  num_inst_vintrp                   : 0
//  constant_literal_operands         : 0
//  num_tex                           : 26
//  num_vmem_group                    : 15
//  vmem_grouping_started             : 0
// Shader Statistics:
// m_uNumActiveWaveFront             : 40
// m_uVRegLimit                      : 256
// m_uSRegLimit                      : 512
// m_uNumVRegs                       : 18
// m_uNumSRegs                       : 42
// m_uSCCodeSize                     : 468
// m_uWorkgroupSize                  : 64
// m_uNumActiveWaveFrontByVReg       : 40
// m_uNumActiveWaveFrontBySReg       : 40
// m_uNumActiveWaveFrontByLDS        : 40
// m_uCycleSim1Wave                  : 109
// m_uCycleSimNWaves                 : 109

// Assembler Counts:
// num_32bit_ops                     : 65
// num_64bit_ops                     : 26
// num_alu                           : 50
// num_fc                            : 15
// num_inst_exp                      : 0
// num_inst_ldsgds                   : 0
// num_inst_mimg                     : 0
// num_inst_mtbuf                    : 0
// num_inst_mubuf                    : 26
// num_inst_sopp                     : 6
// num_inst_sopc                     : 0
// num_inst_sop1                     : 1
// num_inst_sop2                     : 0
// num_inst_smrd                     : 0
// num_inst_sopk                     : 0
// num_inst_vop1                     : 6
// num_inst_vop2                     : 44
// num_inst_vop3                     : 0
// num_inst_vopc                     : 0
// num_inst_vintrp                   : 0
// num_inst_smem                     : 8
// constant_literal_operands         : 0
// num_tex                           : 26
// num_vmem_group                    : 15
// vmem_grouping_started             : 0
// m_fFullPrecompilePromise          : 0
// m_fIntegerDivideExpansion         : 0
// m_fIntegerModExpansion            : 0
// m_fDoubleDivideExpansion          : 0
// m_fUsesScratch                    : 0
// m_fPerThreadIndirection           : 0
// m_fUsingTableLoads                : 0
// m_fUsingSHmemLoads                : 1
// fSemanticHashFlagOverrideApplied  : 0
// fPSHasNoUAVWrite                  : 0
// m_fRenderTargetsCanBeCompacted    : 0
// version                           : 3
// fCodePatched                      : 0

// Opaque Custom Data - XBOX Precompiled Shader Object
// Offset:[612], bundle is:[207] DWORDS.
// Disassembled Precompiled Shader Object:
// Shader Type               : (VS)
// Shader Hw Stage           : (LS)
// PDB Filename              : D:\ATG\st_dev\Kits\DirectXTK\src\Shaders\Compiled\XboxOneDGSLEffect_main.pdb
// Shader Semantic Hash      : 0xb3178b140629218d
//
// Shader Data:
; ----------------- VS Data ------------------------
; Input Semantic Mappings
;   [0] generic, usageIdx  0, channelMask 15, v[4:7]
;   [1] generic, usageIdx  1, channelMask  7, v[8:10]
;   [2] generic, usageIdx  2, channelMask 15, v[12:15]
;   [3] generic, usageIdx  3, channelMask  3, v[16:17]
; Output Semantic Mappings
;   [0] position,  usageIdx 0, paramIdx 0, paramSlot 0
;   [1] generic,  usageIdx 1, paramIdx 1, paramSlot 0
;   [2] generic,  usageIdx 2, paramIdx 2, paramSlot 0
;   [3] generic,  usageIdx 3, paramIdx 3, paramSlot 0
;   [4] generic,  usageIdx 4, paramIdx 4, paramSlot 0
;   [5] generic,  usageIdx 5, paramIdx 5, paramSlot 0
;   [6] generic,  usageIdx 6, paramIdx 6, paramSlot 0
;   [7] generic,  usageIdx 7, paramIdx 7, paramSlot 0

codeLenInByte        = 380 bytes;

; launchModeFlags    = 0x0000000E
srdTableSupport      = TRUE
immediateSupportExt  = TRUE
srdTableSupportExt   = TRUE

userElementCount     = 3;
;  userElements[0]      = PTR_VERTEX_BUFFER_TABLE, Element=1 dwords, s[0x2:3]
;  userElements[1]      = PTR_EXTENDED_USER_DATA, ReferencedExtUserElements=1, s[0x2:3]
;  userElements[2]      = SUB_PTR_FETCH_SHADER, s[0x2:3]
extUserElementCount  = 2;
;  extUserElements 1[0] = IMM_CONST_BUFFER 0, offset 0x0:3 dwords
;  extUserElements 1[1] = IMM_CONST_BUFFER 2, offset 0x4:7 dwords
NumVgprs             = 23;
NumSgprs             = 46;
FloatMode            = 192;
IeeeMode             = 0;
FlatPtr32            = 0;
ScratchSize          = 0 dwords/thread;
LDSByteSize          = 0 bytes/workgroup (compile time only);
ScratchWaveOffsetReg = s65535;
; texSamplerUsage         = 0x00000000
; constBufUsage           = 0x00000005

; SPI_SHADER_PGM_RSRC2_VS = 0x00000008
SSPRV:USER_SGPR             = 4
; PA_CL_VS_OUT_CNTL       = 0x00000000
; SPI_VS_OUT_CONFIG       = 0x00000000
SVOC:VS_EXPORT_COUNT        = 0
SVOC:VS_HALF_PACK           = 0
SVOC:VS_EXPORTS_FOG         = 0
SVOC:VS_OUT_FOG_VEC_ADDR    = 0
; SPI_SHADER_POS_FORMAT     = 0x00000004
SSPF:POS0_EXPORT_FORMAT     = 4
SSPF:POS1_EXPORT_FORMAT     = 0
SSPF:POS2_EXPORT_FORMAT     = 0
SSPF:POS3_EXPORT_FORMAT     = 0
VGT_STRMOUT_CONFIG = 0x0
VGT_STRMOUT_CONFIG:RAST_STREAM = 0
VGT_STRMOUT_CONFIG:STREAMOUT_0_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_1_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_2_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_3_EN = 0
; vgprCompCnt               = 1
; exportVertexSize          = 32
; lsStride                  = 128

// Shader Instructions:
shader main
  asic(CI)
  type(VS)
  s_swappc_b64  s[2:3], s[2:3]                          // 000000000000: BE822102
  s_load_dwordx8  s[0:7], s[2:3], 0x00                  // 000000000004: C0C00300
  s_waitcnt     lgkmcnt(0)                              // 000000000008: BF8C007F
  s_buffer_load_dwordx16  s[8:23], s[4:7], 0x10         // 00000000000C: C3040510
  s_buffer_load_dwordx4  s[0:3], s[0:3], 0x04           // 000000000010: C2800104
  s_buffer_load_dwordx8  s[24:31], s[4:7], 0x40         // 000000000014: C2CC0540
  s_buffer_load_dwordx8  s[32:39], s[4:7], 0x00         // 000000000018: C2D00500
  s_buffer_load_dwordx4  s[40:43], s[4:7], 0x08         // 00000000001C: C2940508
  s_mov_b32     m0, 0x00010000                          // 000000000020: BEFC03FF 00010000
  s_waitcnt     vmcnt(0) & lgkmcnt(0)                   // 000000000028: BF8C0070
  v_mul_legacy_f32  v0, s11, v7                         // 00000000002C: 0E000E0B
  v_mac_legacy_f32  v0, s10, v6                         // 000000000030: 0C000C0A
  v_mac_legacy_f32  v0, s9, v5                          // 000000000034: 0C000A09
  v_mac_legacy_f32  v0, s8, v4                          // 000000000038: 0C000808
  v_mul_legacy_f32  v2, s15, v7                         // 00000000003C: 0E040E0F
  v_mac_legacy_f32  v2, s14, v6                         // 000000000040: 0C040C0E
  v_mac_legacy_f32  v2, s13, v5                         // 000000000044: 0C040A0D
  v_mac_legacy_f32  v2, s12, v4                         // 000000000048: 0C04080C
  v_mul_legacy_f32  v3, s19, v7                         // 00000000004C: 0E060E13
  v_mac_legacy_f32  v3, s18, v6                         // 000000000050: 0C060C12
  v_mac_legacy_f32  v3, s17, v5                         // 000000000054: 0C060A11
  v_mac_legacy_f32  v3, s16, v4                         // 000000000058: 0C060810
  v_mul_legacy_f32  v11, s23, v7                        // 00000000005C: 0E160E17
  v_mac_legacy_f32  v11, s22, v6                        // 000000000060: 0C160C16
  v_mac_legacy_f32  v11, s21, v5                        // 000000000064: 0C160A15
  v_mac_legacy_f32  v11, s20, v4                        // 000000000068: 0C160814
  s_buffer_load_dwordx4  s[4:7], s[4:7], 0x50           // 00000000006C: C2820550
  v_mov_b32     v18, s27                                // 000000000070: 7E24021B
  v_mac_legacy_f32  v18, s25, v17                       // 000000000074: 0C242219
  v_mac_legacy_f32  v18, s24, v16                       // 000000000078: 0C242018
  v_mov_b32     v19, s31                                // 00000000007C: 7E26021F
  v_mac_legacy_f32  v19, s29, v17                       // 000000000080: 0C26221D
  v_mac_legacy_f32  v19, s28, v16                       // 000000000084: 0C26201C
  v_mul_legacy_f32  v16, s34, v10                       // 000000000088: 0E201422
  v_mac_legacy_f32  v16, s33, v9                        // 00000000008C: 0C201221
  v_mac_legacy_f32  v16, s32, v8                        // 000000000090: 0C201020
  v_mul_legacy_f32  v17, s38, v10                       // 000000000094: 0E221426
  v_mac_legacy_f32  v17, s37, v9                        // 000000000098: 0C221225
  v_mac_legacy_f32  v17, s36, v8                        // 00000000009C: 0C221024
  v_mul_legacy_f32  v20, s42, v10                       // 0000000000A0: 0E28142A
  v_mac_legacy_f32  v20, s41, v9                        // 0000000000A4: 0C281229
  v_mac_legacy_f32  v20, s40, v8                        // 0000000000A8: 0C281028
  v_mul_legacy_f32  v21, s35, v7                        // 0000000000AC: 0E2A0E23
  v_mac_legacy_f32  v21, s34, v6                        // 0000000000B0: 0C2A0C22
  v_mac_legacy_f32  v21, s33, v5                        // 0000000000B4: 0C2A0A21
  v_mac_legacy_f32  v21, s32, v4                        // 0000000000B8: 0C2A0820
  v_mul_legacy_f32  v22, s39, v7                        // 0000000000BC: 0E2C0E27
  v_mac_legacy_f32  v22, s38, v6                        // 0000000000C0: 0C2C0C26
  v_mac_legacy_f32  v22, s37, v5                        // 0000000000C4: 0C2C0A25
  v_mac_legacy_f32  v22, s36, v4                        // 0000000000C8: 0C2C0824
  v_mul_legacy_f32  v7, s43, v7                         // 0000000000CC: 0E0E0E2B
  v_mac_legacy_f32  v7, s42, v6                         // 0000000000D0: 0C0E0C2A
  v_mac_legacy_f32  v7, s41, v5                         // 0000000000D4: 0C0E0A29
  v_mac_legacy_f32  v7, s40, v4                         // 0000000000D8: 0C0E0828
  s_waitcnt     lgkmcnt(0)                              // 0000000000DC: BF8C007F
  v_sub_f32     v4, s4, v21                             // 0000000000E0: 08082A04
  v_sub_f32     v5, s5, v22                             // 0000000000E4: 080A2C05
  v_sub_f32     v6, s6, v7                              // 0000000000E8: 080C0E06
  v_lshlrev_b32  v1, 7, v1                              // 0000000000EC: 34020287
  ds_write2_b32  v1, v0, v2 offset1:1                   // 0000000000F0: D8380100 00020001
  ds_write2_b32  v1, v3, v11 offset0:2 offset1:3        // 0000000000F8: D8380302 000B0301
  v_mov_b32     v0, s0                                  // 000000000100: 7E000200
  v_mov_b32     v2, s1                                  // 000000000104: 7E040201
  ds_write2_b32  v1, v0, v2 offset0:4 offset1:5         // 000000000108: D8380504 00020001
  v_mov_b32     v0, s2                                  // 000000000110: 7E000202
  v_mov_b32     v2, s3                                  // 000000000114: 7E040203
  ds_write2_b32  v1, v0, v2 offset0:6 offset1:7         // 000000000118: D8380706 00020001
  ds_write2_b32  v1, v18, v19 offset0:8 offset1:9       // 000000000120: D8380908 00131201
  ds_write2_b32  v1, v16, v17 offset0:12 offset1:13     // 000000000128: D8380D0C 00111001
  ds_write_b32  v1, v20 offset:56                       // 000000000130: D8340038 00001401
  ds_write2_b32  v1, v21, v22 offset0:16 offset1:17     // 000000000138: D8381110 00161501
  ds_write_b32  v1, v7 offset:72                        // 000000000140: D8340048 00000701
  ds_write2_b32  v1, v4, v5 offset0:20 offset1:21       // 000000000148: D8381514 00050401
  ds_write_b32  v1, v6 offset:88                        // 000000000150: D8340058 00000601
  ds_write2_b32  v1, v12, v13 offset0:24 offset1:25     // 000000000158: D8381918 000D0C01
  ds_write2_b32  v1, v14, v15 offset0:26 offset1:27     // 000000000160: D8381B1A 000F0E01
  ds_write2_b32  v1, v8, v9 offset0:28 offset1:29       // 000000000168: D8381D1C 00090801
  ds_write_b32  v1, v10 offset:120                      // 000000000170: D8340078 00000A01
  s_endpgm                                              // 000000000178: BF810000
end


// Shader Statistics:
//  NumActiveWaveFront:         40
//  WorkgroupSize:              64
//  NumVRegs:                   23
//  NumSRegs:                   46
//  NumActiveWaveFrontByVReg:   40
//  NumActiveWaveFrontBySReg:   40
//  NumActiveWaveFrontByLDS:    40
//  CycleSim:                   140
//  CycleSimNWaves:             140
//  Code Size:                  380
//Assembler Counts:
//  num_32bit_ops                     : 64
//  num_64bit_ops                     : 15
//  num_alu                           : 51
//  num_fc                            : 13
//  num_inst_exp                      : 0
//  num_inst_ldsgds                   : 15
//  num_inst_mimg                     : 0
//  num_inst_mtbuf                    : 0
//  num_inst_mubuf                    : 0
//  num_inst_sopp                     : 4
//  num_inst_sopc                     : 0
//  num_inst_sop1                     : 2
//  num_inst_sop2                     : 0
//  num_inst_smrd                     : 0
//  num_inst_sopk                     : 0
//  num_inst_vop1                     : 6
//  num_inst_vop2                     : 45
//  num_inst_vop3                     : 0
//  num_inst_vopc                     : 0
//  num_inst_vintrp                   : 0
//  constant_literal_operands         : 0
//  num_tex                           : 15
//  num_vmem_group                    : 0
//  vmem_grouping_started             : 0
// Shader Statistics:
// m_uNumActiveWaveFront             : 40
// m_uVRegLimit                      : 256
// m_uSRegLimit                      : 512
// m_uNumVRegs                       : 23
// m_uNumSRegs                       : 46
// m_uSCCodeSize                     : 380
// m_uWorkgroupSize                  : 64
// m_uNumActiveWaveFrontByVReg       : 40
// m_uNumActiveWaveFrontBySReg       : 40
// m_uNumActiveWaveFrontByLDS        : 40
// m_uCycleSim1Wave                  : 140
// m_uCycleSimNWaves                 : 140

// Assembler Counts:
// num_32bit_ops                     : 64
// num_64bit_ops                     : 15
// num_alu                           : 51
// num_fc                            : 13
// num_inst_exp                      : 0
// num_inst_ldsgds                   : 15
// num_inst_mimg                     : 0
// num_inst_mtbuf                    : 0
// num_inst_mubuf                    : 0
// num_inst_sopp                     : 4
// num_inst_sopc                     : 0
// num_inst_sop1                     : 2
// num_inst_sop2                     : 0
// num_inst_smrd                     : 0
// num_inst_sopk                     : 0
// num_inst_vop1                     : 6
// num_inst_vop2                     : 45
// num_inst_vop3                     : 0
// num_inst_vopc                     : 0
// num_inst_vintrp                   : 0
// num_inst_smem                     : 7
// constant_literal_operands         : 0
// num_tex                           : 15
// num_vmem_group                    : 0
// vmem_grouping_started             : 0
// m_fFullPrecompilePromise          : 0
// m_fIntegerDivideExpansion         : 0
// m_fIntegerModExpansion            : 0
// m_fDoubleDivideExpansion          : 0
// m_fUsesScratch                    : 0
// m_fPerThreadIndirection           : 0
// m_fUsingTableLoads                : 0
// m_fUsingSHmemLoads                : 1
// fSemanticHashFlagOverrideApplied  : 0
// fPSHasNoUAVWrite                  : 0
// m_fRenderTargetsCanBeCompacted    : 0
// version                           : 3
// fCodePatched                      : 0

// Approximately 0 instruction slots used
#endif

const BYTE DGSLEffect_main[] =
{
     68,  88,  66,  67, 245,  15, 
      8,  90, 213, 123, 239,  47, 
     32, 109, 199, 129, 148, 244, 
    239, 133,   1,   0,   0,   0, 
    244,  14,   0,   0,   5,   0, 
      0,   0,  52,   0,   0,   0, 
    200,   0,   0,   0, 180,   1, 
      0,   0, 144,  14,   0,   0, 
    160,  14,   0,   0,  73,  83, 
     71,  78, 140,   0,   0,   0, 
      4,   0,   0,   0,   8,   0, 
      0,   0, 104,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      0,   0,   0,   0,  15,  15, 
      0,   0, 116,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   0,   0,   7,   7, 
      0,   0, 123,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      2,   0,   0,   0,  15,  15, 
      0,   0, 131,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      3,   0,   0,   0,   3,   3, 
      0,   0,  83,  86,  95,  80, 
    111, 115, 105, 116, 105, 111, 
    110,   0,  78,  79,  82,  77, 
     65,  76,   0,  84,  65,  78, 
     71,  69,  78,  84,   0,  84, 
     69,  88,  67,  79,  79,  82, 
     68,   0,  79,  83,  71,  78, 
    228,   0,   0,   0,   8,   0, 
      0,   0,   8,   0,   0,   0, 
    200,   0,   0,   0,   0,   0, 
      0,   0,   1,   0,   0,   0, 
      3,   0,   0,   0,   0,   0, 
      0,   0,  15,   0,   0,   0, 
    212,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      3,   0,   0,   0,   1,   0, 
      0,   0,  15,   0,   0,   0, 
    218,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      3,   0,   0,   0,   2,   0, 
      0,   0,   3,  12,   0,   0, 
    218,   0,   0,   0,   1,   0, 
      0,   0,   0,   0,   0,   0, 
      3,   0,   0,   0,   3,   0, 
      0,   0,   7,   8,   0,   0, 
    218,   0,   0,   0,   2,   0, 
      0,   0,   0,   0,   0,   0, 
      3,   0,   0,   0,   4,   0, 
      0,   0,   7,   8,   0,   0, 
    218,   0,   0,   0,   3,   0, 
      0,   0,   0,   0,   0,   0, 
      3,   0,   0,   0,   5,   0, 
      0,   0,   7,   8,   0,   0, 
    218,   0,   0,   0,   4,   0, 
      0,   0,   0,   0,   0,   0, 
      3,   0,   0,   0,   6,   0, 
      0,   0,  15,   0,   0,   0, 
    218,   0,   0,   0,   5,   0, 
      0,   0,   0,   0,   0,   0, 
      3,   0,   0,   0,   7,   0, 
      0,   0,   7,   8,   0,   0, 
     83,  86,  95,  80,  79,  83, 
     73,  84,  73,  79,  78,   0, 
     67,  79,  76,  79,  82,   0, 
     84,  69,  88,  67,  79,  79, 
     82,  68,   0, 171,  83,  72, 
     69,  88, 212,  12,   0,   0, 
     80,   0,   1,   0,  53,   3, 
      0,   0,  53,  16,   0,   0, 
      5,   0,   0,   0, 192,   0, 
      0,   0,  80,   0,   1,   0, 
    187,   0,   0,   0, 106,   8, 
      0,   1,  89,   0,   0,   4, 
     70, 142,  32,   0,   0,   0, 
      0,   0,   5,   0,   0,   0, 
     89,   0,   0,   4,  70, 142, 
     32,   0,   2,   0,   0,   0, 
     21,   0,   0,   0,  95,   0, 
      0,   3, 242,  16,  16,   0, 
      0,   0,   0,   0,  95,   0, 
      0,   3, 114,  16,  16,   0, 
      1,   0,   0,   0,  95,   0, 
      0,   3, 242,  16,  16,   0, 
      2,   0,   0,   0,  95,   0, 
      0,   3,  50,  16,  16,   0, 
      3,   0,   0,   0, 103,   0, 
      0,   4, 242,  32,  16,   0, 
      0,   0,   0,   0,   1,   0, 
      0,   0, 101,   0,   0,   3, 
    242,  32,  16,   0,   1,   0, 
      0,   0, 101,   0,   0,   3, 
     50,  32,  16,   0,   2,   0, 
      0,   0, 101,   0,   0,   3, 
    114,  32,  16,   0,   3,   0, 
      0,   0, 101,   0,   0,   3, 
    114,  32,  16,   0,   4,   0, 
      0,   0, 101,   0,   0,   3, 
    114,  32,  16,   0,   5,   0, 
      0,   0, 101,   0,   0,   3, 
    242,  32,  16,   0,   6,   0, 
      0,   0, 101,   0,   0,   3, 
    114,  32,  16,   0,   7,   0, 
      0,   0, 104,   0,   0,   2, 
      1,   0,   0,   0,  17,   0, 
      0,   8,  18,  32,  16,   0, 
      0,   0,   0,   0,  70,  30, 
     16,   0,   0,   0,   0,   0, 
     70, 142,  32,   0,   2,   0, 
      0,   0,   4,   0,   0,   0, 
     17,   0,   0,   8,  34,  32, 
     16,   0,   0,   0,   0,   0, 
     70,  30,  16,   0,   0,   0, 
      0,   0,  70, 142,  32,   0, 
      2,   0,   0,   0,   5,   0, 
      0,   0,  17,   0,   0,   8, 
     66,  32,  16,   0,   0,   0, 
      0,   0,  70,  30,  16,   0, 
      0,   0,   0,   0,  70, 142, 
     32,   0,   2,   0,   0,   0, 
      6,   0,   0,   0,  17,   0, 
      0,   8, 130,  32,  16,   0, 
      0,   0,   0,   0,  70,  30, 
     16,   0,   0,   0,   0,   0, 
     70, 142,  32,   0,   2,   0, 
      0,   0,   7,   0,   0,   0, 
     54,   0,   0,   6, 242,  32, 
     16,   0,   1,   0,   0,   0, 
     70, 142,  32,   0,   0,   0, 
      0,   0,   1,   0,   0,   0, 
     54,   0,   0,   5,  50,   0, 
     16,   0,   0,   0,   0,   0, 
     70,  16,  16,   0,   3,   0, 
      0,   0,  54,   0,   0,   5, 
     66,   0,  16,   0,   0,   0, 
      0,   0,   1,  64,   0,   0, 
      0,   0, 128,  63,  16,   0, 
      0,   8,  18,  32,  16,   0, 
      2,   0,   0,   0,  70,   2, 
     16,   0,   0,   0,   0,   0, 
     70, 131,  32,   0,   2,   0, 
      0,   0,  16,   0,   0,   0, 
     16,   0,   0,   8,  34,  32, 
     16,   0,   2,   0,   0,   0, 
     70,   2,  16,   0,   0,   0, 
      0,   0,  70, 131,  32,   0, 
      2,   0,   0,   0,  17,   0, 
      0,   0,  16,   0,   0,   8, 
     18,  32,  16,   0,   3,   0, 
      0,   0,  70,  18,  16,   0, 
      1,   0,   0,   0,  70, 130, 
     32,   0,   2,   0,   0,   0, 
      0,   0,   0,   0,  16,   0, 
      0,   8,  34,  32,  16,   0, 
      3,   0,   0,   0,  70,  18, 
     16,   0,   1,   0,   0,   0, 
     70, 130,  32,   0,   2,   0, 
      0,   0,   1,   0,   0,   0, 
     16,   0,   0,   8,  66,  32, 
     16,   0,   3,   0,   0,   0, 
     70,  18,  16,   0,   1,   0, 
      0,   0,  70, 130,  32,   0, 
      2,   0,   0,   0,   2,   0, 
      0,   0,  17,   0,   0,   8, 
     18,   0,  16,   0,   0,   0, 
      0,   0,  70,  30,  16,   0, 
      0,   0,   0,   0,  70, 142, 
     32,   0,   2,   0,   0,   0, 
      0,   0,   0,   0,  17,   0, 
      0,   8,  34,   0,  16,   0, 
      0,   0,   0,   0,  70,  30, 
     16,   0,   0,   0,   0,   0, 
     70, 142,  32,   0,   2,   0, 
      0,   0,   1,   0,   0,   0, 
     17,   0,   0,   8,  66,   0, 
     16,   0,   0,   0,   0,   0, 
     70,  30,  16,   0,   0,   0, 
      0,   0,  70, 142,  32,   0, 
      2,   0,   0,   0,   2,   0, 
      0,   0,  54,   0,   0,   5, 
    114,  32,  16,   0,   4,   0, 
      0,   0,  70,   2,  16,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   9, 114,  32,  16,   0, 
      5,   0,   0,   0,  70,   2, 
     16, 128,  65,   0,   0,   0, 
      0,   0,   0,   0,  70, 130, 
     32,   0,   2,   0,   0,   0, 
     20,   0,   0,   0,  54,   0, 
      0,   5, 242,  32,  16,   0, 
      6,   0,   0,   0,  70,  30, 
     16,   0,   2,   0,   0,   0, 
     54,   0,   0,   5, 114,  32, 
     16,   0,   7,   0,   0,   0, 
     70,  18,  16,   0,   1,   0, 
      0,   0,  62,   0,   0,   1, 
     53,  16,   0,   0, 203,   0, 
      0,   0,  23,   0,   1,   0, 
     32, 101,  23,   0, 120,   1, 
    237, 152,  75,  79,  83,  65, 
     20, 199, 167, 211, 123, 135, 
    233, 101,  24, 110,  75,  41, 
    143, 242,  40,  88, 177,  96, 
    131, 196,  16,  99,  12,  25, 
     16,  49,  44, 208,  96,   2, 
     11,  22,  77,   8, 143,  18, 
     73, 132,  54, 148,  24,  87, 
     21, 112, 161, 137, 154, 184, 
    213,  79, 224, 194, 157,  27, 
     87,  66, 170, 107,  33, 174, 
    252,   8,  46,  92,  24,  87, 
    236, 244, 127, 218,  91, 108, 
    138, 172,  53, 230, 254, 210, 
    255,  57, 103,  30, 189, 247, 
    204, 227, 110,  78, 182, 141, 
    149, 185, 218, 153, 251,  68, 
    254, 104, 172, 176, 255, 141, 
     51, 102,  83,   3,  88, 100, 
     64,  62,  74, 150,  49,  55, 
     70, 150, 177,  36, 153,   0, 
    132, 185,  93, 112, 195, 208, 
     24, 218,  19, 240,  52, 150, 
    242, 196, 216, 238, 228, 171, 
    151, 143,  38,  87,  16, 141, 
     64,   9, 104, 222, 211,  56, 
     36, 161,  81, 168,  17, 162, 
    184, 158,  32,  25,  64, 175, 
    170, 133, 230, 166, 161,  90, 
     26, 200, 128,  83, 207,  89, 
     34, 243, 103, 166,  33, 202, 
    255,  44,  40, 183,  42, 244, 
     92, 202, 147, 160, 245, 254, 
    107, 208, 153,  85, 207, 137, 
    160, 243, 168,  69,  67, 213, 
    253, 124, 211,  74, 182, 124, 
    124, 101, 190, 122, 237, 234, 
     89,  30,  64, 103, 241,  19, 
    212, 239, 113, 181,  77, 247, 
     69, 176, 217,  17,  17, 120, 
    156,  16, 252, 112,  68,   4, 
    131,  97, 129,  78, 129, 228, 
    132, 128, 112,  72,   2, 147, 
     69,   8, 114,  32, 108, 168, 
     80,  80,  19, 132,   4,  69, 
     51, 228,  66,  97,  40,   2, 
    181,  64,  88, 147,  64, 126, 
      2, 119,  79, 224, 190, 138, 
    118, 168,   3, 234, 132, 226, 
     16, 146,  22, 221,  80,  15, 
    212,  91, 185,   7, 194,  91, 
    187, 224, 149,  64,   4,  43, 
     43,  21,  86, 101,   7, 132, 
     77, 153, 194,  83,  98,  64, 
     52,  32, 185, 255,   8, 218, 
    131, 234, 153,  96, 123,  79, 
    190,  99, 162,  54, 246, 241, 
    241, 241, 241, 241, 241, 241, 
    241, 241, 241, 241, 241, 241, 
    241, 241, 249,  91, 240, 190, 
    189, 247,  44, 120, 112, 240, 
    144,  61, 219, 103, 246, 199, 
    146, 180, 159, 148,  92, 219, 
    249,  48,  97, 127,  46,  89, 
    129, 157, 210,  29, 123, 175, 
    148, 199,  88, 163, 102, 186, 
     89, 115, 221, 162,  45, 221, 
    166, 133, 142, 235, 152, 238, 
    213,  73, 125,  78, 107, 237, 
     40, 102, 180, 226,  38, 162, 
     44,  19,  83,  66, 117, 170, 
    152, 234,  81,  73, 213, 175, 
    180, 186, 192,  85, 241,  34, 
     31,  40,  58, 209, 148, 214, 
    209,  33,  29, 137, 166, 117, 
    200,  97, 166, 201, 225,  38, 
    236,  88, 166, 213,  17, 170, 
    195, 137, 169, 110,  39, 169, 
    250,  28, 173, 206, 247,  43, 
     51, 216,  63,  96,  66, 145, 
    148, 105, 138,  12, 153, 112, 
     36, 109, 164, 100,  70,  73, 
    110,  92, 105, 153, 168,  20, 
    170,  93, 198,  84, 151,  76, 
    170, 132, 212,  42, 153,  80, 
     38, 149,  24,  48, 210,  77, 
     25, 229,  14,  25, 215,  77, 
     27, 139,  73, 105, 115,  71, 
     10,  43,  33,  25, 239,  47, 
      6, 248, 112, 145, 243, 145, 
     98, 144,  95,  46, 238, 240, 
    209, 226,  15, 126, 165, 120, 
     40, 217, 113, 176,  49, 210, 
    208, 204, 217, 113, 184, 173, 
    189, 163,  23,  94, 180, 116, 
    198,  47, 193,  71,  91,  99, 
    241, 113, 120,  22, 224, 241, 
     89, 120, 203, 118, 227, 139, 
    240, 170,  73,  55, 231, 224, 
    101, 200, 137,  51, 182, 187, 
     95,  46, 229, 241, 242, 239, 
    132,  14,  42, 131, 213, 245, 
    185, 100, 234, 250, 202, 177, 
     85, 169, 153,  85, 225, 212, 
    137, 190, 218, 186, 209, 130, 
     87,   7,  78, 121, 158, 106, 
    187,  33,  40, 192, 130, 229, 
    103,  80,  14,  20,  19,  84, 
     97, 179,  88, 165, 190, 246, 
    188, 111,  80,  68, 159, 182, 
    189, 165, 152, 120, 225, 253, 
     63, 239, 121, 170,  15,  83, 
    189, 234,  55,  59, 100,  78, 
    241, 206, 155, 255, 218, 243, 
    180,  22, 202,  79, 151, 223, 
      6, 168, 216,   9, 190, 120, 
    227,  71, 158, 167, 154,  24, 
    213, 112, 235, 243, 248, 238, 
    141, 223, 134,  40, 211, 169, 
    107, 153, 235, 243, 211, 153, 
    194, 246, 226, 106, 246, 126, 
    102, 102, 125, 187, 144, 153, 
     90, 223, 202, 174, 108,  47, 
    204, 207, 100,  10,  91,  43, 
    153, 185, 187,  75, 171, 217, 
    173,  66, 230,  70, 110,  35, 
    191, 126,  47, 187, 154,  89, 
     88, 206,  61, 152, 221, 204, 
     78,  77, 207, 221, 186, 185, 
    182, 134, 153, 139,  27,  75, 
    235, 155, 195, 249, 213, 101, 
    246,  11,   5, 169, 118, 126, 
      0,   0,  53,  16,   0,   0, 
    217,   0,   0,   0,  23,   0, 
      1,   0,  16,  17,  24,   0, 
    120,   1, 237, 152, 207, 138, 
     83,  73,  20, 198,  79,  42, 
    101, 121, 115, 187,  82, 222, 
    164, 111, 167, 255,  24, 245, 
    118,  84,  28,  69, 164,  21, 
     23,  34,  46, 174,  26, 209, 
    193,  25,  20, 236,  69, 195, 
      4, 180,  53,  17, 123, 176, 
     53, 116,  26, 113,  33, 241, 
     15,  13,  46, 212, 157, 155, 
      1, 223,  98, 192, 149, 216, 
     77, 102,  64, 119, 186, 240, 
      1, 124, 128, 121,   7, 253, 
    190, 155,  27, 141,  81, 215, 
     14, 114, 127, 228, 171,  83, 
    117,  42,  85, 117,  78, 213, 
     93, 157, 210, 148,  36, 252, 
    186, 123, 207,   6, 237, 219, 
     99, 157, 245, 255, 148, 200, 
     38,  14,   0, 186,   9, 237, 
    144, 173, 200, 139,  10,  91, 
    145,  95, 216, 228,  32, 252, 
    161,  12, 179,  15, 122, 135, 
    113,  12, 203, 185, 129, 170, 
    175, 254,  58, 241, 252, 210, 
    179,  19, 127, 162, 127,  16, 
     26, 135, 150,  83,  29, 135, 
    102, 160,  67, 208,  22, 104, 
     20, 206,  25, 136, 240, 168, 
     97, 232, 223,  15,  13, 227, 
    177,   1,  92, 247, 197, 126, 
    139, 108, 190, 205,  31,  16, 
    227, 255,  30, 140, 141, 251, 
     13,  24, 236, 203, 124, 255, 
    111, 240, 205,   6, 239,  68, 
    248,  30, 195,  56,  72,  67, 
    164, 158, 190, 227, 224, 125, 
    159, 166, 227, 193,  91,  38, 
     31, 195, 119, 248,   0,   6, 
    119,  77, 216,  63,   2,  17, 
    238, 111, 228, 220, 156, 201, 
     61, 140, 140, 122,  51, 103, 
    242, 249, 146, 129, 211,  32, 
     56, 131,  71,  51, 155,  33, 
     44,  48,   5, 200, 135, 198, 
     32,  11,  21,  33,   4, 104, 
    112, 193,  38, 128,  74,  16, 
    130,  49, 248,  96,  12, 114, 
     50,  19,  16,  98,  52, 147, 
     16, 190,  89,  51,  13, 225, 
     97, 204,  86, 168,  10, 109, 
    131, 182,  67,  59,  62, 127, 
      7, 196, 228, 250, 151,  96, 
     84,  63,  83, 196,  67,  35, 
     70,  51,  82, 216,  77, 188, 
     53,  88,   6,   7, 204, 102, 
      4, 248,  19, 192,  59,  24, 
    190, 135, 126, 182, 125, 162, 
     84,  25,  25,  25,  25,  25, 
     25,  25,  25,  25,  25,  25, 
     25,  25,  25,  25,  25,  63, 
     18,  53, 251, 224, 165, 228, 
    255, 221, 184,  43, 143, 215, 
    131, 162, 247,  79,  27, 118, 
    220, 137,  11, 242, 247,  54, 
    202,  86, 236, 164,  83,  78, 
     23, 214, 122,  37,  95, 108, 
    197,  42, 187, 213, 105,  23, 
    120,  98,  39, 124, 101, 103, 
    172, 182,  59, 156, 113, 113, 
    241, 109,  47, 244, 148, 157, 
    246, 181, 221, 110, 141, 157, 
    242, 180, 221, 230,  27,  43, 
    197, 215, 189, 170, 103,  44, 
    247, 150, 184, 253,  94,  36, 
    214, 154,  54,  23, 107,  79, 
     73, 215,  43,  62, 238, 121, 
     28, 171,  88,  23, 148, 234, 
    238,  84, 186, 107,  57, 206, 
    199, 218,  87, 166,  59,  91, 
    211, 118, 143, 170, 116,   3, 
    250, 176, 118,  12, 107, 162, 
     72, 219, 221, 181, 138,  45, 
    135,  53,  23, 210, 143, 189, 
    118,  69,  21,  91,  42, 215, 
    108,  37,  84, 110, 138,  62, 
    172,  15, 130, 154, 157,  40, 
    171, 228, 236, 153, 208, 184, 
    113,  23, 185,  42, 231, 176, 
    207, 249, 226,  90,  47,  12, 
     16, 111, 217, 216, 178, 141, 
    144, 163, 184, 136, 115, 136, 
     99,  42,  48, 182, 228,  71, 
    200,  85, 146,  92, 119, 209, 
     63, 134, 253, 188,   8,  57, 
     75, 146, 243,  28, 125, 165, 
     88, 135, 184,   7, 230, 124, 
    152,  99, 196, 193, 188, 143, 
    176, 143, 243, 121, 174,  23, 
     41,  47, 230,  56,  64, 126, 
     98, 188,  58, 251,  56, 223, 
    215, 226, 157,  97,  31, 231, 
    157, 167, 197, 218, 121,  90, 
    172,  91, 160, 197, 127,  46, 
    209, 218,  88,  55, 105, 139, 
    177, 190,  70, 235,  98, 125, 
    157, 118,  75, 172, 219, 180, 
     94, 172,  87, 105,  11, 177, 
    190,  77, 235, 199,  90, 228, 
    254, 250,  68, 242, 176, 201, 
    239,  19, 211,  44, 207, 141, 
    248, 146, 146, 244, 136,  47, 
     96,  51, 226,  75, 250, 186, 
     95, 223,  27, 144, 148, 249, 
    224,  27, 174, 119, 233,  73, 
    182,  34, 239, 210,  26, 231, 
     28,  84, 128, 114, 146,  79, 
    246,  96,  92, 236,  19,  86, 
      3, 117,  82,  93,  22, 121, 
     50, 187, 215, 132, 143,  38, 
    255, 102, 159,  28,  75, 247, 
    169, 166, 150,  53,  52,  11, 
    125, 134, 213, 239, 175, 105, 
    166, 255, 159,  79,  45, 115, 
     97, 124,  46,  57,  13, 176, 
     48,  11, 214, 210, 249,  59, 
    169, 101, 253, 110,  12,  26, 
    141, 227,  89,  58, 255,  59, 
    196,  72, 235,  71,  27, 199, 
    231,  79,  55,  58, 171,  23, 
    155, 173,  91, 141, 179,  75, 
    171, 157,  70, 125, 105, 165, 
    117, 101, 117,  97, 254, 108, 
    163, 179, 114, 165, 113, 225, 
    218,  98, 179, 181, 210, 105, 
    156, 188, 185, 220,  94, 186, 
    222, 106,  54,  22,  46, 223, 
    188, 125, 238,  70, 171, 126, 
    250, 194, 111, 167, 174,  94, 
    197,  63,  47,  46,  47,  46, 
    221,  56, 208, 110,  94, 150, 
    143, 129, 221, 159,  26,   0, 
     53,  16,   0,   0, 209,   0, 
      0,   0,  23,   0,   1,   0, 
      0, 165,  23,   0, 120,   1, 
    237, 152, 207,  79,  19,  81, 
     16, 199, 103, 127,  61, 182, 
    203, 240, 216, 150,  82,  64, 
     64, 150,  90, 106, 169, 149, 
    144, 232, 193,  24,  15, 168, 
     24,  77, 208,  64,   2,   7, 
     14,  77,  12, 210,  18,  72, 
     68,   9,  37, 134, 131,  65, 
     36,  38,  28, 196, 155,   7, 
    255,   1, 239,  38,  94,  60, 
      9, 169,  71,  53, 114, 244, 
     79, 240, 224,  31, 224, 193, 
      4, 191, 211, 110, 165, 162, 
    198, 163, 154, 236,  39, 124, 
    103, 222, 188, 125, 108, 231, 
    205, 180, 151, 121, 222,  69, 
     53, 182,  94, 189,  45, 137, 
    223, 191,  80, 217, 253, 108, 
     18,  57,  18,  52, 177, 146, 
     20,  75,  52, 149,  18,  75, 
    148,  19,  99,  64,  56,  43, 
    175,  24, 129, 238,  35,  30, 
    131, 151, 103,  13, 189, 127, 
    247, 232, 210, 194, 194, 246, 
     37,  44, 105,  20, 234, 134, 
    118,  66, 201, 217, 118, 232, 
     12, 212,   6,   9,  18,  55, 
     99, 139,   1, 248, 152,  31, 
     80, 208, 105, 168, 153,  22, 
     49, 224, 232,  59, 104,  78, 
    204, 175, 153, 132, 194,  18, 
    252,  18, 201,  77, 104, 188, 
    179, 145, 167, 220, 247,  95, 
     67, 122, 214, 232, 147,  32, 
    253, 104,  70,  67,  22,  36, 
    124, 238,  20, 123,  88, 215, 
     92, 216, 215,  70,  47, 247, 
    160, 223, 113,   0,  92,  89, 
     52, 209, 136, 165,  95, 138, 
     38,  71, 149, 177,  29,  40, 
    243, 195, 168, 178, 172, 184, 
    194, 166,  66, 114,  10,  77, 
     83, 104, 146, 194,  97,  21, 
    131,  60, 168,  21,  98,   8, 
    133,  85,  72,  80, 161, 208, 
    202, 135, 226,  80,   2, 234, 
    128, 112,  39, 133, 124,  21, 
    114,  84,  72,  80, 225,  75, 
    164, 122, 160,  99,  80,  47, 
    212,   7, 245,  67, 199, 161, 
    129, 195,  92,   4, 101, 212, 
    139, 160, 204, 250,  77, 145, 
    143,  56,  82, 182, 100,  10, 
    239,  72, 213, 224,  37,  57, 
    160,  90,  26, 223, 162, 255, 
     27, 169,  65, 115,  29, 234, 
    183, 173, 255, 100,   3,  72, 
    216,  20,  19,  17,  17,  17, 
     17,  17,  17,  17,  17,  17, 
     17,  17,  17,  17,  17,  17, 
    241, 151,  48,   7, 183,  94, 
    147, 181, 183, 247, 128, 118, 
    118, 125, 199, 126,  99,  27, 
    155, 213,  49, 231,  93, 149, 
    156, 253, 170, 235,  60, 173, 
     30,  88,  95,  95, 203,  52, 
     99,   5, 207,  91,  53, 105, 
    143, 137,  99,  30, 177, 235, 
     18, 183, 107,  91, 107, 182, 
    185, 205, 179, 153,  93, 155, 
     59, 180, 210,   9,  86,  28, 
    247,  20, 251, 174, 226,  46, 
    157, 210,  41,  78, 113, 167, 
    151, 226, 164, 155, 226,  41, 
    103, 171, 218, 107, 102,  54, 
    122, 210,  25, 238,  14,  50, 
     60,  96, 102,  55, 250, 211, 
     89, 238,  11, 178, 156,  78, 
      6, 122,  48,  17, 112, 224, 
      7, 156,  77, 166, 245,  80, 
     34, 205,  25,  63, 205, 249, 
    100,  78,  15,  39, 114, 156, 
    243, 115, 124,  66, 231,  53, 
    118, 120, 208, 203, 115, 224, 
    230, 249, 164,  46, 232,  44, 
     23, 120, 200,  43, 112, 198, 
     45, 240,  41, 173, 117, 158, 
     53,  15, 123, 154, 115, 174, 
    102, 185, 147, 157, 119,  93, 
    167, 224, 185,  74, 179, 187, 
    109, 154, 103, 201,  56, 247, 
    209,  32, 147,  76,  11, 222, 
    106, 149, 193, 220, 134,  97, 
    218,  27, 182,  19, 238,  35, 
    182,  16, 171, 150, 122, 236, 
    198, 224,  19,  29, 196, 109, 
    240, 126, 156, 206, 209, 217, 
    143,  70, 146, 200, 143,  35, 
    238,  76, 209,  53, 137,  91, 
    136, 146, 157, 136, 109, 135, 
    102,  37,  86,  68, 221,  61, 
    136, 185, 141, 142, 245, 194, 
    235, 118, 234, 235, 135, 119, 
     99, 180,  46, 207,  61, 169, 
    252, 195, 221, 218, 104, 208, 
    172, 253, 125, 167,  71,   6, 
     71,  71, 246, 124,  49,  71, 
    246, 106, 107,  91,  14,  31, 
     82,  27, 189,  97, 175,  49, 
    131,  18, 158, 133, 243, 198, 
    197, 208, 203, 108,  56,   6, 
     25, 100, 213, 222,  33,  57, 
    200,  90, 144,   9, 157,  93, 
    155, 248,  18,  61,  25,  28, 
     86, 201, 199,  93,  47, 101, 
     45, 236, 135, 255, 255,  34, 
    244,  50, 219,  98, 232,  79, 
    124,   9, 207, 127,  10, 189, 
    220,  69, 242, 211, 181,  79, 
      3,  50,  44,   5, 221,  50, 
     16,   5, 126, 232, 101, 166, 
    134, 238, 252, 148, 199, 104, 
    248, 252,   6,  36, 153, 142, 
    159,  47,  94, 156, 185,  90, 
    172, 172, 221,  44, 149, 239, 
     21,  39, 150, 214,  42, 197, 
    241, 165, 213, 242, 252, 218, 
    236, 204,  68, 177, 178,  58, 
     95, 156,  94, 156,  43, 149, 
     87,  43, 197, 203, 119, 151, 
     87, 150, 110, 151,  75, 197, 
    217,  91, 119, 215,  39, 239, 
    148, 199, 175,  78,  95, 191, 
    178, 176, 128, 147,  55, 151, 
    231, 150, 238, 140, 172, 148, 
    110, 209,  55, 114, 125, 127, 
    215,   0,  88,  72,  83,  72, 
      8,   0,   0,   0, 141,  33, 
     41,   6,  20, 139,  23, 179, 
     88,  80,  68,  80,  76,   0, 
      0,   0,  68,  58,  92,  65, 
     84,  71,  92, 115, 116,  95, 
    100, 101, 118,  92,  75, 105, 
    116, 115,  92,  68, 105, 114, 
    101,  99, 116,  88,  84,  75, 
     92, 115, 114,  99,  92,  83, 
    104,  97, 100, 101, 114, 115, 
     92,  67, 111, 109, 112, 105, 
    108, 101, 100,  92,  88,  98, 
    111, 120,  79, 110, 101,  68, 
     71,  83,  76,  69, 102, 102, 
    101,  99, 116,  95, 109,  97, 
    105, 110,  46, 112, 100,  98
};
