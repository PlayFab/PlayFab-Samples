#if 0
//
// Generated by Microsoft (R) D3D Shader Disassembler for Durango
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xy          0     NONE   float   xy  
// TEXCOORD                 1   xyzw        1     NONE   float   xyz 
// TEXCOORD                 2   xyz         2     NONE   float   xyz 
// COLOR                    0   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
// Opaque Custom Data - XBOX Precompiled Shader Header
// First Precompiled Shader at offset:[882]
// Embedded Data:
//  0x00000372 - Offset To First Precompiled Shader
//  0x00000050 - Original Shader Descriptor
//  0x0000036d - Original Shader Size
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[25], dynamicIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texturecube (float,float,float,float) t4
dcl_resource_texturecube (float,float,float,float) t5
dcl_input_ps linear v0.xy
dcl_input_ps linear v1.xyz
dcl_input_ps linear v2.xyz
dcl_output o0.xyzw
dcl_temps 9
add r0.xyz, -v1.xyzx, cb0[0].xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
sample_indexable(texture2d)(float,float,float,float) r1.xy, v0.xyxx, t1.xyzw, s0
mad r1.xy, r1.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r0.w, r1.xyxx, r1.xyxx
add r0.w, -r0.w, l(1.000000)
sqrt r0.w, r0.w
deriv_rtx_coarse r2.xyz, v1.yzxy
deriv_rty_coarse r3.xyz, v1.zxyz
deriv_rtx_coarse r1.zw, v0.xxxy
deriv_rty_coarse r4.xy, v0.xyxx
mul r5.xyz, r2.xyzx, r3.yzxy
mad r5.xyz, r2.zxyz, r3.zxyz, -r5.xyzx
mul r6.xyz, r3.xyzx, r5.zxyz
mad r3.xyz, r3.zxyz, r5.xyzx, -r6.xyzx
mul r6.xyz, r2.xyzx, r5.xyzx
mad r2.xyz, r5.zxyz, r2.yzxy, -r6.xyzx
mul r4.xzw, r2.xxyz, r4.xxxx
mad r4.xzw, r1.zzzz, r3.xxyz, r4.xxzw
dp3 r1.z, r4.xzwx, r4.xzwx
rsq r1.z, r1.z
mul r4.xzw, r1.zzzz, r4.xxzw
mul r2.xyz, r2.xyzx, r4.yyyy
mad r2.xyz, r1.wwww, r3.xyzx, r2.xyzx
dp3 r1.z, r2.xyzx, r2.xyzx
rsq r1.z, r1.z
mul r2.xyz, r1.zzzz, r2.xyzx
mul r1.yzw, r1.yyyy, r2.xxyz
mad r1.xyz, r1.xxxx, r4.xzwx, r1.yzwy
mad r1.xyz, r0.wwww, v2.xyzx, r1.xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r1.xyzx
sample_indexable(texture2d)(float,float,float,float) r2.xyzw, v0.xyxx, t0.xyzw, s0
sample_indexable(texture2d)(float,float,float,float) r3.xyz, v0.xyxx, t2.xyzw, s0
dp3_sat r0.w, r1.xyzx, r0.xyzx
mul r1.w, r3.y, r3.y
mad r4.xyz, r3.zzzz, -r2.xyzx, r2.xyzx
mul r4.xyz, r3.xxxx, r4.xyzx
add r2.xyz, r2.xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
mad r2.xyz, r3.zzzz, r2.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
mul r5.xyz, r3.xxxx, r2.xyzx
add r3.z, r3.y, r3.y
add r0.w, -r0.w, l(1.000000)
mul r3.w, r0.w, r0.w
mul r3.w, r3.w, r3.w
mul r0.w, r0.w, r3.w
mul r3.w, r1.w, r1.w
mad r1.w, r1.w, r1.w, l(-1.000000)
mad r2.xyz, -r2.xyzx, r3.xxxx, l(1.000000, 1.000000, 1.000000, 0.000000)
mul r3.x, r3.w, l(0.250000)
mov r6.xyz, l(0,0,0,0)
mov r4.w, l(0)
loop 
  ige r5.w, r4.w, l(3)
  breakc_nz r5.w
  dp3 r5.w, -cb0[r4.w + 16].xyzx, -cb0[r4.w + 16].xyzx
  rsq r5.w, r5.w
  mul r7.xyz, r5.wwww, -cb0[r4.w + 16].xyzx
  mad r8.xyz, -cb0[r4.w + 16].xyzx, r5.wwww, r0.xyzx
  dp3 r5.w, r8.xyzx, r8.xyzx
  rsq r5.w, r5.w
  mul r8.xyz, r5.wwww, r8.xyzx
  dp3_sat r5.w, r1.xyzx, r7.xyzx
  dp3_sat r6.w, r7.xyzx, r8.xyzx
  dp3_sat r7.x, r1.xyzx, r8.xyzx
  mul r7.y, r6.w, r6.w
  mad r7.z, r7.y, r3.z, l(-0.500000)
  add r7.w, -r5.w, l(1.000000)
  mul r8.x, r7.w, r7.w
  mul r8.x, r8.x, r8.x
  mul r7.w, r7.w, r8.x
  mad r7.w, r7.z, r7.w, l(1.000000)
  mad r7.z, r7.z, r0.w, l(1.000000)
  mul r7.x, r7.x, r7.x
  mad r7.x, r7.x, r1.w, l(1.000000)
  mul r7.xz, r7.xxzx, r7.xxwx
  mul r7.x, r7.x, l(3.141593)
  max r7.x, r7.x, l(0.000001)
  div r7.x, r3.w, r7.x
  add r7.w, -r6.w, l(1.000000)
  mul r8.x, r7.w, r7.w
  mul r8.x, r8.x, r8.x
  mul r7.w, r7.w, r8.x
  mad r8.xyz, r2.xyzx, r7.wwww, r5.xyzx
  mad r6.w, -r6.w, r6.w, l(1.000000)
  mad r6.w, r3.x, r6.w, r7.y
  rcp r6.w, r6.w
  mul r7.xyw, r7.xxxx, r8.xyxz
  mul r7.xyw, r6.wwww, r7.xyxw
  mul r8.xyz, r5.wwww, cb0[r4.w + 19].xyzx
  mad r7.xyz, r4.xyzx, r7.zzzz, r7.xywx
  mad r6.xyz, r8.xyzx, r7.xyzx, r6.xyzx
  iadd r4.w, r4.w, l(1)
endloop 
sample_indexable(texturecube)(float,float,float,float) r2.xyz, r1.xyzx, t5.xyzw, s1
mad r2.xyz, r4.xyzx, r2.xyzx, r6.xyzx
itof r0.w, cb0[23].z
mul r0.w, r0.w, r3.y
dp3 r1.w, -r0.xyzx, r1.xyzx
add r1.w, r1.w, r1.w
mad r0.xyz, r1.xyzx, -r1.wwww, -r0.xyzx
sample_l_indexable(texturecube)(float,float,float,float) r0.xyz, r0.xyzx, t4.xyzw, s1, r0.w
mad o0.xyz, r5.xyzx, r0.xyzx, r2.xyzx
mul o0.w, r2.w, cb0[22].w
ret 
// Opaque Custom Data - XBOX Precompiled Shader Object
// Offset:[882], bundle is:[574] DWORDS.
// Disassembled Precompiled Shader Object:
// Shader Type               : (PS)
// Shader Hw Stage           : (PS)
// PDB Filename              : D:\ATG\st_dev\Kits\DirectXTK\src\Shaders\Compiled\XboxOnePBREffect_PSTextured.pdb
// Shader Semantic Hash      : 0x49fb72781bd8cf4c
//
// Shader Data:
; ----------------- PS Data ------------------------
; Input Semantic Mappings
;   [0] generic,  usageIdx 0, channelMask  3, param0, paramSlot0, DefaultVal={0,0,0,0}
;   [1] generic,  usageIdx 1, channelMask  7, param1, paramSlot1, DefaultVal={0,0,0,0}
;   [2] generic,  usageIdx 2, channelMask  7, param2, paramSlot2, DefaultVal={0,0,0,0}

codeLenInByte        = 2324 bytes;

; launchModeFlags    = 0x0000000E
srdTableSupport      = TRUE
immediateSupportExt  = TRUE
srdTableSupportExt   = TRUE

userElementCount     = 1;
;  userElements[0]      = PTR_EXTENDED_USER_DATA, ReferencedExtUserElements=1, s[0x0:1]
extUserElementCount  = 8;
;  extUserElements 1[0] = IMM_RESOURCE 0, offset 0x0:7 dwords
;  extUserElements 1[1] = IMM_RESOURCE 1, offset 0x8:15 dwords
;  extUserElements 1[2] = IMM_RESOURCE 2, offset 0x10:23 dwords
;  extUserElements 1[3] = IMM_RESOURCE 4, offset 0x18:31 dwords
;  extUserElements 1[4] = IMM_RESOURCE 5, offset 0x20:39 dwords
;  extUserElements 1[5] = IMM_SAMPLER 0, offset 0x28:43 dwords
;  extUserElements 1[6] = IMM_SAMPLER 1, offset 0x2c:47 dwords
;  extUserElements 1[7] = IMM_CONST_BUFFER 0, offset 0x30:51 dwords
NumVgprs             = 42;
NumSgprs             = 32;
FloatMode            = 192;
IeeeMode             = 0;
FlatPtr32            = 0;
ScratchSize          = 0 dwords/thread;
LDSByteSize          = 0 bytes/workgroup (compile time only);
ScratchWaveOffsetReg = s65535;
; texSamplerUsage         = 0x00000003
; constBufUsage           = 0x00000001

; SPI_SHADER_PGM_RSRC2_PS = 0x00000004
SSPRP:SCRATCH_EN            = 0
SSPRP:USER_SGPR             = 2
SSPRP:TRAP_PRESENT          = 0
SSPRP:WAVE_CNT_EN           = 0
SSPRP:EXTRA_LDS_SIZE        = 0
SSPRP:EXCP_EN               = 0
; SPI_SHADER_Z_FORMAT     = 0x00000000
SPZF:Z_EXPORT_FORMAT        = 0; SPI_SHADER_ZERO
; SPI_PS_IN_CONTROL       = 0x00000003
SPIC:NUM_INTERP             = 3
SPIC:PARAM_GEN              = 0
SPIC:FOG_ADDR               = 0
SPIC:BC_OPTIMIZE_DISABLE    = 0
SPIC:PASS_FOG_THROUGH_PS    = 0
; SPI_PS_INPUT_ADDR       = 0x00000002
SPIA:PERSP_CENTER_ENA       = 1
; DB_SHADER_CONTROL       = 0x00000010
DB:Z_ORDER                  = 1
DB:CONSERVATIVE_Z_EXPORT    = 0; EXPORT_ANY_Z
; CB_SHADER_MASK          = 0x0000000F
CB:OUTPUT0_ENABLE           = 15

dx9TexCubeMask           = 0x00000030

; export table for mrt0 [patch@(bytes=0x900, dwords=0x240)]
// Export Patch Code (FMT_ZERO):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_nop         0x0000                                  // 000000000000: BF800000
  s_nop         0x0000                                  // 000000000004: BF800000
  exp           null, off, off, off, off done vm        // 000000000008: F8001890 00000000
end
// Export Patch Code (FMT_32_R):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_nop         0x0000                                  // 000000000000: BF800000
  s_nop         0x0000                                  // 000000000004: BF800000
  exp           mrt0, v7, off, off, off done vm         // 000000000008: F8001801 00000007
end
// Export Patch Code (FMT_32_GR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_nop         0x0000                                  // 000000000000: BF800000
  s_nop         0x0000                                  // 000000000004: BF800000
  exp           mrt0, v7, v10, off, off done vm         // 000000000008: F8001803 00000A07
end
// Export Patch Code (FMT_32_AR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_nop         0x0000                                  // 000000000000: BF800000
  s_nop         0x0000                                  // 000000000004: BF800000
  exp           mrt0, v7, v1, off, off done vm          // 000000000008: F8001803 00000107
end
// Export Patch Code (FMT_FP16_ABGR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  v_cvt_pkrtz_f16_f32  v2, v7, v10                      // 000000000000: 5E041507
  v_cvt_pkrtz_f16_f32  v0, v0, v1                       // 000000000004: 5E000300
  exp           mrt0, v2, v2, v0, v0 done compr vm      // 000000000008: F8001C0F 00000002
end
// Export Patch Code (FMT_UNORM16_ABGR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  v_cvt_pknorm_u16_f32  v2, v7, v10                     // 000000000000: 5C041507
  v_cvt_pknorm_u16_f32  v0, v0, v1                      // 000000000004: 5C000300
  exp           mrt0, v2, v2, v0, v0 done compr vm      // 000000000008: F8001C0F 00000002
end
// Export Patch Code (FMT_SNORM16_ABGR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  v_cvt_pknorm_i16_f32  v2, v7, v10                     // 000000000000: 5A041507
  v_cvt_pknorm_i16_f32  v0, v0, v1                      // 000000000004: 5A000300
  exp           mrt0, v2, v2, v0, v0 done compr vm      // 000000000008: F8001C0F 00000002
end
// Export Patch Code (FMT_UINT16_ABGR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  v_cvt_pk_u16_u32  v2, v7, v10                         // 000000000000: 60041507
  v_cvt_pk_u16_u32  v0, v0, v1                          // 000000000004: 60000300
  exp           mrt0, v2, v2, v0, v0 done compr vm      // 000000000008: F8001C0F 00000002
end
// Export Patch Code (FMT_SINT16_ABGR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  v_cvt_pk_i16_i32  v2, v7, v10                         // 000000000000: 62041507
  v_cvt_pk_i16_i32  v0, v0, v1                          // 000000000004: 62000300
  exp           mrt0, v2, v2, v0, v0 done compr vm      // 000000000008: F8001C0F 00000002
end
// Export Patch Code (FMT_32_ABGR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_nop         0x0000                                  // 000000000000: BF800000
  s_nop         0x0000                                  // 000000000004: BF800000
  exp           mrt0, v7, v10, v0, v1 done vm           // 000000000008: F800180F 01000A07
end

// Shader Instructions:
shader main
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_mov_b64     s[28:29], exec                          // 000000000000: BE9C047E
  s_wqm_b64     exec, exec // wrscc                     // 000000000004: BEFE0A7E
  s_load_dwordx8  s[4:11], s[0:1], 0x08                 // 000000000008: C0C20108
  s_load_dwordx4  s[12:15], s[0:1], 0x28                // 00000000000C: C0860128
  s_mov_b32     m0, s2                                  // 000000000010: BEFC0302
  v_interp_p1_f32  v4, v0, attr0.x                      // 000000000014: C8100000
  v_interp_p1_f32  v5, v0, attr0.y                      // 000000000018: C8140100
  v_interp_p2_f32  v4, v1, attr0.x                      // 00000000001C: C8110001
  v_interp_p2_f32  v5, v1, attr0.y                      // 000000000020: C8150101
  s_waitcnt     lgkmcnt(0)                              // 000000000024: BF8C007F
  image_sample  v[6:9], v[4:5], s[4:11], s[12:15] dmask:0x3 // 000000000028: F0800300 00610604
  s_load_dwordx8  s[4:11], s[0:1], 0x10                 // 000000000030: C0C20110
  s_waitcnt     lgkmcnt(0)                              // 000000000034: BF8C007F
  image_sample  v[8:11], v[4:5], s[4:11], s[12:15] dmask:0x7 // 000000000038: F0800700 00610804
  v_interp_p1_f32  v11, v0, attr1.x                     // 000000000040: C82C0400
  v_interp_p1_f32  v12, v0, attr1.z                     // 000000000044: C8300600
  v_interp_p2_f32  v11, v1, attr1.x                     // 000000000048: C82D0401
  v_interp_p1_f32  v13, v0, attr1.y                     // 00000000004C: C8340500
  v_interp_p2_f32  v12, v1, attr1.z                     // 000000000050: C8310601
  v_interp_p2_f32  v13, v1, attr1.y                     // 000000000054: C8350501
  ds_swizzle_b32  v14, v11 offset:32853                 // 000000000058: D8D48055 0E00000B
  ds_swizzle_b32  v15, v11 offset:32768                 // 000000000060: D8D48000 0F00000B
  ds_swizzle_b32  v16, v12 offset:32938                 // 000000000068: D8D480AA 1000000C
  ds_swizzle_b32  v17, v12 offset:32768                 // 000000000070: D8D48000 1100000C
  ds_swizzle_b32  v18, v12 offset:32853                 // 000000000078: D8D48055 1200000C
  ds_swizzle_b32  v19, v12 offset:32768                 // 000000000080: D8D48000 1300000C
  s_waitcnt     lgkmcnt(4)                              // 000000000088: BF8C047F
  v_sub_f32     v14, v14, v15                           // 00000000008C: 081C1F0E
  s_waitcnt     lgkmcnt(2)                              // 000000000090: BF8C027F
  v_sub_f32     v15, v16, v17                           // 000000000094: 081E2310
  ds_swizzle_b32  v16, v11 offset:32938                 // 000000000098: D8D480AA 1000000B
  ds_swizzle_b32  v17, v11 offset:32768                 // 0000000000A0: D8D48000 1100000B
  ds_swizzle_b32  v20, v13 offset:32938                 // 0000000000A8: D8D480AA 1400000D
  ds_swizzle_b32  v21, v13 offset:32768                 // 0000000000B0: D8D48000 1500000D
  ds_swizzle_b32  v22, v13 offset:32853                 // 0000000000B8: D8D48055 1600000D
  ds_swizzle_b32  v23, v13 offset:32768                 // 0000000000C0: D8D48000 1700000D
  s_waitcnt     lgkmcnt(6)                              // 0000000000C8: BF8C067F
  v_sub_f32     v18, v18, v19                           // 0000000000CC: 08242712
  s_waitcnt     lgkmcnt(4)                              // 0000000000D0: BF8C047F
  v_sub_f32     v16, v16, v17                           // 0000000000D4: 08202310
  s_waitcnt     lgkmcnt(2)                              // 0000000000D8: BF8C027F
  v_sub_f32     v17, v20, v21                           // 0000000000DC: 08222B14
  v_mul_legacy_f32  v19, v14, v15                       // 0000000000E0: 0E261F0E
  s_waitcnt     lgkmcnt(0)                              // 0000000000E4: BF8C007F
  v_sub_f32     v20, v22, v23                           // 0000000000E8: 08282F16
  v_mul_legacy_f32  v21, v18, v17                       // 0000000000EC: 0E2A2312
  v_mad_legacy_f32  v19, v18, v16, -v19                 // 0000000000F0: D2800013 844E2112
  ds_swizzle_b32  v22, v5 offset:32938                  // 0000000000F8: D8D480AA 16000005
  ds_swizzle_b32  v23, v5 offset:32768                  // 000000000100: D8D48000 17000005
  v_mul_legacy_f32  v24, v20, v16                       // 000000000108: 0E302114
  v_mad_legacy_f32  v21, v20, v15, -v21                 // 00000000010C: D2800015 84561F14
  v_mul_legacy_f32  v25, v14, v19                       // 000000000114: 0E32270E
  s_load_dwordx4  s[4:7], s[0:1], 0x30                  // 000000000118: C0820130
  ds_swizzle_b32  v26, v5 offset:32853                  // 00000000011C: D8D48055 1A000005
  ds_swizzle_b32  v3, v5 offset:32768                   // 000000000124: D8D48000 03000005
  ds_swizzle_b32  v27, v4 offset:32938                  // 00000000012C: D8D480AA 1B000004
  ds_swizzle_b32  v28, v4 offset:32768                  // 000000000134: D8D48000 1C000004
  s_waitcnt     lgkmcnt(0)                              // 00000000013C: BF8C007F
  v_sub_f32     v22, v22, v23                           // 000000000140: 082C2F16
  v_mad_legacy_f32  v24, v14, v17, -v24                 // 000000000144: D2800018 8462230E
  v_mul_legacy_f32  v23, v17, v21                       // 00000000014C: 0E2E2B11
  v_mul_legacy_f32  v29, v18, v21                       // 000000000150: 0E3A2B12
  v_mad_legacy_f32  v25, v21, v20, -v25                 // 000000000154: D2800019 84662915
  ds_swizzle_b32  v30, v4 offset:32853                  // 00000000015C: D8D48055 1E000004
  ds_swizzle_b32  v2, v4 offset:32768                   // 000000000164: D8D48000 02000004
  v_sub_f32     v3, v26, v3                             // 00000000016C: 0806071A
  v_sub_f32     v26, v27, v28                           // 000000000170: 0834391B
  v_mul_legacy_f32  v27, v16, v24                       // 000000000174: 0E363110
  v_mad_legacy_f32  v23, v16, v19, -v23                 // 000000000178: D2800017 845E2710
  v_mul_legacy_f32  v16, v20, v24                       // 000000000180: 0E203114
  v_mad_legacy_f32  v29, v24, v14, -v29                 // 000000000184: D280001D 84761D18
  v_mul_legacy_f32  v14, v22, v25                       // 00000000018C: 0E1C3316
  s_waitcnt     lgkmcnt(0)                              // 000000000190: BF8C007F
  v_sub_f32     v2, v30, v2                             // 000000000194: 0804051E
  v_mul_legacy_f32  v20, v15, v19                       // 000000000198: 0E28270F
  v_mad_legacy_f32  v27, v15, v21, -v27                 // 00000000019C: D280001B 846E2B0F
  v_mad_legacy_f32  v16, v19, v18, -v16                 // 0000000001A4: D2800010 84422513
  v_mul_legacy_f32  v15, v26, v25                       // 0000000001AC: 0E1E331A
  v_mul_legacy_f32  v18, v22, v29                       // 0000000001B0: 0E243B16
  v_mac_f32     v14, v3, v23                            // 0000000001B4: 3E1C2F03
  v_mad_legacy_f32  v20, v17, v24, -v20                 // 0000000001B8: D2800014 84523111
  v_mul_legacy_f32  v17, v26, v29                       // 0000000001C0: 0E223B1A
  v_mac_f32     v15, v2, v23                            // 0000000001C4: 3E1E2F02
  v_mul_legacy_f32  v19, v22, v16                       // 0000000001C8: 0E262116
  v_mac_f32     v18, v3, v27                            // 0000000001CC: 3E243703
  v_mul_legacy_f32  v21, v14, v14                       // 0000000001D0: 0E2A1D0E
  v_mul_legacy_f32  v16, v26, v16                       // 0000000001D4: 0E20211A
  v_mac_f32     v17, v2, v27                            // 0000000001D8: 3E223702
  v_mul_legacy_f32  v22, v15, v15                       // 0000000001DC: 0E2C1F0F
  v_mac_f32     v19, v3, v20                            // 0000000001E0: 3E262903
  v_mac_f32     v21, v18, v18                           // 0000000001E4: 3E2A2512
  s_buffer_load_dwordx4  s[8:11], s[4:7], 0x00          // 0000000001E8: C2840500
  s_waitcnt     vmcnt(1)                                // 0000000001EC: BF8C0F71
  v_mad_f32     v3, v6, 2.0, -1.0                       // 0000000001F0: D2820003 03CDE906
  v_mac_f32     v16, v2, v20                            // 0000000001F8: 3E202902
  v_mac_f32     v22, v17, v17                           // 0000000001FC: 3E2C2311
  v_mac_f32     v21, v19, v19                           // 000000000200: 3E2A2713
  v_mad_f32     v2, v7, 2.0, -1.0                       // 000000000204: D2820002 03CDE907
  v_mul_legacy_f32  v6, v3, v3                          // 00000000020C: 0E0C0703
  v_mac_f32     v22, v16, v16                           // 000000000210: 3E2C2110
  v_rsq_f32     v7, v21                                 // 000000000214: 7E0E5D15
  v_mac_f32     v6, v2, v2                              // 000000000218: 3E0C0502
  v_rsq_f32     v20, v22                                // 00000000021C: 7E285D16
  v_mul_legacy_f32  v14, v14, v7                        // 000000000220: 0E1C0F0E
  s_load_dwordx8  s[16:23], s[0:1], 0x00                // 000000000224: C0C80100
  v_sub_f32     v6, 1.0, v6                             // 000000000228: 080C0CF2
  v_mul_legacy_f32  v15, v15, v20                       // 00000000022C: 0E1E290F
  v_mul_legacy_f32  v18, v18, v7                        // 000000000230: 0E240F12
  v_mul_legacy_f32  v14, v2, v14                        // 000000000234: 0E1C1D02
  v_interp_p1_f32  v21, v0, attr2.z                     // 000000000238: C8540A00
  v_sqrt_f32    v6, v6                                  // 00000000023C: 7E0C6706
  v_mul_legacy_f32  v17, v17, v20                       // 000000000240: 0E222911
  v_mul_legacy_f32  v7, v19, v7                         // 000000000244: 0E0E0F13
  v_mul_legacy_f32  v18, v2, v18                        // 000000000248: 0E242502
  v_mac_f32     v14, v3, v15                            // 00000000024C: 3E1C1F03
  v_interp_p1_f32  v15, v0, attr2.y                     // 000000000250: C83C0900
  v_interp_p2_f32  v21, v1, attr2.z                     // 000000000254: C8550A01
  s_waitcnt     lgkmcnt(0)                              // 000000000258: BF8C007F
  v_sub_f32     v12, s10, v12                           // 00000000025C: 0818180A
  v_mul_legacy_f32  v16, v16, v20                       // 000000000260: 0E202910
  v_mul_legacy_f32  v2, v2, v7                          // 000000000264: 0E040F02
  v_mac_f32     v18, v3, v17                            // 000000000268: 3E242303
  v_interp_p1_f32  v0, v0, attr2.x                      // 00000000026C: C8000800
  v_interp_p2_f32  v15, v1, attr2.y                     // 000000000270: C83D0901
  v_mac_f32     v14, v6, v21                            // 000000000274: 3E1C2B06
  v_sub_f32     v7, s9, v13                             // 000000000278: 080E1A09
  v_mul_legacy_f32  v13, v12, v12                       // 00000000027C: 0E1A190C
  v_mac_f32     v2, v3, v16                             // 000000000280: 3E042103
  v_interp_p2_f32  v0, v1, attr2.x                      // 000000000284: C8010801
  v_mac_f32     v18, v6, v15                            // 000000000288: 3E241F06
  v_mul_legacy_f32  v1, v14, v14                        // 00000000028C: 0E021D0E
  v_sub_f32     v3, s8, v11                             // 000000000290: 08061608
  v_mac_f32     v13, v7, v7                             // 000000000294: 3E1A0F07
  v_mac_f32     v2, v6, v0                              // 000000000298: 3E040106
  v_mac_f32     v1, v18, v18                            // 00000000029C: 3E022512
  image_sample  v[19:22], v[4:5], s[16:23], s[12:15] dmask:0xf // 0000000002A0: F0800F00 00641304
  v_mac_f32     v13, v3, v3                             // 0000000002A8: 3E1A0703
  v_mac_f32     v1, v2, v2                              // 0000000002AC: 3E020502
  v_rsq_f32     v0, v13                                 // 0000000002B0: 7E005D0D
  v_rsq_f32     v1, v1                                  // 0000000002B4: 7E025D01
  v_mul_legacy_f32  v4, v12, v0                         // 0000000002B8: 0E08010C
  v_mul_legacy_f32  v5, v14, v1                         // 0000000002BC: 0E0A030E
  s_buffer_load_dword  s2, s[4:7], 0x5e                 // 0000000002C0: C201055E
  v_mul_legacy_f32  v6, v7, v0                          // 0000000002C4: 0E0C0107
  v_mul_legacy_f32  v7, v18, v1                         // 0000000002C8: 0E0E0312
  v_mul_legacy_f32  v11, -v4, v5                        // 0000000002CC: D20E000B 20020B04
  v_mul_legacy_f32  v0, v3, v0                          // 0000000002D4: 0E000103
  v_mul_legacy_f32  v1, v2, v1                          // 0000000002D8: 0E020302
  v_mad_legacy_f32  v11, -v6, v7, v11                   // 0000000002DC: D280000B 242E0F06
  s_load_dwordx16  s[8:23], s[0:1], 0x18                // 0000000002E4: C1040118
  s_load_dwordx4  s[24:27], s[0:1], 0x2c                // 0000000002E8: C08C012C
  s_nop         0x0000                                  // 0000000002EC: BF800000
  v_mad_legacy_f32  v11, -v0, v1, v11 mul:2             // 0000000002F0: D280000B 2C2E0300
  v_cubema_f32  v2, v1, v7, v5                          // 0000000002F8: D28E0002 04160F01
  v_mad_legacy_f32  v3, v1, -v11, -v0                   // 000000000300: D2800003 C4021701
  v_mad_legacy_f32  v12, v7, -v11, -v6                  // 000000000308: D280000C C41A1707
  v_mad_legacy_f32  v11, v5, -v11, -v4                  // 000000000310: D280000B C4121705
  v_cubetc_f32  v13, v1, v7, v5                         // 000000000318: D28C000D 04160F01
  v_cubesc_f32  v14, v1, v7, v5                         // 000000000320: D28A000E 04160F01
  v_rcp_f32     v2, abs(v2)                             // 000000000328: D3540102 00000102
  v_cubema_f32  v15, v3, v12, v11                       // 000000000330: D28E000F 042E1903
  v_cubeid_f32  v25, v1, v7, v5                         // 000000000338: D2880019 04160F01
  v_madak_f32   v24, v13, v2, 0x3fc00000                // 000000000340: 4230050D 3FC00000
  v_madak_f32   v23, v14, v2, 0x3fc00000                // 000000000348: 422E050E 3FC00000
  s_waitcnt     lgkmcnt(0)                              // 000000000350: BF8C007F
  v_cvt_f32_i32  v14, s2                                // 000000000354: 7E1C0A02
  v_cubetc_f32  v17, v3, v12, v11                       // 000000000358: D28C0011 042E1903
  v_cubesc_f32  v18, v3, v12, v11                       // 000000000360: D28A0012 042E1903
  v_rcp_f32     v15, abs(v15)                           // 000000000368: D354010F 0000010F
  s_waitcnt     vmcnt(1)                                // 000000000370: BF8C0F71
  v_mul_legacy_f32  v14, v9, v14                        // 000000000374: 0E1C1D09
  v_cubeid_f32  v13, v3, v12, v11                       // 000000000378: D288000D 042E1903
  v_madak_f32   v12, v17, v15, 0x3fc00000               // 000000000380: 42181F11 3FC00000
  v_madak_f32   v11, v18, v15, 0x3fc00000               // 000000000388: 42161F12 3FC00000
  image_sample  v[15:18], v[23:24], s[16:23], s[24:27] dmask:0x7 // 000000000390: F0800700 00C40F17
  image_sample_l  v[11:14], v[11:12], s[8:15], s[24:27] dmask:0x7 // 000000000398: F0900700 00C20B0B
  s_buffer_load_dwordx4  s[0:3], s[4:7], 0x40           // 0000000003A0: C2800540
  s_buffer_load_dwordx4  s[8:11], s[4:7], 0x44          // 0000000003A4: C2840544
  s_buffer_load_dwordx4  s[12:15], s[4:7], 0x48         // 0000000003A8: C2860548
  s_waitcnt     lgkmcnt(0)                              // 0000000003AC: BF8C007F
  v_mul_legacy_f32  v2, s2, s2                          // 0000000003B0: D20E0002 00000402
  v_mad_f32     v2, s1, s1, v2                          // 0000000003B8: D2820002 04080201
  v_mul_legacy_f32  v3, s10, s10                        // 0000000003C0: D20E0003 0000140A
  v_mad_f32     v2, s0, s0, v2                          // 0000000003C8: D2820002 04080000
  v_mad_f32     v3, s9, s9, v3                          // 0000000003D0: D2820003 040C1209
  v_mul_legacy_f32  v14, s14, s14                       // 0000000003D8: D20E000E 00001C0E
  v_rsq_f32     v2, v2                                  // 0000000003E0: 7E045D02
  v_mad_f32     v3, s8, s8, v3                          // 0000000003E4: D2820003 040C1008
  v_mad_f32     v14, s13, s13, v14                      // 0000000003EC: D282000E 04381A0D
  v_mad_legacy_f32  v18, -s2, v2, v4                    // 0000000003F4: D2800012 24120402
  v_rsq_f32     v3, v3                                  // 0000000003FC: 7E065D03
  v_mad_f32     v14, s12, s12, v14                      // 000000000400: D282000E 0438180C
  v_mad_legacy_f32  v23, -s1, v2, v6                    // 000000000408: D2800017 241A0401
  v_mul_legacy_f32  v24, v18, v18                       // 000000000410: 0E302512
  v_mad_legacy_f32  v25, -s10, v3, v4                   // 000000000414: D2800019 2412060A
  v_rsq_f32     v14, v14                                // 00000000041C: 7E1C5D0E
  v_mad_legacy_f32  v26, -s0, v2, v0                    // 000000000420: D280001A 24020400
  v_mac_f32     v24, v23, v23                           // 000000000428: 3E302F17
  v_mad_legacy_f32  v27, -s9, v3, v6                    // 00000000042C: D280001B 241A0609
  v_mul_legacy_f32  v28, v25, v25                       // 000000000434: 0E383319
  v_mad_legacy_f32  v29, -s14, v14, v4                  // 000000000438: D280001D 24121C0E
  v_mac_f32     v24, v26, v26                           // 000000000440: 3E30351A
  v_mad_legacy_f32  v30, -s8, v3, v0                    // 000000000444: D280001E 24020608
  v_mac_f32     v28, v27, v27                           // 00000000044C: 3E38371B
  v_mad_legacy_f32  v31, -s13, v14, v6                  // 000000000450: D280001F 241A1C0D
  v_mul_legacy_f32  v32, v29, v29                       // 000000000458: 0E403B1D
  v_rsq_f32     v24, v24                                // 00000000045C: 7E305D18
  v_mac_f32     v28, v30, v30                           // 000000000460: 3E383D1E
  v_mad_legacy_f32  v33, -s12, v14, v0                  // 000000000464: D2800021 24021C0C
  v_mac_f32     v32, v31, v31                           // 00000000046C: 3E403F1F
  v_mul_legacy_f32  v18, v18, v24                       // 000000000470: 0E243112
  v_rsq_f32     v28, v28                                // 000000000474: 7E385D1C
  v_mac_f32     v32, v33, v33                           // 000000000478: 3E404321
  v_mul_legacy_f32  v23, v23, v24                       // 00000000047C: 0E2E3117
  v_mul_legacy_f32  v34, v5, v18                        // 000000000480: 0E442505
  v_mul_legacy_f32  v25, v25, v28                       // 000000000484: 0E323919
  v_rsq_f32     v32, v32                                // 000000000488: 7E405D20
  v_mul_legacy_f32  v35, -s2, v2                        // 00000000048C: D20E0023 20020402
  v_mul_legacy_f32  v24, v26, v24                       // 000000000494: 0E30311A
  v_mac_f32     v34, v7, v23                            // 000000000498: 3E442F07
  v_mul_legacy_f32  v26, v27, v28                       // 00000000049C: 0E34391B
  v_mul_legacy_f32  v27, v5, v25                        // 0000000004A0: 0E363305
  v_mul_legacy_f32  v29, v29, v32                       // 0000000004A4: 0E3A411D
  v_mul_legacy_f32  v36, v9, v9                         // 0000000004A8: 0E481309
  v_mul_legacy_f32  v37, -s1, v2                        // 0000000004AC: D20E0025 20020401
  v_mul_legacy_f32  v18, v35, v18                       // 0000000004B4: 0E242523
  v_mad_legacy_f32  v34, v1, v24, v34 clamp             // 0000000004B8: D2800822 048A3101
  v_mul_legacy_f32  v38, -s10, v3                       // 0000000004C0: D20E0026 2002060A
  v_mul_legacy_f32  v28, v30, v28                       // 0000000004C8: 0E38391E
  v_mac_f32     v27, v7, v26                            // 0000000004CC: 3E363507
  v_mul_legacy_f32  v30, v31, v32                       // 0000000004D0: 0E3C411F
  v_mul_legacy_f32  v31, v5, v29                        // 0000000004D4: 0E3E3B05
  v_mul_legacy_f32  v4, v4, v5                          // 0000000004D8: 0E080B04
  v_mad_f32     v39, v36, v36, -1.0                     // 0000000004DC: D2820027 03CE4924
  v_mul_legacy_f32  v2, -s0, v2                         // 0000000004E4: D20E0002 20020400
  v_mul_legacy_f32  v35, v5, v35                        // 0000000004EC: 0E464705
  v_mac_f32     v18, v37, v23                           // 0000000004F0: 3E242F25
  v_mul_legacy_f32  v23, v34, v34                       // 0000000004F4: 0E2E4522
  v_mul_legacy_f32  v34, -s9, v3                        // 0000000004F8: D20E0022 20020609
  v_mul_legacy_f32  v25, v38, v25                       // 000000000500: 0E323326
  v_mad_legacy_f32  v27, v1, v28, v27 clamp             // 000000000504: D280081B 046E3901
  v_mul_legacy_f32  v40, -s14, v14                      // 00000000050C: D20E0028 20021C0E
  v_mul_legacy_f32  v32, v33, v32                       // 000000000514: 0E404121
  v_mac_f32     v31, v7, v30                            // 000000000518: 3E3E3D07
  v_mac_f32     v4, v7, v6                              // 00000000051C: 3E080D07
  v_mac_f32     v35, v7, v37                            // 000000000520: 3E464B07
  v_mad_legacy_f32  v18, v2, v24, v18 clamp             // 000000000524: D2800812 044A3102
  v_mad_f32     v6, v23, v39, 1.0                       // 00000000052C: D2820006 03CA4F17
  v_mul_legacy_f32  v3, -s8, v3                         // 000000000534: D20E0003 20020608
  v_mul_legacy_f32  v23, v5, v38                        // 00000000053C: 0E2E4D05
  v_mac_f32     v25, v34, v26                           // 000000000540: 3E323522
  v_mul_legacy_f32  v24, v27, v27                       // 000000000544: 0E30371B
  v_mul_legacy_f32  v26, -s13, v14                      // 000000000548: D20E001A 20021C0D
  v_mul_legacy_f32  v27, v40, v29                       // 000000000550: 0E363B28
  v_mad_legacy_f32  v31, v1, v32, v31 clamp             // 000000000554: D280081F 047E4101
  v_mad_legacy_f32  v4, v1, v0, v4 clamp                // 00000000055C: D2800804 04120101
  s_mov_b32     s0, 0xbd23d70a                          // 000000000564: BE8003FF BD23D70A
  v_mad_legacy_f32  v35, v1, v2, v35 clamp              // 00000000056C: D2800823 048E0501
  v_mul_legacy_f32  v0, v6, v6                          // 000000000574: 0E000D06
  s_mov_b32     s1, 0x40490fdb                          // 000000000578: BE8103FF 40490FDB
  v_sub_f32     v2, 1.0, v18                            // 000000000580: 080424F2
  v_mac_f32     v23, v7, v34                            // 000000000584: 3E2E4507
  v_mad_legacy_f32  v25, v3, v28, v25 clamp             // 000000000588: D2800819 04663903
  v_mad_f32     v6, v24, v39, 1.0                       // 000000000590: D2820006 03CA4F18
  v_mul_legacy_f32  v14, -s12, v14                      // 000000000598: D20E000E 20021C0C
  v_mul_legacy_f32  v5, v5, v40                         // 0000000005A0: 0E0A5105
  v_mac_f32     v27, v26, v30                           // 0000000005A4: 3E363D1A
  v_mul_legacy_f32  v24, v31, v31                       // 0000000005A8: 0E303F1F
  s_waitcnt     vmcnt(2)                                // 0000000005AC: BF8C0F72
  v_add_f32     v28, s0, v19                            // 0000000005B0: 06382600
  v_add_f32     v29, s0, v20                            // 0000000005B4: 063A2800
  v_add_f32     v30, s0, v21                            // 0000000005B8: 063C2A00
  v_sub_f32     v31, 1.0, v4                            // 0000000005BC: 083E08F2
  v_sub_f32     v33, 1.0, v35                           // 0000000005C0: 084246F2
  v_mul_legacy_f32  v0, s1, v0                          // 0000000005C4: 0E000001
  s_mov_b32     s0, 0x358637bd                          // 0000000005C8: BE8003FF 358637BD
  v_mad_legacy_f32  v2, -v18, v2, v2                    // 0000000005D0: D2800002 240A0512
  v_mad_legacy_f32  v23, v1, v3, v23 clamp              // 0000000005D8: D2800817 045E0701
  v_mul_legacy_f32  v3, v6, v6                          // 0000000005E0: 0E060D06
  v_sub_f32     v6, 1.0, v25                            // 0000000005E4: 080C32F2
  v_mac_f32     v5, v7, v26                             // 0000000005E8: 3E0A3507
  v_mad_legacy_f32  v27, v14, v32, v27 clamp            // 0000000005EC: D280081B 046E410E
  v_mad_f32     v7, v24, v39, 1.0                       // 0000000005F4: D2820007 03CA4F18
  s_buffer_load_dwordx4  s[8:11], s[4:7], 0x4c          // 0000000005FC: C284054C
  v_madak_f32   v24, v10, v28, 0x3d23d70a               // 000000000600: 4230390A 3D23D70A
  v_madak_f32   v26, v10, v29, 0x3d23d70a               // 000000000608: 42343B0A 3D23D70A
  v_madak_f32   v28, v10, v30, 0x3d23d70a               // 000000000610: 42383D0A 3D23D70A
  v_mad_legacy_f32  v31, -v4, v31, v31                  // 000000000618: D280001F 247E3F04
  v_mul_legacy_f32  v29, v36, v36                       // 000000000620: 0E3A4924
  v_mad_legacy_f32  v33, -v35, v33, v33                 // 000000000624: D2800021 24864323
  v_max_legacy_f32  v0, s0, v0                          // 00000000062C: 1C000000
  v_mul_legacy_f32  v2, v2, v2                          // 000000000630: 0E040502
  v_sub_f32     v30, 1.0, v23                           // 000000000634: 083C2EF2
  v_mul_legacy_f32  v3, s1, v3                          // 000000000638: 0E060601
  v_mad_legacy_f32  v6, -v25, v6, v6                    // 00000000063C: D2800006 241A0D19
  v_mad_legacy_f32  v5, v1, v14, v5 clamp               // 000000000644: D2800805 04161D01
  v_mul_legacy_f32  v1, v7, v7                          // 00000000064C: 0E020F07
  v_sub_f32     v7, 1.0, v27                            // 000000000650: 080E36F2
  s_buffer_load_dwordx4  s[12:15], s[4:7], 0x50         // 000000000654: C2860550
  v_mul_legacy_f32  v14, v8, v24                        // 000000000658: 0E1C3108
  v_mul_legacy_f32  v32, v8, v26                        // 00000000065C: 0E403508
  v_mul_legacy_f32  v34, v8, v28                        // 000000000660: 0E443908
  v_max_f32     v9, v9, v9 mul:2                        // 000000000664: D2200009 08021309
  v_mul_legacy_f32  v31, v31, v31                       // 00000000066C: 0E3E3F1F
  v_mad_legacy_f32  v24, -v8, v24, 1.0                  // 000000000670: D2800018 23CA3108
  v_mad_legacy_f32  v26, -v8, v26, 1.0                  // 000000000678: D280001A 23CA3508
  v_mad_legacy_f32  v28, -v8, v28, 1.0                  // 000000000680: D280001C 23CA3908
  v_mul_legacy_f32  v36, 0x3e800000, v29                // 000000000688: 0E483AFF 3E800000
  v_mul_legacy_f32  v37, v18, v18                       // 000000000690: 0E4A2512
  v_mul_legacy_f32  v33, v33, v33                       // 000000000694: 0E424321
  v_rcp_f32     v0, v0                                  // 000000000698: 7E005500
  v_mad_legacy_f32  v2, -v18, v2, v2                    // 00000000069C: D2800002 240A0512
  v_mad_legacy_f32  v18, -v18, v18, 1.0                 // 0000000006A4: D2800012 23CA2512
  v_mad_legacy_f32  v30, -v23, v30, v30                 // 0000000006AC: D280001E 247A3D17
  v_max_legacy_f32  v3, s0, v3                          // 0000000006B4: 1C060600
  v_mul_legacy_f32  v6, v6, v6                          // 0000000006B8: 0E0C0D06
  v_sub_f32     v38, 1.0, v5                            // 0000000006BC: 084C0AF2
  v_mul_legacy_f32  v1, s1, v1                          // 0000000006C0: 0E020201
  v_mad_legacy_f32  v7, -v27, v7, v7                    // 0000000006C4: D2800007 241E0F1B
  s_buffer_load_dwordx4  s[16:19], s[4:7], 0x54         // 0000000006CC: C2880554
  v_mad_legacy_f32  v31, -v4, v31, v31                  // 0000000006D0: D280001F 247E3F04
  v_mad_f32     v4, v37, v9, -0.5                       // 0000000006D8: D2820004 03C61325
  v_mad_legacy_f32  v33, -v35, v33, v33                 // 0000000006E0: D2800021 24864323
  v_mul_f32     v0, v29, v0                             // 0000000006E8: 1000011D
  v_mad_f32     v39, v24, v2, v14                       // 0000000006EC: D2820027 043A0518
  v_mad_f32     v40, v26, v2, v32                       // 0000000006F4: D2820028 0482051A
  v_mad_f32     v2, v28, v2, v34                        // 0000000006FC: D2820002 048A051C
  v_mac_f32     v37, v36, v18                           // 000000000704: 3E4A2524
  v_mul_legacy_f32  v18, v25, v25                       // 000000000708: 0E243319
  v_mul_legacy_f32  v30, v30, v30                       // 00000000070C: 0E3C3D1E
  v_rcp_f32     v3, v3                                  // 000000000710: 7E065503
  v_mad_legacy_f32  v6, -v25, v6, v6                    // 000000000714: D2800006 241A0D19
  v_mad_legacy_f32  v25, -v25, v25, 1.0                 // 00000000071C: D2800019 23CA3319
  v_mad_legacy_f32  v38, -v5, v38, v38                  // 000000000724: D2800026 249A4D05
  v_max_legacy_f32  v1, s0, v1                          // 00000000072C: 1C020200
  v_mul_legacy_f32  v7, v7, v7                          // 000000000730: 0E0E0F07
  v_mad_legacy_f32  v19, v10, -v19, v19                 // 000000000734: D2800013 444E270A
  v_mad_legacy_f32  v20, v10, -v20, v20                 // 00000000073C: D2800014 4452290A
  v_mad_legacy_f32  v21, v10, -v21, v21                 // 000000000744: D2800015 44562B0A
  v_mad_f32     v10, v4, v33, 1.0                       // 00000000074C: D282000A 03CA4304
  v_mad_f32     v4, v4, v31, 1.0                        // 000000000754: D2820004 03CA3F04
  v_rcp_f32     v33, v37                                // 00000000075C: 7E425525
  v_mul_legacy_f32  v37, v0, v39                        // 000000000760: 0E4A4F00
  v_mul_legacy_f32  v39, v0, v40                        // 000000000764: 0E4E5100
  v_mul_legacy_f32  v0, v0, v2                          // 000000000768: 0E000500
  v_mad_f32     v2, v18, v9, -0.5                       // 00000000076C: D2820002 03C61312
  v_mad_legacy_f32  v30, -v23, v30, v30                 // 000000000774: D280001E 247A3D17
  v_mul_f32     v3, v29, v3                             // 00000000077C: 1006071D
  v_mad_f32     v40, v24, v6, v14                       // 000000000780: D2820028 043A0D18
  v_mad_f32     v41, v26, v6, v32                       // 000000000788: D2820029 04820D1A
  v_mad_f32     v6, v28, v6, v34                        // 000000000790: D2820006 048A0D1C
  v_mac_f32     v18, v36, v25                           // 000000000798: 3E243324
  v_mul_legacy_f32  v25, v27, v27                       // 00000000079C: 0E32371B
  v_mul_legacy_f32  v38, v38, v38                       // 0000000007A0: 0E4C4D26
  v_rcp_f32     v1, v1                                  // 0000000007A4: 7E025501
  v_mad_legacy_f32  v7, -v27, v7, v7                    // 0000000007A8: D2800007 241E0F1B
  v_mad_legacy_f32  v27, -v27, v27, 1.0                 // 0000000007B0: D280001B 23CA371B
  v_mul_legacy_f32  v19, v8, v19                        // 0000000007B8: 0E262708
  v_mul_legacy_f32  v20, v8, v20                        // 0000000007BC: 0E282908
  v_mul_legacy_f32  v8, v8, v21                         // 0000000007C0: 0E102B08
  v_mul_legacy_f32  v4, v10, v4                         // 0000000007C4: 0E08090A
  v_mul_legacy_f32  v10, v33, v37                       // 0000000007C8: 0E144B21
  v_mul_legacy_f32  v21, v33, v39                       // 0000000007CC: 0E2A4F21
  v_mul_legacy_f32  v0, v33, v0                         // 0000000007D0: 0E000121
  v_mad_f32     v30, v2, v30, 1.0                       // 0000000007D4: D282001E 03CA3D02
  v_mad_f32     v2, v2, v31, 1.0                        // 0000000007DC: D2820002 03CA3F02
  v_rcp_f32     v18, v18                                // 0000000007E4: 7E245512
  v_mul_legacy_f32  v33, v3, v40                        // 0000000007E8: 0E425103
  v_mul_legacy_f32  v37, v3, v41                        // 0000000007EC: 0E4A5303
  v_mul_legacy_f32  v3, v3, v6                          // 0000000007F0: 0E060D03
  v_mad_f32     v6, v25, v9, -0.5                       // 0000000007F4: D2820006 03C61319
  v_mad_legacy_f32  v38, -v5, v38, v38                  // 0000000007FC: D2800026 249A4D05
  v_mul_f32     v1, v29, v1                             // 000000000804: 1002031D
  v_mad_f32     v9, v24, v7, v14                        // 000000000808: D2820009 043A0F18
  v_mad_f32     v24, v26, v7, v32                       // 000000000810: D2820018 04820F1A
  v_mad_f32     v7, v28, v7, v34                        // 000000000818: D2820007 048A0F1C
  v_mac_f32     v25, v36, v27                           // 000000000820: 3E323724
  s_buffer_load_dword  s0, s[4:7], 0x5b                 // 000000000824: C200055B
  s_waitcnt     lgkmcnt(0)                              // 000000000828: BF8C007F
  v_mul_legacy_f32  v26, s8, v35                        // 00000000082C: 0E344608
  v_mul_legacy_f32  v27, s9, v35                        // 000000000830: 0E364609
  v_mul_legacy_f32  v28, s10, v35                       // 000000000834: 0E38460A
  v_mac_f32     v10, v19, v4                            // 000000000838: 3E140913
  v_mac_f32     v21, v20, v4                            // 00000000083C: 3E2A0914
  v_mac_f32     v0, v8, v4                              // 000000000840: 3E000908
  v_mul_legacy_f32  v2, v30, v2                         // 000000000844: 0E04051E
  v_mul_legacy_f32  v4, v18, v33                        // 000000000848: 0E084312
  v_mul_legacy_f32  v29, v18, v37                       // 00000000084C: 0E3A4B12
  v_mul_legacy_f32  v3, v18, v3                         // 000000000850: 0E060712
  v_mad_f32     v18, v6, v38, 1.0                       // 000000000854: D2820012 03CA4D06
  v_mad_f32     v6, v6, v31, 1.0                        // 00000000085C: D2820006 03CA3F06
  v_rcp_f32     v25, v25                                // 000000000864: 7E325519
  v_mul_legacy_f32  v9, v1, v9                          // 000000000868: 0E121301
  v_mul_legacy_f32  v24, v1, v24                        // 00000000086C: 0E303101
  v_mul_legacy_f32  v1, v1, v7                          // 000000000870: 0E020F01
  v_mul_legacy_f32  v7, v26, v10                        // 000000000874: 0E0E151A
  v_mul_legacy_f32  v10, v27, v21                       // 000000000878: 0E142B1B
  v_mul_legacy_f32  v0, v28, v0                         // 00000000087C: 0E00011C
  v_mul_legacy_f32  v21, s12, v23                       // 000000000880: 0E2A2E0C
  v_mul_legacy_f32  v26, s13, v23                       // 000000000884: 0E342E0D
  v_mul_legacy_f32  v23, s14, v23                       // 000000000888: 0E2E2E0E
  v_mac_f32     v4, v19, v2                             // 00000000088C: 3E080513
  v_mac_f32     v29, v20, v2                            // 000000000890: 3E3A0514
  v_mac_f32     v3, v8, v2                              // 000000000894: 3E060508
  v_mul_legacy_f32  v2, v18, v6                         // 000000000898: 0E040D12
  v_mul_legacy_f32  v6, v25, v9                         // 00000000089C: 0E0C1319
  v_mul_legacy_f32  v9, v25, v24                        // 0000000008A0: 0E123119
  v_mul_legacy_f32  v1, v25, v1                         // 0000000008A4: 0E020319
  v_mac_f32     v7, v21, v4                             // 0000000008A8: 3E0E0915
  v_mac_f32     v10, v26, v29                           // 0000000008AC: 3E143B1A
  v_mac_f32     v0, v23, v3                             // 0000000008B0: 3E000717
  v_mul_legacy_f32  v3, s16, v5                         // 0000000008B4: 0E060A10
  v_mul_legacy_f32  v4, s17, v5                         // 0000000008B8: 0E080A11
  v_mul_legacy_f32  v5, s18, v5                         // 0000000008BC: 0E0A0A12
  v_mac_f32     v6, v19, v2                             // 0000000008C0: 3E0C0513
  v_mac_f32     v9, v20, v2                             // 0000000008C4: 3E120514
  v_mac_f32     v1, v8, v2                              // 0000000008C8: 3E020508
  v_mac_f32     v7, v3, v6                              // 0000000008CC: 3E0E0D03
  v_mac_f32     v10, v4, v9                             // 0000000008D0: 3E141304
  v_mac_f32     v0, v5, v1                              // 0000000008D4: 3E000305
  s_waitcnt     vmcnt(1)                                // 0000000008D8: BF8C0F71
  v_mac_f32     v7, v19, v15                            // 0000000008DC: 3E0E1F13
  v_mac_f32     v10, v20, v16                           // 0000000008E0: 3E142114
  v_mac_f32     v0, v8, v17                             // 0000000008E4: 3E002308
  s_waitcnt     vmcnt(0)                                // 0000000008E8: BF8C0F70
  v_mac_f32     v7, v14, v11                            // 0000000008EC: 3E0E170E
  v_mac_f32     v10, v32, v12                           // 0000000008F0: 3E141920
  v_mac_f32     v0, v34, v13                            // 0000000008F4: 3E001B22
  v_mul_legacy_f32  v1, s0, v22                         // 0000000008F8: 0E022C00
  s_mov_b64     exec, s[28:29]                          // 0000000008FC: BEFE041C
  v_cvt_pkrtz_f16_f32  v2, v7, v10                      // 000000000900: 5E041507
  v_cvt_pkrtz_f16_f32  v0, v0, v1                       // 000000000904: 5E000300
  exp           mrt0, v2, v2, v0, v0 done compr vm      // 000000000908: F8001C0F 00000002
  s_endpgm                                              // 000000000910: BF810000
end


// Shader Statistics:
//  NumActiveWaveFront:         20
//  WorkgroupSize:              64
//  NumVRegs:                   42
//  NumSRegs:                   32
//  NumActiveWaveFrontByVReg:   20
//  NumActiveWaveFrontBySReg:   40
//  NumActiveWaveFrontByLDS:    40
//  CycleSim:                   423
//  CycleSimNWaves:             423
//  Code Size:                  2324
//Assembler Counts:
//  num_32bit_ops                     : 298
//  num_64bit_ops                     : 136
//  num_alu                           : 364
//  num_fc                            : 44
//  num_inst_exp                      : 1
//  num_inst_ldsgds                   : 20
//  num_inst_mimg                     : 5
//  num_inst_mtbuf                    : 0
//  num_inst_mubuf                    : 0
//  num_inst_sopp                     : 21
//  num_inst_sopc                     : 0
//  num_inst_sop1                     : 7
//  num_inst_sop2                     : 0
//  num_inst_smrd                     : 0
//  num_inst_sopk                     : 0
//  num_inst_vop1                     : 18
//  num_inst_vop2                     : 220
//  num_inst_vop3                     : 87
//  num_inst_vopc                     : 0
//  num_inst_vintrp                   : 16
//  constant_literal_operands         : 0
//  num_tex                           : 26
//  num_vmem_group                    : 4
//  vmem_grouping_started             : 0
//
//Compilation Notes:
//
//  PS has no UAV writes, consider forcing REZ/LATEZ.
// Shader Statistics:
// m_uNumActiveWaveFront             : 20
// m_uVRegLimit                      : 256
// m_uSRegLimit                      : 512
// m_uNumVRegs                       : 42
// m_uNumSRegs                       : 32
// m_uSCCodeSize                     : 2324
// m_uWorkgroupSize                  : 64
// m_uNumActiveWaveFrontByVReg       : 20
// m_uNumActiveWaveFrontBySReg       : 40
// m_uNumActiveWaveFrontByLDS        : 40
// m_uCycleSim1Wave                  : 423
// m_uCycleSimNWaves                 : 423

// Assembler Counts:
// num_32bit_ops                     : 298
// num_64bit_ops                     : 136
// num_alu                           : 364
// num_fc                            : 44
// num_inst_exp                      : 1
// num_inst_ldsgds                   : 20
// num_inst_mimg                     : 5
// num_inst_mtbuf                    : 0
// num_inst_mubuf                    : 0
// num_inst_sopp                     : 21
// num_inst_sopc                     : 0
// num_inst_sop1                     : 7
// num_inst_sop2                     : 0
// num_inst_smrd                     : 0
// num_inst_sopk                     : 0
// num_inst_vop1                     : 18
// num_inst_vop2                     : 220
// num_inst_vop3                     : 87
// num_inst_vopc                     : 0
// num_inst_vintrp                   : 16
// num_inst_smem                     : 16
// constant_literal_operands         : 0
// num_tex                           : 26
// num_vmem_group                    : 4
// vmem_grouping_started             : 0
// m_fFullPrecompilePromise          : 0
// m_fIntegerDivideExpansion         : 0
// m_fIntegerModExpansion            : 0
// m_fDoubleDivideExpansion          : 0
// m_fUsesScratch                    : 0
// m_fPerThreadIndirection           : 0
// m_fUsingTableLoads                : 0
// m_fUsingSHmemLoads                : 1
// fSemanticHashFlagOverrideApplied  : 0
// fPSHasNoUAVWrite                  : 1
// m_fRenderTargetsCanBeCompacted    : 0
// version                           : 3
// fCodePatched                      : 0

// Approximately 0 instruction slots used
#endif

const BYTE PBREffect_PSTextured[] =
{
     68,  88,  66,  67,  71, 228, 
    114, 253, 161, 211,  38, 245, 
     37,  58, 108,  18,  97, 151, 
    236, 110,   1,   0,   0,   0, 
     33,  24,   0,   0,   5,   0, 
      0,   0,  52,   0,   0,   0, 
    180,   0,   0,   0, 232,   0, 
      0,   0, 184,  23,   0,   0, 
    200,  23,   0,   0,  73,  83, 
     71,  78, 120,   0,   0,   0, 
      4,   0,   0,   0,   8,   0, 
      0,   0, 104,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      0,   0,   0,   0,   3,   3, 
      0,   0, 104,   0,   0,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   0,   0,  15,   7, 
      0,   0, 104,   0,   0,   0, 
      2,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      2,   0,   0,   0,   7,   7, 
      0,   0, 113,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      3,   0,   0,   0,  15,   0, 
      0,   0,  84,  69,  88,  67, 
     79,  79,  82,  68,   0,  67, 
     79,  76,  79,  82,   0, 171, 
     79,  83,  71,  78,  44,   0, 
      0,   0,   1,   0,   0,   0, 
      8,   0,   0,   0,  32,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   3,   0, 
      0,   0,   0,   0,   0,   0, 
     15,   0,   0,   0,  83,  86, 
     95,  84,  97, 114, 103, 101, 
    116,   0, 171, 171,  83,  72, 
     69,  88, 200,  22,   0,   0, 
     80,   0,   0,   0, 178,   5, 
      0,   0,  53,  16,   0,   0, 
      5,   0,   0,   0, 114,   3, 
      0,   0,  80,   0,   0,   0, 
    109,   3,   0,   0, 106,   8, 
      0,   1,  89,   8,   0,   4, 
     70, 142,  32,   0,   0,   0, 
      0,   0,  25,   0,   0,   0, 
     90,   0,   0,   3,   0,  96, 
     16,   0,   0,   0,   0,   0, 
     90,   0,   0,   3,   0,  96, 
     16,   0,   1,   0,   0,   0, 
     88,  24,   0,   4,   0, 112, 
     16,   0,   0,   0,   0,   0, 
     85,  85,   0,   0,  88,  24, 
      0,   4,   0, 112,  16,   0, 
      1,   0,   0,   0,  85,  85, 
      0,   0,  88,  24,   0,   4, 
      0, 112,  16,   0,   2,   0, 
      0,   0,  85,  85,   0,   0, 
     88,  48,   0,   4,   0, 112, 
     16,   0,   4,   0,   0,   0, 
     85,  85,   0,   0,  88,  48, 
      0,   4,   0, 112,  16,   0, 
      5,   0,   0,   0,  85,  85, 
      0,   0,  98,  16,   0,   3, 
     50,  16,  16,   0,   0,   0, 
      0,   0,  98,  16,   0,   3, 
    114,  16,  16,   0,   1,   0, 
      0,   0,  98,  16,   0,   3, 
    114,  16,  16,   0,   2,   0, 
      0,   0, 101,   0,   0,   3, 
    242,  32,  16,   0,   0,   0, 
      0,   0, 104,   0,   0,   2, 
      9,   0,   0,   0,   0,   0, 
      0,   9, 114,   0,  16,   0, 
      0,   0,   0,   0,  70,  18, 
     16, 128,  65,   0,   0,   0, 
      1,   0,   0,   0,  70, 130, 
     32,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,  16,   0, 
      0,   7, 130,   0,  16,   0, 
      0,   0,   0,   0,  70,   2, 
     16,   0,   0,   0,   0,   0, 
     70,   2,  16,   0,   0,   0, 
      0,   0,  68,   0,   0,   5, 
    130,   0,  16,   0,   0,   0, 
      0,   0,  58,   0,  16,   0, 
      0,   0,   0,   0,  56,   0, 
      0,   7, 114,   0,  16,   0, 
      0,   0,   0,   0, 246,  15, 
     16,   0,   0,   0,   0,   0, 
     70,   2,  16,   0,   0,   0, 
      0,   0,  69,   0,   0, 139, 
    194,   0,   0, 128,  67,  85, 
     21,   0,  50,   0,  16,   0, 
      1,   0,   0,   0,  70,  16, 
     16,   0,   0,   0,   0,   0, 
     70, 126,  16,   0,   1,   0, 
      0,   0,   0,  96,  16,   0, 
      0,   0,   0,   0,  50,   0, 
      0,  15,  50,   0,  16,   0, 
      1,   0,   0,   0,  70,   0, 
     16,   0,   1,   0,   0,   0, 
      2,  64,   0,   0,   0,   0, 
      0,  64,   0,   0,   0,  64, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   2,  64,   0,   0, 
      0,   0, 128, 191,   0,   0, 
    128, 191,   0,   0,   0,   0, 
      0,   0,   0,   0,  15,   0, 
      0,   7, 130,   0,  16,   0, 
      0,   0,   0,   0,  70,   0, 
     16,   0,   1,   0,   0,   0, 
     70,   0,  16,   0,   1,   0, 
      0,   0,   0,   0,   0,   8, 
    130,   0,  16,   0,   0,   0, 
      0,   0,  58,   0,  16, 128, 
     65,   0,   0,   0,   0,   0, 
      0,   0,   1,  64,   0,   0, 
      0,   0, 128,  63,  75,   0, 
      0,   5, 130,   0,  16,   0, 
      0,   0,   0,   0,  58,   0, 
     16,   0,   0,   0,   0,   0, 
    122,   0,   0,   5, 114,   0, 
     16,   0,   2,   0,   0,   0, 
    150,  20,  16,   0,   1,   0, 
      0,   0, 124,   0,   0,   5, 
    114,   0,  16,   0,   3,   0, 
      0,   0,  38,  25,  16,   0, 
      1,   0,   0,   0, 122,   0, 
      0,   5, 194,   0,  16,   0, 
      1,   0,   0,   0,   6,  20, 
     16,   0,   0,   0,   0,   0, 
    124,   0,   0,   5,  50,   0, 
     16,   0,   4,   0,   0,   0, 
     70,  16,  16,   0,   0,   0, 
      0,   0,  56,   0,   0,   7, 
    114,   0,  16,   0,   5,   0, 
      0,   0,  70,   2,  16,   0, 
      2,   0,   0,   0, 150,   4, 
     16,   0,   3,   0,   0,   0, 
     50,   0,   0,  10, 114,   0, 
     16,   0,   5,   0,   0,   0, 
     38,   9,  16,   0,   2,   0, 
      0,   0,  38,   9,  16,   0, 
      3,   0,   0,   0,  70,   2, 
     16, 128,  65,   0,   0,   0, 
      5,   0,   0,   0,  56,   0, 
      0,   7, 114,   0,  16,   0, 
      6,   0,   0,   0,  70,   2, 
     16,   0,   3,   0,   0,   0, 
     38,   9,  16,   0,   5,   0, 
      0,   0,  50,   0,   0,  10, 
    114,   0,  16,   0,   3,   0, 
      0,   0,  38,   9,  16,   0, 
      3,   0,   0,   0,  70,   2, 
     16,   0,   5,   0,   0,   0, 
     70,   2,  16, 128,  65,   0, 
      0,   0,   6,   0,   0,   0, 
     56,   0,   0,   7, 114,   0, 
     16,   0,   6,   0,   0,   0, 
     70,   2,  16,   0,   2,   0, 
      0,   0,  70,   2,  16,   0, 
      5,   0,   0,   0,  50,   0, 
      0,  10, 114,   0,  16,   0, 
      2,   0,   0,   0,  38,   9, 
     16,   0,   5,   0,   0,   0, 
    150,   4,  16,   0,   2,   0, 
      0,   0,  70,   2,  16, 128, 
     65,   0,   0,   0,   6,   0, 
      0,   0,  56,   0,   0,   7, 
    210,   0,  16,   0,   4,   0, 
      0,   0,   6,   9,  16,   0, 
      2,   0,   0,   0,   6,   0, 
     16,   0,   4,   0,   0,   0, 
     50,   0,   0,   9, 210,   0, 
     16,   0,   4,   0,   0,   0, 
    166,  10,  16,   0,   1,   0, 
      0,   0,   6,   9,  16,   0, 
      3,   0,   0,   0,   6,  14, 
     16,   0,   4,   0,   0,   0, 
     16,   0,   0,   7,  66,   0, 
     16,   0,   1,   0,   0,   0, 
    134,   3,  16,   0,   4,   0, 
      0,   0, 134,   3,  16,   0, 
      4,   0,   0,   0,  68,   0, 
      0,   5,  66,   0,  16,   0, 
      1,   0,   0,   0,  42,   0, 
     16,   0,   1,   0,   0,   0, 
     56,   0,   0,   7, 210,   0, 
     16,   0,   4,   0,   0,   0, 
    166,  10,  16,   0,   1,   0, 
      0,   0,   6,  14,  16,   0, 
      4,   0,   0,   0,  56,   0, 
      0,   7, 114,   0,  16,   0, 
      2,   0,   0,   0,  70,   2, 
     16,   0,   2,   0,   0,   0, 
     86,   5,  16,   0,   4,   0, 
      0,   0,  50,   0,   0,   9, 
    114,   0,  16,   0,   2,   0, 
      0,   0, 246,  15,  16,   0, 
      1,   0,   0,   0,  70,   2, 
     16,   0,   3,   0,   0,   0, 
     70,   2,  16,   0,   2,   0, 
      0,   0,  16,   0,   0,   7, 
     66,   0,  16,   0,   1,   0, 
      0,   0,  70,   2,  16,   0, 
      2,   0,   0,   0,  70,   2, 
     16,   0,   2,   0,   0,   0, 
     68,   0,   0,   5,  66,   0, 
     16,   0,   1,   0,   0,   0, 
     42,   0,  16,   0,   1,   0, 
      0,   0,  56,   0,   0,   7, 
    114,   0,  16,   0,   2,   0, 
      0,   0, 166,  10,  16,   0, 
      1,   0,   0,   0,  70,   2, 
     16,   0,   2,   0,   0,   0, 
     56,   0,   0,   7, 226,   0, 
     16,   0,   1,   0,   0,   0, 
     86,   5,  16,   0,   1,   0, 
      0,   0,   6,   9,  16,   0, 
      2,   0,   0,   0,  50,   0, 
      0,   9, 114,   0,  16,   0, 
      1,   0,   0,   0,   6,   0, 
     16,   0,   1,   0,   0,   0, 
    134,   3,  16,   0,   4,   0, 
      0,   0, 150,   7,  16,   0, 
      1,   0,   0,   0,  50,   0, 
      0,   9, 114,   0,  16,   0, 
      1,   0,   0,   0, 246,  15, 
     16,   0,   0,   0,   0,   0, 
     70,  18,  16,   0,   2,   0, 
      0,   0,  70,   2,  16,   0, 
      1,   0,   0,   0,  16,   0, 
      0,   7, 130,   0,  16,   0, 
      0,   0,   0,   0,  70,   2, 
     16,   0,   1,   0,   0,   0, 
     70,   2,  16,   0,   1,   0, 
      0,   0,  68,   0,   0,   5, 
    130,   0,  16,   0,   0,   0, 
      0,   0,  58,   0,  16,   0, 
      0,   0,   0,   0,  56,   0, 
      0,   7, 114,   0,  16,   0, 
      1,   0,   0,   0, 246,  15, 
     16,   0,   0,   0,   0,   0, 
     70,   2,  16,   0,   1,   0, 
      0,   0,  69,   0,   0, 139, 
    194,   0,   0, 128,  67,  85, 
     21,   0, 242,   0,  16,   0, 
      2,   0,   0,   0,  70,  16, 
     16,   0,   0,   0,   0,   0, 
     70, 126,  16,   0,   0,   0, 
      0,   0,   0,  96,  16,   0, 
      0,   0,   0,   0,  69,   0, 
      0, 139, 194,   0,   0, 128, 
     67,  85,  21,   0, 114,   0, 
     16,   0,   3,   0,   0,   0, 
     70,  16,  16,   0,   0,   0, 
      0,   0,  70, 126,  16,   0, 
      2,   0,   0,   0,   0,  96, 
     16,   0,   0,   0,   0,   0, 
     16,  32,   0,   7, 130,   0, 
     16,   0,   0,   0,   0,   0, 
     70,   2,  16,   0,   1,   0, 
      0,   0,  70,   2,  16,   0, 
      0,   0,   0,   0,  56,   0, 
      0,   7, 130,   0,  16,   0, 
      1,   0,   0,   0,  26,   0, 
     16,   0,   3,   0,   0,   0, 
     26,   0,  16,   0,   3,   0, 
      0,   0,  50,   0,   0,  10, 
    114,   0,  16,   0,   4,   0, 
      0,   0, 166,  10,  16,   0, 
      3,   0,   0,   0,  70,   2, 
     16, 128,  65,   0,   0,   0, 
      2,   0,   0,   0,  70,   2, 
     16,   0,   2,   0,   0,   0, 
     56,   0,   0,   7, 114,   0, 
     16,   0,   4,   0,   0,   0, 
      6,   0,  16,   0,   3,   0, 
      0,   0,  70,   2,  16,   0, 
      4,   0,   0,   0,   0,   0, 
      0,  10, 114,   0,  16,   0, 
      2,   0,   0,   0,  70,   2, 
     16,   0,   2,   0,   0,   0, 
      2,  64,   0,   0,  10, 215, 
     35, 189,  10, 215,  35, 189, 
     10, 215,  35, 189,   0,   0, 
      0,   0,  50,   0,   0,  12, 
    114,   0,  16,   0,   2,   0, 
      0,   0, 166,  10,  16,   0, 
      3,   0,   0,   0,  70,   2, 
     16,   0,   2,   0,   0,   0, 
      2,  64,   0,   0,  10, 215, 
     35,  61,  10, 215,  35,  61, 
     10, 215,  35,  61,   0,   0, 
      0,   0,  56,   0,   0,   7, 
    114,   0,  16,   0,   5,   0, 
      0,   0,   6,   0,  16,   0, 
      3,   0,   0,   0,  70,   2, 
     16,   0,   2,   0,   0,   0, 
      0,   0,   0,   7,  66,   0, 
     16,   0,   3,   0,   0,   0, 
     26,   0,  16,   0,   3,   0, 
      0,   0,  26,   0,  16,   0, 
      3,   0,   0,   0,   0,   0, 
      0,   8, 130,   0,  16,   0, 
      0,   0,   0,   0,  58,   0, 
     16, 128,  65,   0,   0,   0, 
      0,   0,   0,   0,   1,  64, 
      0,   0,   0,   0, 128,  63, 
     56,   0,   0,   7, 130,   0, 
     16,   0,   3,   0,   0,   0, 
     58,   0,  16,   0,   0,   0, 
      0,   0,  58,   0,  16,   0, 
      0,   0,   0,   0,  56,   0, 
      0,   7, 130,   0,  16,   0, 
      3,   0,   0,   0,  58,   0, 
     16,   0,   3,   0,   0,   0, 
     58,   0,  16,   0,   3,   0, 
      0,   0,  56,   0,   0,   7, 
    130,   0,  16,   0,   0,   0, 
      0,   0,  58,   0,  16,   0, 
      0,   0,   0,   0,  58,   0, 
     16,   0,   3,   0,   0,   0, 
     56,   0,   0,   7, 130,   0, 
     16,   0,   3,   0,   0,   0, 
     58,   0,  16,   0,   1,   0, 
      0,   0,  58,   0,  16,   0, 
      1,   0,   0,   0,  50,   0, 
      0,   9, 130,   0,  16,   0, 
      1,   0,   0,   0,  58,   0, 
     16,   0,   1,   0,   0,   0, 
     58,   0,  16,   0,   1,   0, 
      0,   0,   1,  64,   0,   0, 
      0,   0, 128, 191,  50,   0, 
      0,  13, 114,   0,  16,   0, 
      2,   0,   0,   0,  70,   2, 
     16, 128,  65,   0,   0,   0, 
      2,   0,   0,   0,   6,   0, 
     16,   0,   3,   0,   0,   0, 
      2,  64,   0,   0,   0,   0, 
    128,  63,   0,   0, 128,  63, 
      0,   0, 128,  63,   0,   0, 
      0,   0,  56,   0,   0,   7, 
     18,   0,  16,   0,   3,   0, 
      0,   0,  58,   0,  16,   0, 
      3,   0,   0,   0,   1,  64, 
      0,   0,   0,   0, 128,  62, 
     54,   0,   0,   8, 114,   0, 
     16,   0,   6,   0,   0,   0, 
      2,  64,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,  54,   0,   0,   5, 
    130,   0,  16,   0,   4,   0, 
      0,   0,   1,  64,   0,   0, 
      0,   0,   0,   0,  48,   0, 
      0,   1,  33,   0,   0,   7, 
    130,   0,  16,   0,   5,   0, 
      0,   0,  58,   0,  16,   0, 
      4,   0,   0,   0,   1,  64, 
      0,   0,   3,   0,   0,   0, 
      3,   0,   4,   3,  58,   0, 
     16,   0,   5,   0,   0,   0, 
     16,   0,   0,  15, 130,   0, 
     16,   0,   5,   0,   0,   0, 
     70, 130,  32, 134,  65,   0, 
      0,   0,   0,   0,   0,   0, 
     16,   0,   0,   0,  58,   0, 
     16,   0,   4,   0,   0,   0, 
     70, 130,  32, 134,  65,   0, 
      0,   0,   0,   0,   0,   0, 
     16,   0,   0,   0,  58,   0, 
     16,   0,   4,   0,   0,   0, 
     68,   0,   0,   5, 130,   0, 
     16,   0,   5,   0,   0,   0, 
     58,   0,  16,   0,   5,   0, 
      0,   0,  56,   0,   0,  11, 
    114,   0,  16,   0,   7,   0, 
      0,   0, 246,  15,  16,   0, 
      5,   0,   0,   0,  70, 130, 
     32, 134,  65,   0,   0,   0, 
      0,   0,   0,   0,  16,   0, 
      0,   0,  58,   0,  16,   0, 
      4,   0,   0,   0,  50,   0, 
      0,  13, 114,   0,  16,   0, 
      8,   0,   0,   0,  70, 130, 
     32, 134,  65,   0,   0,   0, 
      0,   0,   0,   0,  16,   0, 
      0,   0,  58,   0,  16,   0, 
      4,   0,   0,   0, 246,  15, 
     16,   0,   5,   0,   0,   0, 
     70,   2,  16,   0,   0,   0, 
      0,   0,  16,   0,   0,   7, 
    130,   0,  16,   0,   5,   0, 
      0,   0,  70,   2,  16,   0, 
      8,   0,   0,   0,  70,   2, 
     16,   0,   8,   0,   0,   0, 
     68,   0,   0,   5, 130,   0, 
     16,   0,   5,   0,   0,   0, 
     58,   0,  16,   0,   5,   0, 
      0,   0,  56,   0,   0,   7, 
    114,   0,  16,   0,   8,   0, 
      0,   0, 246,  15,  16,   0, 
      5,   0,   0,   0,  70,   2, 
     16,   0,   8,   0,   0,   0, 
     16,  32,   0,   7, 130,   0, 
     16,   0,   5,   0,   0,   0, 
     70,   2,  16,   0,   1,   0, 
      0,   0,  70,   2,  16,   0, 
      7,   0,   0,   0,  16,  32, 
      0,   7, 130,   0,  16,   0, 
      6,   0,   0,   0,  70,   2, 
     16,   0,   7,   0,   0,   0, 
     70,   2,  16,   0,   8,   0, 
      0,   0,  16,  32,   0,   7, 
     18,   0,  16,   0,   7,   0, 
      0,   0,  70,   2,  16,   0, 
      1,   0,   0,   0,  70,   2, 
     16,   0,   8,   0,   0,   0, 
     56,   0,   0,   7,  34,   0, 
     16,   0,   7,   0,   0,   0, 
     58,   0,  16,   0,   6,   0, 
      0,   0,  58,   0,  16,   0, 
      6,   0,   0,   0,  50,   0, 
      0,   9,  66,   0,  16,   0, 
      7,   0,   0,   0,  26,   0, 
     16,   0,   7,   0,   0,   0, 
     42,   0,  16,   0,   3,   0, 
      0,   0,   1,  64,   0,   0, 
      0,   0,   0, 191,   0,   0, 
      0,   8, 130,   0,  16,   0, 
      7,   0,   0,   0,  58,   0, 
     16, 128,  65,   0,   0,   0, 
      5,   0,   0,   0,   1,  64, 
      0,   0,   0,   0, 128,  63, 
     56,   0,   0,   7,  18,   0, 
     16,   0,   8,   0,   0,   0, 
     58,   0,  16,   0,   7,   0, 
      0,   0,  58,   0,  16,   0, 
      7,   0,   0,   0,  56,   0, 
      0,   7,  18,   0,  16,   0, 
      8,   0,   0,   0,  10,   0, 
     16,   0,   8,   0,   0,   0, 
     10,   0,  16,   0,   8,   0, 
      0,   0,  56,   0,   0,   7, 
    130,   0,  16,   0,   7,   0, 
      0,   0,  58,   0,  16,   0, 
      7,   0,   0,   0,  10,   0, 
     16,   0,   8,   0,   0,   0, 
     50,   0,   0,   9, 130,   0, 
     16,   0,   7,   0,   0,   0, 
     42,   0,  16,   0,   7,   0, 
      0,   0,  58,   0,  16,   0, 
      7,   0,   0,   0,   1,  64, 
      0,   0,   0,   0, 128,  63, 
     50,   0,   0,   9,  66,   0, 
     16,   0,   7,   0,   0,   0, 
     42,   0,  16,   0,   7,   0, 
      0,   0,  58,   0,  16,   0, 
      0,   0,   0,   0,   1,  64, 
      0,   0,   0,   0, 128,  63, 
     56,   0,   0,   7,  18,   0, 
     16,   0,   7,   0,   0,   0, 
     10,   0,  16,   0,   7,   0, 
      0,   0,  10,   0,  16,   0, 
      7,   0,   0,   0,  50,   0, 
      0,   9,  18,   0,  16,   0, 
      7,   0,   0,   0,  10,   0, 
     16,   0,   7,   0,   0,   0, 
     58,   0,  16,   0,   1,   0, 
      0,   0,   1,  64,   0,   0, 
      0,   0, 128,  63,  56,   0, 
      0,   7,  82,   0,  16,   0, 
      7,   0,   0,   0,   6,   2, 
     16,   0,   7,   0,   0,   0, 
      6,   3,  16,   0,   7,   0, 
      0,   0,  56,   0,   0,   7, 
     18,   0,  16,   0,   7,   0, 
      0,   0,  10,   0,  16,   0, 
      7,   0,   0,   0,   1,  64, 
      0,   0, 219,  15,  73,  64, 
     52,   0,   0,   7,  18,   0, 
     16,   0,   7,   0,   0,   0, 
     10,   0,  16,   0,   7,   0, 
      0,   0,   1,  64,   0,   0, 
    189,  55, 134,  53,  14,   0, 
      0,   7,  18,   0,  16,   0, 
      7,   0,   0,   0,  58,   0, 
     16,   0,   3,   0,   0,   0, 
     10,   0,  16,   0,   7,   0, 
      0,   0,   0,   0,   0,   8, 
    130,   0,  16,   0,   7,   0, 
      0,   0,  58,   0,  16, 128, 
     65,   0,   0,   0,   6,   0, 
      0,   0,   1,  64,   0,   0, 
      0,   0, 128,  63,  56,   0, 
      0,   7,  18,   0,  16,   0, 
      8,   0,   0,   0,  58,   0, 
     16,   0,   7,   0,   0,   0, 
     58,   0,  16,   0,   7,   0, 
      0,   0,  56,   0,   0,   7, 
     18,   0,  16,   0,   8,   0, 
      0,   0,  10,   0,  16,   0, 
      8,   0,   0,   0,  10,   0, 
     16,   0,   8,   0,   0,   0, 
     56,   0,   0,   7, 130,   0, 
     16,   0,   7,   0,   0,   0, 
     58,   0,  16,   0,   7,   0, 
      0,   0,  10,   0,  16,   0, 
      8,   0,   0,   0,  50,   0, 
      0,   9, 114,   0,  16,   0, 
      8,   0,   0,   0,  70,   2, 
     16,   0,   2,   0,   0,   0, 
    246,  15,  16,   0,   7,   0, 
      0,   0,  70,   2,  16,   0, 
      5,   0,   0,   0,  50,   0, 
      0,  10, 130,   0,  16,   0, 
      6,   0,   0,   0,  58,   0, 
     16, 128,  65,   0,   0,   0, 
      6,   0,   0,   0,  58,   0, 
     16,   0,   6,   0,   0,   0, 
      1,  64,   0,   0,   0,   0, 
    128,  63,  50,   0,   0,   9, 
    130,   0,  16,   0,   6,   0, 
      0,   0,  10,   0,  16,   0, 
      3,   0,   0,   0,  58,   0, 
     16,   0,   6,   0,   0,   0, 
     26,   0,  16,   0,   7,   0, 
      0,   0, 129,   0,   0,   5, 
    130,   0,  16,   0,   6,   0, 
      0,   0,  58,   0,  16,   0, 
      6,   0,   0,   0,  56,   0, 
      0,   7, 178,   0,  16,   0, 
      7,   0,   0,   0,   6,   0, 
     16,   0,   7,   0,   0,   0, 
     70,   8,  16,   0,   8,   0, 
      0,   0,  56,   0,   0,   7, 
    178,   0,  16,   0,   7,   0, 
      0,   0, 246,  15,  16,   0, 
      6,   0,   0,   0,  70,  12, 
     16,   0,   7,   0,   0,   0, 
     56,   0,   0,  10, 114,   0, 
     16,   0,   8,   0,   0,   0, 
    246,  15,  16,   0,   5,   0, 
      0,   0,  70, 130,  32,   6, 
      0,   0,   0,   0,  19,   0, 
      0,   0,  58,   0,  16,   0, 
      4,   0,   0,   0,  50,   0, 
      0,   9, 114,   0,  16,   0, 
      7,   0,   0,   0,  70,   2, 
     16,   0,   4,   0,   0,   0, 
    166,  10,  16,   0,   7,   0, 
      0,   0,  70,   3,  16,   0, 
      7,   0,   0,   0,  50,   0, 
      0,   9, 114,   0,  16,   0, 
      6,   0,   0,   0,  70,   2, 
     16,   0,   8,   0,   0,   0, 
     70,   2,  16,   0,   7,   0, 
      0,   0,  70,   2,  16,   0, 
      6,   0,   0,   0,  30,   0, 
      0,   7, 130,   0,  16,   0, 
      4,   0,   0,   0,  58,   0, 
     16,   0,   4,   0,   0,   0, 
      1,  64,   0,   0,   1,   0, 
      0,   0,  22,   0,   0,   1, 
     69,   0,   0, 139, 130,   1, 
      0, 128,  67,  85,  21,   0, 
    114,   0,  16,   0,   2,   0, 
      0,   0,  70,   2,  16,   0, 
      1,   0,   0,   0,  70, 126, 
     16,   0,   5,   0,   0,   0, 
      0,  96,  16,   0,   1,   0, 
      0,   0,  50,   0,   0,   9, 
    114,   0,  16,   0,   2,   0, 
      0,   0,  70,   2,  16,   0, 
      4,   0,   0,   0,  70,   2, 
     16,   0,   2,   0,   0,   0, 
     70,   2,  16,   0,   6,   0, 
      0,   0,  43,   0,   0,   6, 
    130,   0,  16,   0,   0,   0, 
      0,   0,  42, 128,  32,   0, 
      0,   0,   0,   0,  23,   0, 
      0,   0,  56,   0,   0,   7, 
    130,   0,  16,   0,   0,   0, 
      0,   0,  58,   0,  16,   0, 
      0,   0,   0,   0,  26,   0, 
     16,   0,   3,   0,   0,   0, 
     16,   0,   0,   8, 130,   0, 
     16,   0,   1,   0,   0,   0, 
     70,   2,  16, 128,  65,   0, 
      0,   0,   0,   0,   0,   0, 
     70,   2,  16,   0,   1,   0, 
      0,   0,   0,   0,   0,   7, 
    130,   0,  16,   0,   1,   0, 
      0,   0,  58,   0,  16,   0, 
      1,   0,   0,   0,  58,   0, 
     16,   0,   1,   0,   0,   0, 
     50,   0,   0,  11, 114,   0, 
     16,   0,   0,   0,   0,   0, 
     70,   2,  16,   0,   1,   0, 
      0,   0, 246,  15,  16, 128, 
     65,   0,   0,   0,   1,   0, 
      0,   0,  70,   2,  16, 128, 
     65,   0,   0,   0,   0,   0, 
      0,   0,  72,   0,   0, 141, 
    130,   1,   0, 128,  67,  85, 
     21,   0, 114,   0,  16,   0, 
      0,   0,   0,   0,  70,   2, 
     16,   0,   0,   0,   0,   0, 
     70, 126,  16,   0,   4,   0, 
      0,   0,   0,  96,  16,   0, 
      1,   0,   0,   0,  58,   0, 
     16,   0,   0,   0,   0,   0, 
     50,   0,   0,   9, 114,  32, 
     16,   0,   0,   0,   0,   0, 
     70,   2,  16,   0,   5,   0, 
      0,   0,  70,   2,  16,   0, 
      0,   0,   0,   0,  70,   2, 
     16,   0,   2,   0,   0,   0, 
     56,   0,   0,   8, 130,  32, 
     16,   0,   0,   0,   0,   0, 
     58,   0,  16,   0,   2,   0, 
      0,   0,  58, 128,  32,   0, 
      0,   0,   0,   0,  22,   0, 
      0,   0,  62,   0,   0,   1, 
     53,  16,   0,   0,  64,   2, 
      0,   0,  23,   0,   1,   0, 
     41, 174,  24,   0, 120,   1, 
    237,  88, 107, 104,  28, 201, 
     17, 238, 233, 121, 245, 142, 
    119, 107,  86, 179, 171, 125, 
    140,  70, 218,  93, 237, 232, 
    173, 172, 118, 245, 176,  94, 
     86, 235, 105, 157, 223, 111, 
     93, 142, 139, 228, 243,  67, 
    114,  98, 184, 248,  28, 219, 
     57,  76, 126, 172, 117,  66, 
     24,  99, 196, 113,  63,  67, 
    184, 159, 129,  64,   8, 249, 
     17, 238, 239,  73, 142, 112, 
    194,  34,  72,   2, 155, 131, 
     28,  36,  36,  63,  18,   2, 
    129, 252,  56, 148,  63,   7, 
     57, 206, 169,  26, 237,  38, 
    202,  57, 247,  79, 144,  64, 
     84,  80,  93,  83, 213,  93, 
    221,  95,  77,  87, 247,  76, 
    247, 143,  83,  44, 160,  63, 
     45, 255, 113, 128, 100, 233, 
    102, 226, 103,  31,  68,  24, 
    211, 241,  89,  65,  38,  73, 
    244,  93, 180,  17,  93,  75, 
     82, 201,  88, 156,  10, 106, 
    192,  25, 235,  70, 145,  69, 
    142, 135,  24, 155,  34, 137, 
    220,  89, 227,  91, 127, 254, 
    253, 236, 192, 223, 254,  48, 
    139, 143,  44, 141, 220, 135, 
    252,   3, 244,  35, 238,  70, 
    126, 130, 250, 155,  40, 123, 
     81, 162,   8, 124, 235,  99, 
     18,  53,  82, 129, 100,  82, 
    177, 143,  28, 228, 223,  33, 
    127,  21, 153,  40,  90,  99, 
     34,  23,  89,  67, 254,  39, 
    173,  80, 241, 159, 233,  39, 
     56,  40, 225, 255,  50,  34, 
    108, 132, 135, 112, 225,  99, 
    128, 147, 136, 226, 253, 111, 
     19, 225,  97, 204, 160, 130, 
    169, 200, 164, 215, 231, 137, 
    136, 230,  99,  63,   1, 242, 
    158,  15,  99,  63,  74,  80, 
    201, 152, 160,   2, 233,  89, 
     77, 175, 207, 229,  51, 228, 
     47, 163,  23,  72, 131, 244, 
    176, 143, 234,  58, 225,  48, 
    130,  18, 165, 130, 201, 130, 
      3,  24, 188, 227,  95, 147, 
    243, 127,  64, 245, 220, 163, 
    183, 128, 203,  35,   8, 221, 
     70, 174,  83, 189, 126, 138, 
     42, 217, 234,  22, 241, 123, 
     41, 246,  41, 105, 117,  93, 
     65, 125,  47, 231, 247, 116, 
    149, 116, 235,  11,  58,  78, 
    166, 217, 168,  93, 197, 129, 
    174, 218,  30, 251, 148, 186, 
     67, 125,  17, 245, 197, 125, 
    250, 235, 168, 191, 190,  79, 
    191, 134, 250, 181, 125, 250, 
     13, 212, 111, 212, 245, 122, 
    255, 246, 222, 120,  10, 205, 
     53,  26, 203, 255, 203, 124, 
    136, 241,  96, 248,  16, 227, 
    193, 240,  33, 198, 131, 225, 
     67, 140,   7, 195, 135,  24, 
     15, 134,  15,  49,  30,  12, 
     31,  98,  60,  24,  46,  82, 
    161, 189, 191,  89, 182,  62, 
    223,  20, 202, 246, 179,  78, 
    229, 241,  51, 174, 126, 182, 
    137, 127, 156,  21, 166, 196, 
     43,  10, 107, 168,  40,  74, 
     99, 229,  17, 219, 216,  98, 
    234, 234,  39, 154, 113, 157, 
     69, 177,  93, 160, 155, 168, 
    139, 235, 248,  51, 218,  91, 
     97,  70, 177, 162, 104,  95, 
    169,  48, 125, 176, 162,  24, 
    165, 138, 162,  15,  85,  22, 
     86,  63, 250, 248,   8,  29, 
     25, 246, 164, 253,  67, 148, 
     97, 250, 149, 221, 147,  13, 
     84, 143, 210, 169, 233, 177, 
     71, 218, 198,  22, 100,  60, 
    241, 136, 111, 108,  69, 243, 
     45, 130, 218, 163,  95, 208, 
     30, 101,   3, 233, 120,  52, 
    137, 147, 142, 178, 145, 252, 
     81,  38, 106, 122, 242, 145, 
    177, 177, 229, 116, 248, 130, 
    250, 137, 230, 179,  65,  63, 
    241, 158,  86,   1, 153, 118, 
     32, 188, 137, 190,  78, 225, 
    228, 187,  33, 198,  86, 171, 
     78, 238, 220,  58, 245, 135, 
    231, 178, 192,  31, 101,  50, 
    158,  43,  66,  35, 214, 197, 
     51, 175, 174,  67,  71,  63, 
     20, 149, 181, 103,  52,   6, 
    214, 185, 181,  54,  42, 249, 
    224, 191, 119,  19, 233,  40, 
    189, 189, 126, 123,  69,  10, 
    253,  32, 127,  99, 189, 161, 
    167,   0,  78, 207,  24, 164, 
     81, 111, 236, 186, 181,  78, 
    254, 216, 174, 165, 214, 158, 
    187, 166,  33, 154,  70,   7, 
     69, 180, 116,  20, 146, 216, 
     38, 218, 113, 117,  61,  94, 
    202,  66,  51,  62, 167, 154, 
    223,  94,  79,  12, 120,   1, 
    214,  22,  93,  19, 118,  71, 
     39, 224,  64,  85, 187, 231, 
    206,  58, 190, 132, 106, 172, 
    109, 102, 221,  29, 104, 129, 
    196, 184,  15, 106, 159,  39, 
    241,  69,  84,  27,  74, 151, 
    214, 221, 241,  86, 224, 125, 
     45,  50, 145, 107,   7, 117, 
    216, 151, 208, 220,  13, 110, 
     46,  11, 124, 184,  85, 218, 
    153,  94,  80, 187, 218, 165, 
    211, 214,  45, 153, 190, 190, 
    253,  45, 123,  99,  75, 101, 
    107,  85, 227,  47, 191,  80, 
    121,  87,  86,  54, 228, 123, 
    101, 172, 163,  91, 114, 180, 
    153, 104,  83, 205,  48,  68, 
    115, 189, 178, 113,   9, 202, 
     92,  15, 203, 196,  82, 103, 
     25, 108,  15, 152,  82, 121, 
    182,  27,  14,  11, 187, 171, 
      5,  28, 219,   7, 222, 140, 
     54, 235,  74, 197, 248, 122, 
    184, 220, 208, 213,  10,  49, 
     27, 128, 183,  33, 174, 140, 
     39,  89, 232,  88,  69, 177, 
     22, 130, 156, 177,  82,  41, 
     17, 237,  66,  44, 182,   6, 
    106, 222, 151, 120, 150, 171, 
     40, 161, 137, 138, 209, 227, 
    201, 144,  11,  34, 156, 118, 
     65, 205, 105,  82,  17,  74, 
    197, 200,  16, 118,  14,  34, 
     97,   8, 211, 118, 165, 161, 
    104, 136, 155,  75, 102,  99, 
    158, 197, 150, 153, 106, 186, 
    146, 235,  92,  70, 150,  88, 
     89,  89, 226, 229, 176,  34, 
      0,  84,  11, 174, 234, 202, 
    182, 169, 132, 193,  81,   1, 
    142,  48, 168, 106,  71, 120, 
     86,  85,  24, 112, 149, 163, 
    190,  90,  53, 236, 130, 159, 
     82, 180, 159, 246,  42,  27, 
    120,  36,  93, 221,  34,  27, 
     83,  11, 189, 156, 189,  91, 
     85, 236, 132, 166, 162, 174, 
     36, 249, 243,  48,  74,  51, 
    233,  62, 167, 122,  61, 233, 
     60, 143, 176, 141, 160,  30, 
    216, 211,  64, 114, 229, 202, 
    175,  57, 158, 151, 108, 244, 
     83, 211,   5,  45, 205, 158, 
      4, 246, 136,  94, 156, 193, 
    211, 238,  36, 232, 133,  64, 
     82, 220, 220, 242, 202,  13, 
    232,  79, 237,  28, 244,  39, 
    105, 163, 191, 141, 254,  52, 
      7,  33, 124, 127,  17, 244, 
     39, 123,  67,  38,  21, 248, 
     57, 153,  68,  32, 105,  93, 
     37, 237, 231, 120, 176, 122, 
    239, 147,  35,  71, 182, 217, 
    148, 190, 186,  61, 135, 115, 
    119,  66, 127, 188,  29, 244, 
    141,  49, 114,  74,  38, 156, 
     51, 133,  11, 196,  15,  85, 
     43, 190, 167, 227,  97,  25, 
    245, 181, 106, 200,   9,  35, 
    110, 168, 130, 135, 246,  37, 
    173,  76,  54,  17,  37, 219, 
     90,  53, 226, 142,  32, 166, 
     85, 236, 195, 241, 213,  37, 
    163,  76, 182, 112, 106,  68, 
    163, 124,  84,  52, 215, 119, 
    218, 138,  65, 254,  90, 134, 
    227, 195, 146,  87, 198, 228, 
    175,  50, 141, 251, 201, 190, 
    162, 164, 124,  12,  25, 174, 
    159,  30,  24,   9, 114,  22, 
     60, 199, 119, 135, 138,  18, 
     19, 188,  42,  12, 238,  55, 
     13, 143, 200,  12,  62,  71, 
     60, 215, 111,  30, 159, 130, 
    212,  82, 177, 220,  50,  49, 
     34, 115, 104,  11, 123, 220, 
    207,  76,  78,  73, 167, 228, 
    131, 183,  52,  82, 206, 205, 
     78, 201, 100, 169,   0, 122, 
    219,  28, 164,  71, 251,  33, 
    187,  52,  85, 206,  35, 102, 
    174, 241, 172,  91,  42, 130, 
    217,  55,  39, 113, 173, 128, 
     62, 112,  20, 154, 167, 199, 
     32,  20,  59,   1, 109,  88, 
    175,  96, 125,  30, 115, 173, 
     85,  32, 222, 210,  83, 173, 
     29, 109, 150, 193, 179,  45, 
    163,  35,  96,  14,  29, 149, 
    153, 233,  99, 160, 143,  75, 
    208, 142,   8, 232, 192, 216, 
    252, 147, 191,  84, 233, 157, 
     97,  12,  89, 253, 149, 121, 
    104, 235, 243, 101, 235, 241, 
      2, 180, 162,  45, 132, 126, 
    237,   3, 253, 208,  68, 125, 
    141, 222, 209,  58, 209,   6, 
     30, 207, 230, 166, 167, 192, 
    156, 144, 210, 140,   8, 105, 
    158, 158, 151,  14, 214, 243, 
    210,  41, 205, 192, 254, 146, 
    231, 119,  84, 122, 231,  24, 
    111,  86,  63, 139, 253,  12, 
    245, 203, 166, 225,  34, 184, 
    104, 139, 160, 111, 231, 248, 
     81, 200,  80, 127, 211, 101, 
     77,  35, 169,  56, 218,  11, 
    117, 117, 211, 250,  77, 254, 
    195,  60, 233, 250, 187, 154, 
     17,  97, 240,  66, 125, 103, 
    243, 183, 246, 201, 169,  93, 
     95,  19, 230, 241, 130,  76, 
     99, 157,  58, 122,  43,  24, 
     35, 133,  99, 208, 252, 225, 
     59, 203, 234,  23,  45, 112, 
     39,  48, 174, 201,  34, 220, 
    195, 220,  97, 237,  35,   6, 
    235,  28,  51,  88, 247,  49, 
     99,  87,  72, 177,  59,  63, 
     35,  48, 173, 176, 191, 213, 
    205,  15, 135,  31,  15, 113, 
    124, 215, 142, 110, 249,  73, 
     26, 203, 188, 138,  99,  25, 
    176, 219,  31,  22, 230, 144, 
     37,  41,  78, 152, 190, 163, 
    153, 181,  49, 206,  96,  94, 
     89, 163, 197,  25, 196,  54, 
     97, 141,  15, 238, 201, 137, 
    145,  64, 210,  60, 106, 147, 
    101, 223,  63,  57,   6,  52, 
    127, 249, 217, 199,  62, 126, 
     46,  60, 174, 107, 176,  91, 
     56,  38,  20, 195,   0,   3, 
    237, 233, 136, 235, 235,  52, 
     86, 115,  66,  51, 109,  14, 
    187,  71,  65,  92, 192,  92, 
     21,  37,  15, 196, 208,  20, 
    136, 209,  57,   8, 177, 108, 
     53,  20, 227,  34,  51,  41, 
    129, 246,  74,  81, 218, 201, 
     83,  94, 137, 161, 157, 188, 
     71, 114, 116,  39, 255,  98, 
    236,   4, 224, 250, 196,  53, 
    127,  10, 114, 179,  51, 192, 
     22,  88, 185,  30,  11, 229, 
    171, 211, 182, 147, 167,  60, 
     75,  78, 124, 199, 103, 134, 
    225,  25, 145,  48, 236,  90, 
    103, 132, 194,  57, 152, 104, 
    111, 178,  91, 252,  43, 250, 
    147, 237,  58, 110,  13,  99, 
    108, 139, 253,  92, 173,  99, 
    111,  86,  88, 148, 242,  33, 
    165, 143, 225,  60, 175,  85, 
     93, 125,  77, 163,  53, 227, 
    233,  79,  53, 191, 237, 148, 
     76,  15, 248, 208,  50, 113, 
     12, 212,   5, 163,  92, 143, 
    139, 214,  65, 122,  96,  39, 
    223, 142,  82,  63, 251,  61, 
    159, 113, 238, 153, 184, 215, 
    209,  55, 196, 234,  56,  55, 
     71, 123, 176, 213, 117, 105, 
    142, 190,  27,  86, 207, 171, 
    115,  22, 246, 167, 205, 238, 
    168,  52, 182,  54, 185, 163, 
    182,  45, 204, 148, 217, 249, 
     83, 192,  46, 158,   3, 166, 
    227, 158, 132, 118,   7,  49, 
    213, 227, 104,  54, 141,  40, 
     97,  73,  69, 198, 180,  46, 
    148, 110, 100,  45, 152, 127, 
     47, 130, 152,   6, 124, 204, 
    171, 126, 104,  63, 123,   6, 
    148,   5,  94, 174, 199,  72, 
    107, 176, 105, 120,  39,  47, 
     58, 218,  65, 116, 117, 130, 
    232, 137, 130,  21,  18, 144, 
     59,  29, 135, 220, 249, 110, 
    200, 225, 222, 215, 130, 125, 
    240, 137,  29, 204, 123, 148, 
    136, 195,  89, 240, 203, 234, 
    197,  25,  80,  47, 159,   2, 
     21, 243, 129, 198,  72,  35, 
    142, 122,  92, 205,  42, 143, 
    134, 208, 150, 178, 199, 180, 
     20,  74, 215,  94,  11, 114, 
    196, 179,  17, 199, 112, 191, 
    252, 154, 206, 130, 189,  71, 
    204,  15,  66, 104, 254,  40, 
     88, 243,  35,  16,  11, 197, 
    101,  60, 212,  45,  69, 136, 
     73, 252,  94, 129,  51,  43, 
    192,  57,  61,   6, 142, 105, 
    128, 131, 190, 198, 217,  29, 
    149, 198,  49, 112, 252, 244, 
     66, 127,  89, 137,  57, 160, 
    224, 186,  86,  48,  71, 220, 
     70, 128, 166, 158,  56, 120, 
    136,  53,  92, 232, 134,  72, 
     97,  16, 160,  80, 128, 152, 
     46, 100,  92,  31, 147,  66, 
     55, 164,  19, 209,  32,  29, 
     11,  67, 186, 228,  64,  26, 
    247, 242, 198,  16,  72, 119, 
     60,  46, 147,  38, 147,  81, 
    203, 128,   6,  11, 199, 179, 
     44, 244,   9, 163, 143, 131, 
     62,  92, 170,  17, 144,  90, 
     44,  46, 117, 149,  73, 218, 
    103,  99,  25, 144, 241,  92, 
     92, 138,  60, 147, 119,  81, 
    135,  36, 200, 108,  58,  46, 
     91, 155, 152, 100, 189,  28, 
     60, 237, 243,  77, 243,  11, 
    247,  95, 140, 189, 179, 149, 
    198,   5, 133,  27, 234, 203, 
     68,  43, 109,  63, 145, 138, 
    182, 250,  29, 104,  64, 228, 
    135, 182, 127, 187, 174, 196, 
    253, 154, 108, 181, 171, 242, 
     61, 194,  31,  10, 178, 237, 
    191,   7,  14, 122, 215, 148, 
    224, 222, 187,  78,  10,  25, 
    209,  86, 191,  55,  38,  10, 
    160, 161, 141, 254, 223, 234, 
    244, 126, 237,  94, 253,  97, 
     77, 210,  98, 165, 235,  91, 
      5, 131,  35, 162, 187, 115, 
    173, 118, 215, 123, 230,  87, 
     31,  55,  61, 188, 247, 247, 
    147, 244,  76, 244,  81, 205, 
    231, 131, 154,  36,  76, 248, 
     79, 182, 143, 190,  79, 197, 
     75, 244,  89, 173, 253,  95, 
    107, 146,  98, 166,  80,  41, 
    217,   3, 162,  11,  99,  36, 
    175,  22, 120, 188,  38, 233, 
    125, 225,  63, 221,  75,  56, 
      6, 107, 245, 151, 144,   9, 
    233, 220, 216, 226, 244, 149, 
     87,  22, 239,  63, 120,  99, 
    121, 229, 237, 197, 211, 183, 
     31, 220,  95, 156, 187, 125, 
    111, 229, 230, 131, 215, 174, 
    156,  94, 188, 127, 239, 230, 
    226, 229, 111,  92,  95,  94, 
    185, 119, 127, 113, 246, 173, 
    111, 222, 189, 253, 230, 202, 
    242, 226, 107,  55, 222, 122, 
    120, 254, 206, 202, 133, 153, 
     75, 199, 111, 221, 194, 134, 
    111,  92, 184, 124, 101, 229, 
    225, 131, 111, 223,  91,  89, 
     46, 220,  93, 190, 193, 254, 
      1,  32, 126, 196,  58,   0, 
     88,  72,  83,  72,   8,   0, 
      0,   0,  76, 207, 216,  27, 
    120, 114, 251,  73,  88,  80, 
     68,  80,  81,   0,   0,   0, 
     68,  58,  92,  65,  84,  71, 
     92, 115, 116,  95, 100, 101, 
    118,  92,  75, 105, 116, 115, 
     92,  68, 105, 114, 101,  99, 
    116,  88,  84,  75,  92, 115, 
    114,  99,  92,  83, 104,  97, 
    100, 101, 114, 115,  92,  67, 
    111, 109, 112, 105, 108, 101, 
    100,  92,  88,  98, 111, 120, 
     79, 110, 101,  80,  66,  82, 
     69, 102, 102, 101,  99, 116, 
     95,  80,  83,  84, 101, 120, 
    116, 117, 114, 101, 100,  46, 
    112, 100,  98
};
