#if 0
//
// Generated by Microsoft (R) D3D Shader Disassembler for Durango
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// COLOR                    0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 0   xy          4     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// COLOR                    0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xyz         3     NONE   float   xyz 
// TEXCOORD                 2   xyz         4     NONE   float   xyz 
// TEXCOORD                 3   xyz         5     NONE   float   xyz 
// TEXCOORD                 4   xyzw        6     NONE   float   xyzw
// TEXCOORD                 5   xyz         7     NONE   float   xyz 
//
vs_5_0
// Opaque Custom Data - XBOX Precompiled Shader Header
// First Precompiled Shader at offset:[197]
// Embedded Data:
//  0x000000c5 - Offset To First Precompiled Shader
//  0x00010050 - Original Shader Descriptor
//  0x000000c0 - Original Shader Size
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[5], immediateIndexed
dcl_constantbuffer CB2[21], immediateIndexed
dcl_input v0.xyzw
dcl_input v1.xyz
dcl_input v2.xyzw
dcl_input v3.xyzw
dcl_input v4.xy
dcl_output_siv o0.xyzw, position
dcl_output o1.xyzw
dcl_output o2.xy
dcl_output o3.xyz
dcl_output o4.xyz
dcl_output o5.xyz
dcl_output o6.xyzw
dcl_output o7.xyz
dcl_temps 1
dp4 o0.x, v0.xyzw, cb2[4].xyzw
dp4 o0.y, v0.xyzw, cb2[5].xyzw
dp4 o0.z, v0.xyzw, cb2[6].xyzw
dp4 o0.w, v0.xyzw, cb2[7].xyzw
mul o1.xyzw, v3.xyzw, cb0[1].xyzw
mov r0.xy, v4.xyxx
mov r0.z, l(1.000000)
dp3 o2.x, r0.xyzx, cb2[16].xywx
dp3 o2.y, r0.xyzx, cb2[17].xywx
dp3 o3.x, v1.xyzx, cb2[0].xyzx
dp3 o3.y, v1.xyzx, cb2[1].xyzx
dp3 o3.z, v1.xyzx, cb2[2].xyzx
dp4 r0.x, v0.xyzw, cb2[0].xyzw
dp4 r0.y, v0.xyzw, cb2[1].xyzw
dp4 r0.z, v0.xyzw, cb2[2].xyzw
mov o4.xyz, r0.xyzx
add o5.xyz, -r0.xyzx, cb2[20].xyzx
mov o6.xyzw, v2.xyzw
mov o7.xyz, v1.xyzx
ret 
// Opaque Custom Data - XBOX Precompiled Shader Object
// Offset:[197], bundle is:[202] DWORDS.
// Disassembled Precompiled Shader Object:
// Shader Type               : (VS)
// Shader Hw Stage           : (VS)
// PDB Filename              : D:\ATG\st_dev\Kits\DirectXTK\src\Shaders\Compiled\XboxOneDGSLEffect_mainVc.pdb
// Shader Semantic Hash      : 0x1b73191bd80ca9a1
//
// Shader Data:
; ----------------- VS Data ------------------------
; Input Semantic Mappings
;   [0] generic, usageIdx  0, channelMask 15, v[4:7]
;   [1] generic, usageIdx  1, channelMask  7, v[8:10]
;   [2] generic, usageIdx  2, channelMask 15, v[12:15]
;   [3] generic, usageIdx  3, channelMask 15, v[16:19]
;   [4] generic, usageIdx  4, channelMask  3, v[20:21]
; Output Semantic Mappings
;   [0] generic,  usageIdx 1, paramIdx 0, paramSlot 0
;   [1] generic,  usageIdx 2, paramIdx 1, paramSlot 0
;   [2] generic,  usageIdx 3, paramIdx 2, paramSlot 0
;   [3] generic,  usageIdx 4, paramIdx 3, paramSlot 0
;   [4] generic,  usageIdx 5, paramIdx 4, paramSlot 0
;   [5] generic,  usageIdx 6, paramIdx 5, paramSlot 0
;   [6] generic,  usageIdx 7, paramIdx 6, paramSlot 0

codeLenInByte        = 316 bytes;

; launchModeFlags    = 0x0000000E
srdTableSupport      = TRUE
immediateSupportExt  = TRUE
srdTableSupportExt   = TRUE

userElementCount     = 3;
;  userElements[0]      = PTR_VERTEX_BUFFER_TABLE, Element=1 dwords, s[0x2:3]
;  userElements[1]      = PTR_EXTENDED_USER_DATA, ReferencedExtUserElements=1, s[0x2:3]
;  userElements[2]      = SUB_PTR_FETCH_SHADER, s[0x2:3]
extUserElementCount  = 2;
;  extUserElements 1[0] = IMM_CONST_BUFFER 0, offset 0x0:3 dwords
;  extUserElements 1[1] = IMM_CONST_BUFFER 2, offset 0x4:7 dwords
NumVgprs             = 28;
NumSgprs             = 46;
FloatMode            = 192;
IeeeMode             = 0;
FlatPtr32            = 0;
ScratchSize          = 0 dwords/thread;
LDSByteSize          = 0 bytes/workgroup (compile time only);
ScratchWaveOffsetReg = s65535;
; texSamplerUsage         = 0x00000000
; constBufUsage           = 0x00000005

; SPI_SHADER_PGM_RSRC2_VS = 0x00000008
SSPRV:USER_SGPR             = 4
; PA_CL_VS_OUT_CNTL       = 0x00000000
; SPI_VS_OUT_CONFIG       = 0x0000000C
SVOC:VS_EXPORT_COUNT        = 6
SVOC:VS_HALF_PACK           = 0
SVOC:VS_EXPORTS_FOG         = 0
SVOC:VS_OUT_FOG_VEC_ADDR    = 0
; SPI_SHADER_POS_FORMAT     = 0x00000004
SSPF:POS0_EXPORT_FORMAT     = 4
SSPF:POS1_EXPORT_FORMAT     = 0
SSPF:POS2_EXPORT_FORMAT     = 0
SSPF:POS3_EXPORT_FORMAT     = 0
VGT_STRMOUT_CONFIG = 0x0
VGT_STRMOUT_CONFIG:RAST_STREAM = 0
VGT_STRMOUT_CONFIG:STREAMOUT_0_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_1_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_2_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_3_EN = 0
; exportVertexSize          = 4

// Shader Instructions:
shader main
  asic(CI)
  type(VS)
  s_swappc_b64  s[2:3], s[2:3]                          // 000000000000: BE822102
  s_load_dwordx8  s[0:7], s[2:3], 0x00                  // 000000000004: C0C00300
  s_waitcnt     lgkmcnt(0)                              // 000000000008: BF8C007F
  s_buffer_load_dwordx8  s[8:15], s[4:7], 0x00          // 00000000000C: C2C40500
  s_buffer_load_dwordx4  s[16:19], s[4:7], 0x08         // 000000000010: C2880508
  s_buffer_load_dwordx16  s[20:35], s[4:7], 0x10        // 000000000014: C30A0510
  s_buffer_load_dwordx8  s[36:43], s[4:7], 0x40         // 000000000018: C2D20540
  s_buffer_load_dwordx4  s[0:3], s[0:3], 0x04           // 00000000001C: C2800104
  s_buffer_load_dwordx4  s[4:7], s[4:7], 0x50           // 000000000020: C2820550
  s_waitcnt     vmcnt(0) & lgkmcnt(0)                   // 000000000024: BF8C0070
  v_mul_legacy_f32  v0, s11, v7                         // 000000000028: 0E000E0B
  v_mul_legacy_f32  v1, s15, v7                         // 00000000002C: 0E020E0F
  v_mul_legacy_f32  v2, s19, v7                         // 000000000030: 0E040E13
  v_mul_legacy_f32  v3, s23, v7                         // 000000000034: 0E060E17
  v_mul_legacy_f32  v11, s27, v7                        // 000000000038: 0E160E1B
  v_mul_legacy_f32  v22, s31, v7                        // 00000000003C: 0E2C0E1F
  v_mul_legacy_f32  v7, s35, v7                         // 000000000040: 0E0E0E23
  v_mac_f32     v0, s10, v6                             // 000000000044: 3E000C0A
  v_mac_f32     v1, s14, v6                             // 000000000048: 3E020C0E
  v_mac_f32     v2, s18, v6                             // 00000000004C: 3E040C12
  v_mac_legacy_f32  v3, s22, v6                         // 000000000050: 0C060C16
  v_mac_legacy_f32  v11, s26, v6                        // 000000000054: 0C160C1A
  v_mac_legacy_f32  v22, s30, v6                        // 000000000058: 0C2C0C1E
  v_mac_legacy_f32  v7, s34, v6                         // 00000000005C: 0C0E0C22
  v_mov_b32     v6, s39                                 // 000000000060: 7E0C0227
  v_mov_b32     v23, s43                                // 000000000064: 7E2E022B
  v_mul_legacy_f32  v24, s10, v10                       // 000000000068: 0E30140A
  v_mul_legacy_f32  v25, s14, v10                       // 00000000006C: 0E32140E
  v_mul_legacy_f32  v26, s18, v10                       // 000000000070: 0E341412
  v_mac_f32     v0, s9, v5                              // 000000000074: 3E000A09
  v_mac_f32     v1, s13, v5                             // 000000000078: 3E020A0D
  v_mac_f32     v2, s17, v5                             // 00000000007C: 3E040A11
  v_mac_legacy_f32  v3, s21, v5                         // 000000000080: 0C060A15
  v_mac_legacy_f32  v11, s25, v5                        // 000000000084: 0C160A19
  v_mac_legacy_f32  v22, s29, v5                        // 000000000088: 0C2C0A1D
  v_mac_legacy_f32  v7, s33, v5                         // 00000000008C: 0C0E0A21
  v_mac_f32     v6, s37, v21                            // 000000000090: 3E0C2A25
  v_mac_f32     v23, s41, v21                           // 000000000094: 3E2E2A29
  v_mac_f32     v24, s9, v9                             // 000000000098: 3E301209
  v_mac_f32     v25, s13, v9                            // 00000000009C: 3E32120D
  v_mac_f32     v26, s17, v9                            // 0000000000A0: 3E341211
  v_mac_f32     v0, s8, v4                              // 0000000000A4: 3E000808
  v_mac_f32     v1, s12, v4                             // 0000000000A8: 3E02080C
  v_mac_f32     v2, s16, v4                             // 0000000000AC: 3E040810
  v_mac_legacy_f32  v3, s20, v4                         // 0000000000B0: 0C060814
  v_mac_legacy_f32  v11, s24, v4                        // 0000000000B4: 0C160818
  v_mac_legacy_f32  v22, s28, v4                        // 0000000000B8: 0C2C081C
  v_mac_legacy_f32  v7, s32, v4                         // 0000000000BC: 0C0E0820
  v_mul_legacy_f32  v4, s0, v16                         // 0000000000C0: 0E082000
  v_mul_legacy_f32  v5, s1, v17                         // 0000000000C4: 0E0A2201
  v_mul_legacy_f32  v16, s2, v18                        // 0000000000C8: 0E202402
  v_mul_legacy_f32  v17, s3, v19                        // 0000000000CC: 0E222603
  v_mac_f32     v6, s36, v20                            // 0000000000D0: 3E0C2824
  v_mac_f32     v23, s40, v20                           // 0000000000D4: 3E2E2828
  v_mac_f32     v24, s8, v8                             // 0000000000D8: 3E301008
  v_mac_f32     v25, s12, v8                            // 0000000000DC: 3E32100C
  v_mac_f32     v26, s16, v8                            // 0000000000E0: 3E341010
  v_sub_f32     v18, s4, v0                             // 0000000000E4: 08240004
  v_sub_f32     v19, s5, v1                             // 0000000000E8: 08260205
  v_sub_f32     v20, s6, v2                             // 0000000000EC: 08280406
  v_mov_b32     v21, 0                                  // 0000000000F0: 7E2A0280
  v_mov_b32     v27, 1.0                                // 0000000000F4: 7E3602F2
  exp           pos0, v3, v11, v22, v7 done             // 0000000000F8: F80008CF 07160B03
  exp           param0, v4, v5, v16, v17                // 000000000100: F800020F 11100504
  exp           param1, v6, v23, v21, v27               // 000000000108: F800021F 1B151706
  exp           param2, v24, v25, v26, v27              // 000000000110: F800022F 1B1A1918
  exp           param3, v0, v1, v2, v27                 // 000000000118: F800023F 1B020100
  exp           param4, v18, v19, v20, v27              // 000000000120: F800024F 1B141312
  exp           param5, v12, v13, v14, v15              // 000000000128: F800025F 0F0E0D0C
  exp           param6, v8, v9, v10, v27                // 000000000130: F800026F 1B0A0908
  s_endpgm                                              // 000000000138: BF810000
end


// Shader Statistics:
//  NumActiveWaveFront:         36
//  WorkgroupSize:              64
//  NumVRegs:                   28
//  NumSRegs:                   46
//  NumActiveWaveFrontByVReg:   36
//  NumActiveWaveFrontBySReg:   40
//  NumActiveWaveFrontByLDS:    40
//  CycleSim:                   84
//  CycleSimNWaves:             84
//  Code Size:                  316
//Assembler Counts:
//  num_32bit_ops                     : 63
//  num_64bit_ops                     : 8
//  num_alu                           : 52
//  num_fc                            : 11
//  num_inst_exp                      : 8
//  num_inst_ldsgds                   : 0
//  num_inst_mimg                     : 0
//  num_inst_mtbuf                    : 0
//  num_inst_mubuf                    : 0
//  num_inst_sopp                     : 3
//  num_inst_sopc                     : 0
//  num_inst_sop1                     : 1
//  num_inst_sop2                     : 0
//  num_inst_smrd                     : 0
//  num_inst_sopk                     : 0
//  num_inst_vop1                     : 4
//  num_inst_vop2                     : 48
//  num_inst_vop3                     : 0
//  num_inst_vopc                     : 0
//  num_inst_vintrp                   : 0
//  constant_literal_operands         : 0
//  num_tex                           : 8
//  num_vmem_group                    : 0
//  vmem_grouping_started             : 0
// Shader Statistics:
// m_uNumActiveWaveFront             : 36
// m_uVRegLimit                      : 256
// m_uSRegLimit                      : 512
// m_uNumVRegs                       : 28
// m_uNumSRegs                       : 46
// m_uSCCodeSize                     : 316
// m_uWorkgroupSize                  : 64
// m_uNumActiveWaveFrontByVReg       : 36
// m_uNumActiveWaveFrontBySReg       : 40
// m_uNumActiveWaveFrontByLDS        : 40
// m_uCycleSim1Wave                  : 84
// m_uCycleSimNWaves                 : 84

// Assembler Counts:
// num_32bit_ops                     : 63
// num_64bit_ops                     : 8
// num_alu                           : 52
// num_fc                            : 11
// num_inst_exp                      : 8
// num_inst_ldsgds                   : 0
// num_inst_mimg                     : 0
// num_inst_mtbuf                    : 0
// num_inst_mubuf                    : 0
// num_inst_sopp                     : 3
// num_inst_sopc                     : 0
// num_inst_sop1                     : 1
// num_inst_sop2                     : 0
// num_inst_smrd                     : 0
// num_inst_sopk                     : 0
// num_inst_vop1                     : 4
// num_inst_vop2                     : 48
// num_inst_vop3                     : 0
// num_inst_vopc                     : 0
// num_inst_vintrp                   : 0
// num_inst_smem                     : 7
// constant_literal_operands         : 0
// num_tex                           : 8
// num_vmem_group                    : 0
// vmem_grouping_started             : 0
// m_fFullPrecompilePromise          : 0
// m_fIntegerDivideExpansion         : 0
// m_fIntegerModExpansion            : 0
// m_fDoubleDivideExpansion          : 0
// m_fUsesScratch                    : 0
// m_fPerThreadIndirection           : 0
// m_fUsingTableLoads                : 0
// m_fUsingSHmemLoads                : 1
// fSemanticHashFlagOverrideApplied  : 0
// fPSHasNoUAVWrite                  : 0
// m_fRenderTargetsCanBeCompacted    : 0
// version                           : 3
// fCodePatched                      : 0

// Opaque Custom Data - XBOX Precompiled Shader Object
// Offset:[401], bundle is:[216] DWORDS.
// Disassembled Precompiled Shader Object:
// Shader Type               : (VS)
// Shader Hw Stage           : (ES)
// PDB Filename              : D:\ATG\st_dev\Kits\DirectXTK\src\Shaders\Compiled\XboxOneDGSLEffect_mainVc.pdb
// Shader Semantic Hash      : 0x1b73191bd80ca9a1
//
// Shader Data:
; ----------------- VS Data ------------------------
; Input Semantic Mappings
;   [0] generic, usageIdx  0, channelMask 15, v[4:7]
;   [1] generic, usageIdx  1, channelMask  7, v[8:10]
;   [2] generic, usageIdx  2, channelMask 15, v[12:15]
;   [3] generic, usageIdx  3, channelMask 15, v[16:19]
;   [4] generic, usageIdx  4, channelMask  3, v[20:21]
; Output Semantic Mappings
;   [0] position,  usageIdx 0, paramIdx 0, paramSlot 0
;   [1] generic,  usageIdx 1, paramIdx 1, paramSlot 0
;   [2] generic,  usageIdx 2, paramIdx 2, paramSlot 0
;   [3] generic,  usageIdx 3, paramIdx 3, paramSlot 0
;   [4] generic,  usageIdx 4, paramIdx 4, paramSlot 0
;   [5] generic,  usageIdx 5, paramIdx 5, paramSlot 0
;   [6] generic,  usageIdx 6, paramIdx 6, paramSlot 0
;   [7] generic,  usageIdx 7, paramIdx 7, paramSlot 0

codeLenInByte        = 468 bytes;

; launchModeFlags    = 0x0000000E
srdTableSupport      = TRUE
immediateSupportExt  = TRUE
srdTableSupportExt   = TRUE

userElementCount     = 4;
;  userElements[0]      = PTR_VERTEX_BUFFER_TABLE, Element=1 dwords, s[0x2:3]
;  userElements[1]      = PTR_EXTENDED_USER_DATA, ReferencedExtUserElements=1, s[0x2:3]
;  userElements[2]      = PTR_INTERNAL_GLOBAL_TABLE, Element=1 dwords, s[0x2:3]
;  userElements[3]      = SUB_PTR_FETCH_SHADER, s[0x2:3]
extUserElementCount  = 2;
;  extUserElements 1[0] = IMM_CONST_BUFFER 0, offset 0x0:3 dwords
;  extUserElements 1[1] = IMM_CONST_BUFFER 2, offset 0x4:7 dwords
NumVgprs             = 22;
NumSgprs             = 42;
FloatMode            = 192;
IeeeMode             = 0;
FlatPtr32            = 0;
ScratchSize          = 0 dwords/thread;
LDSByteSize          = 0 bytes/workgroup (compile time only);
ScratchWaveOffsetReg = s65535;
; texSamplerUsage         = 0x00000000
; constBufUsage           = 0x00000005

; SPI_SHADER_PGM_RSRC2_VS = 0x00000008
SSPRV:USER_SGPR             = 4
; PA_CL_VS_OUT_CNTL       = 0x00000000
; SPI_VS_OUT_CONFIG       = 0x00000000
SVOC:VS_EXPORT_COUNT        = 0
SVOC:VS_HALF_PACK           = 0
SVOC:VS_EXPORTS_FOG         = 0
SVOC:VS_OUT_FOG_VEC_ADDR    = 0
; SPI_SHADER_POS_FORMAT     = 0x00000004
SSPF:POS0_EXPORT_FORMAT     = 4
SSPF:POS1_EXPORT_FORMAT     = 0
SSPF:POS2_EXPORT_FORMAT     = 0
SSPF:POS3_EXPORT_FORMAT     = 0
VGT_STRMOUT_CONFIG = 0x0
VGT_STRMOUT_CONFIG:RAST_STREAM = 0
VGT_STRMOUT_CONFIG:STREAMOUT_0_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_1_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_2_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_3_EN = 0
; exportVertexSize          = 32
; esGsRingItemSize          = 32

// Shader Instructions:
shader main
  asic(CI)
  type(VS)
  s_swappc_b64  s[2:3], s[2:3]                          // 000000000000: BE822102
  s_load_dwordx8  s[8:15], s[2:3], 0x00                 // 000000000004: C0C40300
  s_waitcnt     lgkmcnt(0)                              // 000000000008: BF8C007F
  s_buffer_load_dwordx16  s[16:31], s[12:15], 0x10      // 00000000000C: C3080D10
  s_waitcnt     vmcnt(0) & lgkmcnt(0)                   // 000000000010: BF8C0070
  v_mul_legacy_f32  v0, s19, v7                         // 000000000014: 0E000E13
  s_load_dwordx4  s[0:3], s[2:3], 0x10                  // 000000000018: C0800310
  v_mac_legacy_f32  v0, s18, v6                         // 00000000001C: 0C000C12
  v_mul_legacy_f32  v1, s23, v7                         // 000000000020: 0E020E17
  s_buffer_load_dwordx4  s[8:11], s[8:11], 0x04         // 000000000024: C2840904
  v_mac_legacy_f32  v0, s17, v5                         // 000000000028: 0C000A11
  v_mac_legacy_f32  v1, s22, v6                         // 00000000002C: 0C020C16
  v_mul_legacy_f32  v2, s27, v7                         // 000000000030: 0E040E1B
  v_mac_legacy_f32  v0, s16, v4                         // 000000000034: 0C000810
  v_mac_legacy_f32  v1, s21, v5                         // 000000000038: 0C020A15
  v_mac_legacy_f32  v2, s26, v6                         // 00000000003C: 0C040C1A
  v_mul_legacy_f32  v3, s31, v7                         // 000000000040: 0E060E1F
  s_buffer_load_dwordx8  s[32:39], s[12:15], 0x40       // 000000000044: C2D00D40
  v_mac_legacy_f32  v1, s20, v4                         // 000000000048: 0C020814
  v_mac_legacy_f32  v2, s25, v5                         // 00000000004C: 0C040A19
  v_mac_legacy_f32  v3, s30, v6                         // 000000000050: 0C060C1E
  v_mac_legacy_f32  v2, s24, v4                         // 000000000054: 0C040818
  v_mac_legacy_f32  v3, s29, v5                         // 000000000058: 0C060A1D
  s_buffer_load_dwordx8  s[16:23], s[12:15], 0x00       // 00000000005C: C2C80D00
  v_mac_legacy_f32  v3, s28, v4                         // 000000000060: 0C06081C
  s_waitcnt     lgkmcnt(0)                              // 000000000064: BF8C007F
  buffer_store_dword  v0, v0, s[0:3], s4 glc slc        // 000000000068: E0704000 04400000
  v_mul_legacy_f32  v0, s8, v16                         // 000000000070: 0E002008
  buffer_store_dword  v1, v0, s[0:3], s4 offset:4 glc slc // 000000000074: E0704004 04400100
  s_buffer_load_dwordx4  s[24:27], s[12:15], 0x08       // 00000000007C: C28C0D08
  v_mul_legacy_f32  v1, s9, v17                         // 000000000080: 0E022209
  buffer_store_dword  v2, v0, s[0:3], s4 offset:8 glc slc // 000000000084: E0704008 04400200
  v_mul_legacy_f32  v2, s10, v18                        // 00000000008C: 0E04240A
  v_mov_b32     v11, s35                                // 000000000090: 7E160223
  buffer_store_dword  v3, v0, s[0:3], s4 offset:12 glc slc // 000000000094: E070400C 04400300
  v_mul_legacy_f32  v3, s11, v19                        // 00000000009C: 0E06260B
  v_mac_legacy_f32  v11, s33, v21                       // 0000000000A0: 0C162A21
  v_mov_b32     v16, s39                                // 0000000000A4: 7E200227
  buffer_store_dword  v0, v0, s[0:3], s4 offset:16 glc slc // 0000000000A8: E0704010 04400000
  v_mac_legacy_f32  v11, s32, v20                       // 0000000000B0: 0C162820
  v_mac_legacy_f32  v16, s37, v21                       // 0000000000B4: 0C202A25
  v_mul_legacy_f32  v0, s18, v10                        // 0000000000B8: 0E001412
  buffer_store_dword  v1, v0, s[0:3], s4 offset:20 glc slc // 0000000000BC: E0704014 04400100
  v_mac_legacy_f32  v16, s36, v20                       // 0000000000C4: 0C202824
  v_mac_legacy_f32  v0, s17, v9                         // 0000000000C8: 0C001211
  v_mul_legacy_f32  v1, s22, v10                        // 0000000000CC: 0E021416
  buffer_store_dword  v2, v0, s[0:3], s4 offset:24 glc slc // 0000000000D0: E0704018 04400200
  v_mac_legacy_f32  v0, s16, v8                         // 0000000000D8: 0C001010
  v_mac_legacy_f32  v1, s21, v9                         // 0000000000DC: 0C021215
  s_waitcnt     lgkmcnt(0)                              // 0000000000E0: BF8C007F
  v_mul_legacy_f32  v2, s26, v10                        // 0000000000E4: 0E04141A
  v_mul_legacy_f32  v17, s19, v7                        // 0000000000E8: 0E220E13
  buffer_store_dword  v3, v0, s[0:3], s4 offset:28 glc slc // 0000000000EC: E070401C 04400300
  s_buffer_load_dwordx4  s[8:11], s[12:15], 0x50        // 0000000000F4: C2840D50
  v_mac_legacy_f32  v1, s20, v8                         // 0000000000F8: 0C021014
  v_mac_legacy_f32  v2, s25, v9                         // 0000000000FC: 0C041219
  v_mac_legacy_f32  v17, s18, v6                        // 000000000100: 0C220C12
  v_mul_legacy_f32  v3, s23, v7                         // 000000000104: 0E060E17
  buffer_store_dword  v11, v0, s[0:3], s4 offset:32 glc slc // 000000000108: E0704020 04400B00
  v_mac_legacy_f32  v2, s24, v8                         // 000000000110: 0C041018
  v_mac_legacy_f32  v17, s17, v5                        // 000000000114: 0C220A11
  v_mac_legacy_f32  v3, s22, v6                         // 000000000118: 0C060C16
  v_mul_legacy_f32  v7, s27, v7                         // 00000000011C: 0E0E0E1B
  buffer_store_dword  v16, v0, s[0:3], s4 offset:36 glc slc // 000000000120: E0704024 04401000
  v_mac_legacy_f32  v17, s16, v4                        // 000000000128: 0C220810
  v_mac_legacy_f32  v3, s21, v5                         // 00000000012C: 0C060A15
  v_mac_legacy_f32  v7, s26, v6                         // 000000000130: 0C0E0C1A
  buffer_store_dword  v0, v0, s[0:3], s4 offset:48 glc slc // 000000000134: E0704030 04400000
  v_mac_legacy_f32  v3, s20, v4                         // 00000000013C: 0C060814
  v_mac_legacy_f32  v7, s25, v5                         // 000000000140: 0C0E0A19
  buffer_store_dword  v1, v0, s[0:3], s4 offset:52 glc slc // 000000000144: E0704034 04400100
  v_mac_legacy_f32  v7, s24, v4                         // 00000000014C: 0C0E0818
  buffer_store_dword  v2, v0, s[0:3], s4 offset:56 glc slc // 000000000150: E0704038 04400200
  s_waitcnt     lgkmcnt(0)                              // 000000000158: BF8C007F
  v_sub_f32     v0, s8, v17                             // 00000000015C: 08002208
  buffer_store_dword  v17, v0, s[0:3], s4 offset:64 glc slc // 000000000160: E0704040 04401100
  v_sub_f32     v1, s9, v3                              // 000000000168: 08020609
  buffer_store_dword  v3, v0, s[0:3], s4 offset:68 glc slc // 00000000016C: E0704044 04400300
  v_sub_f32     v2, s10, v7                             // 000000000174: 08040E0A
  buffer_store_dword  v7, v0, s[0:3], s4 offset:72 glc slc // 000000000178: E0704048 04400700
  buffer_store_dword  v0, v0, s[0:3], s4 offset:80 glc slc // 000000000180: E0704050 04400000
  buffer_store_dword  v1, v0, s[0:3], s4 offset:84 glc slc // 000000000188: E0704054 04400100
  buffer_store_dword  v2, v0, s[0:3], s4 offset:88 glc slc // 000000000190: E0704058 04400200
  buffer_store_dword  v12, v0, s[0:3], s4 offset:96 glc slc // 000000000198: E0704060 04400C00
  buffer_store_dword  v13, v0, s[0:3], s4 offset:100 glc slc // 0000000001A0: E0704064 04400D00
  buffer_store_dword  v14, v0, s[0:3], s4 offset:104 glc slc // 0000000001A8: E0704068 04400E00
  buffer_store_dword  v15, v0, s[0:3], s4 offset:108 glc slc // 0000000001B0: E070406C 04400F00
  buffer_store_dword  v8, v0, s[0:3], s4 offset:112 glc slc // 0000000001B8: E0704070 04400800
  buffer_store_dword  v9, v0, s[0:3], s4 offset:116 glc slc // 0000000001C0: E0704074 04400900
  buffer_store_dword  v10, v0, s[0:3], s4 offset:120 glc slc // 0000000001C8: E0704078 04400A00
  s_endpgm                                              // 0000000001D0: BF810000
end


// Shader Statistics:
//  NumActiveWaveFront:         40
//  WorkgroupSize:              64
//  NumVRegs:                   22
//  NumSRegs:                   42
//  NumActiveWaveFrontByVReg:   40
//  NumActiveWaveFrontBySReg:   40
//  NumActiveWaveFrontByLDS:    40
//  CycleSim:                   110
//  CycleSimNWaves:             110
//  Code Size:                  468
//Assembler Counts:
//  num_32bit_ops                     : 65
//  num_64bit_ops                     : 26
//  num_alu                           : 50
//  num_fc                            : 15
//  num_inst_exp                      : 0
//  num_inst_ldsgds                   : 0
//  num_inst_mimg                     : 0
//  num_inst_mtbuf                    : 0
//  num_inst_mubuf                    : 26
//  num_inst_sopp                     : 6
//  num_inst_sopc                     : 0
//  num_inst_sop1                     : 1
//  num_inst_sop2                     : 0
//  num_inst_smrd                     : 0
//  num_inst_sopk                     : 0
//  num_inst_vop1                     : 2
//  num_inst_vop2                     : 48
//  num_inst_vop3                     : 0
//  num_inst_vopc                     : 0
//  num_inst_vintrp                   : 0
//  constant_literal_operands         : 0
//  num_tex                           : 26
//  num_vmem_group                    : 16
//  vmem_grouping_started             : 0
// Shader Statistics:
// m_uNumActiveWaveFront             : 40
// m_uVRegLimit                      : 256
// m_uSRegLimit                      : 512
// m_uNumVRegs                       : 22
// m_uNumSRegs                       : 42
// m_uSCCodeSize                     : 468
// m_uWorkgroupSize                  : 64
// m_uNumActiveWaveFrontByVReg       : 40
// m_uNumActiveWaveFrontBySReg       : 40
// m_uNumActiveWaveFrontByLDS        : 40
// m_uCycleSim1Wave                  : 110
// m_uCycleSimNWaves                 : 110

// Assembler Counts:
// num_32bit_ops                     : 65
// num_64bit_ops                     : 26
// num_alu                           : 50
// num_fc                            : 15
// num_inst_exp                      : 0
// num_inst_ldsgds                   : 0
// num_inst_mimg                     : 0
// num_inst_mtbuf                    : 0
// num_inst_mubuf                    : 26
// num_inst_sopp                     : 6
// num_inst_sopc                     : 0
// num_inst_sop1                     : 1
// num_inst_sop2                     : 0
// num_inst_smrd                     : 0
// num_inst_sopk                     : 0
// num_inst_vop1                     : 2
// num_inst_vop2                     : 48
// num_inst_vop3                     : 0
// num_inst_vopc                     : 0
// num_inst_vintrp                   : 0
// num_inst_smem                     : 8
// constant_literal_operands         : 0
// num_tex                           : 26
// num_vmem_group                    : 16
// vmem_grouping_started             : 0
// m_fFullPrecompilePromise          : 0
// m_fIntegerDivideExpansion         : 0
// m_fIntegerModExpansion            : 0
// m_fDoubleDivideExpansion          : 0
// m_fUsesScratch                    : 0
// m_fPerThreadIndirection           : 0
// m_fUsingTableLoads                : 0
// m_fUsingSHmemLoads                : 1
// fSemanticHashFlagOverrideApplied  : 0
// fPSHasNoUAVWrite                  : 0
// m_fRenderTargetsCanBeCompacted    : 0
// version                           : 3
// fCodePatched                      : 0

// Opaque Custom Data - XBOX Precompiled Shader Object
// Offset:[619], bundle is:[210] DWORDS.
// Disassembled Precompiled Shader Object:
// Shader Type               : (VS)
// Shader Hw Stage           : (LS)
// PDB Filename              : D:\ATG\st_dev\Kits\DirectXTK\src\Shaders\Compiled\XboxOneDGSLEffect_mainVc.pdb
// Shader Semantic Hash      : 0x1b73191bd80ca9a1
//
// Shader Data:
; ----------------- VS Data ------------------------
; Input Semantic Mappings
;   [0] generic, usageIdx  0, channelMask 15, v[4:7]
;   [1] generic, usageIdx  1, channelMask  7, v[8:10]
;   [2] generic, usageIdx  2, channelMask 15, v[12:15]
;   [3] generic, usageIdx  3, channelMask 15, v[16:19]
;   [4] generic, usageIdx  4, channelMask  3, v[20:21]
; Output Semantic Mappings
;   [0] position,  usageIdx 0, paramIdx 0, paramSlot 0
;   [1] generic,  usageIdx 1, paramIdx 1, paramSlot 0
;   [2] generic,  usageIdx 2, paramIdx 2, paramSlot 0
;   [3] generic,  usageIdx 3, paramIdx 3, paramSlot 0
;   [4] generic,  usageIdx 4, paramIdx 4, paramSlot 0
;   [5] generic,  usageIdx 5, paramIdx 5, paramSlot 0
;   [6] generic,  usageIdx 6, paramIdx 6, paramSlot 0
;   [7] generic,  usageIdx 7, paramIdx 7, paramSlot 0

codeLenInByte        = 380 bytes;

; launchModeFlags    = 0x0000000E
srdTableSupport      = TRUE
immediateSupportExt  = TRUE
srdTableSupportExt   = TRUE

userElementCount     = 3;
;  userElements[0]      = PTR_VERTEX_BUFFER_TABLE, Element=1 dwords, s[0x2:3]
;  userElements[1]      = PTR_EXTENDED_USER_DATA, ReferencedExtUserElements=1, s[0x2:3]
;  userElements[2]      = SUB_PTR_FETCH_SHADER, s[0x2:3]
extUserElementCount  = 2;
;  extUserElements 1[0] = IMM_CONST_BUFFER 0, offset 0x0:3 dwords
;  extUserElements 1[1] = IMM_CONST_BUFFER 2, offset 0x4:7 dwords
NumVgprs             = 27;
NumSgprs             = 46;
FloatMode            = 192;
IeeeMode             = 0;
FlatPtr32            = 0;
ScratchSize          = 0 dwords/thread;
LDSByteSize          = 0 bytes/workgroup (compile time only);
ScratchWaveOffsetReg = s65535;
; texSamplerUsage         = 0x00000000
; constBufUsage           = 0x00000005

; SPI_SHADER_PGM_RSRC2_VS = 0x00000008
SSPRV:USER_SGPR             = 4
; PA_CL_VS_OUT_CNTL       = 0x00000000
; SPI_VS_OUT_CONFIG       = 0x00000000
SVOC:VS_EXPORT_COUNT        = 0
SVOC:VS_HALF_PACK           = 0
SVOC:VS_EXPORTS_FOG         = 0
SVOC:VS_OUT_FOG_VEC_ADDR    = 0
; SPI_SHADER_POS_FORMAT     = 0x00000004
SSPF:POS0_EXPORT_FORMAT     = 4
SSPF:POS1_EXPORT_FORMAT     = 0
SSPF:POS2_EXPORT_FORMAT     = 0
SSPF:POS3_EXPORT_FORMAT     = 0
VGT_STRMOUT_CONFIG = 0x0
VGT_STRMOUT_CONFIG:RAST_STREAM = 0
VGT_STRMOUT_CONFIG:STREAMOUT_0_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_1_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_2_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_3_EN = 0
; vgprCompCnt               = 1
; exportVertexSize          = 32
; lsStride                  = 128

// Shader Instructions:
shader main
  asic(CI)
  type(VS)
  s_swappc_b64  s[2:3], s[2:3]                          // 000000000000: BE822102
  s_load_dwordx8  s[0:7], s[2:3], 0x00                  // 000000000004: C0C00300
  s_waitcnt     lgkmcnt(0)                              // 000000000008: BF8C007F
  s_buffer_load_dwordx16  s[8:23], s[4:7], 0x10         // 00000000000C: C3040510
  s_buffer_load_dwordx4  s[0:3], s[0:3], 0x04           // 000000000010: C2800104
  s_buffer_load_dwordx8  s[24:31], s[4:7], 0x40         // 000000000014: C2CC0540
  s_buffer_load_dwordx8  s[32:39], s[4:7], 0x00         // 000000000018: C2D00500
  s_buffer_load_dwordx4  s[40:43], s[4:7], 0x08         // 00000000001C: C2940508
  s_mov_b32     m0, 0x00010000                          // 000000000020: BEFC03FF 00010000
  s_waitcnt     vmcnt(0) & lgkmcnt(0)                   // 000000000028: BF8C0070
  v_mul_legacy_f32  v0, s11, v7                         // 00000000002C: 0E000E0B
  v_mac_legacy_f32  v0, s10, v6                         // 000000000030: 0C000C0A
  v_mac_legacy_f32  v0, s9, v5                          // 000000000034: 0C000A09
  v_mac_legacy_f32  v0, s8, v4                          // 000000000038: 0C000808
  v_mul_legacy_f32  v2, s15, v7                         // 00000000003C: 0E040E0F
  v_mac_legacy_f32  v2, s14, v6                         // 000000000040: 0C040C0E
  v_mac_legacy_f32  v2, s13, v5                         // 000000000044: 0C040A0D
  v_mac_legacy_f32  v2, s12, v4                         // 000000000048: 0C04080C
  v_mul_legacy_f32  v3, s19, v7                         // 00000000004C: 0E060E13
  v_mac_legacy_f32  v3, s18, v6                         // 000000000050: 0C060C12
  v_mac_legacy_f32  v3, s17, v5                         // 000000000054: 0C060A11
  v_mac_legacy_f32  v3, s16, v4                         // 000000000058: 0C060810
  v_mul_legacy_f32  v11, s23, v7                        // 00000000005C: 0E160E17
  v_mac_legacy_f32  v11, s22, v6                        // 000000000060: 0C160C16
  v_mac_legacy_f32  v11, s21, v5                        // 000000000064: 0C160A15
  v_mac_legacy_f32  v11, s20, v4                        // 000000000068: 0C160814
  s_buffer_load_dwordx4  s[4:7], s[4:7], 0x50           // 00000000006C: C2820550
  v_mul_legacy_f32  v16, s0, v16                        // 000000000070: 0E202000
  v_mul_legacy_f32  v17, s1, v17                        // 000000000074: 0E222201
  v_mul_legacy_f32  v18, s2, v18                        // 000000000078: 0E242402
  v_mul_legacy_f32  v19, s3, v19                        // 00000000007C: 0E262603
  v_mov_b32     v22, s27                                // 000000000080: 7E2C021B
  v_mac_legacy_f32  v22, s25, v21                       // 000000000084: 0C2C2A19
  v_mac_legacy_f32  v22, s24, v20                       // 000000000088: 0C2C2818
  v_mov_b32     v23, s31                                // 00000000008C: 7E2E021F
  v_mac_legacy_f32  v23, s29, v21                       // 000000000090: 0C2E2A1D
  v_mac_legacy_f32  v23, s28, v20                       // 000000000094: 0C2E281C
  v_mul_legacy_f32  v20, s34, v10                       // 000000000098: 0E281422
  v_mac_legacy_f32  v20, s33, v9                        // 00000000009C: 0C281221
  v_mac_legacy_f32  v20, s32, v8                        // 0000000000A0: 0C281020
  v_mul_legacy_f32  v21, s38, v10                       // 0000000000A4: 0E2A1426
  v_mac_legacy_f32  v21, s37, v9                        // 0000000000A8: 0C2A1225
  v_mac_legacy_f32  v21, s36, v8                        // 0000000000AC: 0C2A1024
  v_mul_legacy_f32  v24, s42, v10                       // 0000000000B0: 0E30142A
  v_mac_legacy_f32  v24, s41, v9                        // 0000000000B4: 0C301229
  v_mac_legacy_f32  v24, s40, v8                        // 0000000000B8: 0C301028
  v_mul_legacy_f32  v25, s35, v7                        // 0000000000BC: 0E320E23
  v_mac_legacy_f32  v25, s34, v6                        // 0000000000C0: 0C320C22
  v_mac_legacy_f32  v25, s33, v5                        // 0000000000C4: 0C320A21
  v_mac_legacy_f32  v25, s32, v4                        // 0000000000C8: 0C320820
  v_mul_legacy_f32  v26, s39, v7                        // 0000000000CC: 0E340E27
  v_mac_legacy_f32  v26, s38, v6                        // 0000000000D0: 0C340C26
  v_mac_legacy_f32  v26, s37, v5                        // 0000000000D4: 0C340A25
  v_mac_legacy_f32  v26, s36, v4                        // 0000000000D8: 0C340824
  v_mul_legacy_f32  v7, s43, v7                         // 0000000000DC: 0E0E0E2B
  v_mac_legacy_f32  v7, s42, v6                         // 0000000000E0: 0C0E0C2A
  v_mac_legacy_f32  v7, s41, v5                         // 0000000000E4: 0C0E0A29
  v_mac_legacy_f32  v7, s40, v4                         // 0000000000E8: 0C0E0828
  s_waitcnt     lgkmcnt(0)                              // 0000000000EC: BF8C007F
  v_sub_f32     v4, s4, v25                             // 0000000000F0: 08083204
  v_sub_f32     v5, s5, v26                             // 0000000000F4: 080A3405
  v_sub_f32     v6, s6, v7                              // 0000000000F8: 080C0E06
  v_lshlrev_b32  v1, 7, v1                              // 0000000000FC: 34020287
  ds_write2_b32  v1, v0, v2 offset1:1                   // 000000000100: D8380100 00020001
  ds_write2_b32  v1, v3, v11 offset0:2 offset1:3        // 000000000108: D8380302 000B0301
  ds_write2_b32  v1, v16, v17 offset0:4 offset1:5       // 000000000110: D8380504 00111001
  ds_write2_b32  v1, v18, v19 offset0:6 offset1:7       // 000000000118: D8380706 00131201
  ds_write2_b32  v1, v22, v23 offset0:8 offset1:9       // 000000000120: D8380908 00171601
  ds_write2_b32  v1, v20, v21 offset0:12 offset1:13     // 000000000128: D8380D0C 00151401
  ds_write_b32  v1, v24 offset:56                       // 000000000130: D8340038 00001801
  ds_write2_b32  v1, v25, v26 offset0:16 offset1:17     // 000000000138: D8381110 001A1901
  ds_write_b32  v1, v7 offset:72                        // 000000000140: D8340048 00000701
  ds_write2_b32  v1, v4, v5 offset0:20 offset1:21       // 000000000148: D8381514 00050401
  ds_write_b32  v1, v6 offset:88                        // 000000000150: D8340058 00000601
  ds_write2_b32  v1, v12, v13 offset0:24 offset1:25     // 000000000158: D8381918 000D0C01
  ds_write2_b32  v1, v14, v15 offset0:26 offset1:27     // 000000000160: D8381B1A 000F0E01
  ds_write2_b32  v1, v8, v9 offset0:28 offset1:29       // 000000000168: D8381D1C 00090801
  ds_write_b32  v1, v10 offset:120                      // 000000000170: D8340078 00000A01
  s_endpgm                                              // 000000000178: BF810000
end


// Shader Statistics:
//  NumActiveWaveFront:         36
//  WorkgroupSize:              64
//  NumVRegs:                   27
//  NumSRegs:                   46
//  NumActiveWaveFrontByVReg:   36
//  NumActiveWaveFrontBySReg:   40
//  NumActiveWaveFrontByLDS:    40
//  CycleSim:                   140
//  CycleSimNWaves:             140
//  Code Size:                  380
//Assembler Counts:
//  num_32bit_ops                     : 64
//  num_64bit_ops                     : 15
//  num_alu                           : 51
//  num_fc                            : 13
//  num_inst_exp                      : 0
//  num_inst_ldsgds                   : 15
//  num_inst_mimg                     : 0
//  num_inst_mtbuf                    : 0
//  num_inst_mubuf                    : 0
//  num_inst_sopp                     : 4
//  num_inst_sopc                     : 0
//  num_inst_sop1                     : 2
//  num_inst_sop2                     : 0
//  num_inst_smrd                     : 0
//  num_inst_sopk                     : 0
//  num_inst_vop1                     : 2
//  num_inst_vop2                     : 49
//  num_inst_vop3                     : 0
//  num_inst_vopc                     : 0
//  num_inst_vintrp                   : 0
//  constant_literal_operands         : 0
//  num_tex                           : 15
//  num_vmem_group                    : 0
//  vmem_grouping_started             : 0
// Shader Statistics:
// m_uNumActiveWaveFront             : 36
// m_uVRegLimit                      : 256
// m_uSRegLimit                      : 512
// m_uNumVRegs                       : 27
// m_uNumSRegs                       : 46
// m_uSCCodeSize                     : 380
// m_uWorkgroupSize                  : 64
// m_uNumActiveWaveFrontByVReg       : 36
// m_uNumActiveWaveFrontBySReg       : 40
// m_uNumActiveWaveFrontByLDS        : 40
// m_uCycleSim1Wave                  : 140
// m_uCycleSimNWaves                 : 140

// Assembler Counts:
// num_32bit_ops                     : 64
// num_64bit_ops                     : 15
// num_alu                           : 51
// num_fc                            : 13
// num_inst_exp                      : 0
// num_inst_ldsgds                   : 15
// num_inst_mimg                     : 0
// num_inst_mtbuf                    : 0
// num_inst_mubuf                    : 0
// num_inst_sopp                     : 4
// num_inst_sopc                     : 0
// num_inst_sop1                     : 2
// num_inst_sop2                     : 0
// num_inst_smrd                     : 0
// num_inst_sopk                     : 0
// num_inst_vop1                     : 2
// num_inst_vop2                     : 49
// num_inst_vop3                     : 0
// num_inst_vopc                     : 0
// num_inst_vintrp                   : 0
// num_inst_smem                     : 7
// constant_literal_operands         : 0
// num_tex                           : 15
// num_vmem_group                    : 0
// vmem_grouping_started             : 0
// m_fFullPrecompilePromise          : 0
// m_fIntegerDivideExpansion         : 0
// m_fIntegerModExpansion            : 0
// m_fDoubleDivideExpansion          : 0
// m_fUsesScratch                    : 0
// m_fPerThreadIndirection           : 0
// m_fUsingTableLoads                : 0
// m_fUsingSHmemLoads                : 1
// fSemanticHashFlagOverrideApplied  : 0
// fPSHasNoUAVWrite                  : 0
// m_fRenderTargetsCanBeCompacted    : 0
// version                           : 3
// fCodePatched                      : 0

// Approximately 0 instruction slots used
#endif

const BYTE DGSLEffect_mainVc[] =
{
     68,  88,  66,  67, 121,  86, 
    222,  87, 230, 150,  55, 221, 
     74, 211,  45,  26,  82, 152, 
     78,   1,   1,   0,   0,   0, 
     62,  15,   0,   0,   5,   0, 
      0,   0,  52,   0,   0,   0, 
    232,   0,   0,   0, 212,   1, 
      0,   0, 216,  14,   0,   0, 
    232,  14,   0,   0,  73,  83, 
     71,  78, 172,   0,   0,   0, 
      5,   0,   0,   0,   8,   0, 
      0,   0, 128,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      0,   0,   0,   0,  15,  15, 
      0,   0, 140,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   0,   0,   7,   7, 
      0,   0, 147,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      2,   0,   0,   0,  15,  15, 
      0,   0, 155,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      3,   0,   0,   0,  15,  15, 
      0,   0, 161,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      4,   0,   0,   0,   3,   3, 
      0,   0,  83,  86,  95,  80, 
    111, 115, 105, 116, 105, 111, 
    110,   0,  78,  79,  82,  77, 
     65,  76,   0,  84,  65,  78, 
     71,  69,  78,  84,   0,  67, 
     79,  76,  79,  82,   0,  84, 
     69,  88,  67,  79,  79,  82, 
     68,   0, 171, 171,  79,  83, 
     71,  78, 228,   0,   0,   0, 
      8,   0,   0,   0,   8,   0, 
      0,   0, 200,   0,   0,   0, 
      0,   0,   0,   0,   1,   0, 
      0,   0,   3,   0,   0,   0, 
      0,   0,   0,   0,  15,   0, 
      0,   0, 212,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   0,   0,  15,   0, 
      0,   0, 218,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      2,   0,   0,   0,   3,  12, 
      0,   0, 218,   0,   0,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      3,   0,   0,   0,   7,   8, 
      0,   0, 218,   0,   0,   0, 
      2,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      4,   0,   0,   0,   7,   8, 
      0,   0, 218,   0,   0,   0, 
      3,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      5,   0,   0,   0,   7,   8, 
      0,   0, 218,   0,   0,   0, 
      4,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      6,   0,   0,   0,  15,   0, 
      0,   0, 218,   0,   0,   0, 
      5,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      7,   0,   0,   0,   7,   8, 
      0,   0,  83,  86,  95,  80, 
     79,  83,  73,  84,  73,  79, 
     78,   0,  67,  79,  76,  79, 
     82,   0,  84,  69,  88,  67, 
     79,  79,  82,  68,   0, 171, 
     83,  72,  69,  88, 252,  12, 
      0,   0,  80,   0,   1,   0, 
     63,   3,   0,   0,  53,  16, 
      0,   0,   5,   0,   0,   0, 
    197,   0,   0,   0,  80,   0, 
      1,   0, 192,   0,   0,   0, 
    106,   8,   0,   1,  89,   0, 
      0,   4,  70, 142,  32,   0, 
      0,   0,   0,   0,   5,   0, 
      0,   0,  89,   0,   0,   4, 
     70, 142,  32,   0,   2,   0, 
      0,   0,  21,   0,   0,   0, 
     95,   0,   0,   3, 242,  16, 
     16,   0,   0,   0,   0,   0, 
     95,   0,   0,   3, 114,  16, 
     16,   0,   1,   0,   0,   0, 
     95,   0,   0,   3, 242,  16, 
     16,   0,   2,   0,   0,   0, 
     95,   0,   0,   3, 242,  16, 
     16,   0,   3,   0,   0,   0, 
     95,   0,   0,   3,  50,  16, 
     16,   0,   4,   0,   0,   0, 
    103,   0,   0,   4, 242,  32, 
     16,   0,   0,   0,   0,   0, 
      1,   0,   0,   0, 101,   0, 
      0,   3, 242,  32,  16,   0, 
      1,   0,   0,   0, 101,   0, 
      0,   3,  50,  32,  16,   0, 
      2,   0,   0,   0, 101,   0, 
      0,   3, 114,  32,  16,   0, 
      3,   0,   0,   0, 101,   0, 
      0,   3, 114,  32,  16,   0, 
      4,   0,   0,   0, 101,   0, 
      0,   3, 114,  32,  16,   0, 
      5,   0,   0,   0, 101,   0, 
      0,   3, 242,  32,  16,   0, 
      6,   0,   0,   0, 101,   0, 
      0,   3, 114,  32,  16,   0, 
      7,   0,   0,   0, 104,   0, 
      0,   2,   1,   0,   0,   0, 
     17,   0,   0,   8,  18,  32, 
     16,   0,   0,   0,   0,   0, 
     70,  30,  16,   0,   0,   0, 
      0,   0,  70, 142,  32,   0, 
      2,   0,   0,   0,   4,   0, 
      0,   0,  17,   0,   0,   8, 
     34,  32,  16,   0,   0,   0, 
      0,   0,  70,  30,  16,   0, 
      0,   0,   0,   0,  70, 142, 
     32,   0,   2,   0,   0,   0, 
      5,   0,   0,   0,  17,   0, 
      0,   8,  66,  32,  16,   0, 
      0,   0,   0,   0,  70,  30, 
     16,   0,   0,   0,   0,   0, 
     70, 142,  32,   0,   2,   0, 
      0,   0,   6,   0,   0,   0, 
     17,   0,   0,   8, 130,  32, 
     16,   0,   0,   0,   0,   0, 
     70,  30,  16,   0,   0,   0, 
      0,   0,  70, 142,  32,   0, 
      2,   0,   0,   0,   7,   0, 
      0,   0,  56,   0,   0,   8, 
    242,  32,  16,   0,   1,   0, 
      0,   0,  70,  30,  16,   0, 
      3,   0,   0,   0,  70, 142, 
     32,   0,   0,   0,   0,   0, 
      1,   0,   0,   0,  54,   0, 
      0,   5,  50,   0,  16,   0, 
      0,   0,   0,   0,  70,  16, 
     16,   0,   4,   0,   0,   0, 
     54,   0,   0,   5,  66,   0, 
     16,   0,   0,   0,   0,   0, 
      1,  64,   0,   0,   0,   0, 
    128,  63,  16,   0,   0,   8, 
     18,  32,  16,   0,   2,   0, 
      0,   0,  70,   2,  16,   0, 
      0,   0,   0,   0,  70, 131, 
     32,   0,   2,   0,   0,   0, 
     16,   0,   0,   0,  16,   0, 
      0,   8,  34,  32,  16,   0, 
      2,   0,   0,   0,  70,   2, 
     16,   0,   0,   0,   0,   0, 
     70, 131,  32,   0,   2,   0, 
      0,   0,  17,   0,   0,   0, 
     16,   0,   0,   8,  18,  32, 
     16,   0,   3,   0,   0,   0, 
     70,  18,  16,   0,   1,   0, 
      0,   0,  70, 130,  32,   0, 
      2,   0,   0,   0,   0,   0, 
      0,   0,  16,   0,   0,   8, 
     34,  32,  16,   0,   3,   0, 
      0,   0,  70,  18,  16,   0, 
      1,   0,   0,   0,  70, 130, 
     32,   0,   2,   0,   0,   0, 
      1,   0,   0,   0,  16,   0, 
      0,   8,  66,  32,  16,   0, 
      3,   0,   0,   0,  70,  18, 
     16,   0,   1,   0,   0,   0, 
     70, 130,  32,   0,   2,   0, 
      0,   0,   2,   0,   0,   0, 
     17,   0,   0,   8,  18,   0, 
     16,   0,   0,   0,   0,   0, 
     70,  30,  16,   0,   0,   0, 
      0,   0,  70, 142,  32,   0, 
      2,   0,   0,   0,   0,   0, 
      0,   0,  17,   0,   0,   8, 
     34,   0,  16,   0,   0,   0, 
      0,   0,  70,  30,  16,   0, 
      0,   0,   0,   0,  70, 142, 
     32,   0,   2,   0,   0,   0, 
      1,   0,   0,   0,  17,   0, 
      0,   8,  66,   0,  16,   0, 
      0,   0,   0,   0,  70,  30, 
     16,   0,   0,   0,   0,   0, 
     70, 142,  32,   0,   2,   0, 
      0,   0,   2,   0,   0,   0, 
     54,   0,   0,   5, 114,  32, 
     16,   0,   4,   0,   0,   0, 
     70,   2,  16,   0,   0,   0, 
      0,   0,   0,   0,   0,   9, 
    114,  32,  16,   0,   5,   0, 
      0,   0,  70,   2,  16, 128, 
     65,   0,   0,   0,   0,   0, 
      0,   0,  70, 130,  32,   0, 
      2,   0,   0,   0,  20,   0, 
      0,   0,  54,   0,   0,   5, 
    242,  32,  16,   0,   6,   0, 
      0,   0,  70,  30,  16,   0, 
      2,   0,   0,   0,  54,   0, 
      0,   5, 114,  32,  16,   0, 
      7,   0,   0,   0,  70,  18, 
     16,   0,   1,   0,   0,   0, 
     62,   0,   0,   1,  53,  16, 
      0,   0, 204,   0,   0,   0, 
     23,   0,   1,   0,  32, 103, 
     23,   0, 120,   1, 237, 152, 
     63,  76,  83,  65,  28, 199, 
    175, 215, 247, 142, 235, 227, 
    184, 190, 150,  82,  40, 143, 
     63,   5,  43,  86, 108, 106, 
     37, 141, 131,  49,   7,  66, 
     13,   3,  38,  53,  66,  12, 
    195,  75,  26, 160,  69, 155, 
      8,  52, 148,  24, 167,  10, 
     56, 232, 224, 224, 168, 110, 
    110, 154,  56,  56,  58,   9, 
    169, 238,  24,  39,  22, 119, 
     71, 227, 196, 166, 191, 223, 
    235,  43,  54,  69, 102, 141, 
    121, 159, 244, 251, 251, 221, 
    187, 123, 189, 126, 239,  79, 
    151, 223, 157,  94, 226, 240, 
    252, 221, 173, 175, 152, 139, 
    129, 233,  28, 241,  19, 162, 
    227,   3, 160,  97,   0,  42, 
     17, 140, 132, 152,  81, 140, 
    132,  36,  48, 248,  64, 148, 
    144,   1,  72, 105, 208,  85, 
    120, 158, 130, 140,  99,  73, 
     87, 132, 236,  76, 191, 124, 
    241, 104, 186,   0, 173,  12, 
     40,  14,  90, 112,  53,   9, 
    226, 160,  44, 168,  19, 132, 
    237, 118, 192, 138,   3, 254, 
     84,  43, 232,  11, 231, 107, 
    165,   3,   3, 112,  98, 158, 
     37,  12, 127, 102,  22, 132, 
    254,  79,   3, 189,  53, 193, 
    121, 209,  39, 130, 235, 253, 
    215, 192,  51, 107, 158,  19, 
    130, 231, 209, 138,   4,  53, 
    247, 243, 109,  15,  70, 231, 
    248,  28, 190, 185, 207, 205, 
    179, 220,   7, 157, 198,  79, 
    160, 125, 143, 155, 207, 232, 
    129, 145, 124, 134, 249,  30, 
    199,  25,  61, 200,  48, 127, 
    240,  18, 211, 102,  66,  12, 
      6,  24,   3, 193,  33,  49, 
    120, 153,   5,  64,   6,   8, 
     54, 148,   9,  80,  23,   8, 
     12, 178,  32, 200,   4, 133, 
     64,  97,  80,  55,   8, 214, 
    196, 192,  31, 131, 187, 199, 
    224, 190, 178,  62,  80,  12, 
    212,  15, 178,  64,  96, 154, 
     13, 130, 134,  64, 195, 141, 
    123, 192, 220, 181,  51, 218, 
    104,  48, 127,  99, 165,  76, 
    107, 236,   0, 211,  27,  55, 
    155, 161,  49, 128, 117, 128, 
    185, 255,   8, 220, 131, 230, 
    153, 192, 246,  30, 255, 143, 
    145, 214, 182, 135, 135, 135, 
    135, 135, 135, 135, 135, 135, 
    135, 135, 135, 135, 135, 135, 
    199, 223, 130, 142, 236, 126, 
     32, 254, 253, 253, 135, 228, 
    233,  30, 209,  63, 213, 185, 
    254, 164, 110, 234, 198, 199, 
     41, 253,  75,  93, 243, 109, 
    215, 111, 234, 187, 245,  10, 
    140, 117,  74,  34, 131, 146, 
    202, 110, 169, 201,  94, 201, 
    164,  37, 163, 114,  88, 166, 
    228,  25,  41, 165,  33, 136, 
    146, 130, 170, 176, 208,  84, 
     84,  48, 209,  47, 162,  98, 
     72, 164, 196, 168, 144, 226, 
     28,  21, 181,  11,  52,  93, 
     51,  34,  25,  41,  35,  19, 
     50,  28, 201, 202, 128,  65, 
     84, 151,  65,  85, 200, 208, 
     84, 143, 193,  68, 204, 136, 
    138,  65,  35,  37,  70,  12, 
     41, 206, 142,  11, 117, 126, 
     60, 173,   2, 225, 140, 234, 
     10,  79, 168,  80,  56, 171, 
     56,  39,  74, 112, 170,  76, 
    174, 169,   8, 103, 162, 143, 
     71, 197,   0,  79, 137,  56, 
    151, 130,  64, 240, 141,  26, 
    146,  38, 226, 210,  63,  54, 
     42,  19,  73, 161, 146, 201, 
    180, 226, 102,  70,   9, 115, 
     66, 153, 102,  86, 105,  36, 
    193, 117,  58, 198, 153, 150, 
    228, 219, 116, 188, 246, 131, 
     94, 174,  29, 112, 114, 228, 
    239, 140, 118,   4,  41,  57, 
    210, 116,  51,  52,  12, 153, 
    245, 246,  88,  23,  33, 247, 
    197, 250, 173,  73, 200, 196, 
     71, 173,  60, 228, 112, 119, 
    196,  42,  64,  22,  93,  50, 
    184,   1, 153,   7,  12, 139, 
    144, 157,  61, 167, 148,  71, 
    157, 207,  49,  49,  44, 131, 
    181, 245, 153,  24, 218, 250, 
    156, 182, 214, 168, 153,  53, 
    161, 216,   9, 125, 173, 117, 
    163,  69, 183,  14, 156, 116, 
     51, 214,  98,   3,  32,  31, 
    241,  59, 115, 160,   7, 108, 
     35,  88,  97, 211,  72, 163, 
    190, 246, 234, 141,  56, 180, 
     98,  85, 240, 217, 224, 153, 
    251, 253, 138, 155, 177,  62, 
    140, 245, 170, 223, 108,  99, 
     56, 193, 123, 247, 253, 215, 
    110, 198, 181, 160,  63, 233, 
    252,  26, 128, 197,  78, 224, 
    208,  29, 255, 236, 102, 172, 
    137,  97,  13, 183, 221, 199, 
    119, 119,  60,  15,  66, 167, 
    185,  43, 246, 181, 133,  89, 
    187, 186,  85,  40, 150, 238, 
    219, 115, 229, 173, 170, 157, 
     43, 111, 150,  86, 182,  22, 
     23, 230, 236, 234, 230, 138, 
     61, 127, 119, 169,  88, 218, 
    172, 218,  51,  27, 107, 149, 
    242, 189,  82, 209,  94,  92, 
    222, 120, 144,  95,  47, 229, 
    102, 231, 111,  92,  95,  93, 
    133,  55,  11, 107,  75, 229, 
    245, 219,  43, 233,  74, 113, 
    153, 252,   2, 143, 119, 118, 
    250,   0,   0,   0,  53,  16, 
      0,   0, 218,   0,   0,   0, 
     23,   0,   1,   0,  16,  19, 
     24,   0, 120,   1, 237, 152, 
    205, 107,  19,  65,  24, 198, 
     39, 155, 233, 116, 179, 157, 
     76,  55,  31,  77, 147,  54, 
    213,  52,  86,  45,  61,  72, 
     43,  30, 138,   8, 174,  53, 
    162,  80, 161, 130,  65,  10, 
     46, 104, 219, 164,  24, 176, 
    109, 104, 138, 244,  32, 245, 
    131, 130,  23, 189, 121,  17, 
    188, 120, 244,  31, 240,  36, 
     90, 162, 160,  55,  61, 120, 
    240, 232, 127, 162, 207, 179, 
    221, 104, 136, 246, 172, 200, 
    254, 216, 103, 222, 153, 119, 
    118, 103, 222, 119, 102,  79, 
    111,  38,  47,   2, 158, 244, 
     61,  59,  75,  91,  75, 204, 
     85,  68,  92, 136,  62,  14, 
    128, 197,   6,  52, 179, 108, 
    133, 120, 157,  99,  43, 196, 
     36, 155,  24, 132,  23, 232, 
    154, 130, 190,  96, 236, 193, 
    114, 174, 163, 226, 135, 103, 
    115, 175, 110,  62, 159, 107, 
    161,  63,   3, 241, 221, 245, 
     80, 231, 160,  17, 232,  36, 
     52,   8, 245, 194,  57,   5, 
     17, 110, 213,  13, 227, 154, 
    134, 186, 177, 217,   0, 126, 
    231,  66,  63,  89,  98, 243, 
    103, 174,  67, 140, 233,  32, 
     24,  27, 215, 235, 208, 137, 
    147, 249, 254, 107, 240, 206, 
     58, 247,  68, 120,  31, 221, 
     24,  72,  66, 164,  18,  38, 
    205, 115,  36,  79, 195,  49, 
     13, 115, 219, 131,  14, 226, 
     59, 232, 156,  53,  97, 127, 
     22,  34, 140,  65, 137, 133, 
    105,  21, 123,  84,  82, 214, 
    167, 105,  21,  31, 156,  81, 
    242, 124,  74,  97,  66, 225, 
     50,  85,  63, 132,  15,  84, 
      2, 114, 160,   1,  72,  67, 
     73,   8,   1,  42,  28, 176, 
    194, 229, 169,  20, 148, 134, 
     50,  16, 114,  82,  67,  16, 
    130,  83, 195,  16, 254,  89, 
     85, 128, 112,  49, 106,  20, 
     42,  66,  99, 208,  33, 232, 
    240, 175, 255, 128, 168, 216, 
    254,  33,  40, 107,  63,  83, 
     21, 199, 207,  13, 148, 220, 
     63,   9, 213, 199, 136,  97, 
     25,  28,  80, 253,   8, 240, 
     63, 128, 103, 208, 125,  14, 
    157, 123,  39, 165,  80,  17, 
     17,  17,  17,  17,  17,  17, 
     17,  17,  17,  17,  17,  17, 
     17,  17,  17, 127,  19, 107, 
    252, 225,  27,  17, 127, 191, 
    119,  79,  60, 126, 235,  38, 
    237, 119,  77, 216, 140,  17, 
    198, 141, 223, 223,  75, 107, 
    161, 135, 141, 101, 100,  98, 
    183, 157, 114, 132, 206, 105, 
     75, 143,  26, 105,  92,  91, 
    232,  33, 199, 210,  35,  90, 
    234, 195,  70,  25,  47, 249, 
    185, 157, 181,  45,  93, 112, 
    164,  62, 164, 149, 206, 219, 
     82, 143,  57,  74, 139, 228, 
    199, 118, 209,  86, 154, 107, 
     11, 175, 249,  77,   8,  79, 
    218,  37,  97,  36, 251,  49, 
    244, 147, 143, 219, 137, 178, 
    101, 108, 142,  45,  79,  58, 
     19, 210,  28, 177, 114,  59, 
    154, 227, 184,  39,   7, 142, 
     41,  51,  62, 149, 211, 199, 
    173, 210, 142,  75,  31, 190, 
     47,  77, 230, 244, 209, 169, 
    146,  78, 103, 133, 201, 210, 
    135, 117,  38,  38,  75,  58, 
    149,  70, 124,  89, 203, 228, 
    233, 195,  90, 174, 139,  24, 
    211,  86, 176, 247,  72,  86, 
    154, 140,  41, 155,  34, 231, 
    176, 238, 149, 228, 110,  59, 
    235,  34, 222, 180, 212, 105, 
     93,  70, 142, 202, 148,  56, 
     55, 224, 201, 188,  43, 117, 
    202,  41,  35,  87, 133,  92, 
    141, 153, 160, 223, 197, 122, 
    118,  25,  57,  43, 228, 108, 
    244,  52, 125, 136,  37, 139, 
    220,  10, 142, 209, 167,  56, 
     70,  28, 121, 219, 232,  89, 
    246, 177,  63, 247, 181, 203, 
    194, 246,  56,  78, 121,  50, 
    161,  44, 187, 194,  62, 246, 
    119, 140, 180,  47, 177, 223, 
    143,  88, 104, 177,  86, 149, 
     22, 107,  44, 210, 226, 251, 
    155, 180, 218, 147,  53, 218, 
    164,  39, 111, 209,  26,  79, 
    222, 166,  29, 244, 100, 147, 
    214, 246, 228,  22, 109, 194, 
    147, 219, 180, 142,  39, 133, 
    120, 240, 118,  40, 184, 216, 
    224, 249,  73, 129, 229, 185, 
     30,  95,  80, 146, 238, 241, 
      5, 245, 220,  30,  95, 208, 
    151, 251, 245, 189,  14,  65, 
    153,  15, 190, 238, 122, 151, 
     28, 102,  43, 196,  23,  22, 
     55,   1, 235, 198,   9,  40, 
     38, 226, 193,  26, 140, 139, 
    125, 194, 106, 160,  12, 171, 
    206,  47,  94, 234, 175, 163, 
    133, 214,  40, 251, 228,  76, 
    184,  78,  49, 180, 172, 161, 
    105, 232,  23, 172, 126, 255, 
     78,  45, 124, 191,  26,  90, 
    230, 194, 248,  76, 176,  27, 
     96,  97,  22, 236, 134, 243, 
    119,  67, 203, 250, 221,   0, 
    212,  27, 199, 243, 112, 126, 
      1,  98, 164, 149, 211, 254, 
    185, 234,  69, 191, 181, 117, 
    163,  86, 191, 227, 207,  55, 
    182,  90, 126, 165, 177,  89, 
     95, 217,  90, 172, 206, 251, 
    173, 205,  21, 255, 234, 173, 
    165,  90, 125, 179, 229, 159, 
    223,  88, 107,  54, 110, 215, 
    107, 254, 226, 242, 198, 246, 
    194, 122, 189, 114, 241, 234, 
    229,  11, 171, 171, 120, 243, 
    198, 218,  82,  99, 253, 218, 
    202, 137, 102, 109,  89, 252, 
      0, 129, 197, 158, 212,   0, 
     53,  16,   0,   0, 212,   0, 
      0,   0,  23,   0,   1,   0, 
      0, 167,  23,   0, 120,   1, 
    237, 152, 207, 107,  19,  81, 
     16, 199, 103, 127, 189, 110, 
    182, 211, 215,  77, 154, 166, 
     73, 127, 104,  90,  99, 221, 
    198,  18,  98, 204,  65,  60, 
    105, 173,  40,  40,  84, 176, 
     72,  15,   1, 169,  77, 196, 
    130,  63,  74,  83, 164,   7, 
    173,  85, 132,  94, 196, 147, 
      7, 175, 158, 196, 155, 127, 
    129, 150, 120,  21, 244, 216, 
    187,   7,  61, 248,   7, 120, 
     16, 244,  59, 155, 141, 141, 
     69, 241, 168, 194, 126, 200, 
    119, 230, 205, 190, 151, 205, 
    188, 121,  47, 151, 121,  62, 
     68,  33, 243, 163,  31,  23, 
    196, 215,  19,  51, 179, 100, 
     17,  57,  18, 116, 177, 146, 
     22,  75, 116,  33,  35, 150, 
    168,  32, 198, 128,  76, 162, 
     17, 184,  18, 116,   7, 241, 
      9, 120, 153,  11,  34,  61, 
    254, 240, 112,  38, 184, 187, 
     53, 131,  33, 149, 161,  81, 
    232,  81,  36,  89, 219,  15, 
     29, 133, 250,  32,  65, 226, 
    110, 108,  49,   0,  63, 243, 
     19,  18,  31, 129, 186, 233, 
     17,   3, 246, 190, 131,  22, 
    197, 252, 154,  57,  72, 242, 
    255,  29, 146, 155, 208, 121, 
    103,  39,  79, 217, 239, 191, 
    134, 156,  89, 231, 156,   4, 
     57, 143, 110,  52, 132, 163, 
     13, 249,  60,  40, 118, 183, 
    174,  65, 116, 174, 157, 179, 
    220, 134, 126, 199,  55, 224, 
    202, 160, 139,  78,  44,  57, 
     40, 154,  43,  43,  99,  43, 
    175, 204, 119, 101, 101, 245, 
     31,  81, 246, 169, 164, 194, 
    132,  82,  16,  14,  73,  97, 
    177,  74,  64,  30, 212,  11, 
     49, 132, 194,  42,  36, 168, 
     80, 104, 229,  67,  73,  40, 
      5,  13,  64, 216, 147,  66, 
    190,  10,  57,  42, 220,  87, 
    149, 133, 114, 208,  48, 132, 
    132,  21,  46, 149,  26, 131, 
    246,  65, 251, 119, 115,  17, 
    148, 209,  46, 130,  50, 219, 
     59,  85,  86, 187,   2, 202, 
    110, 223,  44, 229,  72, 198, 
    240, 146,  28,  80,  61, 157, 
     91, 244, 127,  35,  53, 232, 
    174,  67, 231, 127,  36, 213, 
    200,  67, 194, 166, 152, 152, 
    152, 152, 152, 152, 152, 152, 
    152, 152, 152, 152, 152, 152, 
    152, 152, 152, 191, 132,  57, 
    254, 224,  21,  89, 219, 219, 
    247, 232, 209, 107, 223, 177, 
    223, 216, 198, 102, 235, 132, 
    243, 182,  69, 206, 251, 150, 
    235,  60, 105, 125, 179, 190, 
    190, 146, 110, 198,  10, 230, 
    123,  53, 105, 143, 137,  19, 
     30, 177, 235,  18, 247, 107, 
     91, 107, 182, 185, 207, 179, 
    153,  93, 155,   7, 180, 210, 
     41,  86, 156, 244,  20, 251, 
    174, 226,  33, 157, 209,  25, 
    206, 240, 160, 151, 225, 180, 
    155, 225,  11, 206, 131,  22, 
    229, 243, 218, 152, 152, 208, 
    102, 161, 160, 173, 201,  73, 
     61,  98,  78, 111, 228, 138, 
    211, 156,  13, 166, 121, 191, 
     89, 218,  24,  43, 150, 120, 
     52,  40, 241,  68,  58, 208, 
    227, 169, 128, 243, 126, 192, 
    147, 233, 162,  62, 152,  42, 
    114, 193,  47, 114,  49,  93, 
    214,  83, 169,  50,   7, 126, 
    153,  15, 232, 138, 158, 224, 
     10, 143, 123,  21, 206, 187, 
     21,  62, 164, 171, 122, 146, 
    171, 124, 208, 171, 114, 193, 
    173, 242,  97, 173, 117, 145, 
     53,  79, 121, 154,   3,  87, 
    179, 236, 209, 174, 184, 174, 
     83, 245,  92, 165, 217, 221, 
     50, 205,  42,  25, 199, 118, 
     12,  50, 201, 180, 224, 173, 
     94, 178,  29, 120,  63,  73, 
    170,   7,  62,  53,  64, 110, 
      2,  62,  51,  68, 220,   7, 
    159,  30, 164,  99,  84, 221, 
     49, 178,  68, 126,  18, 113, 
    110, 152, 206,  74, 220,  67, 
    148,  30,  68, 108,  59, 180, 
     32, 177,  34, 202, 230,  16, 
    115,  31,  13, 143, 192, 235, 
    126,  26,  29, 131, 119,  19, 
    180,  46, 243, 158,  84, 254, 
    254, 235, 176,  53, 104, 134, 
    159,  31, 228, 164, 113, 180, 
    231, 153,  47, 102, 207, 179, 
    112, 108, 203, 226,  93, 194, 
    214,  27, 158, 117, 122,  80, 
    194, 211, 168, 223, 120,  45, 
    242, 210,  27,  78,  64,   6, 
     89, 225,  59,  36,   7,  25, 
     11, 210, 161, 179, 169, 221, 
    159, 123, 246, 130, 119,  70, 
    114,  77, 105,  83, 134, 188, 
    143, 190, 255,  50, 242, 210, 
    219,  98, 232,  79, 124, 137, 
    214, 127, 138, 188, 236,  69, 
    242, 211, 225, 175,   1, 105, 
    150, 130, 108, 212,  31, 247, 
     35,  47,  61, 181,  94, 104, 
    111,  30, 229, 104,  94, 250, 
    201, 146, 233, 236, 241, 218, 
    201, 249,  51, 181, 230, 218, 
    229, 122, 227, 118, 237, 220, 
    242,  90, 179,  54, 187, 188, 
    218,  88,  90,  91, 152,  63, 
     87, 107, 174,  46, 213,  46, 
     94,  91, 172,  55,  86, 155, 
    181,  83, 183, 110, 172,  44, 
     95, 111, 212, 107,  11,  87, 
    110, 173, 207, 221, 108, 204, 
    158, 185, 120, 254, 244, 213, 
    171,  88, 121, 249, 198, 226, 
    242, 205,  75,  75, 165, 149, 
    250,  21, 250,  14, 157,  25, 
    127, 192,  88,  72,  83,  72, 
      8,   0,   0,   0, 161, 169, 
     12, 216,  27,  25, 115,  27, 
     88,  80,  68,  80,  78,   0, 
      0,   0,  68,  58,  92,  65, 
     84,  71,  92, 115, 116,  95, 
    100, 101, 118,  92,  75, 105, 
    116, 115,  92,  68, 105, 114, 
    101,  99, 116,  88,  84,  75, 
     92, 115, 114,  99,  92,  83, 
    104,  97, 100, 101, 114, 115, 
     92,  67, 111, 109, 112, 105, 
    108, 101, 100,  92,  88,  98, 
    111, 120,  79, 110, 101,  68, 
     71,  83,  76,  69, 102, 102, 
    101,  99, 116,  95, 109,  97, 
    105, 110,  86,  99,  46, 112, 
    100,  98
};
