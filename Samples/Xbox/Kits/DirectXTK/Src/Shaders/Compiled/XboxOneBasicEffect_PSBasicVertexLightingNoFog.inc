#if 0
//
// Generated by Microsoft (R) D3D Shader Disassembler for Durango
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// COLOR                    0   xyzw        0     NONE   float   xyzw
// COLOR                    1   xyzw        1     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
// Opaque Custom Data - XBOX Precompiled Shader Header
// First Precompiled Shader at offset:[32]
// Embedded Data:
//  0x00000020 - Offset To First Precompiled Shader
//  0x00000050 - Original Shader Descriptor
//  0x0000001b - Original Shader Size
dcl_globalFlags refactoringAllowed
dcl_input_ps linear v0.xyzw
dcl_input_ps linear v1.xyz
dcl_output o0.xyzw
mad o0.xyz, v1.xyzx, v0.wwww, v0.xyzx
mov o0.w, v0.w
ret 
// Opaque Custom Data - XBOX Precompiled Shader Object
// Offset:[32], bundle is:[140] DWORDS.
// Disassembled Precompiled Shader Object:
// Shader Type               : (PS)
// Shader Hw Stage           : (PS)
// PDB Filename              : D:\ATG\st_dev\Kits\DirectXTK\src\Shaders\Compiled\XboxOneBasicEffect_PSBasicVertexLightingNoFog.pdb
// Shader Semantic Hash      : 0xb7f55ff3af9f3a91
//
// Shader Data:
; ----------------- PS Data ------------------------
; Input Semantic Mappings
;   [0] generic,  usageIdx 0, channelMask 15, param0, paramSlot0, DefaultVal={0,0,0,0}
;   [1] generic,  usageIdx 1, channelMask  7, param1, paramSlot1, DefaultVal={0,0,0,0}

codeLenInByte        = 92 bytes;

; launchModeFlags    = 0x0000000E
srdTableSupport      = TRUE
immediateSupportExt  = TRUE
srdTableSupportExt   = TRUE

userElementCount     = 0;
extUserElementCount  = 0;
NumVgprs             = 8;
NumSgprs             = 5;
FloatMode            = 192;
IeeeMode             = 0;
FlatPtr32            = 0;
ScratchSize          = 0 dwords/thread;
LDSByteSize          = 0 bytes/workgroup (compile time only);
ScratchWaveOffsetReg = s65535;
; texSamplerUsage         = 0x00000000
; constBufUsage           = 0x00000000

; SPI_SHADER_PGM_RSRC2_PS = 0x00000004
SSPRP:SCRATCH_EN            = 0
SSPRP:USER_SGPR             = 2
SSPRP:TRAP_PRESENT          = 0
SSPRP:WAVE_CNT_EN           = 0
SSPRP:EXTRA_LDS_SIZE        = 0
SSPRP:EXCP_EN               = 0
; SPI_SHADER_Z_FORMAT     = 0x00000000
SPZF:Z_EXPORT_FORMAT        = 0; SPI_SHADER_ZERO
; SPI_PS_IN_CONTROL       = 0x00000002
SPIC:NUM_INTERP             = 2
SPIC:PARAM_GEN              = 0
SPIC:FOG_ADDR               = 0
SPIC:BC_OPTIMIZE_DISABLE    = 0
SPIC:PASS_FOG_THROUGH_PS    = 0
; SPI_PS_INPUT_ADDR       = 0x00000002
SPIA:PERSP_CENTER_ENA       = 1
; DB_SHADER_CONTROL       = 0x00000010
DB:Z_ORDER                  = 1
DB:CONSERVATIVE_Z_EXPORT    = 0; EXPORT_ANY_Z
; CB_SHADER_MASK          = 0x0000000F
CB:OUTPUT0_ENABLE           = 15

; export table for mrt0 [patch@(bytes=0x48, dwords=0x12)]
// Export Patch Code (FMT_ZERO):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_nop         0x0000                                  // 000000000000: BF800000
  s_nop         0x0000                                  // 000000000004: BF800000
  exp           null, off, off, off, off done vm        // 000000000008: F8001890 00000000
end
// Export Patch Code (FMT_32_R):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_nop         0x0000                                  // 000000000000: BF800000
  s_nop         0x0000                                  // 000000000004: BF800000
  exp           mrt0, v3, off, off, off done vm         // 000000000008: F8001801 00000003
end
// Export Patch Code (FMT_32_GR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_nop         0x0000                                  // 000000000000: BF800000
  s_nop         0x0000                                  // 000000000004: BF800000
  exp           mrt0, v3, v4, off, off done vm          // 000000000008: F8001803 00000403
end
// Export Patch Code (FMT_32_AR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_nop         0x0000                                  // 000000000000: BF800000
  s_nop         0x0000                                  // 000000000004: BF800000
  exp           mrt0, v3, v2, off, off done vm          // 000000000008: F8001803 00000203
end
// Export Patch Code (FMT_FP16_ABGR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  v_cvt_pkrtz_f16_f32  v0, v3, v4                       // 000000000000: 5E000903
  v_cvt_pkrtz_f16_f32  v1, v5, v2                       // 000000000004: 5E020505
  exp           mrt0, v0, v0, v1, v1 done compr vm      // 000000000008: F8001C0F 00000100
end
// Export Patch Code (FMT_UNORM16_ABGR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  v_cvt_pknorm_u16_f32  v0, v3, v4                      // 000000000000: 5C000903
  v_cvt_pknorm_u16_f32  v1, v5, v2                      // 000000000004: 5C020505
  exp           mrt0, v0, v0, v1, v1 done compr vm      // 000000000008: F8001C0F 00000100
end
// Export Patch Code (FMT_SNORM16_ABGR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  v_cvt_pknorm_i16_f32  v0, v3, v4                      // 000000000000: 5A000903
  v_cvt_pknorm_i16_f32  v1, v5, v2                      // 000000000004: 5A020505
  exp           mrt0, v0, v0, v1, v1 done compr vm      // 000000000008: F8001C0F 00000100
end
// Export Patch Code (FMT_UINT16_ABGR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  v_cvt_pk_u16_u32  v0, v3, v4                          // 000000000000: 60000903
  v_cvt_pk_u16_u32  v1, v5, v2                          // 000000000004: 60020505
  exp           mrt0, v0, v0, v1, v1 done compr vm      // 000000000008: F8001C0F 00000100
end
// Export Patch Code (FMT_SINT16_ABGR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  v_cvt_pk_i16_i32  v0, v3, v4                          // 000000000000: 62000903
  v_cvt_pk_i16_i32  v1, v5, v2                          // 000000000004: 62020505
  exp           mrt0, v0, v0, v1, v1 done compr vm      // 000000000008: F8001C0F 00000100
end
// Export Patch Code (FMT_32_ABGR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_nop         0x0000                                  // 000000000000: BF800000
  s_nop         0x0000                                  // 000000000004: BF800000
  exp           mrt0, v3, v4, v5, v2 done vm            // 000000000008: F800180F 02050403
end

// Shader Instructions:
shader main
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_mov_b32     m0, s2                                  // 000000000000: BEFC0302
  v_interp_p1_f32  v2, v0, attr0.w                      // 000000000004: C8080300
  v_interp_p2_f32  v2, v1, attr0.w                      // 000000000008: C8090301
  v_interp_p1_f32  v3, v0, attr0.x                      // 00000000000C: C80C0000
  v_interp_p2_f32  v3, v1, attr0.x                      // 000000000010: C80D0001
  v_interp_p1_f32  v4, v0, attr0.y                      // 000000000014: C8100100
  v_interp_p2_f32  v4, v1, attr0.y                      // 000000000018: C8110101
  v_interp_p1_f32  v5, v0, attr0.z                      // 00000000001C: C8140200
  v_interp_p2_f32  v5, v1, attr0.z                      // 000000000020: C8150201
  v_interp_p1_f32  v6, v0, attr1.x                      // 000000000024: C8180400
  v_interp_p2_f32  v6, v1, attr1.x                      // 000000000028: C8190401
  v_interp_p1_f32  v7, v0, attr1.y                      // 00000000002C: C81C0500
  v_interp_p2_f32  v7, v1, attr1.y                      // 000000000030: C81D0501
  v_interp_p1_f32  v0, v0, attr1.z                      // 000000000034: C8000600
  v_interp_p2_f32  v0, v1, attr1.z                      // 000000000038: C8010601
  v_mac_f32     v3, v6, v2                              // 00000000003C: 3E060506
  v_mac_f32     v4, v7, v2                              // 000000000040: 3E080507
  v_mac_f32     v5, v0, v2                              // 000000000044: 3E0A0500
  v_cvt_pkrtz_f16_f32  v0, v3, v4                       // 000000000048: 5E000903
  v_cvt_pkrtz_f16_f32  v1, v5, v2                       // 00000000004C: 5E020505
  exp           mrt0, v0, v0, v1, v1 done compr vm      // 000000000050: F8001C0F 00000100
  s_endpgm                                              // 000000000058: BF810000
end


// Shader Statistics:
//  NumActiveWaveFront:         40
//  WorkgroupSize:              64
//  NumVRegs:                   8
//  NumSRegs:                   5
//  NumActiveWaveFrontByVReg:   40
//  NumActiveWaveFrontBySReg:   40
//  NumActiveWaveFrontByLDS:    40
//  CycleSim:                   83
//  CycleSimNWaves:             83
//  Code Size:                  92
//Assembler Counts:
//  num_32bit_ops                     : 21
//  num_64bit_ops                     : 1
//  num_alu                           : 19
//  num_fc                            : 2
//  num_inst_exp                      : 1
//  num_inst_ldsgds                   : 0
//  num_inst_mimg                     : 0
//  num_inst_mtbuf                    : 0
//  num_inst_mubuf                    : 0
//  num_inst_sopp                     : 1
//  num_inst_sopc                     : 0
//  num_inst_sop1                     : 1
//  num_inst_sop2                     : 0
//  num_inst_smrd                     : 0
//  num_inst_sopk                     : 0
//  num_inst_vop1                     : 0
//  num_inst_vop2                     : 5
//  num_inst_vop3                     : 3
//  num_inst_vopc                     : 0
//  num_inst_vintrp                   : 14
//  constant_literal_operands         : 0
//  num_tex                           : 1
//  num_vmem_group                    : 0
//  vmem_grouping_started             : 0
//
//Compilation Notes:
//
//  PS has no UAV writes, consider forcing REZ/LATEZ.
// Shader Statistics:
// m_uNumActiveWaveFront             : 40
// m_uVRegLimit                      : 256
// m_uSRegLimit                      : 512
// m_uNumVRegs                       : 8
// m_uNumSRegs                       : 5
// m_uSCCodeSize                     : 92
// m_uWorkgroupSize                  : 64
// m_uNumActiveWaveFrontByVReg       : 40
// m_uNumActiveWaveFrontBySReg       : 40
// m_uNumActiveWaveFrontByLDS        : 40
// m_uCycleSim1Wave                  : 83
// m_uCycleSimNWaves                 : 83

// Assembler Counts:
// num_32bit_ops                     : 21
// num_64bit_ops                     : 1
// num_alu                           : 19
// num_fc                            : 2
// num_inst_exp                      : 1
// num_inst_ldsgds                   : 0
// num_inst_mimg                     : 0
// num_inst_mtbuf                    : 0
// num_inst_mubuf                    : 0
// num_inst_sopp                     : 1
// num_inst_sopc                     : 0
// num_inst_sop1                     : 1
// num_inst_sop2                     : 0
// num_inst_smrd                     : 0
// num_inst_sopk                     : 0
// num_inst_vop1                     : 0
// num_inst_vop2                     : 5
// num_inst_vop3                     : 3
// num_inst_vopc                     : 0
// num_inst_vintrp                   : 14
// num_inst_smem                     : 0
// constant_literal_operands         : 0
// num_tex                           : 1
// num_vmem_group                    : 0
// vmem_grouping_started             : 0
// m_fFullPrecompilePromise          : 0
// m_fIntegerDivideExpansion         : 0
// m_fIntegerModExpansion            : 0
// m_fDoubleDivideExpansion          : 0
// m_fUsesScratch                    : 0
// m_fPerThreadIndirection           : 0
// m_fUsingTableLoads                : 0
// m_fUsingSHmemLoads                : 0
// fSemanticHashFlagOverrideApplied  : 0
// fPSHasNoUAVWrite                  : 1
// m_fRenderTargetsCanBeCompacted    : 0
// version                           : 3
// fCodePatched                      : 0

// Approximately 0 instruction slots used
#endif

const BYTE BasicEffect_PSBasicVertexLightingNoFog[] =
{
     68,  88,  66,  67, 245, 111, 
    150,  15, 130, 148,  90, 142, 
     36, 225, 195, 163, 220, 141, 
    220,  90,   1,   0,   0,   0, 
    235,   3,   0,   0,   5,   0, 
      0,   0,  52,   0,   0,   0, 
    124,   0,   0,   0, 176,   0, 
      0,   0, 112,   3,   0,   0, 
    128,   3,   0,   0,  73,  83, 
     71,  78,  64,   0,   0,   0, 
      2,   0,   0,   0,   8,   0, 
      0,   0,  56,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      0,   0,   0,   0,  15,  15, 
      0,   0,  56,   0,   0,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   0,   0,  15,   7, 
      0,   0,  67,  79,  76,  79, 
     82,   0, 171, 171,  79,  83, 
     71,  78,  44,   0,   0,   0, 
      1,   0,   0,   0,   8,   0, 
      0,   0,  32,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      0,   0,   0,   0,  15,   0, 
      0,   0,  83,  86,  95,  84, 
     97, 114, 103, 101, 116,   0, 
    171, 171,  83,  72,  69,  88, 
    184,   2,   0,   0,  80,   0, 
      0,   0, 174,   0,   0,   0, 
     53,  16,   0,   0,   5,   0, 
      0,   0,  32,   0,   0,   0, 
     80,   0,   0,   0,  27,   0, 
      0,   0, 106,   8,   0,   1, 
     98,  16,   0,   3, 242,  16, 
     16,   0,   0,   0,   0,   0, 
     98,  16,   0,   3, 114,  16, 
     16,   0,   1,   0,   0,   0, 
    101,   0,   0,   3, 242,  32, 
     16,   0,   0,   0,   0,   0, 
     50,   0,   0,   9, 114,  32, 
     16,   0,   0,   0,   0,   0, 
     70,  18,  16,   0,   1,   0, 
      0,   0, 246,  31,  16,   0, 
      0,   0,   0,   0,  70,  18, 
     16,   0,   0,   0,   0,   0, 
     54,   0,   0,   5, 130,  32, 
     16,   0,   0,   0,   0,   0, 
     58,  16,  16,   0,   0,   0, 
      0,   0,  62,   0,   0,   1, 
     53,  16,   0,   0, 142,   0, 
      0,   0,  23,   0,   1,   0, 
     41,  72,  15,   0, 120,   1, 
    237, 151, 205, 107,  19,  65, 
     24, 198, 223, 217, 205, 172, 
    137, 166,  77, 253, 168,  70, 
    168, 224, 193, 131,  39, 239, 
     22,   9,  70, 235,   7,  84, 
     84,  72, 145,  82, 198, 166, 
     77, 118, 155, 174, 212, 166, 
    100,  23, 233,  65,  68, 193, 
    131,  55, 245, 214, 131, 224, 
    165, 119, 143,  94, 196, 122, 
    156, 131, 254,   5, 158,   4, 
    255,   3,  21,  60,   8, 250, 
     62, 155,  25,  92, 155, 196, 
    211, 130,  69, 246, 129, 223, 
    188, 251, 236, 204, 190, 251, 
    102, 102,   3,  51,  87,  43, 
    148, 232, 243, 211, 179, 183, 
     17,  63, 222, 185, 255, 105, 
    141, 163, 100, 132, 137, 208, 
    214,  24,  90, 162, 175,  38, 
    158,  70, 131,   1,  14,  81, 
    145,   3, 198,  41, 230,  60, 
    131,  62,  11, 209, 147, 250, 
    135, 247,  91, 117,  92, 185, 
     76, 137, 105,  24,  38,  25, 
    164,  56, 204, 112, 154, 228, 
    122, 183, 236, 189,  97, 125, 
    120,  39, 114,  66, 227, 104, 
    140,   6, 198, 250, 104, 134, 
    235,  40, 131, 250,  71,   9, 
    181,  89,  33,  47, 234, 132, 
    240, 238, 127, 173, 129, 223, 
    201, 178, 235,   4,  97,  61, 
    210,  74, 207, 209,  40, 217, 
    181, 124, 199, 140, 210,  79, 
     22, 226,  48,  97, 126,  60, 
    234, 127,  84, 158,  56, 246, 
    247, 201, 253,  79,  85,  64, 
    195, 194,  92, 128,   9, 198, 
    252, 205,  18, 217, 254,  67, 
    104, 232, 225,  14, 120,  86, 
    165, 239, 112, 214,  11, 246, 
    253, 111, 187, 239,  93, 248, 
    228, 193, 148, 231, 228, 110, 
    137,  22, 165, 116,  22,  43, 
     83, 252,  60, 127,  16, 236, 
     21, 123, 149, 242,  11, 236, 
     23,  82, 126, 137, 253,  82, 
    202, 183, 216, 183, 172, 183, 
    249,  43, 201, 251, 164,  99, 
    214, 250, 193,  94,  38, 175, 
     49,  27, 242,  26, 179,  33, 
    175,  49,  27, 242,  26, 179, 
     33, 175,  49,  27, 242,  26, 
    179,  33, 175,  49,  51, 200, 
    113, 127, 188,  37, 183, 168, 
    133,  91, 210,  68, 101,  45, 
    104,  76, 147, 152, 208,  66, 
     28, 212, 228,  28, 209, 194, 
    153, 212,  84, 168, 106,  81, 
     56, 174,  73,  78, 105,  33, 
     79, 104, 222, 160, 107, 225, 
      9, 237,  73, 175, 182,  79, 
     22, 107,  36, 247, 215, 120, 
     31, 248, 199,  62, 146, 232, 
    209, 206,  41, 115,  96,  40, 
    155,  88, 101, 112, 126,  43, 
    112,   2, 232, 249, 244, 203, 
     87,  95, 154, 223,  94, 227, 
     26,  82, 102, 220,  57,  19, 
     79,  50, 101, 230, 183, 182, 
    209,  12, 232, 177,  25,  31, 
    155, 136, 253,  50, 182, 186, 
    227, 246, 148, 101, 238, 111, 
    155, 248, 194,  68,  28,  45, 
     14,  48, 187, 235, 120,  99, 
    250, 113, 236,  67, 165,  51, 
    211, 170,  62, 119,  69,  69, 
    113, 211,  15, 238, 169, 217, 
     48, 142, 212,  76, 216,  11, 
    218, 241, 252, 220, 172, 138, 
    122, 109, 213,  88,  93, 246, 
    131,  94, 164,  46, 118, 239, 
    110, 132, 107, 129, 175, 230, 
     91, 221, 205,  27, 235, 193, 
    133, 229,  40, 108,  95,  90, 
     89, 225, 161, 205, 155, 141, 
    196, 221,  10, 122, 113, 176, 
    121,  45, 236, 172, 198, 225, 
    122, 231, 122, 247, 114, 183, 
    115, 102, 195, 111, 209,  47, 
    117, 119, 218, 190,  88,  72, 
     83,  72,   8,   0,   0,   0, 
    145,  58, 159, 175, 243,  95, 
    245, 183,  88,  80,  68,  80, 
     99,   0,   0,   0,  68,  58, 
     92,  65,  84,  71,  92, 115, 
    116,  95, 100, 101, 118,  92, 
     75, 105, 116, 115,  92,  68, 
    105, 114, 101,  99, 116,  88, 
     84,  75,  92, 115, 114,  99, 
     92,  83, 104,  97, 100, 101, 
    114, 115,  92,  67, 111, 109, 
    112, 105, 108, 101, 100,  92, 
     88,  98, 111, 120,  79, 110, 
    101,  66,  97, 115, 105,  99, 
     69, 102, 102, 101,  99, 116, 
     95,  80,  83,  66,  97, 115, 
    105,  99,  86, 101, 114, 116, 
    101, 120,  76, 105, 103, 104, 
    116, 105, 110, 103,  78, 111, 
     70, 111, 103,  46, 112, 100, 
     98
};
