#if 0
//
// Generated by Microsoft (R) D3D Shader Disassembler for Durango
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xy          0     NONE   float   xy  
// TEXCOORD                 1   xyzw        1     NONE   float   xyzw
// TEXCOORD                 2   xyz         2     NONE   float   xyz 
// COLOR                    0   xyzw        3     NONE   float   xyzw
// SV_Position              0   xyzw        4      POS   float   xyzw
//
vs_5_0
// Opaque Custom Data - XBOX Precompiled Shader Header
// First Precompiled Shader at offset:[166]
// Embedded Data:
//  0x000000a6 - Offset To First Precompiled Shader
//  0x00010050 - Original Shader Descriptor
//  0x000000a1 - Original Shader Size
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[26], immediateIndexed
dcl_input v0.xyzw
dcl_input v1.xyz
dcl_input v2.xy
dcl_output o0.xy
dcl_output o1.xyzw
dcl_output o2.xyz
dcl_output o3.xyzw
dcl_output_siv o4.xyzw, position
dcl_temps 1
mov o0.xy, v2.xyxx
dp4 o1.x, v0.xyzw, cb0[15].xyzw
dp4 o1.y, v0.xyzw, cb0[16].xyzw
dp4 o1.z, v0.xyzw, cb0[17].xyzw
dp4_sat o1.w, v0.xyzw, cb0[14].xyzw
dp3 r0.x, v1.xyzx, cb0[19].xyzx
dp3 r0.y, v1.xyzx, cb0[20].xyzx
dp3 r0.z, v1.xyzx, cb0[21].xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul o2.xyz, r0.wwww, r0.xyzx
mov o3.xyz, l(1.000000,1.000000,1.000000,0)
mov o3.w, cb0[0].w
dp4 o4.x, v0.xyzw, cb0[22].xyzw
dp4 o4.y, v0.xyzw, cb0[23].xyzw
dp4 o4.z, v0.xyzw, cb0[24].xyzw
dp4 o4.w, v0.xyzw, cb0[25].xyzw
ret 
// Opaque Custom Data - XBOX Precompiled Shader Object
// Offset:[166], bundle is:[193] DWORDS.
// Disassembled Precompiled Shader Object:
// Shader Type               : (VS)
// Shader Hw Stage           : (VS)
// PDB Filename              : D:\ATG\st_dev\Kits\DirectXTK\src\Shaders\Compiled\XboxOneBasicEffect_VSBasicPixelLightingTx.pdb
// Shader Semantic Hash      : 0x9cc6f69839766c3c
//
// Shader Data:
; ----------------- VS Data ------------------------
; Input Semantic Mappings
;   [0] generic, usageIdx  0, channelMask 15, v[4:7]
;   [1] generic, usageIdx  1, channelMask  7, v[8:10]
;   [2] generic, usageIdx  2, channelMask  3, v[12:13]
; Output Semantic Mappings
;   [0] generic,  usageIdx 0, paramIdx 0, paramSlot 0
;   [1] generic,  usageIdx 1, paramIdx 1, paramSlot 0
;   [2] generic,  usageIdx 2, paramIdx 2, paramSlot 0
;   [3] generic,  usageIdx 3, paramIdx 3, paramSlot 0

codeLenInByte        = 296 bytes;

; launchModeFlags    = 0x0000000E
srdTableSupport      = TRUE
immediateSupportExt  = TRUE
srdTableSupportExt   = TRUE

userElementCount     = 3;
;  userElements[0]      = PTR_VERTEX_BUFFER_TABLE, Element=1 dwords, s[0x2:3]
;  userElements[1]      = PTR_EXTENDED_USER_DATA, ReferencedExtUserElements=1, s[0x2:3]
;  userElements[2]      = SUB_PTR_FETCH_SHADER, s[0x2:3]
extUserElementCount  = 1;
;  extUserElements 1[0] = IMM_CONST_BUFFER 0, offset 0x0:3 dwords
NumVgprs             = 17;
NumSgprs             = 50;
FloatMode            = 192;
IeeeMode             = 0;
FlatPtr32            = 0;
ScratchSize          = 0 dwords/thread;
LDSByteSize          = 0 bytes/workgroup (compile time only);
ScratchWaveOffsetReg = s65535;
; texSamplerUsage         = 0x00000000
; constBufUsage           = 0x00000001

; SPI_SHADER_PGM_RSRC2_VS = 0x00000008
SSPRV:USER_SGPR             = 4
; PA_CL_VS_OUT_CNTL       = 0x00000000
; SPI_VS_OUT_CONFIG       = 0x00000006
SVOC:VS_EXPORT_COUNT        = 3
SVOC:VS_HALF_PACK           = 0
SVOC:VS_EXPORTS_FOG         = 0
SVOC:VS_OUT_FOG_VEC_ADDR    = 0
; SPI_SHADER_POS_FORMAT     = 0x00000004
SSPF:POS0_EXPORT_FORMAT     = 4
SSPF:POS1_EXPORT_FORMAT     = 0
SSPF:POS2_EXPORT_FORMAT     = 0
SSPF:POS3_EXPORT_FORMAT     = 0
VGT_STRMOUT_CONFIG = 0x0
VGT_STRMOUT_CONFIG:RAST_STREAM = 0
VGT_STRMOUT_CONFIG:STREAMOUT_0_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_1_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_2_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_3_EN = 0
; exportVertexSize          = 4

// Shader Instructions:
shader main
  asic(CI)
  type(VS)
  s_swappc_b64  s[2:3], s[2:3]                          // 000000000000: BE822102
  s_load_dwordx4  s[0:3], s[2:3], 0x00                  // 000000000004: C0800300
  s_waitcnt     lgkmcnt(0)                              // 000000000008: BF8C007F
  s_buffer_load_dwordx4  s[4:7], s[0:3], 0x54           // 00000000000C: C2820154
  s_buffer_load_dwordx4  s[8:11], s[0:3], 0x50          // 000000000010: C2840150
  s_buffer_load_dwordx4  s[12:15], s[0:3], 0x4c         // 000000000014: C286014C
  s_buffer_load_dwordx16  s[16:31], s[0:3], 0x38        // 000000000018: C3080138
  s_buffer_load_dwordx16  s[32:47], s[0:3], 0x58        // 00000000001C: C3100158
  s_waitcnt     vmcnt(0) & lgkmcnt(0)                   // 000000000020: BF8C0070
  v_mul_legacy_f32  v0, s6, v10                         // 000000000024: 0E001406
  v_mul_legacy_f32  v1, s10, v10                        // 000000000028: 0E02140A
  v_mac_f32     v0, s5, v9                              // 00000000002C: 3E001205
  s_buffer_load_dword  s0, s[0:3], 0x03                 // 000000000030: C2000103
  v_mul_legacy_f32  v2, s14, v10                        // 000000000034: 0E04140E
  v_mac_f32     v1, s9, v9                              // 000000000038: 3E021209
  v_mac_f32     v0, s4, v8                              // 00000000003C: 3E001004
  v_mac_f32     v2, s13, v9                             // 000000000040: 3E04120D
  v_mac_f32     v1, s8, v8                              // 000000000044: 3E021008
  v_mul_legacy_f32  v3, v0, v0                          // 000000000048: 0E060100
  v_mul_legacy_f32  v9, s23, v7                         // 00000000004C: 0E120E17
  v_mul_legacy_f32  v10, s27, v7                        // 000000000050: 0E140E1B
  v_mul_legacy_f32  v11, s31, v7                        // 000000000054: 0E160E1F
  v_mul_legacy_f32  v14, s19, v7                        // 000000000058: 0E1C0E13
  v_mac_f32     v2, s12, v8                             // 00000000005C: 3E04100C
  v_mac_f32     v3, v1, v1                              // 000000000060: 3E060301
  v_mul_legacy_f32  v8, s35, v7                         // 000000000064: 0E100E23
  v_mul_legacy_f32  v15, s39, v7                        // 000000000068: 0E1E0E27
  v_mul_legacy_f32  v16, s43, v7                        // 00000000006C: 0E200E2B
  v_mul_legacy_f32  v7, s47, v7                         // 000000000070: 0E0E0E2F
  v_mac_f32     v9, s22, v6                             // 000000000074: 3E120C16
  v_mac_f32     v10, s26, v6                            // 000000000078: 3E140C1A
  v_mac_f32     v11, s30, v6                            // 00000000007C: 3E160C1E
  v_mac_f32     v14, s18, v6                            // 000000000080: 3E1C0C12
  v_mac_f32     v3, v2, v2                              // 000000000084: 3E060502
  v_mac_legacy_f32  v8, s34, v6                         // 000000000088: 0C100C22
  v_mac_legacy_f32  v15, s38, v6                        // 00000000008C: 0C1E0C26
  v_mac_legacy_f32  v16, s42, v6                        // 000000000090: 0C200C2A
  v_mac_legacy_f32  v7, s46, v6                         // 000000000094: 0C0E0C2E
  v_mac_f32     v9, s21, v5                             // 000000000098: 3E120A15
  v_mac_f32     v10, s25, v5                            // 00000000009C: 3E140A19
  v_mac_f32     v11, s29, v5                            // 0000000000A0: 3E160A1D
  v_mac_f32     v14, s17, v5                            // 0000000000A4: 3E1C0A11
  v_rsq_f32     v3, v3                                  // 0000000000A8: 7E065D03
  v_mac_legacy_f32  v8, s33, v5                         // 0000000000AC: 0C100A21
  v_mac_legacy_f32  v15, s37, v5                        // 0000000000B0: 0C1E0A25
  v_mac_legacy_f32  v16, s41, v5                        // 0000000000B4: 0C200A29
  v_mac_legacy_f32  v7, s45, v5                         // 0000000000B8: 0C0E0A2D
  v_mac_f32     v9, s20, v4                             // 0000000000BC: 3E120814
  v_mac_f32     v10, s24, v4                            // 0000000000C0: 3E140818
  v_mac_f32     v11, s28, v4                            // 0000000000C4: 3E16081C
  v_mad_legacy_f32  v14, v4, s16, v14 clamp             // 0000000000C8: D280080E 04382104
  v_mul_legacy_f32  v2, v2, v3                          // 0000000000D0: 0E040702
  v_mul_legacy_f32  v1, v1, v3                          // 0000000000D4: 0E020701
  v_mul_legacy_f32  v0, v0, v3                          // 0000000000D8: 0E000700
  v_mac_legacy_f32  v8, s32, v4                         // 0000000000DC: 0C100820
  v_mac_legacy_f32  v15, s36, v4                        // 0000000000E0: 0C1E0824
  v_mac_legacy_f32  v16, s40, v4                        // 0000000000E4: 0C200828
  v_mac_legacy_f32  v7, s44, v4                         // 0000000000E8: 0C0E082C
  v_mov_b32     v3, 0                                   // 0000000000EC: 7E060280
  v_mov_b32     v4, 1.0                                 // 0000000000F0: 7E0802F2
  s_waitcnt     lgkmcnt(0)                              // 0000000000F4: BF8C007F
  v_mov_b32     v5, s0                                  // 0000000000F8: 7E0A0200
  exp           pos0, v8, v15, v16, v7 done             // 0000000000FC: F80008CF 07100F08
  exp           param0, v12, v13, v3, v4                // 000000000104: F800020F 04030D0C
  exp           param1, v9, v10, v11, v14               // 00000000010C: F800021F 0E0B0A09
  exp           param2, v2, v1, v0, v4                  // 000000000114: F800022F 04000102
  exp           param3, v4, v4, v4, v5                  // 00000000011C: F800023F 05040404
  s_endpgm                                              // 000000000124: BF810000
end


// Shader Statistics:
//  NumActiveWaveFront:         36
//  WorkgroupSize:              64
//  NumVRegs:                   17
//  NumSRegs:                   50
//  NumActiveWaveFrontByVReg:   40
//  NumActiveWaveFrontBySReg:   36
//  NumActiveWaveFrontByLDS:    40
//  CycleSim:                   81
//  CycleSimNWaves:             81
//  Code Size:                  296
//Assembler Counts:
//  num_32bit_ops                     : 62
//  num_64bit_ops                     : 6
//  num_alu                           : 51
//  num_fc                            : 12
//  num_inst_exp                      : 5
//  num_inst_ldsgds                   : 0
//  num_inst_mimg                     : 0
//  num_inst_mtbuf                    : 0
//  num_inst_mubuf                    : 0
//  num_inst_sopp                     : 4
//  num_inst_sopc                     : 0
//  num_inst_sop1                     : 1
//  num_inst_sop2                     : 0
//  num_inst_smrd                     : 0
//  num_inst_sopk                     : 0
//  num_inst_vop1                     : 4
//  num_inst_vop2                     : 46
//  num_inst_vop3                     : 0
//  num_inst_vopc                     : 0
//  num_inst_vintrp                   : 0
//  constant_literal_operands         : 0
//  num_tex                           : 5
//  num_vmem_group                    : 0
//  vmem_grouping_started             : 0
// Shader Statistics:
// m_uNumActiveWaveFront             : 36
// m_uVRegLimit                      : 256
// m_uSRegLimit                      : 512
// m_uNumVRegs                       : 17
// m_uNumSRegs                       : 50
// m_uSCCodeSize                     : 296
// m_uWorkgroupSize                  : 64
// m_uNumActiveWaveFrontByVReg       : 40
// m_uNumActiveWaveFrontBySReg       : 36
// m_uNumActiveWaveFrontByLDS        : 40
// m_uCycleSim1Wave                  : 81
// m_uCycleSimNWaves                 : 81

// Assembler Counts:
// num_32bit_ops                     : 62
// num_64bit_ops                     : 6
// num_alu                           : 51
// num_fc                            : 12
// num_inst_exp                      : 5
// num_inst_ldsgds                   : 0
// num_inst_mimg                     : 0
// num_inst_mtbuf                    : 0
// num_inst_mubuf                    : 0
// num_inst_sopp                     : 4
// num_inst_sopc                     : 0
// num_inst_sop1                     : 1
// num_inst_sop2                     : 0
// num_inst_smrd                     : 0
// num_inst_sopk                     : 0
// num_inst_vop1                     : 4
// num_inst_vop2                     : 46
// num_inst_vop3                     : 0
// num_inst_vopc                     : 0
// num_inst_vintrp                   : 0
// num_inst_smem                     : 7
// constant_literal_operands         : 0
// num_tex                           : 5
// num_vmem_group                    : 0
// vmem_grouping_started             : 0
// m_fFullPrecompilePromise          : 0
// m_fIntegerDivideExpansion         : 0
// m_fIntegerModExpansion            : 0
// m_fDoubleDivideExpansion          : 0
// m_fUsesScratch                    : 0
// m_fPerThreadIndirection           : 0
// m_fUsingTableLoads                : 0
// m_fUsingSHmemLoads                : 1
// fSemanticHashFlagOverrideApplied  : 0
// fPSHasNoUAVWrite                  : 0
// m_fRenderTargetsCanBeCompacted    : 0
// version                           : 3
// fCodePatched                      : 0

// Opaque Custom Data - XBOX Precompiled Shader Object
// Offset:[361], bundle is:[208] DWORDS.
// Disassembled Precompiled Shader Object:
// Shader Type               : (VS)
// Shader Hw Stage           : (ES)
// PDB Filename              : D:\ATG\st_dev\Kits\DirectXTK\src\Shaders\Compiled\XboxOneBasicEffect_VSBasicPixelLightingTx.pdb
// Shader Semantic Hash      : 0x9cc6f69839766c3c
//
// Shader Data:
; ----------------- VS Data ------------------------
; Input Semantic Mappings
;   [0] generic, usageIdx  0, channelMask 15, v[4:7]
;   [1] generic, usageIdx  1, channelMask  7, v[8:10]
;   [2] generic, usageIdx  2, channelMask  3, v[12:13]
; Output Semantic Mappings
;   [0] position,  usageIdx 4, paramIdx 4, paramSlot 0
;   [1] generic,  usageIdx 0, paramIdx 0, paramSlot 0
;   [2] generic,  usageIdx 1, paramIdx 1, paramSlot 0
;   [3] generic,  usageIdx 2, paramIdx 2, paramSlot 0
;   [4] generic,  usageIdx 3, paramIdx 3, paramSlot 0

codeLenInByte        = 396 bytes;

; launchModeFlags    = 0x0000000E
srdTableSupport      = TRUE
immediateSupportExt  = TRUE
srdTableSupportExt   = TRUE

userElementCount     = 4;
;  userElements[0]      = PTR_VERTEX_BUFFER_TABLE, Element=1 dwords, s[0x2:3]
;  userElements[1]      = PTR_EXTENDED_USER_DATA, ReferencedExtUserElements=1, s[0x2:3]
;  userElements[2]      = PTR_INTERNAL_GLOBAL_TABLE, Element=1 dwords, s[0x2:3]
;  userElements[3]      = SUB_PTR_FETCH_SHADER, s[0x2:3]
extUserElementCount  = 1;
;  extUserElements 1[0] = IMM_CONST_BUFFER 0, offset 0x0:3 dwords
NumVgprs             = 16;
NumSgprs             = 58;
FloatMode            = 192;
IeeeMode             = 0;
FlatPtr32            = 0;
ScratchSize          = 0 dwords/thread;
LDSByteSize          = 0 bytes/workgroup (compile time only);
ScratchWaveOffsetReg = s65535;
; texSamplerUsage         = 0x00000000
; constBufUsage           = 0x00000001

; SPI_SHADER_PGM_RSRC2_VS = 0x00000008
SSPRV:USER_SGPR             = 4
; PA_CL_VS_OUT_CNTL       = 0x00000000
; SPI_VS_OUT_CONFIG       = 0x00000000
SVOC:VS_EXPORT_COUNT        = 0
SVOC:VS_HALF_PACK           = 0
SVOC:VS_EXPORTS_FOG         = 0
SVOC:VS_OUT_FOG_VEC_ADDR    = 0
; SPI_SHADER_POS_FORMAT     = 0x00000004
SSPF:POS0_EXPORT_FORMAT     = 4
SSPF:POS1_EXPORT_FORMAT     = 0
SSPF:POS2_EXPORT_FORMAT     = 0
SSPF:POS3_EXPORT_FORMAT     = 0
VGT_STRMOUT_CONFIG = 0x0
VGT_STRMOUT_CONFIG:RAST_STREAM = 0
VGT_STRMOUT_CONFIG:STREAMOUT_0_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_1_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_2_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_3_EN = 0
; exportVertexSize          = 20
; esGsRingItemSize          = 20

// Shader Instructions:
shader main
  asic(CI)
  type(VS)
  s_swappc_b64  s[2:3], s[2:3]                          // 000000000000: BE822102
  s_load_dwordx4  s[8:11], s[2:3], 0x00                 // 000000000004: C0840300
  s_waitcnt     lgkmcnt(0)                              // 000000000008: BF8C007F
  s_buffer_load_dwordx16  s[12:27], s[8:11], 0x58       // 00000000000C: C3060958
  s_waitcnt     vmcnt(0) & lgkmcnt(0)                   // 000000000010: BF8C0070
  v_mul_legacy_f32  v0, s15, v7                         // 000000000014: 0E000E0F
  s_buffer_load_dwordx16  s[28:43], s[8:11], 0x38       // 000000000018: C30E0938
  s_buffer_load_dwordx4  s[44:47], s[8:11], 0x54        // 00000000001C: C2960954
  s_load_dwordx4  s[0:3], s[2:3], 0x0c                  // 000000000020: C080030C
  v_mac_legacy_f32  v0, s14, v6                         // 000000000024: 0C000C0E
  v_mul_legacy_f32  v1, s19, v7                         // 000000000028: 0E020E13
  s_buffer_load_dwordx4  s[48:51], s[8:11], 0x50        // 00000000002C: C2980950
  v_mac_legacy_f32  v0, s13, v5                         // 000000000030: 0C000A0D
  v_mac_legacy_f32  v1, s18, v6                         // 000000000034: 0C020C12
  v_mul_legacy_f32  v2, s23, v7                         // 000000000038: 0E040E17
  s_buffer_load_dwordx4  s[52:55], s[8:11], 0x4c        // 00000000003C: C29A094C
  v_mac_legacy_f32  v0, s12, v4                         // 000000000040: 0C00080C
  v_mac_legacy_f32  v1, s17, v5                         // 000000000044: 0C020A11
  v_mac_legacy_f32  v2, s22, v6                         // 000000000048: 0C040C16
  v_mul_legacy_f32  v3, s27, v7                         // 00000000004C: 0E060E1B
  v_mac_legacy_f32  v1, s16, v4                         // 000000000050: 0C020810
  v_mac_legacy_f32  v2, s21, v5                         // 000000000054: 0C040A15
  v_mac_legacy_f32  v3, s26, v6                         // 000000000058: 0C060C1A
  v_mac_legacy_f32  v2, s20, v4                         // 00000000005C: 0C040814
  v_mac_legacy_f32  v3, s25, v5                         // 000000000060: 0C060A19
  s_waitcnt     lgkmcnt(0)                              // 000000000064: BF8C007F
  v_mul_legacy_f32  v11, s35, v7                        // 000000000068: 0E160E23
  v_mul_legacy_f32  v14, s46, v10                       // 00000000006C: 0E1C142E
  v_mac_legacy_f32  v3, s24, v4                         // 000000000070: 0C060818
  buffer_store_dword  v0, v0, s[0:3], s4 offset:64 glc slc // 000000000074: E0704040 04400000
  v_mac_legacy_f32  v11, s34, v6                        // 00000000007C: 0C160C22
  v_mul_legacy_f32  v0, s39, v7                         // 000000000080: 0E000E27
  v_mul_legacy_f32  v15, s50, v10                       // 000000000084: 0E1E1432
  v_mac_legacy_f32  v14, s45, v9                        // 000000000088: 0C1C122D
  buffer_store_dword  v1, v0, s[0:3], s4 offset:68 glc slc // 00000000008C: E0704044 04400100
  v_mac_legacy_f32  v11, s33, v5                        // 000000000094: 0C160A21
  v_mac_legacy_f32  v0, s38, v6                         // 000000000098: 0C000C26
  v_mul_legacy_f32  v1, s43, v7                         // 00000000009C: 0E020E2B
  v_mul_legacy_f32  v10, s54, v10                       // 0000000000A0: 0E141436
  v_mac_legacy_f32  v15, s49, v9                        // 0000000000A4: 0C1E1231
  v_mac_legacy_f32  v14, s44, v8                        // 0000000000A8: 0C1C102C
  buffer_store_dword  v2, v0, s[0:3], s4 offset:72 glc slc // 0000000000AC: E0704048 04400200
  v_mac_legacy_f32  v11, s32, v4                        // 0000000000B4: 0C160820
  v_mac_legacy_f32  v0, s37, v5                         // 0000000000B8: 0C000A25
  v_mac_legacy_f32  v1, s42, v6                         // 0000000000BC: 0C020C2A
  v_mul_legacy_f32  v2, s31, v7                         // 0000000000C0: 0E040E1F
  v_mac_legacy_f32  v10, s53, v9                        // 0000000000C4: 0C141235
  v_mac_legacy_f32  v15, s48, v8                        // 0000000000C8: 0C1E1030
  v_mul_legacy_f32  v7, v14, v14                        // 0000000000CC: 0E0E1D0E
  buffer_store_dword  v3, v0, s[0:3], s4 offset:76 glc slc // 0000000000D0: E070404C 04400300
  v_mac_legacy_f32  v0, s36, v4                         // 0000000000D8: 0C000824
  v_mac_legacy_f32  v1, s41, v5                         // 0000000000DC: 0C020A29
  v_mac_legacy_f32  v2, s30, v6                         // 0000000000E0: 0C040C1E
  v_mac_legacy_f32  v10, s52, v8                        // 0000000000E4: 0C141034
  v_mac_legacy_f32  v7, v15, v15                        // 0000000000E8: 0C0E1F0F
  buffer_store_dword  v12, v0, s[0:3], s4 glc slc       // 0000000000EC: E0704000 04400C00
  v_mac_legacy_f32  v1, s40, v4                         // 0000000000F4: 0C020828
  v_mac_legacy_f32  v2, s29, v5                         // 0000000000F8: 0C040A1D
  v_mac_legacy_f32  v7, v10, v10                        // 0000000000FC: 0C0E150A
  buffer_store_dword  v13, v0, s[0:3], s4 offset:4 glc slc // 000000000100: E0704004 04400D00
  v_mad_legacy_f32  v2, v4, s28, v2 clamp               // 000000000108: D2800802 04083904
  v_rsq_f32     v3, v7                                  // 000000000110: 7E065D07
  buffer_store_dword  v11, v0, s[0:3], s4 offset:16 glc slc // 000000000114: E0704010 04400B00
  v_mul_legacy_f32  v4, v10, v3                         // 00000000011C: 0E08070A
  buffer_store_dword  v0, v0, s[0:3], s4 offset:20 glc slc // 000000000120: E0704014 04400000
  s_buffer_load_dword  s5, s[8:11], 0x03                // 000000000128: C2028903
  v_mul_legacy_f32  v0, v15, v3                         // 00000000012C: 0E00070F
  buffer_store_dword  v1, v0, s[0:3], s4 offset:24 glc slc // 000000000130: E0704018 04400100
  v_mul_legacy_f32  v1, v14, v3                         // 000000000138: 0E02070E
  buffer_store_dword  v2, v0, s[0:3], s4 offset:28 glc slc // 00000000013C: E070401C 04400200
  buffer_store_dword  v4, v0, s[0:3], s4 offset:32 glc slc // 000000000144: E0704020 04400400
  v_mov_b32     v2, 1.0                                 // 00000000014C: 7E0402F2
  buffer_store_dword  v0, v0, s[0:3], s4 offset:36 glc slc // 000000000150: E0704024 04400000
  buffer_store_dword  v1, v0, s[0:3], s4 offset:40 glc slc // 000000000158: E0704028 04400100
  buffer_store_dword  v2, v0, s[0:3], s4 offset:48 glc slc // 000000000160: E0704030 04400200
  s_waitcnt     lgkmcnt(0)                              // 000000000168: BF8C007F
  v_mov_b32     v0, s5                                  // 00000000016C: 7E000205
  buffer_store_dword  v2, v0, s[0:3], s4 offset:52 glc slc // 000000000170: E0704034 04400200
  buffer_store_dword  v2, v0, s[0:3], s4 offset:56 glc slc // 000000000178: E0704038 04400200
  buffer_store_dword  v0, v0, s[0:3], s4 offset:60 glc slc // 000000000180: E070403C 04400000
  s_endpgm                                              // 000000000188: BF810000
end


// Shader Statistics:
//  NumActiveWaveFront:         32
//  WorkgroupSize:              64
//  NumVRegs:                   16
//  NumSRegs:                   58
//  NumActiveWaveFrontByVReg:   40
//  NumActiveWaveFrontBySReg:   32
//  NumActiveWaveFrontByLDS:    40
//  CycleSim:                   85
//  CycleSimNWaves:             85
//  Code Size:                  396
//Assembler Counts:
//  num_32bit_ops                     : 63
//  num_64bit_ops                     : 18
//  num_alu                           : 50
//  num_fc                            : 14
//  num_inst_exp                      : 0
//  num_inst_ldsgds                   : 0
//  num_inst_mimg                     : 0
//  num_inst_mtbuf                    : 0
//  num_inst_mubuf                    : 17
//  num_inst_sopp                     : 5
//  num_inst_sopc                     : 0
//  num_inst_sop1                     : 1
//  num_inst_sop2                     : 0
//  num_inst_smrd                     : 0
//  num_inst_sopk                     : 0
//  num_inst_vop1                     : 3
//  num_inst_vop2                     : 46
//  num_inst_vop3                     : 0
//  num_inst_vopc                     : 0
//  num_inst_vintrp                   : 0
//  constant_literal_operands         : 0
//  num_tex                           : 17
//  num_vmem_group                    : 12
//  vmem_grouping_started             : 0
// Shader Statistics:
// m_uNumActiveWaveFront             : 32
// m_uVRegLimit                      : 256
// m_uSRegLimit                      : 512
// m_uNumVRegs                       : 16
// m_uNumSRegs                       : 58
// m_uSCCodeSize                     : 396
// m_uWorkgroupSize                  : 64
// m_uNumActiveWaveFrontByVReg       : 40
// m_uNumActiveWaveFrontBySReg       : 32
// m_uNumActiveWaveFrontByLDS        : 40
// m_uCycleSim1Wave                  : 85
// m_uCycleSimNWaves                 : 85

// Assembler Counts:
// num_32bit_ops                     : 63
// num_64bit_ops                     : 18
// num_alu                           : 50
// num_fc                            : 14
// num_inst_exp                      : 0
// num_inst_ldsgds                   : 0
// num_inst_mimg                     : 0
// num_inst_mtbuf                    : 0
// num_inst_mubuf                    : 17
// num_inst_sopp                     : 5
// num_inst_sopc                     : 0
// num_inst_sop1                     : 1
// num_inst_sop2                     : 0
// num_inst_smrd                     : 0
// num_inst_sopk                     : 0
// num_inst_vop1                     : 3
// num_inst_vop2                     : 46
// num_inst_vop3                     : 0
// num_inst_vopc                     : 0
// num_inst_vintrp                   : 0
// num_inst_smem                     : 8
// constant_literal_operands         : 0
// num_tex                           : 17
// num_vmem_group                    : 12
// vmem_grouping_started             : 0
// m_fFullPrecompilePromise          : 0
// m_fIntegerDivideExpansion         : 0
// m_fIntegerModExpansion            : 0
// m_fDoubleDivideExpansion          : 0
// m_fUsesScratch                    : 0
// m_fPerThreadIndirection           : 0
// m_fUsingTableLoads                : 0
// m_fUsingSHmemLoads                : 1
// fSemanticHashFlagOverrideApplied  : 0
// fPSHasNoUAVWrite                  : 0
// m_fRenderTargetsCanBeCompacted    : 0
// version                           : 3
// fCodePatched                      : 0

// Opaque Custom Data - XBOX Precompiled Shader Object
// Offset:[571], bundle is:[204] DWORDS.
// Disassembled Precompiled Shader Object:
// Shader Type               : (VS)
// Shader Hw Stage           : (LS)
// PDB Filename              : D:\ATG\st_dev\Kits\DirectXTK\src\Shaders\Compiled\XboxOneBasicEffect_VSBasicPixelLightingTx.pdb
// Shader Semantic Hash      : 0x9cc6f69839766c3c
//
// Shader Data:
; ----------------- VS Data ------------------------
; Input Semantic Mappings
;   [0] generic, usageIdx  0, channelMask 15, v[4:7]
;   [1] generic, usageIdx  1, channelMask  7, v[8:10]
;   [2] generic, usageIdx  2, channelMask  3, v[12:13]
; Output Semantic Mappings
;   [0] position,  usageIdx 4, paramIdx 4, paramSlot 0
;   [1] generic,  usageIdx 0, paramIdx 0, paramSlot 0
;   [2] generic,  usageIdx 1, paramIdx 1, paramSlot 0
;   [3] generic,  usageIdx 2, paramIdx 2, paramSlot 0
;   [4] generic,  usageIdx 3, paramIdx 3, paramSlot 0

codeLenInByte        = 348 bytes;

; launchModeFlags    = 0x0000000E
srdTableSupport      = TRUE
immediateSupportExt  = TRUE
srdTableSupportExt   = TRUE

userElementCount     = 3;
;  userElements[0]      = PTR_VERTEX_BUFFER_TABLE, Element=1 dwords, s[0x2:3]
;  userElements[1]      = PTR_EXTENDED_USER_DATA, ReferencedExtUserElements=1, s[0x2:3]
;  userElements[2]      = SUB_PTR_FETCH_SHADER, s[0x2:3]
extUserElementCount  = 1;
;  extUserElements 1[0] = IMM_CONST_BUFFER 0, offset 0x0:3 dwords
NumVgprs             = 17;
NumSgprs             = 50;
FloatMode            = 192;
IeeeMode             = 0;
FlatPtr32            = 0;
ScratchSize          = 0 dwords/thread;
LDSByteSize          = 0 bytes/workgroup (compile time only);
ScratchWaveOffsetReg = s65535;
; texSamplerUsage         = 0x00000000
; constBufUsage           = 0x00000001

; SPI_SHADER_PGM_RSRC2_VS = 0x00000008
SSPRV:USER_SGPR             = 4
; PA_CL_VS_OUT_CNTL       = 0x00000000
; SPI_VS_OUT_CONFIG       = 0x00000000
SVOC:VS_EXPORT_COUNT        = 0
SVOC:VS_HALF_PACK           = 0
SVOC:VS_EXPORTS_FOG         = 0
SVOC:VS_OUT_FOG_VEC_ADDR    = 0
; SPI_SHADER_POS_FORMAT     = 0x00000004
SSPF:POS0_EXPORT_FORMAT     = 4
SSPF:POS1_EXPORT_FORMAT     = 0
SSPF:POS2_EXPORT_FORMAT     = 0
SSPF:POS3_EXPORT_FORMAT     = 0
VGT_STRMOUT_CONFIG = 0x0
VGT_STRMOUT_CONFIG:RAST_STREAM = 0
VGT_STRMOUT_CONFIG:STREAMOUT_0_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_1_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_2_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_3_EN = 0
; vgprCompCnt               = 1
; exportVertexSize          = 20
; lsStride                  = 80

// Shader Instructions:
shader main
  asic(CI)
  type(VS)
  s_swappc_b64  s[2:3], s[2:3]                          // 000000000000: BE822102
  s_load_dwordx4  s[0:3], s[2:3], 0x00                  // 000000000004: C0800300
  s_waitcnt     lgkmcnt(0)                              // 000000000008: BF8C007F
  s_buffer_load_dwordx16  s[4:19], s[0:3], 0x38         // 00000000000C: C3020138
  s_buffer_load_dwordx4  s[20:23], s[0:3], 0x4c         // 000000000010: C28A014C
  s_buffer_load_dwordx4  s[24:27], s[0:3], 0x50         // 000000000014: C28C0150
  s_buffer_load_dwordx4  s[28:31], s[0:3], 0x54         // 000000000018: C28E0154
  s_waitcnt     lgkmcnt(0)                              // 00000000001C: BF8C007F
  s_buffer_load_dword  s23, s[0:3], 0x03                // 000000000020: C20B8103
  s_buffer_load_dwordx16  s[32:47], s[0:3], 0x58        // 000000000024: C3100158
  s_mov_b32     m0, 0x00010000                          // 000000000028: BEFC03FF 00010000
  s_waitcnt     vmcnt(0)                                // 000000000030: BF8C0F70
  v_mul_legacy_f32  v0, s11, v7                         // 000000000034: 0E000E0B
  v_mac_legacy_f32  v0, s10, v6                         // 000000000038: 0C000C0A
  v_mac_legacy_f32  v0, s9, v5                          // 00000000003C: 0C000A09
  v_mac_legacy_f32  v0, s8, v4                          // 000000000040: 0C000808
  v_mul_legacy_f32  v2, s15, v7                         // 000000000044: 0E040E0F
  v_mac_legacy_f32  v2, s14, v6                         // 000000000048: 0C040C0E
  v_mac_legacy_f32  v2, s13, v5                         // 00000000004C: 0C040A0D
  v_mac_legacy_f32  v2, s12, v4                         // 000000000050: 0C04080C
  v_mul_legacy_f32  v3, s19, v7                         // 000000000054: 0E060E13
  v_mac_legacy_f32  v3, s18, v6                         // 000000000058: 0C060C12
  v_mac_legacy_f32  v3, s17, v5                         // 00000000005C: 0C060A11
  v_mac_legacy_f32  v3, s16, v4                         // 000000000060: 0C060810
  v_mul_legacy_f32  v11, s7, v7                         // 000000000064: 0E160E07
  v_mac_legacy_f32  v11, s6, v6                         // 000000000068: 0C160C06
  v_mac_legacy_f32  v11, s5, v5                         // 00000000006C: 0C160A05
  v_mad_legacy_f32  v11, v4, s4, v11 clamp              // 000000000070: D280080B 042C0904
  v_mul_legacy_f32  v14, s22, v10                       // 000000000078: 0E1C1416
  v_mac_legacy_f32  v14, s21, v9                        // 00000000007C: 0C1C1215
  v_mac_legacy_f32  v14, s20, v8                        // 000000000080: 0C1C1014
  v_mul_legacy_f32  v15, s26, v10                       // 000000000084: 0E1E141A
  v_mac_legacy_f32  v15, s25, v9                        // 000000000088: 0C1E1219
  v_mac_legacy_f32  v15, s24, v8                        // 00000000008C: 0C1E1018
  v_mul_legacy_f32  v10, s30, v10                       // 000000000090: 0E14141E
  v_mac_legacy_f32  v10, s29, v9                        // 000000000094: 0C14121D
  v_mac_legacy_f32  v10, s28, v8                        // 000000000098: 0C14101C
  v_mul_legacy_f32  v8, v10, v10                        // 00000000009C: 0E10150A
  v_mac_legacy_f32  v8, v15, v15                        // 0000000000A0: 0C101F0F
  v_mac_legacy_f32  v8, v14, v14                        // 0000000000A4: 0C101D0E
  v_rsq_f32     v8, v8                                  // 0000000000A8: 7E105D08
  v_mul_legacy_f32  v9, v14, v8                         // 0000000000AC: 0E12110E
  v_mul_legacy_f32  v14, v15, v8                        // 0000000000B0: 0E1C110F
  v_mul_legacy_f32  v8, v10, v8                         // 0000000000B4: 0E10110A
  s_waitcnt     lgkmcnt(0)                              // 0000000000B8: BF8C007F
  v_mul_legacy_f32  v10, s35, v7                        // 0000000000BC: 0E140E23
  v_mac_legacy_f32  v10, s34, v6                        // 0000000000C0: 0C140C22
  v_mac_legacy_f32  v10, s33, v5                        // 0000000000C4: 0C140A21
  v_mac_legacy_f32  v10, s32, v4                        // 0000000000C8: 0C140820
  v_mul_legacy_f32  v15, s39, v7                        // 0000000000CC: 0E1E0E27
  v_mac_legacy_f32  v15, s38, v6                        // 0000000000D0: 0C1E0C26
  v_mac_legacy_f32  v15, s37, v5                        // 0000000000D4: 0C1E0A25
  v_mac_legacy_f32  v15, s36, v4                        // 0000000000D8: 0C1E0824
  v_mul_legacy_f32  v16, s43, v7                        // 0000000000DC: 0E200E2B
  v_mac_legacy_f32  v16, s42, v6                        // 0000000000E0: 0C200C2A
  v_mac_legacy_f32  v16, s41, v5                        // 0000000000E4: 0C200A29
  v_mac_legacy_f32  v16, s40, v4                        // 0000000000E8: 0C200828
  v_mul_legacy_f32  v7, s47, v7                         // 0000000000EC: 0E0E0E2F
  v_mac_legacy_f32  v7, s46, v6                         // 0000000000F0: 0C0E0C2E
  v_mac_legacy_f32  v7, s45, v5                         // 0000000000F4: 0C0E0A2D
  v_mac_legacy_f32  v7, s44, v4                         // 0000000000F8: 0C0E082C
  s_movk_i32    s0, 0x0050                              // 0000000000FC: B0000050
  v_mul_lo_i32  v1, v1, s0                              // 000000000100: D2D60001 00000101
  ds_write2_b32  v1, v10, v15 offset0:16 offset1:17     // 000000000108: D8381110 000F0A01
  ds_write2_b32  v1, v16, v7 offset0:18 offset1:19      // 000000000110: D8381312 00071001
  ds_write2_b32  v1, v12, v13 offset1:1                 // 000000000118: D8380100 000D0C01
  ds_write2_b32  v1, v0, v2 offset0:4 offset1:5         // 000000000120: D8380504 00020001
  ds_write2_b32  v1, v3, v11 offset0:6 offset1:7        // 000000000128: D8380706 000B0301
  ds_write2_b32  v1, v9, v14 offset0:8 offset1:9        // 000000000130: D8380908 000E0901
  ds_write_b32  v1, v8 offset:40                        // 000000000138: D8340028 00000801
  v_mov_b32     v0, 1.0                                 // 000000000140: 7E0002F2
  ds_write2_b32  v1, v0, v0 offset0:12 offset1:13       // 000000000144: D8380D0C 00000001
  v_mov_b32     v2, s23                                 // 00000000014C: 7E040217
  ds_write2_b32  v1, v0, v2 offset0:14 offset1:15       // 000000000150: D8380F0E 00020001
  s_endpgm                                              // 000000000158: BF810000
end


// Shader Statistics:
//  NumActiveWaveFront:         36
//  WorkgroupSize:              64
//  NumVRegs:                   17
//  NumSRegs:                   50
//  NumActiveWaveFrontByVReg:   40
//  NumActiveWaveFrontBySReg:   36
//  NumActiveWaveFrontByLDS:    40
//  CycleSim:                   92
//  CycleSimNWaves:             92
//  Code Size:                  348
//Assembler Counts:
//  num_32bit_ops                     : 64
//  num_64bit_ops                     : 11
//  num_alu                           : 51
//  num_fc                            : 15
//  num_inst_exp                      : 0
//  num_inst_ldsgds                   : 9
//  num_inst_mimg                     : 0
//  num_inst_mtbuf                    : 0
//  num_inst_mubuf                    : 0
//  num_inst_sopp                     : 5
//  num_inst_sopc                     : 0
//  num_inst_sop1                     : 2
//  num_inst_sop2                     : 0
//  num_inst_smrd                     : 0
//  num_inst_sopk                     : 1
//  num_inst_vop1                     : 3
//  num_inst_vop2                     : 46
//  num_inst_vop3                     : 0
//  num_inst_vopc                     : 0
//  num_inst_vintrp                   : 0
//  constant_literal_operands         : 0
//  num_tex                           : 9
//  num_vmem_group                    : 0
//  vmem_grouping_started             : 0
// Shader Statistics:
// m_uNumActiveWaveFront             : 36
// m_uVRegLimit                      : 256
// m_uSRegLimit                      : 512
// m_uNumVRegs                       : 17
// m_uNumSRegs                       : 50
// m_uSCCodeSize                     : 348
// m_uWorkgroupSize                  : 64
// m_uNumActiveWaveFrontByVReg       : 40
// m_uNumActiveWaveFrontBySReg       : 36
// m_uNumActiveWaveFrontByLDS        : 40
// m_uCycleSim1Wave                  : 92
// m_uCycleSimNWaves                 : 92

// Assembler Counts:
// num_32bit_ops                     : 64
// num_64bit_ops                     : 11
// num_alu                           : 51
// num_fc                            : 15
// num_inst_exp                      : 0
// num_inst_ldsgds                   : 9
// num_inst_mimg                     : 0
// num_inst_mtbuf                    : 0
// num_inst_mubuf                    : 0
// num_inst_sopp                     : 5
// num_inst_sopc                     : 0
// num_inst_sop1                     : 2
// num_inst_sop2                     : 0
// num_inst_smrd                     : 0
// num_inst_sopk                     : 1
// num_inst_vop1                     : 3
// num_inst_vop2                     : 46
// num_inst_vop3                     : 0
// num_inst_vopc                     : 0
// num_inst_vintrp                   : 0
// num_inst_smem                     : 7
// constant_literal_operands         : 0
// num_tex                           : 9
// num_vmem_group                    : 0
// vmem_grouping_started             : 0
// m_fFullPrecompilePromise          : 0
// m_fIntegerDivideExpansion         : 0
// m_fIntegerModExpansion            : 0
// m_fDoubleDivideExpansion          : 0
// m_fUsesScratch                    : 0
// m_fPerThreadIndirection           : 0
// m_fUsingTableLoads                : 0
// m_fUsingSHmemLoads                : 1
// fSemanticHashFlagOverrideApplied  : 0
// fPSHasNoUAVWrite                  : 0
// m_fRenderTargetsCanBeCompacted    : 0
// version                           : 3
// fCodePatched                      : 0

// Approximately 0 instruction slots used
#endif

const BYTE BasicEffect_VSBasicPixelLightingTx[] =
{
     68,  88,  66,  67,  57,   0, 
     43, 165,   5,  89,  50,  22, 
    228, 236, 140,   3, 200, 199, 
     66,  56,   1,   0,   0,   0, 
    239,  13,   0,   0,   5,   0, 
      0,   0,  52,   0,   0,   0, 
    168,   0,   0,   0,  76,   1, 
      0,   0, 120,  13,   0,   0, 
    136,  13,   0,   0,  73,  83, 
     71,  78, 108,   0,   0,   0, 
      3,   0,   0,   0,   8,   0, 
      0,   0,  80,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      0,   0,   0,   0,  15,  15, 
      0,   0,  92,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   0,   0,   7,   7, 
      0,   0,  99,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      2,   0,   0,   0,   3,   3, 
      0,   0,  83,  86,  95,  80, 
    111, 115, 105, 116, 105, 111, 
    110,   0,  78,  79,  82,  77, 
     65,  76,   0,  84,  69,  88, 
     67,  79,  79,  82,  68,   0, 
     79,  83,  71,  78, 156,   0, 
      0,   0,   5,   0,   0,   0, 
      8,   0,   0,   0, 128,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   3,   0, 
      0,   0,   0,   0,   0,   0, 
      3,  12,   0,   0, 128,   0, 
      0,   0,   1,   0,   0,   0, 
      0,   0,   0,   0,   3,   0, 
      0,   0,   1,   0,   0,   0, 
     15,   0,   0,   0, 128,   0, 
      0,   0,   2,   0,   0,   0, 
      0,   0,   0,   0,   3,   0, 
      0,   0,   2,   0,   0,   0, 
      7,   8,   0,   0, 137,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   3,   0, 
      0,   0,   3,   0,   0,   0, 
     15,   0,   0,   0, 143,   0, 
      0,   0,   0,   0,   0,   0, 
      1,   0,   0,   0,   3,   0, 
      0,   0,   4,   0,   0,   0, 
     15,   0,   0,   0,  84,  69, 
     88,  67,  79,  79,  82,  68, 
      0,  67,  79,  76,  79,  82, 
      0,  83,  86,  95,  80, 111, 
    115, 105, 116, 105, 111, 110, 
      0, 171,  83,  72,  69,  88, 
     36,  12,   0,   0,  80,   0, 
      1,   0,   9,   3,   0,   0, 
     53,  16,   0,   0,   5,   0, 
      0,   0, 166,   0,   0,   0, 
     80,   0,   1,   0, 161,   0, 
      0,   0, 106,   8,   0,   1, 
     89,   0,   0,   4,  70, 142, 
     32,   0,   0,   0,   0,   0, 
     26,   0,   0,   0,  95,   0, 
      0,   3, 242,  16,  16,   0, 
      0,   0,   0,   0,  95,   0, 
      0,   3, 114,  16,  16,   0, 
      1,   0,   0,   0,  95,   0, 
      0,   3,  50,  16,  16,   0, 
      2,   0,   0,   0, 101,   0, 
      0,   3,  50,  32,  16,   0, 
      0,   0,   0,   0, 101,   0, 
      0,   3, 242,  32,  16,   0, 
      1,   0,   0,   0, 101,   0, 
      0,   3, 114,  32,  16,   0, 
      2,   0,   0,   0, 101,   0, 
      0,   3, 242,  32,  16,   0, 
      3,   0,   0,   0, 103,   0, 
      0,   4, 242,  32,  16,   0, 
      4,   0,   0,   0,   1,   0, 
      0,   0, 104,   0,   0,   2, 
      1,   0,   0,   0,  54,   0, 
      0,   5,  50,  32,  16,   0, 
      0,   0,   0,   0,  70,  16, 
     16,   0,   2,   0,   0,   0, 
     17,   0,   0,   8,  18,  32, 
     16,   0,   1,   0,   0,   0, 
     70,  30,  16,   0,   0,   0, 
      0,   0,  70, 142,  32,   0, 
      0,   0,   0,   0,  15,   0, 
      0,   0,  17,   0,   0,   8, 
     34,  32,  16,   0,   1,   0, 
      0,   0,  70,  30,  16,   0, 
      0,   0,   0,   0,  70, 142, 
     32,   0,   0,   0,   0,   0, 
     16,   0,   0,   0,  17,   0, 
      0,   8,  66,  32,  16,   0, 
      1,   0,   0,   0,  70,  30, 
     16,   0,   0,   0,   0,   0, 
     70, 142,  32,   0,   0,   0, 
      0,   0,  17,   0,   0,   0, 
     17,  32,   0,   8, 130,  32, 
     16,   0,   1,   0,   0,   0, 
     70,  30,  16,   0,   0,   0, 
      0,   0,  70, 142,  32,   0, 
      0,   0,   0,   0,  14,   0, 
      0,   0,  16,   0,   0,   8, 
     18,   0,  16,   0,   0,   0, 
      0,   0,  70,  18,  16,   0, 
      1,   0,   0,   0,  70, 130, 
     32,   0,   0,   0,   0,   0, 
     19,   0,   0,   0,  16,   0, 
      0,   8,  34,   0,  16,   0, 
      0,   0,   0,   0,  70,  18, 
     16,   0,   1,   0,   0,   0, 
     70, 130,  32,   0,   0,   0, 
      0,   0,  20,   0,   0,   0, 
     16,   0,   0,   8,  66,   0, 
     16,   0,   0,   0,   0,   0, 
     70,  18,  16,   0,   1,   0, 
      0,   0,  70, 130,  32,   0, 
      0,   0,   0,   0,  21,   0, 
      0,   0,  16,   0,   0,   7, 
    130,   0,  16,   0,   0,   0, 
      0,   0,  70,   2,  16,   0, 
      0,   0,   0,   0,  70,   2, 
     16,   0,   0,   0,   0,   0, 
     68,   0,   0,   5, 130,   0, 
     16,   0,   0,   0,   0,   0, 
     58,   0,  16,   0,   0,   0, 
      0,   0,  56,   0,   0,   7, 
    114,  32,  16,   0,   2,   0, 
      0,   0, 246,  15,  16,   0, 
      0,   0,   0,   0,  70,   2, 
     16,   0,   0,   0,   0,   0, 
     54,   0,   0,   8, 114,  32, 
     16,   0,   3,   0,   0,   0, 
      2,  64,   0,   0,   0,   0, 
    128,  63,   0,   0, 128,  63, 
      0,   0, 128,  63,   0,   0, 
      0,   0,  54,   0,   0,   6, 
    130,  32,  16,   0,   3,   0, 
      0,   0,  58, 128,  32,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,  17,   0,   0,   8, 
     18,  32,  16,   0,   4,   0, 
      0,   0,  70,  30,  16,   0, 
      0,   0,   0,   0,  70, 142, 
     32,   0,   0,   0,   0,   0, 
     22,   0,   0,   0,  17,   0, 
      0,   8,  34,  32,  16,   0, 
      4,   0,   0,   0,  70,  30, 
     16,   0,   0,   0,   0,   0, 
     70, 142,  32,   0,   0,   0, 
      0,   0,  23,   0,   0,   0, 
     17,   0,   0,   8,  66,  32, 
     16,   0,   4,   0,   0,   0, 
     70,  30,  16,   0,   0,   0, 
      0,   0,  70, 142,  32,   0, 
      0,   0,   0,   0,  24,   0, 
      0,   0,  17,   0,   0,   8, 
    130,  32,  16,   0,   4,   0, 
      0,   0,  70,  30,  16,   0, 
      0,   0,   0,   0,  70, 142, 
     32,   0,   0,   0,   0,   0, 
     25,   0,   0,   0,  62,   0, 
      0,   1,  53,  16,   0,   0, 
    195,   0,   0,   0,  23,   0, 
      1,   0,  32,  68,  23,   0, 
    120,   1, 237, 152,  79,  79, 
     19,  65,  20, 192, 103, 167, 
    219, 233, 118,  25,  30, 203, 
    178, 148, 127, 165,  20,  69, 
     69,  69,  32, 122,  65,  66, 
     70,  69, 140,   7,  72,  64, 
    169, 134, 195,  26,   4, 218, 
     66,  19, 132, 134,  54, 132, 
    139, 181,  16, 162,  23,  63, 
      0,  26, 142,  30, 253,   8, 
     70,   8,  36,  94,  77, 140, 
     31, 194, 171,  30,  12, 241, 
    162, 239, 181, 187, 166,   1, 
     57, 107, 204, 254, 210, 223, 
    123,  59, 179, 219, 221, 183, 
     51, 123, 122,  99,  45, 172, 
    194, 143, 166, 175, 195, 148, 
    251, 238, 191, 157, 221, 230, 
    140, 133, 105, 128, 232,  20, 
    144, 188,  67, 145, 177,  47, 
    205,  20,  25, 235, 161, 160, 
    161, 120, 109,  35, 166, 171, 
    104,  47, 142, 111,  82,  70, 
    233,  60, 229, 215, 175, 158, 
    142, 102, 179, 155, 163,  15, 
    240, 120,  16, 165, 219, 220, 
    243,  84, 168,  64, 175, 161, 
     18, 245, 159,  89, 139, 255, 
    124, 122,  84,  45,  52, 223, 
    143, 214,  18, 161, 128, 156, 
    184, 207,  28, 133,  63,  51, 
    134,  82, 253, 167,  65, 181, 
    249, 208, 125, 169,  78, 130, 
    222, 247,  95, 131, 214, 200, 
    223,  39, 130, 246, 163,  22, 
     64,  67,  40, 177, 227, 237, 
    163, 127, 201, 103, 111, 236, 
    239, 229,  62, 122,  26,  63, 
     17, 127,  95, 124, 252,  49, 
    221,  95, 176, 201,  65, 161, 
    189,  72,  10, 126, 104,   9, 
    156,  16, 120,  82, 224, 226, 
      9, 220, 108, 129, 155,  36, 
     12,  52, 138, 154, 104,  29, 
    138, 139,  42, 234,  81,  44, 
     80,  52, 160,  22, 138, 133, 
      8,  27, 109,  66, 241, 157, 
      4, 214,  39,  98,  40, 126, 
    175, 162,  21, 109,  67, 219, 
    209,  14,  52, 142, 118, 162, 
      9, 180, 171,  90,  11, 125, 
     87, 132, 208, 170, 111,  40, 
     56, 126, 168, 136,   8,  81, 
    133, 255,  63, 180,   6, 184, 
    204,  21, 104,  45, 104, 236, 
     83, 123,  28,  16,  16,  16, 
     16,  16,  16,  16,  16,  16, 
     16,  16,  16,  16,  16,  16, 
    240, 183, 224, 221,  91, 239, 
     89, 168, 188, 255, 140, 189, 
    220,  75, 105,  91,   7,  83, 
    218, 246, 193, 132, 246, 252, 
     96,  72,  51,  14, 103,  52, 
    235,  48, 143, 243, 194,  97, 
     96,  58,  28, 194,  54,  83, 
     33, 141,  29, 128, 163,  67, 
    212, 230,  74, 183, 152, 170, 
    183, 117, 101,  88,  92,  49, 
     77,  64,  11, 216, 208,   1, 
     14, 116,  65,  12, 154,  32, 
     14, 210, 210, 149,  22,  18, 
    234,  44,  88, 112,   1,  18, 
    112,  25, 146,  48,   0,   0, 
     49, 105, 171, 118, 233, 168, 
    132, 140,  41,  91, 198,  21, 
     15,  11, 117,  70,  90, 242, 
    188,  76, 200,  75,  50,  41, 
    251,  37, 200, 102, 211,  86, 
    109, 166, 163,  58, 205, 152, 
    106,  52, 227,  42, 244,  72, 
    148, 186,  77,  75, 158,  51, 
     19, 242, 162, 153, 148,  87, 
     76, 144, 142,  97, 171,  86, 
    195,  81, 113,  35, 166, 192, 
     40, 127, 210, 187, 135, 116, 
     30, 209,  65, 139, 112,  96, 
     17,   6,  73, 195, 146,  61, 
     70,  66, 246,  26,  73, 217, 
    103, 128,  44, 115,  81, 250, 
    198, 141,  18, 189,  43, 227, 
    102, 233, 163, 193, 142, 140, 
      6,  43, 210, 192, 217, 145, 
    172,  15, 233,  93, 152, 163, 
    102,  29,  12,  96, 230,  26, 
    211, 111,  96, 214, 117,  61, 
    204, 216, 230,  94, 165, 109, 
    199,  43, 191, 223, 180,  81, 
    203, 235, 216, 156,  69, 225, 
    216,  92, 229,  88, 175, 246, 
    199, 124, 122,  98,  20,  17, 
     47,  83,  31,  55, 138, 106, 
     94, 231, 176,  29, 213, 189, 
    238, 218, 200, 242, 250, 245, 
    157, 239,  31, 118, 233, 152, 
    112, 189, 255, 140, 120,  57, 
    137, 250, 253, 210,  42, 101, 
     10,  39, 216, 246, 174,  47, 
    122, 153, 106, 165,  30,  21, 
    248, 157,  92, 106,  92,  34, 
    111, 188, 243, 187,  94, 166, 
    254,  86,  29, 122, 188, 142, 
    119, 222, 249, 199,  40,  85, 
     58,  54, 236, 222,  74, 221, 
    117,  11, 197, 217, 116, 102, 
    221,  29, 207,  21,  11, 238, 
     88, 110,  45, 179,  80, 156, 
     73, 141, 187, 133, 181,   5, 
    119, 122, 105,  46, 157,  89, 
     43, 184, 183,  87, 159, 228, 
    115, 203, 153, 180,  59,  51, 
    191, 186,  49, 185, 146,  25, 
    157,  43, 228,  22, 238, 100, 
    179, 120, 233, 236, 195, 233, 
    202, 104,  42, 183, 145,  89, 
    158, 200,  45,  46,  21, 115, 
     43, 139, 169, 141, 254, 124, 
    122, 158, 253,   2,   4,  90, 
    122,  91,  53,  16,   0,   0, 
    210,   0,   0,   0,  23,   0, 
      1,   0,  16, 188,  23,   0, 
    120,   1, 237, 152,  79,  79, 
     19,  65,  24, 198, 167, 219, 
     97, 186,  45, 195, 180, 148, 
    165,  20,  40,   5,  20,  21, 
     17,   9, 146,  98, 128, 144, 
    184,  34,  70,  19, 154, 128, 
     82,  13, 135,  26, 254, 181, 
     64,  19, 132, 134,  54, 164, 
     39,  68,  67,  98,  76, 184, 
    152,  24,  67,  12,  31, 193, 
    163, 241, 100, 148,  64, 162, 
    119, 227,   7, 240,   3, 120, 
    242, 224, 137,  68, 159, 119, 
    187, 139,  88, 229, 172,  49, 
    251,  75, 159, 121, 231, 223, 
    238,  60,  59,  51, 189, 188, 
    111,  26, 152,  69, 110, 160, 
    203, 160, 216, 125, 251, 229, 
    244, 150, 198,  88,  21,  53, 
      0, 170,  22, 121, 107, 148, 
    177, 153,   8, 149, 140, 181, 
     81, 225, 129,  48,  33, 132, 
     48,   4, 109, 163, 109,  34, 
    118,  66,  52,  78,  49, 246, 
    225, 233, 200, 235, 153, 103, 
     35,  11, 168, 247,  67,  97, 
    232, 142, 173,  43,  16, 181, 
    251,  32,   5,  85,  82,  11, 
     57,  62, 104, 169, 227, 120, 
    161,  30, 232,  56,  58,  21, 
    128, 158, 147, 208,  17, 179, 
     84, 252, 153,  91,  16, 249, 
     63,   9, 242,  70, 239, 115, 
    112, 124, 210, 247, 254, 107, 
    208,  30,  57, 231,  68, 208, 
    121,  28, 135, 188, 115, 136, 
     56, 172, 167, 242, 231, 190, 
     38, 237, 115, 117, 206, 114, 
     15,  58, 137, 239, 192, 121, 
     15,  65, 245,   4,  68, 208, 
    185,   8,  54, 222,  43,  60, 
    143, 219, 132, 118,  16,  18, 
    232,  16, 152,  32, 112, 144, 
     66,  64,  62,   8,   7,  37, 
    252,  80,   0, 170, 134, 112, 
     88, 162,   6, 130,  65,  17, 
    132,  96,  66,  96, 211,   5, 
     46, 135, 168, 131, 240,  77, 
      2, 126,   5,  60,  10, 220, 
     87,  17, 133,  26, 161,  38, 
    168,  25, 138,  65,  45,  80, 
     28, 106, 181, 239,  12,  39, 
     87, 104,  83,   1, 132, 167, 
    252, 165,  66,  43, 223, 104, 
    225,  37, 167, 255,  47, 180, 
      7, 206, 255, 129,  40, 239, 
     70,  25, 186,  34,  36,  23, 
     23,  23,  23,  23,  23,  23, 
     23,  23,  23,  23,  23,  23, 
     23,  23, 151, 191, 137, 214, 
    254, 232,  45, 243, 110, 237, 
     61,  96, 219, 239, 166, 252, 
    226,  32, 143,  24,  84,  76, 
     13, 248, 213,  65, 202, 255, 
    124,  95, 122,  55, 247, 148, 
    100, 178,  78, 105, 106, 194, 
    191, 179,  95,  19,  96,  50, 
     44,  53, 217, 160, 184,  74, 
    250,  95, 236,  75, 157, 201, 
    218, 128,  38,  35, 146, 203, 
    102,  37,  84,  72, 215, 100, 
    125, 128, 203,  38,  41, 164, 
    161, 115, 217,  24,  16, 146, 
    222, 125,  90,  69,  84, 143, 
     17,  83,  81,  93,  72, 211, 
    204, 127, 102, 204, 228, 167, 
    240, 212,  57, 172, 213, 103, 
    196, 213, 197, 112,  76, 142, 
     82, 191, 199, 228, 237, 129, 
    136,  60, 139,  53,  47,  96, 
    205, 203, 134, 161,  46, 133, 
    227, 178,  59,  20, 147,  55, 
    105,  92,  51, 121, 155,  30, 
    145, 103, 224, 163,  11,  62, 
     90, 225, 163,  63, 108, 200, 
    222,  80,  92, 170,  22, 165, 
    146,  52, 199, 107, 242,  14, 
    248,  58,  15,  95, 113, 248, 
     74, 132,  12,  25, 108, 197, 
     87, 208, 152,  52, 121,  39, 
     60, 182, 192,  99, 160,  94, 
     73,  78, 125,  53,  38, 215, 
    244, 205, 143, 124,  80, 231, 
    190, 123,  98,  35,  68, 125, 
    213,  38,  15, 248, 116, 101, 
     80,  29,  94, 189,  79, 180, 
    253, 160, 143, 169,  40, 181, 
    225,  81, 249,  52,  21, 163, 
     58, 249, 161, 200,  77, 254, 
     85, 227,  27,  29,  84, 199, 
    252,  78, 138, 152, 215,  75, 
     17, 115, 104,  15, 170,  52, 
    182, 145, 176, 219,   3, 118, 
     28, 166, 136, 249, 140,  61, 
    124, 103, 165,  10,  53, 235, 
    119,  68,  35, 165, 211,  42, 
    250, 162,  84,  84, 244,  81, 
     62, 177, 178, 207, 170, 243, 
    114,  62, 206,  97, 215, 206, 
     63, 150, 236, 216,   1, 249, 
     33, 143, 149,  81, 100, 172, 
      9, 226, 118,  54, 111, 120, 
    121, 125, 112, 231, 219, 251, 
     93, 170,  19, 159, 236, 103, 
     94, 217, 145, 114, 207, 191, 
    228, 127, 173, 172, 244, 239, 
     28, 218, 243, 191, 216, 145, 
    188,  82, 158,  76, 149,  51, 
    136, 229, 132,  41, 136, 217, 
     57, 114, 195, 142, 148,  87, 
    171, 134,  42, 125,  36, 236, 
    241,  25, 136, 156, 142,  14, 
    165, 175, 166, 110, 164,  11, 
    197, 233,  76, 118,  61,  61, 
    150,  43,  22, 210, 163, 185, 
    181, 236, 124, 113,  42,  53, 
    150,  46, 172, 205, 167,  39, 
    151, 102,  51, 217, 181,  66, 
    250, 218, 234, 253, 124, 110, 
     57, 155,  73,  79, 205, 173, 
    150, 198,  87, 178,  35, 179, 
    133, 220, 252, 245, 133,   5, 
     76, 157, 190,  59, 105, 181, 
     38, 114, 165, 236, 114,  50, 
    183, 184,  84, 204, 173,  44, 
    166,  74,  61, 249, 204,  28, 
    251,   1,   4,  88, 150,  42, 
      0,   0,  53,  16,   0,   0, 
    206,   0,   0,   0,  23,   0, 
      1,   0,   0, 120,  23,   0, 
    120,   1, 237, 152,  77,  79, 
     19,  81,  20, 134, 239, 180, 
    195, 101,  58,  61, 156,  78, 
    203,  80,   1, 203,  80, 191, 
     81,  17, 141, 186,  80, 227, 
     66,  81, 227,   2,  18, 137, 
     52, 166, 139,  49, 200,  71, 
    129,  38,   8, 149,  54, 166, 
     43,  20,  99, 162,  81,  98, 
     92, 186, 240,   7, 184, 112, 
    225, 210, 149,  24,  72,  92, 
    105,  98,  92,  24, 150, 254, 
      4, 227, 194, 149, 137, 190, 
    167, 157,  98,  67,  52,  46, 
     53, 102, 158, 228,  61, 231, 
    126, 205, 157, 115, 207, 189, 
    171,  83, 221, 166, 106, 124, 
     74, 223,  88,  16, 223, 127, 
    249, 249, 216, 221, 136,  82, 
     45, 210, 105, 162, 228, 138, 
     85,  42, 147,  22, 171, 212, 
    110,  49,   6, 132, 181,  73, 
    184, 163, 144, 143, 254,  25, 
    248,  62,  72, 230, 197, 191, 
    123, 123, 127, 112, 122, 250, 
    225,  32, 154, 234,  16, 148, 
    130, 252,  64, 178,  54,  14, 
     29, 131,  18, 144,  16,  19, 
    211,  68,  35,  14, 252, 102, 
     19, 249, 109,  20,  26, 128, 
    154, 105,  21,   3, 182, 238, 
    161, 198, 197, 252, 154,  33, 
     72, 226, 255,  29,  18, 155, 
    208, 216, 179,  17, 167, 156, 
    247,  95,  67, 242, 210, 184, 
     39,  65, 238, 163,  25, 134, 
     36, 111, 194, 219,  14, 177, 
    245, 111,   4,  43, 184, 215, 
    198,  93, 190, 134, 126, 199, 
    119,  96,  74, 163, 137,  70, 
     95, 246, 215, 234, 210,  17, 
    109, 220, 203, 234, 200, 186, 
    163,  49, 160,  49, 169, 113, 
    145,  90,  67, 184,  36, 109, 
     65,  72, 168, 182,  33,  60, 
      0,  77,  80,  27, 132,   0, 
     53,  18, 172,  29,   8, 129, 
    104,  60,  22, 221,  14, 225, 
     76,  26, 241, 106, 196, 168, 
    241,  94, 117,  39, 212,   5, 
    117,  67, 219, 161,  12, 212, 
      3, 121,  80, 111, 240, 102, 
    204, 122,  68, 248, 101,  13, 
    109, 212,  79, 170,  35, 245, 
    151, 164, 163,  18, 233, 255, 
    139, 228,   0, 105, 222, 164, 
    158, 141, 250, 125,  55, 158, 
    200, 136, 152, 144, 144, 144, 
    144, 144, 144, 144, 144, 144, 
    144, 144, 144, 144, 144, 144, 
    144, 191,  68, 100, 199, 157, 
     87,  42, 122, 251, 245,  45, 
    181, 178, 122, 194, 136, 172, 
     15,  27,  15, 214,  70, 140, 
    149, 181, 156, 241, 104,  77, 
    198, 162, 203, 241, 181, 188, 
    225, 172, 127, 143, 126, 123, 
     37,  85, 141,  82,  98, 101, 
     53, 206, 138, 109,  82,  20, 
    179,  21,  89, 150, 162,   4, 
    155, 204, 100,  82, 155, 109, 
     18,  89,  38, 181, 179, 230, 
     20, 105,  74, 218, 154,  28, 
     75,  83,  43, 167,  89,  83, 
    154,  90, 236,  52, 197, 173, 
    219,  31, 204,  88, 191, 153, 
    118,  51, 220, 145, 202, 144, 
    235, 100, 168, 219, 245, 184, 
     43, 229,  81, 167, 227, 145, 
    231, 186, 220, 147, 114,  41, 
    227, 184, 100, 119,  56, 156, 
    232, 117, 136, 123,  28, 178, 
    174,  58,  75, 156,  76, 113, 
     34, 153,  97,  59, 233, 176, 
    196, 182, 139,  93, 222,  73, 
     46, 237, 176,  93, 202,  90, 
     46, 237,  99, 143, 247, 146, 
     71, 123, 108, 143, 118,  91, 
     30,  29, 228,  44,  31, 160, 
     44, 237, 183, 179, 212, 103, 
    101, 233,  48,  51,  15,  16, 
    211,  33, 155, 169, 223,  98, 
     26,  81, 234, 133, 161,  62, 
    126, 144, 146, 149, 147,  60, 
    177,  97, 216,   9, 149, 106, 
    135, 119,  90, 113,  84, 120, 
    106,  83, 102,  11, 188, 138, 
     40, 221,  10,  31, 141,  43, 
     43,   6,  31,  99, 213, 167, 
    142, 111,  24, 150,  82,  95, 
     34, 106, 137, 218,  48, 134, 
     92, 110, 139, 152,  75, 156, 
    144, 182, 212, 190, 150,  87, 
    107, 165,  63,  52, 165, 215, 
    160,  75,  22, 110,  25, 115, 
    196, 108,  25, 171, 181,  77, 
     89, 252, 147, 124,  80,  59, 
     60,  30, 120, 169, 253,  74, 
    189, 212,   8, 170, 141, 221, 
    144,  25,  84, 226,  78, 207, 
    221,  60, 249, 228, 235, 155, 
    167, 210,  22,  30,   7, 223, 
    148,   2, 159, 133,   8, 250, 
     19,  47, 131, 245, 207,   2, 
     47, 177,  74, 141, 139, 235, 
    213, 191, 122, 177,  19, 108, 
      4, 243, 239,   3,  47,  53, 
     49, 169,  57, 111, 141, 227, 
    115,  48, 127,  13, 146,  72, 
    207, 159, 242, 207, 230,  46, 
    250, 229, 202, 216,  84, 225, 
    166,  63,  84, 172, 148, 253, 
    243, 197, 197, 194, 100,  37, 
    159,  27, 242, 203, 139, 147, 
    254, 232, 236, 248,  84,  97, 
    177, 236, 159,  91, 184,  94, 
     42, 206,  21, 166, 252, 252, 
    196,  66, 245, 210, 124,  97, 
    112, 188,  92, 156, 188,  48, 
     61, 141, 165,  99,  87,  70, 
    107, 189, 145,  98, 181,  48, 
     55,  92, 156, 153, 173,  20, 
    231, 103, 114, 213, 129, 210, 
    212, 132, 250,   1, 156, 251, 
    131,  56,   0,   0,  88,  72, 
     83,  72,   8,   0,   0,   0, 
     60, 108, 118,  57, 152, 246, 
    198, 156,  88,  80,  68,  80, 
     95,   0,   0,   0,  68,  58, 
     92,  65,  84,  71,  92, 115, 
    116,  95, 100, 101, 118,  92, 
     75, 105, 116, 115,  92,  68, 
    105, 114, 101,  99, 116,  88, 
     84,  75,  92, 115, 114,  99, 
     92,  83, 104,  97, 100, 101, 
    114, 115,  92,  67, 111, 109, 
    112, 105, 108, 101, 100,  92, 
     88,  98, 111, 120,  79, 110, 
    101,  66,  97, 115, 105,  99, 
     69, 102, 102, 101,  99, 116, 
     95,  86,  83,  66,  97, 115, 
    105,  99,  80, 105, 120, 101, 
    108,  76, 105, 103, 104, 116, 
    105, 110, 103,  84, 120,  46, 
    112, 100,  98
};
