#if 0
//
// Generated by Microsoft (R) D3D Shader Disassembler for Durango
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xy          0     NONE   float   xy  
// TEXCOORD                 1   xyzw        1     NONE   float   xyz 
// TEXCOORD                 2   xyz         2     NONE   float   xyz 
// COLOR                    0   xyzw        3     NONE   float       
// SV_Position              0   xyzw        4      POS   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   x           1   TARGET    uint   x   
//
ps_5_0
// Opaque Custom Data - XBOX Precompiled Shader Header
// First Precompiled Shader at offset:[1035]
// Embedded Data:
//  0x0000040b - Offset To First Precompiled Shader
//  0x00000050 - Original Shader Descriptor
//  0x00000406 - Original Shader Size
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[25], dynamicIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texturecube (float,float,float,float) t4
dcl_resource_texturecube (float,float,float,float) t5
dcl_input_ps linear v0.xy
dcl_input_ps linear v1.xyz
dcl_input_ps linear v2.xyz
dcl_input_ps_siv linear noperspective v4.xyz, position
dcl_input_ps linear v5.xyzw
dcl_output o0.xyzw
dcl_output o1.x
dcl_temps 9
add r0.xyz, -v1.xyzx, cb0[0].xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
sample_indexable(texture2d)(float,float,float,float) r1.xy, v0.xyxx, t1.xyzw, s0
mad r1.xy, r1.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r0.w, r1.xyxx, r1.xyxx
add r0.w, -r0.w, l(1.000000)
sqrt r0.w, r0.w
deriv_rtx_coarse r2.xyz, v1.yzxy
deriv_rty_coarse r3.xyz, v1.zxyz
deriv_rtx_coarse r1.zw, v0.xxxy
deriv_rty_coarse r4.xy, v0.xyxx
mul r5.xyz, r2.xyzx, r3.yzxy
mad r5.xyz, r2.zxyz, r3.zxyz, -r5.xyzx
mul r6.xyz, r3.xyzx, r5.zxyz
mad r3.xyz, r3.zxyz, r5.xyzx, -r6.xyzx
mul r6.xyz, r2.xyzx, r5.xyzx
mad r2.xyz, r5.zxyz, r2.yzxy, -r6.xyzx
mul r4.xzw, r2.xxyz, r4.xxxx
mad r4.xzw, r1.zzzz, r3.xxyz, r4.xxzw
dp3 r1.z, r4.xzwx, r4.xzwx
rsq r1.z, r1.z
mul r4.xzw, r1.zzzz, r4.xxzw
mul r2.xyz, r2.xyzx, r4.yyyy
mad r2.xyz, r1.wwww, r3.xyzx, r2.xyzx
dp3 r1.z, r2.xyzx, r2.xyzx
rsq r1.z, r1.z
mul r2.xyz, r1.zzzz, r2.xyzx
mul r1.yzw, r1.yyyy, r2.xxyz
mad r1.xyz, r1.xxxx, r4.xzwx, r1.yzwy
mad r1.xyz, r0.wwww, v2.xyzx, r1.xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r1.xyzx
sample_indexable(texture2d)(float,float,float,float) r2.xyzw, v0.xyxx, t0.xyzw, s0
sample_indexable(texture2d)(float,float,float,float) r3.xyz, v0.xyxx, t2.xyzw, s0
dp3_sat r0.w, r1.xyzx, r0.xyzx
mul r1.w, r3.y, r3.y
mad r4.xyz, r3.zzzz, -r2.xyzx, r2.xyzx
mul r4.xyz, r3.xxxx, r4.xyzx
add r2.xyz, r2.xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
mad r2.xyz, r3.zzzz, r2.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
mul r5.xyz, r3.xxxx, r2.xyzx
add r3.z, r3.y, r3.y
add r0.w, -r0.w, l(1.000000)
mul r3.w, r0.w, r0.w
mul r3.w, r3.w, r3.w
mul r0.w, r0.w, r3.w
mul r3.w, r1.w, r1.w
mad r1.w, r1.w, r1.w, l(-1.000000)
mad r2.xyz, -r2.xyzx, r3.xxxx, l(1.000000, 1.000000, 1.000000, 0.000000)
mul r3.x, r3.w, l(0.250000)
mov r6.xyz, l(0,0,0,0)
mov r4.w, l(0)
loop 
  ige r5.w, r4.w, l(3)
  breakc_nz r5.w
  dp3 r5.w, -cb0[r4.w + 16].xyzx, -cb0[r4.w + 16].xyzx
  rsq r5.w, r5.w
  mul r7.xyz, r5.wwww, -cb0[r4.w + 16].xyzx
  mad r8.xyz, -cb0[r4.w + 16].xyzx, r5.wwww, r0.xyzx
  dp3 r5.w, r8.xyzx, r8.xyzx
  rsq r5.w, r5.w
  mul r8.xyz, r5.wwww, r8.xyzx
  dp3_sat r5.w, r1.xyzx, r7.xyzx
  dp3_sat r6.w, r7.xyzx, r8.xyzx
  dp3_sat r7.x, r1.xyzx, r8.xyzx
  mul r7.y, r6.w, r6.w
  mad r7.z, r7.y, r3.z, l(-0.500000)
  add r7.w, -r5.w, l(1.000000)
  mul r8.x, r7.w, r7.w
  mul r8.x, r8.x, r8.x
  mul r7.w, r7.w, r8.x
  mad r7.w, r7.z, r7.w, l(1.000000)
  mad r7.z, r7.z, r0.w, l(1.000000)
  mul r7.x, r7.x, r7.x
  mad r7.x, r7.x, r1.w, l(1.000000)
  mul r7.xz, r7.xxzx, r7.xxwx
  mul r7.x, r7.x, l(3.141593)
  max r7.x, r7.x, l(0.000001)
  div r7.x, r3.w, r7.x
  add r7.w, -r6.w, l(1.000000)
  mul r8.x, r7.w, r7.w
  mul r8.x, r8.x, r8.x
  mul r7.w, r7.w, r8.x
  mad r8.xyz, r2.xyzx, r7.wwww, r5.xyzx
  mad r6.w, -r6.w, r6.w, l(1.000000)
  mad r6.w, r3.x, r6.w, r7.y
  rcp r6.w, r6.w
  mul r7.xyw, r7.xxxx, r8.xyxz
  mul r7.xyw, r6.wwww, r7.xyxw
  mul r8.xyz, r5.wwww, cb0[r4.w + 19].xyzx
  mad r7.xyz, r4.xyzx, r7.zzzz, r7.xywx
  mad r6.xyz, r8.xyzx, r7.xyzx, r6.xyzx
  iadd r4.w, r4.w, l(1)
endloop 
sample_indexable(texturecube)(float,float,float,float) r2.xyz, r1.xyzx, t5.xyzw, s1
mad r2.xyz, r4.xyzx, r2.xyzx, r6.xyzx
itof r0.w, cb0[23].z
mul r0.w, r0.w, r3.y
dp3 r1.w, -r0.xyzx, r1.xyzx
add r1.w, r1.w, r1.w
mad r0.xyz, r1.xyzx, -r1.wwww, -r0.xyzx
sample_l_indexable(texturecube)(float,float,float,float) r0.xyz, r0.xyzx, t4.xyzw, s1, r0.w
mad o0.xyz, r5.xyzx, r0.xyzx, r2.xyzx
mul o0.w, r2.w, cb0[22].w
div r0.xyz, v5.xyzx, v5.wwww
mad r1.xy, r0.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
mul r0.x, r1.x, cb0[23].w
mul r0.y, r1.y, cb0[24].x
add r0.xyz, r0.xyzx, -v4.xyzx
ushr r1.xyz, r0.xyzx, l(31, 31, 31, 0)
mul r0.xyz, r0.xyzx, l(0.000031, 0.000031, 0.007813, 0.000000)
min r0.xyz, |r0.xyzx|, l(0.007809, 0.007809, 0.007809, 0.000000)
f32tof16 r0.xyz, r0.xyzx
iadd r0.xyz, r0.xyzx, l(8, 8, 2, 0)
ushr r0.xyz, r0.xyzx, l(4, 4, 2, 0)
ishl r1.xyz, r1.xyzx, l(9, 9, 11, 0)
or r0.xyz, r0.xyzx, r1.xyzx
ishl r0.yz, r0.yyzy, l(0, 10, 20, 0)
or r0.x, r0.y, r0.x
or o1.x, r0.z, r0.x
ret 
// Opaque Custom Data - XBOX Precompiled Shader Object
// Offset:[1035], bundle is:[650] DWORDS.
// Disassembled Precompiled Shader Object:
// Shader Type               : (PS)
// Shader Hw Stage           : (PS)
// PDB Filename              : D:\ATG\st_dev\Kits\DirectXTK\src\Shaders\Compiled\XboxOnePBREffect_PSTexturedVelocity.pdb
// Shader Semantic Hash      : 0xee70d2aade8d6b08
//
// Shader Data:
; ----------------- PS Data ------------------------
; Input Semantic Mappings
;   [0] generic,  usageIdx 0, channelMask  3, param0, paramSlot0, DefaultVal={0,0,0,0}
;   [1] generic,  usageIdx 1, channelMask  7, param1, paramSlot1, DefaultVal={0,0,0,0}
;   [2] generic,  usageIdx 2, channelMask  7, param2, paramSlot2, DefaultVal={0,0,0,0}
;   [3] generic,  usageIdx 5, channelMask 15, param3, paramSlot5, DefaultVal={0,0,0,0}

codeLenInByte        = 2588 bytes;

; launchModeFlags    = 0x0000000E
srdTableSupport      = TRUE
immediateSupportExt  = TRUE
srdTableSupportExt   = TRUE

userElementCount     = 1;
;  userElements[0]      = PTR_EXTENDED_USER_DATA, ReferencedExtUserElements=1, s[0x0:1]
extUserElementCount  = 8;
;  extUserElements 1[0] = IMM_RESOURCE 0, offset 0x0:7 dwords
;  extUserElements 1[1] = IMM_RESOURCE 1, offset 0x8:15 dwords
;  extUserElements 1[2] = IMM_RESOURCE 2, offset 0x10:23 dwords
;  extUserElements 1[3] = IMM_RESOURCE 4, offset 0x18:31 dwords
;  extUserElements 1[4] = IMM_RESOURCE 5, offset 0x20:39 dwords
;  extUserElements 1[5] = IMM_SAMPLER 0, offset 0x28:43 dwords
;  extUserElements 1[6] = IMM_SAMPLER 1, offset 0x2c:47 dwords
;  extUserElements 1[7] = IMM_CONST_BUFFER 0, offset 0x30:51 dwords
NumVgprs             = 48;
NumSgprs             = 32;
FloatMode            = 192;
IeeeMode             = 0;
FlatPtr32            = 0;
ScratchSize          = 0 dwords/thread;
LDSByteSize          = 0 bytes/workgroup (compile time only);
ScratchWaveOffsetReg = s65535;
; texSamplerUsage         = 0x00000003
; constBufUsage           = 0x00000001

; SPI_SHADER_PGM_RSRC2_PS = 0x00000004
SSPRP:SCRATCH_EN            = 0
SSPRP:USER_SGPR             = 2
SSPRP:TRAP_PRESENT          = 0
SSPRP:WAVE_CNT_EN           = 0
SSPRP:EXTRA_LDS_SIZE        = 0
SSPRP:EXCP_EN               = 0
; SPI_SHADER_Z_FORMAT     = 0x00000000
SPZF:Z_EXPORT_FORMAT        = 0; SPI_SHADER_ZERO
; SPI_PS_IN_CONTROL       = 0x00000004
SPIC:NUM_INTERP             = 4
SPIC:PARAM_GEN              = 0
SPIC:FOG_ADDR               = 0
SPIC:BC_OPTIMIZE_DISABLE    = 0
SPIC:PASS_FOG_THROUGH_PS    = 0
; SPI_PS_INPUT_ADDR       = 0x00000702
SPIA:PERSP_CENTER_ENA       = 1
SPIA:POS_X_FLOAT_ENA        = 1
SPIA:POS_Y_FLOAT_ENA        = 1
SPIA:POS_Z_FLOAT_ENA        = 1
; DB_SHADER_CONTROL       = 0x00000010
DB:Z_ORDER                  = 1
DB:CONSERVATIVE_Z_EXPORT    = 0; EXPORT_ANY_Z
; CB_SHADER_MASK          = 0x000000FF
CB:OUTPUT0_ENABLE           = 15
CB:OUTPUT1_ENABLE           = 15

dx9TexCubeMask           = 0x00000030

; export table for mrt0 [patch@(bytes=0xA08, dwords=0x282)]
// Export Patch Code (FMT_ZERO):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_nop         0x0000                                  // 000000000000: BF800000
  s_nop         0x0000                                  // 000000000004: BF800000
  exp           null, off, off, off, off done vm        // 000000000008: F8001890 00000000
end
// Export Patch Code (FMT_32_R):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_nop         0x0000                                  // 000000000000: BF800000
  s_nop         0x0000                                  // 000000000004: BF800000
  exp           mrt0, v11, off, off, off done vm        // 000000000008: F8001801 0000000B
end
// Export Patch Code (FMT_32_GR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_nop         0x0000                                  // 000000000000: BF800000
  s_nop         0x0000                                  // 000000000004: BF800000
  exp           mrt0, v11, v13, off, off done vm        // 000000000008: F8001803 00000D0B
end
// Export Patch Code (FMT_32_AR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_nop         0x0000                                  // 000000000000: BF800000
  s_nop         0x0000                                  // 000000000004: BF800000
  exp           mrt0, v11, v1, off, off done vm         // 000000000008: F8001803 0000010B
end
// Export Patch Code (FMT_FP16_ABGR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  v_cvt_pkrtz_f16_f32  v2, v11, v13                     // 000000000000: 5E041B0B
  v_cvt_pkrtz_f16_f32  v1, v6, v1                       // 000000000004: 5E020306
  exp           mrt0, v2, v2, v1, v1 done compr vm      // 000000000008: F8001C0F 00000102
end
// Export Patch Code (FMT_UNORM16_ABGR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  v_cvt_pknorm_u16_f32  v2, v11, v13                    // 000000000000: 5C041B0B
  v_cvt_pknorm_u16_f32  v1, v6, v1                      // 000000000004: 5C020306
  exp           mrt0, v2, v2, v1, v1 done compr vm      // 000000000008: F8001C0F 00000102
end
// Export Patch Code (FMT_SNORM16_ABGR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  v_cvt_pknorm_i16_f32  v2, v11, v13                    // 000000000000: 5A041B0B
  v_cvt_pknorm_i16_f32  v1, v6, v1                      // 000000000004: 5A020306
  exp           mrt0, v2, v2, v1, v1 done compr vm      // 000000000008: F8001C0F 00000102
end
// Export Patch Code (FMT_UINT16_ABGR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  v_cvt_pk_u16_u32  v2, v11, v13                        // 000000000000: 60041B0B
  v_cvt_pk_u16_u32  v1, v6, v1                          // 000000000004: 60020306
  exp           mrt0, v2, v2, v1, v1 done compr vm      // 000000000008: F8001C0F 00000102
end
// Export Patch Code (FMT_SINT16_ABGR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  v_cvt_pk_i16_i32  v2, v11, v13                        // 000000000000: 62041B0B
  v_cvt_pk_i16_i32  v1, v6, v1                          // 000000000004: 62020306
  exp           mrt0, v2, v2, v1, v1 done compr vm      // 000000000008: F8001C0F 00000102
end
// Export Patch Code (FMT_32_ABGR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_nop         0x0000                                  // 000000000000: BF800000
  s_nop         0x0000                                  // 000000000004: BF800000
  exp           mrt0, v11, v13, v6, v1 done vm          // 000000000008: F800180F 01060D0B
end

; export table for mrt1 [patch@(bytes=0x9F8, dwords=0x27E)]
// Export Patch Code (FMT_ZERO):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_nop         0x0000                                  // 000000000000: BF800000
  s_nop         0x0000                                  // 000000000004: BF800000
  s_nop         0x0000                                  // 000000000008: BF800000
  s_nop         0x0000                                  // 00000000000C: BF800000
end
// Export Patch Code (FMT_32_R):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_nop         0x0000                                  // 000000000000: BF800000
  s_nop         0x0000                                  // 000000000004: BF800000
  exp           mrt1, v0, off, off, off vm              // 000000000008: F8001011 00000000
end
// Export Patch Code (FMT_32_GR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_nop         0x0000                                  // 000000000000: BF800000
  s_nop         0x0000                                  // 000000000004: BF800000
  exp           mrt1, v0, off, off, off vm              // 000000000008: F8001011 00000000
end
// Export Patch Code (FMT_32_AR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_nop         0x0000                                  // 000000000000: BF800000
  s_nop         0x0000                                  // 000000000004: BF800000
  exp           mrt1, v0, off, off, off vm              // 000000000008: F8001011 00000000
end
// Export Patch Code (FMT_FP16_ABGR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  v_cvt_pkrtz_f16_f32  v0, v0, v0                       // 000000000000: 5E000100
  s_nop         0x0000                                  // 000000000004: BF800000
  exp           mrt1, v0, v0, off, off compr vm         // 000000000008: F8001413 00000000
end
// Export Patch Code (FMT_UNORM16_ABGR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  v_cvt_pknorm_u16_f32  v0, v0, v0                      // 000000000000: 5C000100
  s_nop         0x0000                                  // 000000000004: BF800000
  exp           mrt1, v0, v0, off, off compr vm         // 000000000008: F8001413 00000000
end
// Export Patch Code (FMT_SNORM16_ABGR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  v_cvt_pknorm_i16_f32  v0, v0, v0                      // 000000000000: 5A000100
  s_nop         0x0000                                  // 000000000004: BF800000
  exp           mrt1, v0, v0, off, off compr vm         // 000000000008: F8001413 00000000
end
// Export Patch Code (FMT_UINT16_ABGR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  v_cvt_pk_u16_u32  v0, v0, v0                          // 000000000000: 60000100
  s_nop         0x0000                                  // 000000000004: BF800000
  exp           mrt1, v0, v0, off, off compr vm         // 000000000008: F8001413 00000000
end
// Export Patch Code (FMT_SINT16_ABGR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  v_cvt_pk_i16_i32  v0, v0, v0                          // 000000000000: 62000100
  s_nop         0x0000                                  // 000000000004: BF800000
  exp           mrt1, v0, v0, off, off compr vm         // 000000000008: F8001413 00000000
end
// Export Patch Code (FMT_32_ABGR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_nop         0x0000                                  // 000000000000: BF800000
  s_nop         0x0000                                  // 000000000004: BF800000
  exp           mrt1, v0, off, off, off vm              // 000000000008: F8001011 00000000
end

// Shader Instructions:
shader main
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_mov_b64     s[28:29], exec                          // 000000000000: BE9C047E
  s_wqm_b64     exec, exec // wrscc                     // 000000000004: BEFE0A7E
  s_load_dwordx8  s[4:11], s[0:1], 0x08                 // 000000000008: C0C20108
  s_load_dwordx4  s[12:15], s[0:1], 0x28                // 00000000000C: C0860128
  s_mov_b32     m0, s2                                  // 000000000010: BEFC0302
  v_interp_p1_f32  v7, v0, attr0.x                      // 000000000014: C81C0000
  v_interp_p1_f32  v8, v0, attr0.y                      // 000000000018: C8200100
  v_interp_p2_f32  v7, v1, attr0.x                      // 00000000001C: C81D0001
  v_interp_p2_f32  v8, v1, attr0.y                      // 000000000020: C8210101
  s_waitcnt     lgkmcnt(0)                              // 000000000024: BF8C007F
  image_sample  v[9:12], v[7:8], s[4:11], s[12:15] dmask:0x3 // 000000000028: F0800300 00610907
  s_load_dwordx8  s[4:11], s[0:1], 0x10                 // 000000000030: C0C20110
  s_waitcnt     lgkmcnt(0)                              // 000000000034: BF8C007F
  image_sample  v[11:14], v[7:8], s[4:11], s[12:15] dmask:0x7 // 000000000038: F0800700 00610B07
  v_interp_p1_f32  v14, v0, attr1.x                     // 000000000040: C8380400
  v_interp_p1_f32  v15, v0, attr1.z                     // 000000000044: C83C0600
  v_interp_p2_f32  v14, v1, attr1.x                     // 000000000048: C8390401
  v_interp_p1_f32  v16, v0, attr1.y                     // 00000000004C: C8400500
  v_interp_p2_f32  v15, v1, attr1.z                     // 000000000050: C83D0601
  v_interp_p2_f32  v16, v1, attr1.y                     // 000000000054: C8410501
  ds_swizzle_b32  v17, v14 offset:32853                 // 000000000058: D8D48055 1100000E
  ds_swizzle_b32  v18, v14 offset:32768                 // 000000000060: D8D48000 1200000E
  ds_swizzle_b32  v19, v15 offset:32938                 // 000000000068: D8D480AA 1300000F
  ds_swizzle_b32  v20, v15 offset:32768                 // 000000000070: D8D48000 1400000F
  ds_swizzle_b32  v21, v15 offset:32853                 // 000000000078: D8D48055 1500000F
  ds_swizzle_b32  v22, v15 offset:32768                 // 000000000080: D8D48000 1600000F
  s_waitcnt     lgkmcnt(4)                              // 000000000088: BF8C047F
  v_sub_f32     v17, v17, v18                           // 00000000008C: 08222511
  s_waitcnt     lgkmcnt(2)                              // 000000000090: BF8C027F
  v_sub_f32     v18, v19, v20                           // 000000000094: 08242913
  ds_swizzle_b32  v19, v14 offset:32938                 // 000000000098: D8D480AA 1300000E
  ds_swizzle_b32  v20, v14 offset:32768                 // 0000000000A0: D8D48000 1400000E
  ds_swizzle_b32  v23, v16 offset:32938                 // 0000000000A8: D8D480AA 17000010
  ds_swizzle_b32  v24, v16 offset:32768                 // 0000000000B0: D8D48000 18000010
  ds_swizzle_b32  v25, v16 offset:32853                 // 0000000000B8: D8D48055 19000010
  ds_swizzle_b32  v26, v16 offset:32768                 // 0000000000C0: D8D48000 1A000010
  s_waitcnt     lgkmcnt(6)                              // 0000000000C8: BF8C067F
  v_sub_f32     v21, v21, v22                           // 0000000000CC: 082A2D15
  s_waitcnt     lgkmcnt(4)                              // 0000000000D0: BF8C047F
  v_sub_f32     v19, v19, v20                           // 0000000000D4: 08262913
  s_waitcnt     lgkmcnt(2)                              // 0000000000D8: BF8C027F
  v_sub_f32     v20, v23, v24                           // 0000000000DC: 08283117
  v_mul_legacy_f32  v22, v17, v18                       // 0000000000E0: 0E2C2511
  s_waitcnt     lgkmcnt(0)                              // 0000000000E4: BF8C007F
  v_sub_f32     v23, v25, v26                           // 0000000000E8: 082E3519
  v_mul_legacy_f32  v24, v21, v20                       // 0000000000EC: 0E302915
  v_mad_legacy_f32  v22, v21, v19, -v22                 // 0000000000F0: D2800016 845A2715
  ds_swizzle_b32  v25, v8 offset:32938                  // 0000000000F8: D8D480AA 19000008
  ds_swizzle_b32  v26, v8 offset:32768                  // 000000000100: D8D48000 1A000008
  v_mul_legacy_f32  v27, v23, v19                       // 000000000108: 0E362717
  v_mad_legacy_f32  v24, v23, v18, -v24                 // 00000000010C: D2800018 84622517
  v_mul_legacy_f32  v28, v17, v22                       // 000000000114: 0E382D11
  s_load_dwordx4  s[4:7], s[0:1], 0x30                  // 000000000118: C0820130
  ds_swizzle_b32  v29, v8 offset:32853                  // 00000000011C: D8D48055 1D000008
  ds_swizzle_b32  v6, v8 offset:32768                   // 000000000124: D8D48000 06000008
  ds_swizzle_b32  v30, v7 offset:32938                  // 00000000012C: D8D480AA 1E000007
  ds_swizzle_b32  v31, v7 offset:32768                  // 000000000134: D8D48000 1F000007
  s_waitcnt     lgkmcnt(0)                              // 00000000013C: BF8C007F
  v_sub_f32     v25, v25, v26                           // 000000000140: 08323519
  v_mad_legacy_f32  v27, v17, v20, -v27                 // 000000000144: D280001B 846E2911
  v_mul_legacy_f32  v26, v20, v24                       // 00000000014C: 0E343114
  v_mul_legacy_f32  v32, v21, v24                       // 000000000150: 0E403115
  v_mad_legacy_f32  v28, v24, v23, -v28                 // 000000000154: D280001C 84722F18
  ds_swizzle_b32  v33, v7 offset:32853                  // 00000000015C: D8D48055 21000007
  ds_swizzle_b32  v5, v7 offset:32768                   // 000000000164: D8D48000 05000007
  v_sub_f32     v6, v29, v6                             // 00000000016C: 080C0D1D
  v_sub_f32     v29, v30, v31                           // 000000000170: 083A3F1E
  v_mul_legacy_f32  v30, v19, v27                       // 000000000174: 0E3C3713
  v_mad_legacy_f32  v26, v19, v22, -v26                 // 000000000178: D280001A 846A2D13
  v_mul_legacy_f32  v19, v23, v27                       // 000000000180: 0E263717
  v_mad_legacy_f32  v32, v27, v17, -v32                 // 000000000184: D2800020 8482231B
  v_mul_legacy_f32  v17, v25, v28                       // 00000000018C: 0E223919
  s_waitcnt     lgkmcnt(0)                              // 000000000190: BF8C007F
  v_sub_f32     v5, v33, v5                             // 000000000194: 080A0B21
  v_mul_legacy_f32  v23, v18, v22                       // 000000000198: 0E2E2D12
  v_mad_legacy_f32  v30, v18, v24, -v30                 // 00000000019C: D280001E 847A3112
  v_mad_legacy_f32  v19, v22, v21, -v19                 // 0000000001A4: D2800013 844E2B16
  v_mul_legacy_f32  v18, v29, v28                       // 0000000001AC: 0E24391D
  v_mul_legacy_f32  v21, v25, v32                       // 0000000001B0: 0E2A4119
  v_mac_f32     v17, v6, v26                            // 0000000001B4: 3E223506
  v_mad_legacy_f32  v23, v20, v27, -v23                 // 0000000001B8: D2800017 845E3714
  v_mul_legacy_f32  v20, v29, v32                       // 0000000001C0: 0E28411D
  v_mac_f32     v18, v5, v26                            // 0000000001C4: 3E243505
  v_mul_legacy_f32  v22, v25, v19                       // 0000000001C8: 0E2C2719
  v_mac_f32     v21, v6, v30                            // 0000000001CC: 3E2A3D06
  v_mul_legacy_f32  v24, v17, v17                       // 0000000001D0: 0E302311
  v_mul_legacy_f32  v19, v29, v19                       // 0000000001D4: 0E26271D
  v_mac_f32     v20, v5, v30                            // 0000000001D8: 3E283D05
  v_mul_legacy_f32  v25, v18, v18                       // 0000000001DC: 0E322512
  v_mac_f32     v22, v6, v23                            // 0000000001E0: 3E2C2F06
  v_mac_f32     v24, v21, v21                           // 0000000001E4: 3E302B15
  s_buffer_load_dwordx4  s[8:11], s[4:7], 0x00          // 0000000001E8: C2840500
  s_waitcnt     vmcnt(1)                                // 0000000001EC: BF8C0F71
  v_mad_f32     v6, v9, 2.0, -1.0                       // 0000000001F0: D2820006 03CDE909
  v_mac_f32     v19, v5, v23                            // 0000000001F8: 3E262F05
  v_mac_f32     v25, v20, v20                           // 0000000001FC: 3E322914
  v_mac_f32     v24, v22, v22                           // 000000000200: 3E302D16
  v_mad_f32     v5, v10, 2.0, -1.0                      // 000000000204: D2820005 03CDE90A
  v_mul_legacy_f32  v9, v6, v6                          // 00000000020C: 0E120D06
  v_mac_f32     v25, v19, v19                           // 000000000210: 3E322713
  v_rsq_f32     v10, v24                                // 000000000214: 7E145D18
  v_mac_f32     v9, v5, v5                              // 000000000218: 3E120B05
  v_rsq_f32     v23, v25                                // 00000000021C: 7E2E5D19
  v_mul_legacy_f32  v17, v17, v10                       // 000000000220: 0E221511
  s_load_dwordx8  s[16:23], s[0:1], 0x00                // 000000000224: C0C80100
  v_sub_f32     v9, 1.0, v9                             // 000000000228: 081212F2
  v_mul_legacy_f32  v18, v18, v23                       // 00000000022C: 0E242F12
  v_mul_legacy_f32  v21, v21, v10                       // 000000000230: 0E2A1515
  v_mul_legacy_f32  v17, v5, v17                        // 000000000234: 0E222305
  v_interp_p1_f32  v24, v0, attr2.z                     // 000000000238: C8600A00
  v_sqrt_f32    v9, v9                                  // 00000000023C: 7E126709
  v_mul_legacy_f32  v20, v20, v23                       // 000000000240: 0E282F14
  v_mul_legacy_f32  v10, v22, v10                       // 000000000244: 0E141516
  v_mul_legacy_f32  v21, v5, v21                        // 000000000248: 0E2A2B05
  v_mac_f32     v17, v6, v18                            // 00000000024C: 3E222506
  v_interp_p1_f32  v18, v0, attr2.y                     // 000000000250: C8480900
  v_interp_p2_f32  v24, v1, attr2.z                     // 000000000254: C8610A01
  s_waitcnt     lgkmcnt(0)                              // 000000000258: BF8C007F
  v_sub_f32     v15, s10, v15                           // 00000000025C: 081E1E0A
  v_mul_legacy_f32  v19, v19, v23                       // 000000000260: 0E262F13
  v_mul_legacy_f32  v5, v5, v10                         // 000000000264: 0E0A1505
  v_mac_f32     v21, v6, v20                            // 000000000268: 3E2A2906
  v_interp_p1_f32  v10, v0, attr2.x                     // 00000000026C: C8280800
  v_interp_p2_f32  v18, v1, attr2.y                     // 000000000270: C8490901
  v_mac_f32     v17, v9, v24                            // 000000000274: 3E223109
  v_sub_f32     v16, s9, v16                            // 000000000278: 08202009
  v_mul_legacy_f32  v20, v15, v15                       // 00000000027C: 0E281F0F
  v_mac_f32     v5, v6, v19                             // 000000000280: 3E0A2706
  v_interp_p2_f32  v10, v1, attr2.x                     // 000000000284: C8290801
  v_mac_f32     v21, v9, v18                            // 000000000288: 3E2A2509
  v_mul_legacy_f32  v6, v17, v17                        // 00000000028C: 0E0C2311
  v_sub_f32     v14, s8, v14                            // 000000000290: 081C1C08
  v_mac_f32     v20, v16, v16                           // 000000000294: 3E282110
  v_mac_f32     v5, v9, v10                             // 000000000298: 3E0A1509
  v_mac_f32     v6, v21, v21                            // 00000000029C: 3E0C2B15
  image_sample  v[7:10], v[7:8], s[16:23], s[12:15] dmask:0xf // 0000000002A0: F0800F00 00640707
  v_mac_f32     v20, v14, v14                           // 0000000002A8: 3E281D0E
  v_mac_f32     v6, v5, v5                              // 0000000002AC: 3E0C0B05
  v_rsq_f32     v18, v20                                // 0000000002B0: 7E245D14
  v_rsq_f32     v6, v6                                  // 0000000002B4: 7E0C5D06
  v_mul_legacy_f32  v15, v15, v18                       // 0000000002B8: 0E1E250F
  v_mul_legacy_f32  v17, v17, v6                        // 0000000002BC: 0E220D11
  s_buffer_load_dwordx2  s[2:3], s[4:7], 0x5e           // 0000000002C0: C241055E
  v_mul_legacy_f32  v16, v16, v18                       // 0000000002C4: 0E202510
  v_mul_legacy_f32  v19, v21, v6                        // 0000000002C8: 0E260D15
  v_mul_legacy_f32  v20, -v15, v17                      // 0000000002CC: D20E0014 2002230F
  v_mul_legacy_f32  v14, v14, v18                       // 0000000002D4: 0E1C250E
  v_mul_legacy_f32  v5, v5, v6                          // 0000000002D8: 0E0A0D05
  v_mad_legacy_f32  v20, -v16, v19, v20                 // 0000000002DC: D2800014 24522710
  s_load_dwordx16  s[8:23], s[0:1], 0x18                // 0000000002E4: C1040118
  s_load_dwordx4  s[24:27], s[0:1], 0x2c                // 0000000002E8: C08C012C
  s_nop         0x0000                                  // 0000000002EC: BF800000
  v_mad_legacy_f32  v20, -v14, v5, v20 mul:2            // 0000000002F0: D2800014 2C520B0E
  v_cubema_f32  v6, v5, v19, v17                        // 0000000002F8: D28E0006 04462705
  v_mad_legacy_f32  v18, v5, -v20, -v14                 // 000000000300: D2800012 C43A2905
  v_mad_legacy_f32  v21, v19, -v20, -v16                // 000000000308: D2800015 C4422913
  v_mad_legacy_f32  v20, v17, -v20, -v15                // 000000000310: D2800014 C43E2911
  v_cubetc_f32  v22, v5, v19, v17                       // 000000000318: D28C0016 04462705
  v_cubesc_f32  v23, v5, v19, v17                       // 000000000320: D28A0017 04462705
  v_rcp_f32     v6, abs(v6)                             // 000000000328: D3540106 00000106
  v_cubema_f32  v24, v18, v21, v20                      // 000000000330: D28E0018 04522B12
  v_cubeid_f32  v30, v5, v19, v17                       // 000000000338: D288001E 04462705
  v_madak_f32   v29, v22, v6, 0x3fc00000                // 000000000340: 423A0D16 3FC00000
  v_madak_f32   v28, v23, v6, 0x3fc00000                // 000000000348: 42380D17 3FC00000
  s_waitcnt     lgkmcnt(0)                              // 000000000350: BF8C007F
  v_cvt_f32_i32  v23, s2                                // 000000000354: 7E2E0A02
  v_cubetc_f32  v26, v18, v21, v20                      // 000000000358: D28C001A 04522B12
  v_cubesc_f32  v27, v18, v21, v20                      // 000000000360: D28A001B 04522B12
  v_rcp_f32     v24, abs(v24)                           // 000000000368: D3540118 00000118
  s_waitcnt     vmcnt(1)                                // 000000000370: BF8C0F71
  v_mul_legacy_f32  v23, v12, v23                       // 000000000374: 0E2E2F0C
  v_cubeid_f32  v22, v18, v21, v20                      // 000000000378: D2880016 04522B12
  v_madak_f32   v21, v26, v24, 0x3fc00000               // 000000000380: 422A311A 3FC00000
  v_madak_f32   v20, v27, v24, 0x3fc00000               // 000000000388: 4228311B 3FC00000
  image_sample  v[24:27], v[28:29], s[16:23], s[24:27] dmask:0x7 // 000000000390: F0800700 00C4181C
  image_sample_l  v[20:23], v[20:21], s[8:15], s[24:27] dmask:0x7 // 000000000398: F0900700 00C21414
  s_buffer_load_dwordx4  s[8:11], s[4:7], 0x40          // 0000000003A0: C2840540
  s_buffer_load_dwordx4  s[12:15], s[4:7], 0x44         // 0000000003A4: C2860544
  s_buffer_load_dwordx4  s[16:19], s[4:7], 0x48         // 0000000003A8: C2880548
  s_waitcnt     lgkmcnt(0)                              // 0000000003AC: BF8C007F
  v_mul_legacy_f32  v6, s10, s10                        // 0000000003B0: D20E0006 0000140A
  v_mad_f32     v6, s9, s9, v6                          // 0000000003B8: D2820006 04181209
  v_mul_legacy_f32  v18, s14, s14                       // 0000000003C0: D20E0012 00001C0E
  v_mad_f32     v6, s8, s8, v6                          // 0000000003C8: D2820006 04181008
  v_mad_f32     v18, s13, s13, v18                      // 0000000003D0: D2820012 04481A0D
  v_mul_legacy_f32  v23, s18, s18                       // 0000000003D8: D20E0017 00002412
  v_rsq_f32     v6, v6                                  // 0000000003E0: 7E0C5D06
  v_mad_f32     v18, s12, s12, v18                      // 0000000003E4: D2820012 0448180C
  v_mad_f32     v23, s17, s17, v23                      // 0000000003EC: D2820017 045C2211
  v_mad_legacy_f32  v27, -s10, v6, v15                  // 0000000003F4: D280001B 243E0C0A
  v_rsq_f32     v18, v18                                // 0000000003FC: 7E245D12
  v_mad_f32     v23, s16, s16, v23                      // 000000000400: D2820017 045C2010
  v_mad_legacy_f32  v28, -s9, v6, v16                   // 000000000408: D280001C 24420C09
  v_mul_legacy_f32  v29, v27, v27                       // 000000000410: 0E3A371B
  v_mad_legacy_f32  v30, -s14, v18, v15                 // 000000000414: D280001E 243E240E
  v_rsq_f32     v23, v23                                // 00000000041C: 7E2E5D17
  v_mad_legacy_f32  v31, -s8, v6, v14                   // 000000000420: D280001F 243A0C08
  v_mac_f32     v29, v28, v28                           // 000000000428: 3E3A391C
  v_mad_legacy_f32  v32, -s13, v18, v16                 // 00000000042C: D2800020 2442240D
  v_mul_legacy_f32  v33, v30, v30                       // 000000000434: 0E423D1E
  v_mad_legacy_f32  v34, -s18, v23, v15                 // 000000000438: D2800022 243E2E12
  v_mac_f32     v29, v31, v31                           // 000000000440: 3E3A3F1F
  v_mad_legacy_f32  v35, -s12, v18, v14                 // 000000000444: D2800023 243A240C
  v_mac_f32     v33, v32, v32                           // 00000000044C: 3E424120
  v_mad_legacy_f32  v36, -s17, v23, v16                 // 000000000450: D2800024 24422E11
  v_mul_legacy_f32  v37, v34, v34                       // 000000000458: 0E4A4522
  v_rsq_f32     v29, v29                                // 00000000045C: 7E3A5D1D
  v_mac_f32     v33, v35, v35                           // 000000000460: 3E424723
  v_mad_legacy_f32  v38, -s16, v23, v14                 // 000000000464: D2800026 243A2E10
  v_mac_f32     v37, v36, v36                           // 00000000046C: 3E4A4924
  v_mul_legacy_f32  v27, v27, v29                       // 000000000470: 0E363B1B
  v_rsq_f32     v33, v33                                // 000000000474: 7E425D21
  v_mac_f32     v37, v38, v38                           // 000000000478: 3E4A4D26
  v_mul_legacy_f32  v28, v28, v29                       // 00000000047C: 0E383B1C
  v_mul_legacy_f32  v39, v17, v27                       // 000000000480: 0E4E3711
  v_mul_legacy_f32  v30, v30, v33                       // 000000000484: 0E3C431E
  v_rsq_f32     v37, v37                                // 000000000488: 7E4A5D25
  v_mul_legacy_f32  v40, -s10, v6                       // 00000000048C: D20E0028 20020C0A
  v_mul_legacy_f32  v29, v31, v29                       // 000000000494: 0E3A3B1F
  v_mac_f32     v39, v19, v28                           // 000000000498: 3E4E3913
  v_mul_legacy_f32  v31, v32, v33                       // 00000000049C: 0E3E4320
  v_mul_legacy_f32  v32, v17, v30                       // 0000000004A0: 0E403D11
  v_mul_legacy_f32  v34, v34, v37                       // 0000000004A4: 0E444B22
  v_mul_legacy_f32  v41, v12, v12                       // 0000000004A8: 0E52190C
  v_mul_legacy_f32  v42, -s9, v6                        // 0000000004AC: D20E002A 20020C09
  v_mul_legacy_f32  v27, v40, v27                       // 0000000004B4: 0E363728
  v_mad_legacy_f32  v39, v5, v29, v39 clamp             // 0000000004B8: D2800827 049E3B05
  v_mul_legacy_f32  v43, -s14, v18                      // 0000000004C0: D20E002B 2002240E
  v_mul_legacy_f32  v33, v35, v33                       // 0000000004C8: 0E424323
  v_mac_f32     v32, v19, v31                           // 0000000004CC: 3E403F13
  v_mul_legacy_f32  v35, v36, v37                       // 0000000004D0: 0E464B24
  v_mul_legacy_f32  v36, v17, v34                       // 0000000004D4: 0E484511
  s_buffer_load_dword  s0, s[4:7], 0x60                 // 0000000004D8: C2000560
  v_mul_legacy_f32  v15, v15, v17                       // 0000000004DC: 0E1E230F
  v_mad_f32     v44, v41, v41, -1.0                     // 0000000004E0: D282002C 03CE5329
  v_mul_legacy_f32  v6, -s8, v6                         // 0000000004E8: D20E0006 20020C08
  v_mul_legacy_f32  v40, v17, v40                       // 0000000004F0: 0E505111
  v_mac_f32     v27, v42, v28                           // 0000000004F4: 3E36392A
  v_mul_legacy_f32  v28, v39, v39                       // 0000000004F8: 0E384F27
  v_mul_legacy_f32  v39, -s13, v18                      // 0000000004FC: D20E0027 2002240D
  v_mul_legacy_f32  v30, v43, v30                       // 000000000504: 0E3C3D2B
  v_mad_legacy_f32  v32, v5, v33, v32 clamp             // 000000000508: D2800820 04824305
  v_mul_legacy_f32  v45, -s18, v23                      // 000000000510: D20E002D 20022E12
  v_mul_legacy_f32  v37, v38, v37                       // 000000000518: 0E4A4B26
  v_mac_f32     v36, v19, v35                           // 00000000051C: 3E484713
  v_interp_p1_f32  v38, v0, attr3.w                     // 000000000520: C8980F00
  v_mac_f32     v15, v19, v16                           // 000000000524: 3E1E2113
  v_mac_f32     v40, v19, v42                           // 000000000528: 3E505513
  v_mad_legacy_f32  v27, v6, v29, v27 clamp             // 00000000052C: D280081B 046E3B06
  v_mad_f32     v16, v28, v44, 1.0                      // 000000000534: D2820010 03CA591C
  v_mul_legacy_f32  v18, -s12, v18                      // 00000000053C: D20E0012 2002240C
  v_mul_legacy_f32  v28, v17, v43                       // 000000000544: 0E385711
  v_mac_f32     v30, v39, v31                           // 000000000548: 3E3C3F27
  v_mul_legacy_f32  v29, v32, v32                       // 00000000054C: 0E3A4120
  v_mul_legacy_f32  v31, -s17, v23                      // 000000000550: D20E001F 20022E11
  v_mul_legacy_f32  v32, v45, v34                       // 000000000558: 0E40452D
  v_mad_legacy_f32  v36, v5, v37, v36 clamp             // 00000000055C: D2800824 04924B05
  v_interp_p1_f32  v34, v0, attr3.y                     // 000000000564: C8880D00
  v_interp_p2_f32  v38, v1, attr3.w                     // 000000000568: C8990F01
  v_mad_legacy_f32  v15, v5, v14, v15 clamp             // 00000000056C: D280080F 043E1D05
  s_mov_b32     s1, 0xbd23d70a                          // 000000000574: BE8103FF BD23D70A
  v_mad_legacy_f32  v40, v5, v6, v40 clamp              // 00000000057C: D2800828 04A20D05
  v_mul_legacy_f32  v6, v16, v16                        // 000000000584: 0E0C2110
  s_mov_b32     s2, 0x40490fdb                          // 000000000588: BE8203FF 40490FDB
  v_sub_f32     v14, 1.0, v27                           // 000000000590: 081C36F2
  v_mac_f32     v28, v19, v39                           // 000000000594: 3E384F13
  v_mad_legacy_f32  v30, v18, v33, v30 clamp            // 000000000598: D280081E 047A4312
  v_mad_f32     v16, v29, v44, 1.0                      // 0000000005A0: D2820010 03CA591D
  v_mul_legacy_f32  v23, -s16, v23                      // 0000000005A8: D20E0017 20022E10
  v_mul_legacy_f32  v17, v17, v45                       // 0000000005B0: 0E225B11
  v_mac_f32     v32, v31, v35                           // 0000000005B4: 3E40471F
  v_mul_legacy_f32  v29, v36, v36                       // 0000000005B8: 0E3A4924
  v_interp_p1_f32  v33, v0, attr3.x                     // 0000000005BC: C8840C00
  v_interp_p2_f32  v34, v1, attr3.y                     // 0000000005C0: C8890D01
  v_rcp_f32     v35, v38                                // 0000000005C4: 7E465526
  s_waitcnt     vmcnt(2)                                // 0000000005C8: BF8C0F72
  v_add_f32     v36, s1, v7                             // 0000000005CC: 06480E01
  v_add_f32     v38, s1, v8                             // 0000000005D0: 064C1001
  v_add_f32     v39, s1, v9                             // 0000000005D4: 064E1201
  v_sub_f32     v42, 1.0, v15                           // 0000000005D8: 08541EF2
  v_sub_f32     v43, 1.0, v40                           // 0000000005DC: 085650F2
  v_mul_legacy_f32  v6, s2, v6                          // 0000000005E0: 0E0C0C02
  s_mov_b32     s1, 0x358637bd                          // 0000000005E4: BE8103FF 358637BD
  v_mad_legacy_f32  v14, -v27, v14, v14                 // 0000000005EC: D280000E 243A1D1B
  v_mad_legacy_f32  v28, v5, v18, v28 clamp             // 0000000005F4: D280081C 04722505
  v_mul_legacy_f32  v16, v16, v16                       // 0000000005FC: 0E202110
  v_sub_f32     v18, 1.0, v30                           // 000000000600: 08243CF2
  v_mac_f32     v17, v19, v31                           // 000000000604: 3E223F13
  v_mad_legacy_f32  v32, v23, v37, v32 clamp            // 000000000608: D2800820 04824B17
  v_mad_f32     v19, v29, v44, 1.0                      // 000000000610: D2820013 03CA591D
  v_interp_p2_f32  v33, v1, attr3.x                     // 000000000618: C8850C01
  v_mul_f32     v29, v34, v35                           // 00000000061C: 103A4722
  s_buffer_load_dwordx4  s[8:11], s[4:7], 0x4c          // 000000000620: C284054C
  v_madak_f32   v31, v13, v36, 0x3d23d70a               // 000000000624: 423E490D 3D23D70A
  v_madak_f32   v34, v13, v38, 0x3d23d70a               // 00000000062C: 42444D0D 3D23D70A
  v_madak_f32   v36, v13, v39, 0x3d23d70a               // 000000000634: 42484F0D 3D23D70A
  v_mad_legacy_f32  v42, -v15, v42, v42                 // 00000000063C: D280002A 24AA550F
  v_mul_legacy_f32  v37, v41, v41                       // 000000000644: 0E4A5329
  v_mad_legacy_f32  v43, -v40, v43, v43                 // 000000000648: D280002B 24AE5728
  v_max_legacy_f32  v6, s1, v6                          // 000000000650: 1C0C0C01
  v_mul_legacy_f32  v14, v14, v14                       // 000000000654: 0E1C1D0E
  v_sub_f32     v38, 1.0, v28                           // 000000000658: 084C38F2
  v_mul_legacy_f32  v16, s2, v16                        // 00000000065C: 0E202002
  v_mad_legacy_f32  v18, -v30, v18, v18                 // 000000000660: D2800012 244A251E
  v_mad_legacy_f32  v17, v5, v23, v17 clamp             // 000000000668: D2800811 04462F05
  v_mul_legacy_f32  v5, v19, v19                        // 000000000670: 0E0A2713
  v_sub_f32     v19, 1.0, v32                           // 000000000674: 082640F2
  v_interp_p1_f32  v0, v0, attr3.z                      // 000000000678: C8000E00
  v_mul_f32     v23, v33, v35                           // 00000000067C: 102E4721
  v_mad_f32     v29, v29, -0.5, 0.5                     // 000000000680: D282001D 03C1E31D
  s_buffer_load_dwordx4  s[12:15], s[4:7], 0x50         // 000000000688: C2860550
  v_mul_legacy_f32  v33, v11, v31                       // 00000000068C: 0E423F0B
  v_mul_legacy_f32  v39, v11, v34                       // 000000000690: 0E4E450B
  v_mul_legacy_f32  v41, v11, v36                       // 000000000694: 0E52490B
  v_max_f32     v12, v12, v12 mul:2                     // 000000000698: D220000C 0802190C
  v_mul_legacy_f32  v42, v42, v42                       // 0000000006A0: 0E54552A
  v_mad_legacy_f32  v31, -v11, v31, 1.0                 // 0000000006A4: D280001F 23CA3F0B
  v_mad_legacy_f32  v34, -v11, v34, 1.0                 // 0000000006AC: D2800022 23CA450B
  v_mad_legacy_f32  v36, -v11, v36, 1.0                 // 0000000006B4: D2800024 23CA490B
  v_mul_legacy_f32  v44, 0x3e800000, v37                // 0000000006BC: 0E584AFF 3E800000
  v_mul_legacy_f32  v45, v27, v27                       // 0000000006C4: 0E5A371B
  v_mul_legacy_f32  v43, v43, v43                       // 0000000006C8: 0E56572B
  v_rcp_f32     v6, v6                                  // 0000000006CC: 7E0C5506
  v_mad_legacy_f32  v14, -v27, v14, v14                 // 0000000006D0: D280000E 243A1D1B
  v_mad_legacy_f32  v27, -v27, v27, 1.0                 // 0000000006D8: D280001B 23CA371B
  v_mad_legacy_f32  v38, -v28, v38, v38                 // 0000000006E0: D2800026 249A4D1C
  v_max_legacy_f32  v16, s1, v16                        // 0000000006E8: 1C202001
  v_mul_legacy_f32  v18, v18, v18                       // 0000000006EC: 0E242512
  v_sub_f32     v46, 1.0, v17                           // 0000000006F0: 085C22F2
  v_mul_legacy_f32  v5, s2, v5                          // 0000000006F4: 0E0A0A02
  v_mad_legacy_f32  v19, -v32, v19, v19                 // 0000000006F8: D2800013 244E2720
  v_interp_p2_f32  v0, v1, attr3.z                      // 000000000700: C8010E01
  v_mad_f32     v1, v23, 0.5, 0.5                       // 000000000704: D2820001 03C1E117
  s_waitcnt     lgkmcnt(0)                              // 00000000070C: BF8C007F
  v_mad_legacy_f32  v3, v29, s0, -v3                    // 000000000710: D2800003 840C011D
  s_buffer_load_dwordx4  s[16:19], s[4:7], 0x54         // 000000000718: C2880554
  v_mad_legacy_f32  v42, -v15, v42, v42                 // 00000000071C: D280002A 24AA550F
  v_mad_f32     v15, v45, v12, -0.5                     // 000000000724: D282000F 03C6192D
  v_mad_legacy_f32  v43, -v40, v43, v43                 // 00000000072C: D280002B 24AE5728
  v_mul_f32     v6, v37, v6                             // 000000000734: 100C0D25
  v_mad_f32     v23, v31, v14, v33                      // 000000000738: D2820017 04861D1F
  v_mad_f32     v29, v34, v14, v39                      // 000000000740: D282001D 049E1D22
  v_mad_f32     v14, v36, v14, v41                      // 000000000748: D282000E 04A61D24
  v_mac_f32     v45, v44, v27                           // 000000000750: 3E5A372C
  v_mul_legacy_f32  v27, v30, v30                       // 000000000754: 0E363D1E
  v_mul_legacy_f32  v38, v38, v38                       // 000000000758: 0E4C4D26
  v_rcp_f32     v16, v16                                // 00000000075C: 7E205510
  v_mad_legacy_f32  v18, -v30, v18, v18                 // 000000000760: D2800012 244A251E
  v_mad_legacy_f32  v30, -v30, v30, 1.0                 // 000000000768: D280001E 23CA3D1E
  v_mad_legacy_f32  v46, -v17, v46, v46                 // 000000000770: D280002E 24BA5D11
  v_max_legacy_f32  v5, s1, v5                          // 000000000778: 1C0A0A01
  v_mul_legacy_f32  v19, v19, v19                       // 00000000077C: 0E262713
  v_mad_legacy_f32  v2, s3, v1, -v2                     // 000000000780: D2800002 840A0203
  v_mad_f32     v4, v0, v35, -v4                        // 000000000788: D2820004 84124700
  v_mul_legacy_f32  v0, 0x38000000, v3                  // 000000000790: 0E0006FF 38000000
  s_mov_b32     s0, 0x3bffe000                          // 000000000798: BE8003FF 3BFFE000
  v_mad_legacy_f32  v7, v13, -v7, v7                    // 0000000007A0: D2800007 441E0F0D
  v_mad_legacy_f32  v8, v13, -v8, v8                    // 0000000007A8: D2800008 4422110D
  v_mad_legacy_f32  v9, v13, -v9, v9                    // 0000000007B0: D2800009 4426130D
  v_mad_f32     v1, v15, v43, 1.0                       // 0000000007B8: D2820001 03CA570F
  v_mad_f32     v13, v15, v42, 1.0                      // 0000000007C0: D282000D 03CA550F
  v_rcp_f32     v15, v45                                // 0000000007C8: 7E1E552D
  v_mul_legacy_f32  v23, v6, v23                        // 0000000007CC: 0E2E2F06
  v_mul_legacy_f32  v29, v6, v29                        // 0000000007D0: 0E3A3B06
  v_mul_legacy_f32  v6, v6, v14                         // 0000000007D4: 0E0C1D06
  v_mad_f32     v14, v27, v12, -0.5                     // 0000000007D8: D282000E 03C6191B
  v_mad_legacy_f32  v38, -v28, v38, v38                 // 0000000007E0: D2800026 249A4D1C
  v_mul_f32     v16, v37, v16                           // 0000000007E8: 10202125
  v_mad_f32     v35, v31, v18, v33                      // 0000000007EC: D2820023 0486251F
  v_mad_f32     v43, v34, v18, v39                      // 0000000007F4: D282002B 049E2522
  v_mad_f32     v18, v36, v18, v41                      // 0000000007FC: D2820012 04A62524
  v_mac_f32     v27, v44, v30                           // 000000000804: 3E363D2C
  v_mul_legacy_f32  v30, v32, v32                       // 000000000808: 0E3C4120
  v_mul_legacy_f32  v45, v46, v46                       // 00000000080C: 0E5A5D2E
  v_rcp_f32     v5, v5                                  // 000000000810: 7E0A5505
  v_mad_legacy_f32  v19, -v32, v19, v19                 // 000000000814: D2800013 244E2720
  v_mad_legacy_f32  v32, -v32, v32, 1.0                 // 00000000081C: D2800020 23CA4120
  v_mul_legacy_f32  v46, 0x38000000, v2                 // 000000000824: 0E5C04FF 38000000
  v_mul_legacy_f32  v47, 0x3c000000, v4                 // 00000000082C: 0E5E08FF 3C000000
  v_min_legacy_f32  v0, abs(v0), s0                     // 000000000834: D21A0100 00000100
  v_mul_legacy_f32  v7, v11, v7                         // 00000000083C: 0E0E0F0B
  v_mul_legacy_f32  v8, v11, v8                         // 000000000840: 0E10110B
  v_mul_legacy_f32  v9, v11, v9                         // 000000000844: 0E12130B
  v_mul_legacy_f32  v1, v1, v13                         // 000000000848: 0E021B01
  v_mul_legacy_f32  v11, v15, v23                       // 00000000084C: 0E162F0F
  v_mul_legacy_f32  v13, v15, v29                       // 000000000850: 0E1A3B0F
  v_mul_legacy_f32  v6, v15, v6                         // 000000000854: 0E0C0D0F
  v_mad_f32     v15, v14, v38, 1.0                      // 000000000858: D282000F 03CA4D0E
  v_mad_f32     v14, v14, v42, 1.0                      // 000000000860: D282000E 03CA550E
  v_rcp_f32     v23, v27                                // 000000000868: 7E2E551B
  v_mul_legacy_f32  v27, v16, v35                       // 00000000086C: 0E364710
  v_mul_legacy_f32  v29, v16, v43                       // 000000000870: 0E3A5710
  v_mul_legacy_f32  v16, v16, v18                       // 000000000874: 0E202510
  v_mad_f32     v12, v30, v12, -0.5                     // 000000000878: D282000C 03C6191E
  v_mad_legacy_f32  v45, -v17, v45, v45                 // 000000000880: D280002D 24B65B11
  v_mul_f32     v5, v37, v5                             // 000000000888: 100A0B25
  v_mad_f32     v18, v31, v19, v33                      // 00000000088C: D2820012 0486271F
  v_mad_f32     v31, v34, v19, v39                      // 000000000894: D282001F 049E2722
  v_mad_f32     v19, v36, v19, v41                      // 00000000089C: D2820013 04A62724
  v_mac_f32     v30, v44, v32                           // 0000000008A4: 3E3C412C
  v_min_legacy_f32  v32, abs(v46), s0                   // 0000000008A8: D21A0120 0000012E
  v_min_legacy_f32  v34, abs(v47), s0                   // 0000000008B0: D21A0122 0000012F
  v_cvt_pkrtz_f16_f32  v0, v0, 0                        // 0000000008B8: D25E0000 00010100
  s_buffer_load_dword  s0, s[4:7], 0x5b                 // 0000000008C0: C200055B
  v_mul_legacy_f32  v35, s8, v40                        // 0000000008C4: 0E465008
  v_mul_legacy_f32  v36, s9, v40                        // 0000000008C8: 0E485009
  v_mul_legacy_f32  v37, s10, v40                       // 0000000008CC: 0E4A500A
  v_mac_f32     v11, v7, v1                             // 0000000008D0: 3E160307
  v_mac_f32     v13, v8, v1                             // 0000000008D4: 3E1A0308
  v_mac_f32     v6, v9, v1                              // 0000000008D8: 3E0C0309
  v_mul_legacy_f32  v1, v15, v14                        // 0000000008DC: 0E021D0F
  v_mul_legacy_f32  v14, v23, v27                       // 0000000008E0: 0E1C3717
  v_mul_legacy_f32  v15, v23, v29                       // 0000000008E4: 0E1E3B17
  v_mul_legacy_f32  v16, v23, v16                       // 0000000008E8: 0E202117
  v_mad_f32     v23, v12, v45, 1.0                      // 0000000008EC: D2820017 03CA5B0C
  v_mad_f32     v12, v12, v42, 1.0                      // 0000000008F4: D282000C 03CA550C
  v_rcp_f32     v27, v30                                // 0000000008FC: 7E36551E
  v_mul_legacy_f32  v18, v5, v18                        // 000000000900: 0E242505
  v_mul_legacy_f32  v29, v5, v31                        // 000000000904: 0E3A3F05
  v_mul_legacy_f32  v5, v5, v19                         // 000000000908: 0E0A2705
  v_lshrrev_b32  v3, 31, v3                             // 00000000090C: 2C06069F
  v_cvt_pkrtz_f16_f32  v19, v32, 0                      // 000000000910: D25E0013 00010120
  v_cvt_pkrtz_f16_f32  v30, v34, 0                      // 000000000918: D25E001E 00010122
  v_add_i32     v0, vcc, 8, v0                          // 000000000920: 4A000088
  v_mul_legacy_f32  v11, v35, v11                       // 000000000924: 0E161723
  v_mul_legacy_f32  v13, v36, v13                       // 000000000928: 0E1A1B24
  v_mul_legacy_f32  v6, v37, v6                         // 00000000092C: 0E0C0D25
  v_mul_legacy_f32  v31, s12, v28                       // 000000000930: 0E3E380C
  v_mul_legacy_f32  v32, s13, v28                       // 000000000934: 0E40380D
  v_mul_legacy_f32  v28, s14, v28                       // 000000000938: 0E38380E
  v_mac_f32     v14, v7, v1                             // 00000000093C: 3E1C0307
  v_mac_f32     v15, v8, v1                             // 000000000940: 3E1E0308
  v_mac_f32     v16, v9, v1                             // 000000000944: 3E200309
  v_mul_legacy_f32  v1, v23, v12                        // 000000000948: 0E021917
  v_mul_legacy_f32  v12, v27, v18                       // 00000000094C: 0E18251B
  v_mul_legacy_f32  v18, v27, v29                       // 000000000950: 0E243B1B
  v_mul_legacy_f32  v5, v27, v5                         // 000000000954: 0E0A0B1B
  v_lshrrev_b32  v2, 31, v2                             // 000000000958: 2C04049F
  v_lshrrev_b32  v4, 31, v4                             // 00000000095C: 2C08089F
  v_add_i32     v19, vcc, 8, v19                        // 000000000960: 4A262688
  v_add_i32     v23, vcc, 2, v30                        // 000000000964: 4A2E3C82
  v_lshrrev_b32  v0, 4, v0                              // 000000000968: 2C000084
  v_lshlrev_b32  v3, 9, v3                              // 00000000096C: 34060689
  v_mac_f32     v11, v31, v14                           // 000000000970: 3E161D1F
  v_mac_f32     v13, v32, v15                           // 000000000974: 3E1A1F20
  v_mac_f32     v6, v28, v16                            // 000000000978: 3E0C211C
  s_waitcnt     lgkmcnt(0)                              // 00000000097C: BF8C007F
  v_mul_legacy_f32  v14, s16, v17                       // 000000000980: 0E1C2210
  v_mul_legacy_f32  v15, s17, v17                       // 000000000984: 0E1E2211
  v_mul_legacy_f32  v16, s18, v17                       // 000000000988: 0E202212
  v_mac_f32     v12, v7, v1                             // 00000000098C: 3E180307
  v_mac_f32     v18, v8, v1                             // 000000000990: 3E240308
  v_mac_f32     v5, v9, v1                              // 000000000994: 3E0A0309
  v_lshrrev_b32  v1, 4, v19                             // 000000000998: 2C022684
  v_lshrrev_b32  v17, 2, v23                            // 00000000099C: 2C222E82
  v_lshlrev_b32  v2, 9, v2                              // 0000000009A0: 34040489
  v_lshlrev_b32  v4, 11, v4                             // 0000000009A4: 3408088B
  v_or_b32      v0, v0, v3                              // 0000000009A8: 38000700
  v_mac_f32     v11, v14, v12                           // 0000000009AC: 3E16190E
  v_mac_f32     v13, v15, v18                           // 0000000009B0: 3E1A250F
  v_mac_f32     v6, v16, v5                             // 0000000009B4: 3E0C0B10
  v_or_b32      v1, v1, v2                              // 0000000009B8: 38020501
  v_or_b32      v2, v17, v4                             // 0000000009BC: 38040911
  v_lshlrev_b32  v0, 10, v0                             // 0000000009C0: 3400008A
  s_waitcnt     vmcnt(1)                                // 0000000009C4: BF8C0F71
  v_mac_f32     v11, v7, v24                            // 0000000009C8: 3E163107
  v_mac_f32     v13, v8, v25                            // 0000000009CC: 3E1A3308
  v_mac_f32     v6, v9, v26                             // 0000000009D0: 3E0C3509
  v_lshlrev_b32  v2, 20, v2                             // 0000000009D4: 34040494
  v_or_b32      v0, v1, v0                              // 0000000009D8: 38000101
  s_waitcnt     vmcnt(0)                                // 0000000009DC: BF8C0F70
  v_mac_f32     v11, v33, v20                           // 0000000009E0: 3E162921
  v_mac_f32     v13, v39, v21                           // 0000000009E4: 3E1A2B27
  v_mac_f32     v6, v41, v22                            // 0000000009E8: 3E0C2D29
  v_mul_legacy_f32  v1, s0, v10                         // 0000000009EC: 0E021400
  v_or_b32      v0, v2, v0                              // 0000000009F0: 38000102
  s_mov_b64     exec, s[28:29]                          // 0000000009F4: BEFE041C
  v_cvt_pkrtz_f16_f32  v0, v0, v0                       // 0000000009F8: 5E000100
  s_nop         0x0000                                  // 0000000009FC: BF800000
  exp           mrt1, v0, v0, off, off compr vm         // 000000000A00: F8001413 00000000
  v_cvt_pkrtz_f16_f32  v2, v11, v13                     // 000000000A08: 5E041B0B
  v_cvt_pkrtz_f16_f32  v1, v6, v1                       // 000000000A0C: 5E020306
  exp           mrt0, v2, v2, v1, v1 done compr vm      // 000000000A10: F8001C0F 00000102
  s_endpgm                                              // 000000000A18: BF810000
end


// Shader Statistics:
//  NumActiveWaveFront:         20
//  WorkgroupSize:              64
//  NumVRegs:                   48
//  NumSRegs:                   32
//  NumActiveWaveFrontByVReg:   20
//  NumActiveWaveFrontBySReg:   40
//  NumActiveWaveFrontByLDS:    40
//  CycleSim:                   471
//  CycleSimNWaves:             471
//  Code Size:                  2588
//Assembler Counts:
//  num_32bit_ops                     : 335
//  num_64bit_ops                     : 148
//  num_alu                           : 409
//  num_fc                            : 47
//  num_inst_exp                      : 2
//  num_inst_ldsgds                   : 20
//  num_inst_mimg                     : 5
//  num_inst_mtbuf                    : 0
//  num_inst_mubuf                    : 0
//  num_inst_sopp                     : 22
//  num_inst_sopc                     : 0
//  num_inst_sop1                     : 8
//  num_inst_sop2                     : 0
//  num_inst_smrd                     : 0
//  num_inst_sopk                     : 0
//  num_inst_vop1                     : 19
//  num_inst_vop2                     : 245
//  num_inst_vop3                     : 88
//  num_inst_vopc                     : 0
//  num_inst_vintrp                   : 24
//  constant_literal_operands         : 0
//  num_tex                           : 27
//  num_vmem_group                    : 4
//  vmem_grouping_started             : 0
//
//Compilation Notes:
//
//  PS has no UAV writes, consider forcing REZ/LATEZ.
// Shader Statistics:
// m_uNumActiveWaveFront             : 20
// m_uVRegLimit                      : 256
// m_uSRegLimit                      : 512
// m_uNumVRegs                       : 48
// m_uNumSRegs                       : 32
// m_uSCCodeSize                     : 2588
// m_uWorkgroupSize                  : 64
// m_uNumActiveWaveFrontByVReg       : 20
// m_uNumActiveWaveFrontBySReg       : 40
// m_uNumActiveWaveFrontByLDS        : 40
// m_uCycleSim1Wave                  : 471
// m_uCycleSimNWaves                 : 471

// Assembler Counts:
// num_32bit_ops                     : 335
// num_64bit_ops                     : 148
// num_alu                           : 409
// num_fc                            : 47
// num_inst_exp                      : 2
// num_inst_ldsgds                   : 20
// num_inst_mimg                     : 5
// num_inst_mtbuf                    : 0
// num_inst_mubuf                    : 0
// num_inst_sopp                     : 22
// num_inst_sopc                     : 0
// num_inst_sop1                     : 8
// num_inst_sop2                     : 0
// num_inst_smrd                     : 0
// num_inst_sopk                     : 0
// num_inst_vop1                     : 19
// num_inst_vop2                     : 245
// num_inst_vop3                     : 88
// num_inst_vopc                     : 0
// num_inst_vintrp                   : 24
// num_inst_smem                     : 17
// constant_literal_operands         : 0
// num_tex                           : 27
// num_vmem_group                    : 4
// vmem_grouping_started             : 0
// m_fFullPrecompilePromise          : 0
// m_fIntegerDivideExpansion         : 0
// m_fIntegerModExpansion            : 0
// m_fDoubleDivideExpansion          : 0
// m_fUsesScratch                    : 0
// m_fPerThreadIndirection           : 0
// m_fUsingTableLoads                : 0
// m_fUsingSHmemLoads                : 1
// fSemanticHashFlagOverrideApplied  : 0
// fPSHasNoUAVWrite                  : 1
// m_fRenderTargetsCanBeCompacted    : 0
// version                           : 3
// fCodePatched                      : 0

// Approximately 0 instruction slots used
#endif

const BYTE PBREffect_PSTexturedVelocity[] =
{
     68,  88,  66,  67,  90,  73, 
    107, 151,  18, 137,  16,  96, 
     85, 123,  49, 214, 109, 136, 
    136, 133,   1,   0,   0,   0, 
     17,  28,   0,   0,   5,   0, 
      0,   0,  52,   0,   0,   0, 
    240,   0,   0,   0,  60,   1, 
      0,   0, 160,  27,   0,   0, 
    176,  27,   0,   0,  73,  83, 
     71,  78, 180,   0,   0,   0, 
      6,   0,   0,   0,   8,   0, 
      0,   0, 152,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      0,   0,   0,   0,   3,   3, 
      0,   0, 152,   0,   0,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   0,   0,  15,   7, 
      0,   0, 152,   0,   0,   0, 
      2,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      2,   0,   0,   0,   7,   7, 
      0,   0, 161,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      3,   0,   0,   0,  15,   0, 
      0,   0, 167,   0,   0,   0, 
      0,   0,   0,   0,   1,   0, 
      0,   0,   3,   0,   0,   0, 
      4,   0,   0,   0,  15,   7, 
      0,   0, 152,   0,   0,   0, 
      4,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      5,   0,   0,   0,  15,  15, 
      0,   0,  84,  69,  88,  67, 
     79,  79,  82,  68,   0,  67, 
     79,  76,  79,  82,   0,  83, 
     86,  95,  80, 111, 115, 105, 
    116, 105, 111, 110,   0, 171, 
     79,  83,  71,  78,  68,   0, 
      0,   0,   2,   0,   0,   0, 
      8,   0,   0,   0,  56,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   3,   0, 
      0,   0,   0,   0,   0,   0, 
     15,   0,   0,   0,  56,   0, 
      0,   0,   1,   0,   0,   0, 
      0,   0,   0,   0,   1,   0, 
      0,   0,   1,   0,   0,   0, 
      1,  14,   0,   0,  83,  86, 
     95,  84,  97, 114, 103, 101, 
    116,   0, 171, 171,  83,  72, 
     69,  88,  92,  26,   0,   0, 
     80,   0,   0,   0, 151,   6, 
      0,   0,  53,  16,   0,   0, 
      5,   0,   0,   0,  11,   4, 
      0,   0,  80,   0,   0,   0, 
      6,   4,   0,   0, 106,   8, 
      0,   1,  89,   8,   0,   4, 
     70, 142,  32,   0,   0,   0, 
      0,   0,  25,   0,   0,   0, 
     90,   0,   0,   3,   0,  96, 
     16,   0,   0,   0,   0,   0, 
     90,   0,   0,   3,   0,  96, 
     16,   0,   1,   0,   0,   0, 
     88,  24,   0,   4,   0, 112, 
     16,   0,   0,   0,   0,   0, 
     85,  85,   0,   0,  88,  24, 
      0,   4,   0, 112,  16,   0, 
      1,   0,   0,   0,  85,  85, 
      0,   0,  88,  24,   0,   4, 
      0, 112,  16,   0,   2,   0, 
      0,   0,  85,  85,   0,   0, 
     88,  48,   0,   4,   0, 112, 
     16,   0,   4,   0,   0,   0, 
     85,  85,   0,   0,  88,  48, 
      0,   4,   0, 112,  16,   0, 
      5,   0,   0,   0,  85,  85, 
      0,   0,  98,  16,   0,   3, 
     50,  16,  16,   0,   0,   0, 
      0,   0,  98,  16,   0,   3, 
    114,  16,  16,   0,   1,   0, 
      0,   0,  98,  16,   0,   3, 
    114,  16,  16,   0,   2,   0, 
      0,   0, 100,  32,   0,   4, 
    114,  16,  16,   0,   4,   0, 
      0,   0,   1,   0,   0,   0, 
     98,  16,   0,   3, 242,  16, 
     16,   0,   5,   0,   0,   0, 
    101,   0,   0,   3, 242,  32, 
     16,   0,   0,   0,   0,   0, 
    101,   0,   0,   3,  18,  32, 
     16,   0,   1,   0,   0,   0, 
    104,   0,   0,   2,   9,   0, 
      0,   0,   0,   0,   0,   9, 
    114,   0,  16,   0,   0,   0, 
      0,   0,  70,  18,  16, 128, 
     65,   0,   0,   0,   1,   0, 
      0,   0,  70, 130,  32,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,  16,   0,   0,   7, 
    130,   0,  16,   0,   0,   0, 
      0,   0,  70,   2,  16,   0, 
      0,   0,   0,   0,  70,   2, 
     16,   0,   0,   0,   0,   0, 
     68,   0,   0,   5, 130,   0, 
     16,   0,   0,   0,   0,   0, 
     58,   0,  16,   0,   0,   0, 
      0,   0,  56,   0,   0,   7, 
    114,   0,  16,   0,   0,   0, 
      0,   0, 246,  15,  16,   0, 
      0,   0,   0,   0,  70,   2, 
     16,   0,   0,   0,   0,   0, 
     69,   0,   0, 139, 194,   0, 
      0, 128,  67,  85,  21,   0, 
     50,   0,  16,   0,   1,   0, 
      0,   0,  70,  16,  16,   0, 
      0,   0,   0,   0,  70, 126, 
     16,   0,   1,   0,   0,   0, 
      0,  96,  16,   0,   0,   0, 
      0,   0,  50,   0,   0,  15, 
     50,   0,  16,   0,   1,   0, 
      0,   0,  70,   0,  16,   0, 
      1,   0,   0,   0,   2,  64, 
      0,   0,   0,   0,   0,  64, 
      0,   0,   0,  64,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      2,  64,   0,   0,   0,   0, 
    128, 191,   0,   0, 128, 191, 
      0,   0,   0,   0,   0,   0, 
      0,   0,  15,   0,   0,   7, 
    130,   0,  16,   0,   0,   0, 
      0,   0,  70,   0,  16,   0, 
      1,   0,   0,   0,  70,   0, 
     16,   0,   1,   0,   0,   0, 
      0,   0,   0,   8, 130,   0, 
     16,   0,   0,   0,   0,   0, 
     58,   0,  16, 128,  65,   0, 
      0,   0,   0,   0,   0,   0, 
      1,  64,   0,   0,   0,   0, 
    128,  63,  75,   0,   0,   5, 
    130,   0,  16,   0,   0,   0, 
      0,   0,  58,   0,  16,   0, 
      0,   0,   0,   0, 122,   0, 
      0,   5, 114,   0,  16,   0, 
      2,   0,   0,   0, 150,  20, 
     16,   0,   1,   0,   0,   0, 
    124,   0,   0,   5, 114,   0, 
     16,   0,   3,   0,   0,   0, 
     38,  25,  16,   0,   1,   0, 
      0,   0, 122,   0,   0,   5, 
    194,   0,  16,   0,   1,   0, 
      0,   0,   6,  20,  16,   0, 
      0,   0,   0,   0, 124,   0, 
      0,   5,  50,   0,  16,   0, 
      4,   0,   0,   0,  70,  16, 
     16,   0,   0,   0,   0,   0, 
     56,   0,   0,   7, 114,   0, 
     16,   0,   5,   0,   0,   0, 
     70,   2,  16,   0,   2,   0, 
      0,   0, 150,   4,  16,   0, 
      3,   0,   0,   0,  50,   0, 
      0,  10, 114,   0,  16,   0, 
      5,   0,   0,   0,  38,   9, 
     16,   0,   2,   0,   0,   0, 
     38,   9,  16,   0,   3,   0, 
      0,   0,  70,   2,  16, 128, 
     65,   0,   0,   0,   5,   0, 
      0,   0,  56,   0,   0,   7, 
    114,   0,  16,   0,   6,   0, 
      0,   0,  70,   2,  16,   0, 
      3,   0,   0,   0,  38,   9, 
     16,   0,   5,   0,   0,   0, 
     50,   0,   0,  10, 114,   0, 
     16,   0,   3,   0,   0,   0, 
     38,   9,  16,   0,   3,   0, 
      0,   0,  70,   2,  16,   0, 
      5,   0,   0,   0,  70,   2, 
     16, 128,  65,   0,   0,   0, 
      6,   0,   0,   0,  56,   0, 
      0,   7, 114,   0,  16,   0, 
      6,   0,   0,   0,  70,   2, 
     16,   0,   2,   0,   0,   0, 
     70,   2,  16,   0,   5,   0, 
      0,   0,  50,   0,   0,  10, 
    114,   0,  16,   0,   2,   0, 
      0,   0,  38,   9,  16,   0, 
      5,   0,   0,   0, 150,   4, 
     16,   0,   2,   0,   0,   0, 
     70,   2,  16, 128,  65,   0, 
      0,   0,   6,   0,   0,   0, 
     56,   0,   0,   7, 210,   0, 
     16,   0,   4,   0,   0,   0, 
      6,   9,  16,   0,   2,   0, 
      0,   0,   6,   0,  16,   0, 
      4,   0,   0,   0,  50,   0, 
      0,   9, 210,   0,  16,   0, 
      4,   0,   0,   0, 166,  10, 
     16,   0,   1,   0,   0,   0, 
      6,   9,  16,   0,   3,   0, 
      0,   0,   6,  14,  16,   0, 
      4,   0,   0,   0,  16,   0, 
      0,   7,  66,   0,  16,   0, 
      1,   0,   0,   0, 134,   3, 
     16,   0,   4,   0,   0,   0, 
    134,   3,  16,   0,   4,   0, 
      0,   0,  68,   0,   0,   5, 
     66,   0,  16,   0,   1,   0, 
      0,   0,  42,   0,  16,   0, 
      1,   0,   0,   0,  56,   0, 
      0,   7, 210,   0,  16,   0, 
      4,   0,   0,   0, 166,  10, 
     16,   0,   1,   0,   0,   0, 
      6,  14,  16,   0,   4,   0, 
      0,   0,  56,   0,   0,   7, 
    114,   0,  16,   0,   2,   0, 
      0,   0,  70,   2,  16,   0, 
      2,   0,   0,   0,  86,   5, 
     16,   0,   4,   0,   0,   0, 
     50,   0,   0,   9, 114,   0, 
     16,   0,   2,   0,   0,   0, 
    246,  15,  16,   0,   1,   0, 
      0,   0,  70,   2,  16,   0, 
      3,   0,   0,   0,  70,   2, 
     16,   0,   2,   0,   0,   0, 
     16,   0,   0,   7,  66,   0, 
     16,   0,   1,   0,   0,   0, 
     70,   2,  16,   0,   2,   0, 
      0,   0,  70,   2,  16,   0, 
      2,   0,   0,   0,  68,   0, 
      0,   5,  66,   0,  16,   0, 
      1,   0,   0,   0,  42,   0, 
     16,   0,   1,   0,   0,   0, 
     56,   0,   0,   7, 114,   0, 
     16,   0,   2,   0,   0,   0, 
    166,  10,  16,   0,   1,   0, 
      0,   0,  70,   2,  16,   0, 
      2,   0,   0,   0,  56,   0, 
      0,   7, 226,   0,  16,   0, 
      1,   0,   0,   0,  86,   5, 
     16,   0,   1,   0,   0,   0, 
      6,   9,  16,   0,   2,   0, 
      0,   0,  50,   0,   0,   9, 
    114,   0,  16,   0,   1,   0, 
      0,   0,   6,   0,  16,   0, 
      1,   0,   0,   0, 134,   3, 
     16,   0,   4,   0,   0,   0, 
    150,   7,  16,   0,   1,   0, 
      0,   0,  50,   0,   0,   9, 
    114,   0,  16,   0,   1,   0, 
      0,   0, 246,  15,  16,   0, 
      0,   0,   0,   0,  70,  18, 
     16,   0,   2,   0,   0,   0, 
     70,   2,  16,   0,   1,   0, 
      0,   0,  16,   0,   0,   7, 
    130,   0,  16,   0,   0,   0, 
      0,   0,  70,   2,  16,   0, 
      1,   0,   0,   0,  70,   2, 
     16,   0,   1,   0,   0,   0, 
     68,   0,   0,   5, 130,   0, 
     16,   0,   0,   0,   0,   0, 
     58,   0,  16,   0,   0,   0, 
      0,   0,  56,   0,   0,   7, 
    114,   0,  16,   0,   1,   0, 
      0,   0, 246,  15,  16,   0, 
      0,   0,   0,   0,  70,   2, 
     16,   0,   1,   0,   0,   0, 
     69,   0,   0, 139, 194,   0, 
      0, 128,  67,  85,  21,   0, 
    242,   0,  16,   0,   2,   0, 
      0,   0,  70,  16,  16,   0, 
      0,   0,   0,   0,  70, 126, 
     16,   0,   0,   0,   0,   0, 
      0,  96,  16,   0,   0,   0, 
      0,   0,  69,   0,   0, 139, 
    194,   0,   0, 128,  67,  85, 
     21,   0, 114,   0,  16,   0, 
      3,   0,   0,   0,  70,  16, 
     16,   0,   0,   0,   0,   0, 
     70, 126,  16,   0,   2,   0, 
      0,   0,   0,  96,  16,   0, 
      0,   0,   0,   0,  16,  32, 
      0,   7, 130,   0,  16,   0, 
      0,   0,   0,   0,  70,   2, 
     16,   0,   1,   0,   0,   0, 
     70,   2,  16,   0,   0,   0, 
      0,   0,  56,   0,   0,   7, 
    130,   0,  16,   0,   1,   0, 
      0,   0,  26,   0,  16,   0, 
      3,   0,   0,   0,  26,   0, 
     16,   0,   3,   0,   0,   0, 
     50,   0,   0,  10, 114,   0, 
     16,   0,   4,   0,   0,   0, 
    166,  10,  16,   0,   3,   0, 
      0,   0,  70,   2,  16, 128, 
     65,   0,   0,   0,   2,   0, 
      0,   0,  70,   2,  16,   0, 
      2,   0,   0,   0,  56,   0, 
      0,   7, 114,   0,  16,   0, 
      4,   0,   0,   0,   6,   0, 
     16,   0,   3,   0,   0,   0, 
     70,   2,  16,   0,   4,   0, 
      0,   0,   0,   0,   0,  10, 
    114,   0,  16,   0,   2,   0, 
      0,   0,  70,   2,  16,   0, 
      2,   0,   0,   0,   2,  64, 
      0,   0,  10, 215,  35, 189, 
     10, 215,  35, 189,  10, 215, 
     35, 189,   0,   0,   0,   0, 
     50,   0,   0,  12, 114,   0, 
     16,   0,   2,   0,   0,   0, 
    166,  10,  16,   0,   3,   0, 
      0,   0,  70,   2,  16,   0, 
      2,   0,   0,   0,   2,  64, 
      0,   0,  10, 215,  35,  61, 
     10, 215,  35,  61,  10, 215, 
     35,  61,   0,   0,   0,   0, 
     56,   0,   0,   7, 114,   0, 
     16,   0,   5,   0,   0,   0, 
      6,   0,  16,   0,   3,   0, 
      0,   0,  70,   2,  16,   0, 
      2,   0,   0,   0,   0,   0, 
      0,   7,  66,   0,  16,   0, 
      3,   0,   0,   0,  26,   0, 
     16,   0,   3,   0,   0,   0, 
     26,   0,  16,   0,   3,   0, 
      0,   0,   0,   0,   0,   8, 
    130,   0,  16,   0,   0,   0, 
      0,   0,  58,   0,  16, 128, 
     65,   0,   0,   0,   0,   0, 
      0,   0,   1,  64,   0,   0, 
      0,   0, 128,  63,  56,   0, 
      0,   7, 130,   0,  16,   0, 
      3,   0,   0,   0,  58,   0, 
     16,   0,   0,   0,   0,   0, 
     58,   0,  16,   0,   0,   0, 
      0,   0,  56,   0,   0,   7, 
    130,   0,  16,   0,   3,   0, 
      0,   0,  58,   0,  16,   0, 
      3,   0,   0,   0,  58,   0, 
     16,   0,   3,   0,   0,   0, 
     56,   0,   0,   7, 130,   0, 
     16,   0,   0,   0,   0,   0, 
     58,   0,  16,   0,   0,   0, 
      0,   0,  58,   0,  16,   0, 
      3,   0,   0,   0,  56,   0, 
      0,   7, 130,   0,  16,   0, 
      3,   0,   0,   0,  58,   0, 
     16,   0,   1,   0,   0,   0, 
     58,   0,  16,   0,   1,   0, 
      0,   0,  50,   0,   0,   9, 
    130,   0,  16,   0,   1,   0, 
      0,   0,  58,   0,  16,   0, 
      1,   0,   0,   0,  58,   0, 
     16,   0,   1,   0,   0,   0, 
      1,  64,   0,   0,   0,   0, 
    128, 191,  50,   0,   0,  13, 
    114,   0,  16,   0,   2,   0, 
      0,   0,  70,   2,  16, 128, 
     65,   0,   0,   0,   2,   0, 
      0,   0,   6,   0,  16,   0, 
      3,   0,   0,   0,   2,  64, 
      0,   0,   0,   0, 128,  63, 
      0,   0, 128,  63,   0,   0, 
    128,  63,   0,   0,   0,   0, 
     56,   0,   0,   7,  18,   0, 
     16,   0,   3,   0,   0,   0, 
     58,   0,  16,   0,   3,   0, 
      0,   0,   1,  64,   0,   0, 
      0,   0, 128,  62,  54,   0, 
      0,   8, 114,   0,  16,   0, 
      6,   0,   0,   0,   2,  64, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
     54,   0,   0,   5, 130,   0, 
     16,   0,   4,   0,   0,   0, 
      1,  64,   0,   0,   0,   0, 
      0,   0,  48,   0,   0,   1, 
     33,   0,   0,   7, 130,   0, 
     16,   0,   5,   0,   0,   0, 
     58,   0,  16,   0,   4,   0, 
      0,   0,   1,  64,   0,   0, 
      3,   0,   0,   0,   3,   0, 
      4,   3,  58,   0,  16,   0, 
      5,   0,   0,   0,  16,   0, 
      0,  15, 130,   0,  16,   0, 
      5,   0,   0,   0,  70, 130, 
     32, 134,  65,   0,   0,   0, 
      0,   0,   0,   0,  16,   0, 
      0,   0,  58,   0,  16,   0, 
      4,   0,   0,   0,  70, 130, 
     32, 134,  65,   0,   0,   0, 
      0,   0,   0,   0,  16,   0, 
      0,   0,  58,   0,  16,   0, 
      4,   0,   0,   0,  68,   0, 
      0,   5, 130,   0,  16,   0, 
      5,   0,   0,   0,  58,   0, 
     16,   0,   5,   0,   0,   0, 
     56,   0,   0,  11, 114,   0, 
     16,   0,   7,   0,   0,   0, 
    246,  15,  16,   0,   5,   0, 
      0,   0,  70, 130,  32, 134, 
     65,   0,   0,   0,   0,   0, 
      0,   0,  16,   0,   0,   0, 
     58,   0,  16,   0,   4,   0, 
      0,   0,  50,   0,   0,  13, 
    114,   0,  16,   0,   8,   0, 
      0,   0,  70, 130,  32, 134, 
     65,   0,   0,   0,   0,   0, 
      0,   0,  16,   0,   0,   0, 
     58,   0,  16,   0,   4,   0, 
      0,   0, 246,  15,  16,   0, 
      5,   0,   0,   0,  70,   2, 
     16,   0,   0,   0,   0,   0, 
     16,   0,   0,   7, 130,   0, 
     16,   0,   5,   0,   0,   0, 
     70,   2,  16,   0,   8,   0, 
      0,   0,  70,   2,  16,   0, 
      8,   0,   0,   0,  68,   0, 
      0,   5, 130,   0,  16,   0, 
      5,   0,   0,   0,  58,   0, 
     16,   0,   5,   0,   0,   0, 
     56,   0,   0,   7, 114,   0, 
     16,   0,   8,   0,   0,   0, 
    246,  15,  16,   0,   5,   0, 
      0,   0,  70,   2,  16,   0, 
      8,   0,   0,   0,  16,  32, 
      0,   7, 130,   0,  16,   0, 
      5,   0,   0,   0,  70,   2, 
     16,   0,   1,   0,   0,   0, 
     70,   2,  16,   0,   7,   0, 
      0,   0,  16,  32,   0,   7, 
    130,   0,  16,   0,   6,   0, 
      0,   0,  70,   2,  16,   0, 
      7,   0,   0,   0,  70,   2, 
     16,   0,   8,   0,   0,   0, 
     16,  32,   0,   7,  18,   0, 
     16,   0,   7,   0,   0,   0, 
     70,   2,  16,   0,   1,   0, 
      0,   0,  70,   2,  16,   0, 
      8,   0,   0,   0,  56,   0, 
      0,   7,  34,   0,  16,   0, 
      7,   0,   0,   0,  58,   0, 
     16,   0,   6,   0,   0,   0, 
     58,   0,  16,   0,   6,   0, 
      0,   0,  50,   0,   0,   9, 
     66,   0,  16,   0,   7,   0, 
      0,   0,  26,   0,  16,   0, 
      7,   0,   0,   0,  42,   0, 
     16,   0,   3,   0,   0,   0, 
      1,  64,   0,   0,   0,   0, 
      0, 191,   0,   0,   0,   8, 
    130,   0,  16,   0,   7,   0, 
      0,   0,  58,   0,  16, 128, 
     65,   0,   0,   0,   5,   0, 
      0,   0,   1,  64,   0,   0, 
      0,   0, 128,  63,  56,   0, 
      0,   7,  18,   0,  16,   0, 
      8,   0,   0,   0,  58,   0, 
     16,   0,   7,   0,   0,   0, 
     58,   0,  16,   0,   7,   0, 
      0,   0,  56,   0,   0,   7, 
     18,   0,  16,   0,   8,   0, 
      0,   0,  10,   0,  16,   0, 
      8,   0,   0,   0,  10,   0, 
     16,   0,   8,   0,   0,   0, 
     56,   0,   0,   7, 130,   0, 
     16,   0,   7,   0,   0,   0, 
     58,   0,  16,   0,   7,   0, 
      0,   0,  10,   0,  16,   0, 
      8,   0,   0,   0,  50,   0, 
      0,   9, 130,   0,  16,   0, 
      7,   0,   0,   0,  42,   0, 
     16,   0,   7,   0,   0,   0, 
     58,   0,  16,   0,   7,   0, 
      0,   0,   1,  64,   0,   0, 
      0,   0, 128,  63,  50,   0, 
      0,   9,  66,   0,  16,   0, 
      7,   0,   0,   0,  42,   0, 
     16,   0,   7,   0,   0,   0, 
     58,   0,  16,   0,   0,   0, 
      0,   0,   1,  64,   0,   0, 
      0,   0, 128,  63,  56,   0, 
      0,   7,  18,   0,  16,   0, 
      7,   0,   0,   0,  10,   0, 
     16,   0,   7,   0,   0,   0, 
     10,   0,  16,   0,   7,   0, 
      0,   0,  50,   0,   0,   9, 
     18,   0,  16,   0,   7,   0, 
      0,   0,  10,   0,  16,   0, 
      7,   0,   0,   0,  58,   0, 
     16,   0,   1,   0,   0,   0, 
      1,  64,   0,   0,   0,   0, 
    128,  63,  56,   0,   0,   7, 
     82,   0,  16,   0,   7,   0, 
      0,   0,   6,   2,  16,   0, 
      7,   0,   0,   0,   6,   3, 
     16,   0,   7,   0,   0,   0, 
     56,   0,   0,   7,  18,   0, 
     16,   0,   7,   0,   0,   0, 
     10,   0,  16,   0,   7,   0, 
      0,   0,   1,  64,   0,   0, 
    219,  15,  73,  64,  52,   0, 
      0,   7,  18,   0,  16,   0, 
      7,   0,   0,   0,  10,   0, 
     16,   0,   7,   0,   0,   0, 
      1,  64,   0,   0, 189,  55, 
    134,  53,  14,   0,   0,   7, 
     18,   0,  16,   0,   7,   0, 
      0,   0,  58,   0,  16,   0, 
      3,   0,   0,   0,  10,   0, 
     16,   0,   7,   0,   0,   0, 
      0,   0,   0,   8, 130,   0, 
     16,   0,   7,   0,   0,   0, 
     58,   0,  16, 128,  65,   0, 
      0,   0,   6,   0,   0,   0, 
      1,  64,   0,   0,   0,   0, 
    128,  63,  56,   0,   0,   7, 
     18,   0,  16,   0,   8,   0, 
      0,   0,  58,   0,  16,   0, 
      7,   0,   0,   0,  58,   0, 
     16,   0,   7,   0,   0,   0, 
     56,   0,   0,   7,  18,   0, 
     16,   0,   8,   0,   0,   0, 
     10,   0,  16,   0,   8,   0, 
      0,   0,  10,   0,  16,   0, 
      8,   0,   0,   0,  56,   0, 
      0,   7, 130,   0,  16,   0, 
      7,   0,   0,   0,  58,   0, 
     16,   0,   7,   0,   0,   0, 
     10,   0,  16,   0,   8,   0, 
      0,   0,  50,   0,   0,   9, 
    114,   0,  16,   0,   8,   0, 
      0,   0,  70,   2,  16,   0, 
      2,   0,   0,   0, 246,  15, 
     16,   0,   7,   0,   0,   0, 
     70,   2,  16,   0,   5,   0, 
      0,   0,  50,   0,   0,  10, 
    130,   0,  16,   0,   6,   0, 
      0,   0,  58,   0,  16, 128, 
     65,   0,   0,   0,   6,   0, 
      0,   0,  58,   0,  16,   0, 
      6,   0,   0,   0,   1,  64, 
      0,   0,   0,   0, 128,  63, 
     50,   0,   0,   9, 130,   0, 
     16,   0,   6,   0,   0,   0, 
     10,   0,  16,   0,   3,   0, 
      0,   0,  58,   0,  16,   0, 
      6,   0,   0,   0,  26,   0, 
     16,   0,   7,   0,   0,   0, 
    129,   0,   0,   5, 130,   0, 
     16,   0,   6,   0,   0,   0, 
     58,   0,  16,   0,   6,   0, 
      0,   0,  56,   0,   0,   7, 
    178,   0,  16,   0,   7,   0, 
      0,   0,   6,   0,  16,   0, 
      7,   0,   0,   0,  70,   8, 
     16,   0,   8,   0,   0,   0, 
     56,   0,   0,   7, 178,   0, 
     16,   0,   7,   0,   0,   0, 
    246,  15,  16,   0,   6,   0, 
      0,   0,  70,  12,  16,   0, 
      7,   0,   0,   0,  56,   0, 
      0,  10, 114,   0,  16,   0, 
      8,   0,   0,   0, 246,  15, 
     16,   0,   5,   0,   0,   0, 
     70, 130,  32,   6,   0,   0, 
      0,   0,  19,   0,   0,   0, 
     58,   0,  16,   0,   4,   0, 
      0,   0,  50,   0,   0,   9, 
    114,   0,  16,   0,   7,   0, 
      0,   0,  70,   2,  16,   0, 
      4,   0,   0,   0, 166,  10, 
     16,   0,   7,   0,   0,   0, 
     70,   3,  16,   0,   7,   0, 
      0,   0,  50,   0,   0,   9, 
    114,   0,  16,   0,   6,   0, 
      0,   0,  70,   2,  16,   0, 
      8,   0,   0,   0,  70,   2, 
     16,   0,   7,   0,   0,   0, 
     70,   2,  16,   0,   6,   0, 
      0,   0,  30,   0,   0,   7, 
    130,   0,  16,   0,   4,   0, 
      0,   0,  58,   0,  16,   0, 
      4,   0,   0,   0,   1,  64, 
      0,   0,   1,   0,   0,   0, 
     22,   0,   0,   1,  69,   0, 
      0, 139, 130,   1,   0, 128, 
     67,  85,  21,   0, 114,   0, 
     16,   0,   2,   0,   0,   0, 
     70,   2,  16,   0,   1,   0, 
      0,   0,  70, 126,  16,   0, 
      5,   0,   0,   0,   0,  96, 
     16,   0,   1,   0,   0,   0, 
     50,   0,   0,   9, 114,   0, 
     16,   0,   2,   0,   0,   0, 
     70,   2,  16,   0,   4,   0, 
      0,   0,  70,   2,  16,   0, 
      2,   0,   0,   0,  70,   2, 
     16,   0,   6,   0,   0,   0, 
     43,   0,   0,   6, 130,   0, 
     16,   0,   0,   0,   0,   0, 
     42, 128,  32,   0,   0,   0, 
      0,   0,  23,   0,   0,   0, 
     56,   0,   0,   7, 130,   0, 
     16,   0,   0,   0,   0,   0, 
     58,   0,  16,   0,   0,   0, 
      0,   0,  26,   0,  16,   0, 
      3,   0,   0,   0,  16,   0, 
      0,   8, 130,   0,  16,   0, 
      1,   0,   0,   0,  70,   2, 
     16, 128,  65,   0,   0,   0, 
      0,   0,   0,   0,  70,   2, 
     16,   0,   1,   0,   0,   0, 
      0,   0,   0,   7, 130,   0, 
     16,   0,   1,   0,   0,   0, 
     58,   0,  16,   0,   1,   0, 
      0,   0,  58,   0,  16,   0, 
      1,   0,   0,   0,  50,   0, 
      0,  11, 114,   0,  16,   0, 
      0,   0,   0,   0,  70,   2, 
     16,   0,   1,   0,   0,   0, 
    246,  15,  16, 128,  65,   0, 
      0,   0,   1,   0,   0,   0, 
     70,   2,  16, 128,  65,   0, 
      0,   0,   0,   0,   0,   0, 
     72,   0,   0, 141, 130,   1, 
      0, 128,  67,  85,  21,   0, 
    114,   0,  16,   0,   0,   0, 
      0,   0,  70,   2,  16,   0, 
      0,   0,   0,   0,  70, 126, 
     16,   0,   4,   0,   0,   0, 
      0,  96,  16,   0,   1,   0, 
      0,   0,  58,   0,  16,   0, 
      0,   0,   0,   0,  50,   0, 
      0,   9, 114,  32,  16,   0, 
      0,   0,   0,   0,  70,   2, 
     16,   0,   5,   0,   0,   0, 
     70,   2,  16,   0,   0,   0, 
      0,   0,  70,   2,  16,   0, 
      2,   0,   0,   0,  56,   0, 
      0,   8, 130,  32,  16,   0, 
      0,   0,   0,   0,  58,   0, 
     16,   0,   2,   0,   0,   0, 
     58, 128,  32,   0,   0,   0, 
      0,   0,  22,   0,   0,   0, 
     14,   0,   0,   7, 114,   0, 
     16,   0,   0,   0,   0,   0, 
     70,  18,  16,   0,   5,   0, 
      0,   0, 246,  31,  16,   0, 
      5,   0,   0,   0,  50,   0, 
      0,  15,  50,   0,  16,   0, 
      1,   0,   0,   0,  70,   0, 
     16,   0,   0,   0,   0,   0, 
      2,  64,   0,   0,   0,   0, 
      0,  63,   0,   0,   0, 191, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   2,  64,   0,   0, 
      0,   0,   0,  63,   0,   0, 
      0,  63,   0,   0,   0,   0, 
      0,   0,   0,   0,  56,   0, 
      0,   8,  18,   0,  16,   0, 
      0,   0,   0,   0,  10,   0, 
     16,   0,   1,   0,   0,   0, 
     58, 128,  32,   0,   0,   0, 
      0,   0,  23,   0,   0,   0, 
     56,   0,   0,   8,  34,   0, 
     16,   0,   0,   0,   0,   0, 
     26,   0,  16,   0,   1,   0, 
      0,   0,  10, 128,  32,   0, 
      0,   0,   0,   0,  24,   0, 
      0,   0,   0,   0,   0,   8, 
    114,   0,  16,   0,   0,   0, 
      0,   0,  70,   2,  16,   0, 
      0,   0,   0,   0,  70,  18, 
     16, 128,  65,   0,   0,   0, 
      4,   0,   0,   0,  85,   0, 
      0,  10, 114,   0,  16,   0, 
      1,   0,   0,   0,  70,   2, 
     16,   0,   0,   0,   0,   0, 
      2,  64,   0,   0,  31,   0, 
      0,   0,  31,   0,   0,   0, 
     31,   0,   0,   0,   0,   0, 
      0,   0,  56,   0,   0,  10, 
    114,   0,  16,   0,   0,   0, 
      0,   0,  70,   2,  16,   0, 
      0,   0,   0,   0,   2,  64, 
      0,   0,   0,   0,   0,  56, 
      0,   0,   0,  56,   0,   0, 
      0,  60,   0,   0,   0,   0, 
     51,   0,   0,  11, 114,   0, 
     16,   0,   0,   0,   0,   0, 
     70,   2,  16, 128, 129,   0, 
      0,   0,   0,   0,   0,   0, 
      2,  64,   0,   0,   0, 224, 
    255,  59,   0, 224, 255,  59, 
      0, 224, 255,  59,   0,   0, 
      0,   0, 130,   0,   0,   5, 
    114,   0,  16,   0,   0,   0, 
      0,   0,  70,   2,  16,   0, 
      0,   0,   0,   0,  30,   0, 
      0,  10, 114,   0,  16,   0, 
      0,   0,   0,   0,  70,   2, 
     16,   0,   0,   0,   0,   0, 
      2,  64,   0,   0,   8,   0, 
      0,   0,   8,   0,   0,   0, 
      2,   0,   0,   0,   0,   0, 
      0,   0,  85,   0,   0,  10, 
    114,   0,  16,   0,   0,   0, 
      0,   0,  70,   2,  16,   0, 
      0,   0,   0,   0,   2,  64, 
      0,   0,   4,   0,   0,   0, 
      4,   0,   0,   0,   2,   0, 
      0,   0,   0,   0,   0,   0, 
     41,   0,   0,  10, 114,   0, 
     16,   0,   1,   0,   0,   0, 
     70,   2,  16,   0,   1,   0, 
      0,   0,   2,  64,   0,   0, 
      9,   0,   0,   0,   9,   0, 
      0,   0,  11,   0,   0,   0, 
      0,   0,   0,   0,  60,   0, 
      0,   7, 114,   0,  16,   0, 
      0,   0,   0,   0,  70,   2, 
     16,   0,   0,   0,   0,   0, 
     70,   2,  16,   0,   1,   0, 
      0,   0,  41,   0,   0,  10, 
     98,   0,  16,   0,   0,   0, 
      0,   0,  86,   6,  16,   0, 
      0,   0,   0,   0,   2,  64, 
      0,   0,   0,   0,   0,   0, 
     10,   0,   0,   0,  20,   0, 
      0,   0,   0,   0,   0,   0, 
     60,   0,   0,   7,  18,   0, 
     16,   0,   0,   0,   0,   0, 
     26,   0,  16,   0,   0,   0, 
      0,   0,  10,   0,  16,   0, 
      0,   0,   0,   0,  60,   0, 
      0,   7,  18,  32,  16,   0, 
      1,   0,   0,   0,  42,   0, 
     16,   0,   0,   0,   0,   0, 
     10,   0,  16,   0,   0,   0, 
      0,   0,  62,   0,   0,   1, 
     53,  16,   0,   0, 140,   2, 
      0,   0,  23,   0,   1,   0, 
     41, 190,  25,   0, 120,   1, 
    237,  89,  77, 108,  27, 199, 
     21, 158,  37, 151, 171,  37, 
    185, 124, 228, 146,  20,  73, 
    241, 119,  69,  46, 255,  36, 
    138, 178,  92,  91, 162,  41, 
    105,  36,  81, 146, 245, 231, 
     31, 213, 150, 108,  87, 166, 
     20, 219, 177, 210, 184,  77, 
     19,  87, 118, 139,  52,   7, 
     90,  17,  24, 195,  73, 213, 
     34,  40, 114,  72, 138, 194, 
     41, 210, 160, 135,  28, 122, 
     42, 122,  40,  26, 201,  22, 
    140, 130,  16, 144,  30, 216, 
      2,  41, 208, 162, 104, 145, 
     83,  47,  69,  32, 180,  69, 
     14,  69, 212, 247,  86, 100, 
     44, 171, 205, 205,  64, 127, 
    224,   7, 188, 125, 251, 189, 
    153, 121, 243, 205, 204, 155, 
    221, 229, 112, 163, 141,  25, 
    242,  78,  79, 230,  71, 100, 
    251, 133, 241,  74, 192, 197, 
    152,   5, 239,   5,  84, 178, 
     36, 111,  58, 232, 202, 216, 
    179,   1, 186,  50, 230, 165, 
     11,  85,  48,  49, 118,   8, 
    141, 134,  26, 182,  49,  54, 
    140, 150, 202,  50,  13, 101, 
     63, 252, 251, 232,   7, 185, 
     79,  70, 169, 106,  16, 245, 
     40, 234, 135,   8,  72,  79, 
    163, 190, 129, 248,  45, 180, 
    221, 104,  49, 148, 209, 182, 
    217,  39, 137, 143,  46,  40, 
     50,  93, 246, 137,   7, 245, 
    111, 168,  23,  80,  73, 136, 
    150, 138,  74,  18,  66,  21, 
     81,  63, 147, 101, 186, 252, 
    123, 249,   8, 251,  38, 254, 
    159,  39, 196, 141, 248,  16, 
     47, 226,  71,  60,  73, 104, 
    188, 255, 105,  65, 106,  40, 
     18,  93, 152,  25, 149, 112, 
    115, 157,  72, 104,  61, 246, 
     11, 160, 238, 181,  97, 236, 
    167, 126, 186,  62, 156, 215, 
     90,   3,  55, 215, 242,  30, 
    234, 231, 201,  46, 202,  17, 
    186, 217,  39,  77,  76, 243, 
     46,  25, 108, 208,  10,  24, 
     20,  59, 144,  76, 105, 198, 
     48, 167,  36, 203,  80,  35, 
     41, 254, 191, 165, 153, 123, 
    100,  77,  45, 198, 208, 217, 
     46, 106,  83, 154, 229, 107, 
    148,  80, 108, 117, 147, 244, 
    245,   0, 251, 132,  80,  19, 
     11, 136, 237,   4,  27, 216, 
     76, 216,  88, 219, 125,  24, 
     23, 211,  30,  18, 151,  36, 
    179, 105, 201,  25, 102, 159, 
    152, 246, 112,  25, 113, 121, 
     31,  94,  64, 188, 176,  15, 
     95,  66, 124, 105,  31, 190, 
    130, 248,  74,  19,  55, 227, 
     59, 141, 254,  36, 161, 178, 
    143, 227,  65,  85,  93, 143, 
    114, 254,  92,  44, 176,  37, 
    194,  30, 239, 103, 184, 124, 
      0,  47,  28, 192, 151,  14, 
    224,  43, 143,  96, 188,  39, 
    109, 198, 167, 124,  68,  83, 
    249, 111, 214,  39,  28,  31, 
    143,  62, 225, 248, 120, 244, 
      9, 199, 199, 163,  79,  56, 
     62,  30, 125, 194, 241, 241, 
    232,  19, 142, 143,  71, 255, 
     23,  56, 210, 183, 122,  69, 
    252, 193,  70, 197, 246, 233, 
    134,  44, 108, 221, 203,   8, 
    183, 239, 153, 204, 255, 216, 
    192,  47, 255,  26,  19, 180, 
    154, 192,  34,  53,  65, 104, 
    175, 221,  98, 235, 155, 204, 
    188, 250, 113, 139, 245,  50, 
    115,  97,  61,   3, 183,  32, 
    182,  95, 198, 143, 209,  66, 
    141,  73,   3,  53,  65,  60, 
     86,  99, 150, 225, 154,  32, 
     13, 214,   4, 203,  72, 109, 
    126, 245,  55, 191, 197, 223, 
     11,  42, 219, 179, 238, 247, 
    208,  58, 233, 103, 215, 158, 
    245,  82,  57, 218, 214,   6, 
    246, 221,  18, 215,  55, 213, 
    100,  92, 190, 101,  90, 223, 
    244, 100, 117, 153, 234,  99, 
     59, 163,  62,  90,  47,  97, 
    252,  14, 246,  19,  70,  27, 
    160, 246, 104, 219,  26,  56, 
    120,  75,  90, 223, 108, 237, 
    234, 144,  41, 142,  39, 155, 
     50, 226, 248, 123,  50, 178, 
    154, 204,   1, 241, 109,  59, 
    154, 151,  91, 179, 135, 192, 
    199,  86, 235, 173, 233, 133, 
     42, 197, 195, 159,  22,  70, 
    123, 180,  65, 127, 186,  23, 
      2,  88, 230,  79,  94, 169, 
    170,  93,   5,  56,  36, 172, 
    221, 163,  62, 176,  44, 210, 
    168,  35,  81,  27, 252,  28, 
    143,  18,  70,  27, 219, 139, 
    123,  88,  14,  97,  59,  53, 
    251, 124, 213, 219, 115,   4, 
     90, 123, 134,  33, 140,  56, 
    208, 189,  82, 165, 246,  88, 
    175, 189,  81, 223,  18, 113, 
     40, 114, 116, 168,  40, 123, 
    250,   6,  32, 136, 117,  60, 
     93,  95, 169, 250, 251,  82, 
    160, 225, 125,  40, 177,  86, 
    109,  59,  22,  55, 184, 182, 
    219, 109, 178, 187,  43,  15, 
    216,  81, 221, 221, 243,  82, 
     21,  39, 161, 238, 235,  60, 
     85, 141,  28, 211, 161, 109, 
    164,   3, 164, 163, 113, 142, 
     19,  81, 247, 246,  45,  85, 
     35,  35,  25, 176,  28, 213, 
    121,  91,  58,   7, 210,  96, 
      7,  87,  19, 135,  32, 146, 
     78, 129, 101,  48, 195, 221, 
    201, 195,  32, 117, 231, 120, 
    107, 231,  33, 206,  44, 213, 
    173, 175,  59, 215,  55,  37, 
    182,  86, 183, 254, 249,   3, 
    179, 165,  59, 197, 189, 217, 
    195, 220, 215, 117, 136,  91, 
    208, 103,  67, 159, 228, 112, 
    131,  39, 125, 152,   7,  22, 
    189,  21, 139, 221, 205, 219, 
     22, 243,  21, 181,  53,  14, 
     76, 168, 221, 219, 113, 187, 
    101, 119, 183,  14, 173, 173, 
     29,  96,  73, 160, 207, 118, 
    169, 102, 253, 178, 187, 226, 
    237, 206, 128, 175, 213,  11, 
    150,  78, 228, 149, 140, 115, 
    102, 157, 172,   9, 182, 203, 
     70, 206, 216, 162,  81, 217, 
    211, 141,  92,  90, 109,  32, 
    101,  59,  56, 147,  51,  53, 
    193,  58,  85, 179, 246, 196, 
    185,  85, 211, 100, 103,  44, 
      3,  82, 218, 198,   5,  57, 
     91, 179,  38, 137, 187,   2, 
    114,  56,  44, 187, 218,  51, 
    220, 218, 106,  67, 222,  10, 
    103,  78, 204, 179, 150, 171, 
     12,  34,  25, 110, 177,  43, 
    220, 187, 168,  87, 164,  69, 
    165, 226,  76,  70,  65, 117, 
    196,  97, 201,  50, 178, 229, 
     74, 106, 208, 234,  72, 129, 
    151,  65, 221, 153,  48, 105, 
    144,  12, 131, 197,  97,  67, 
    188,  90, 119, 165, 207, 232, 
      1,  65, 188, 159,  19, 214, 
    241,  39, 233, 234,  38, 249, 
    192, 126,  38,  39, 177, 239, 
    214,  45, 233, 227, 162,  27, 
    177,  37,  91, 124, 128, 137, 
     88, 247, 100,  75,  15, 168, 
     92, 205, 242,   7,  62, 182, 
    110, 148, 251, 217, 107, 134, 
    149, 132, 185,  95,  75, 248, 
    251,  38, 128, 237, 220, 157, 
    103, 196,  40, 187,  99, 248, 
    125, 142,  98,   9, 127, 237, 
     14, 249,  29,   5, 195, 210, 
    184,  77, 182, 124,  37, 136, 
    237, 169,  94,   8, 219, 147, 
     13,  96, 251,   0, 182, 167, 
     53,  80, 186, 243, 152, 135, 
    119,  12, 127, 176, 167, 195, 
    104,  23, 234, 201,  24, 150, 
    246,  85,  56, 240, 128, 177, 
    150, 215,  63, 246, 122, 183, 
    216,  48, 174, 219, 152, 229, 
    246, 214, 164, 229, 206,  22, 
    197, 150, 112, 140,  54,  47, 
     38,  35, 173, 163,  59, 128, 
    252, 161, 142,   9, 103,  96, 
    217,  69, 120, 173, 238,   8, 
     78,  34, 111, 168, 187, 117, 
    244, 227,  92, 145,  79,   9, 
    144, 111, 173, 174, 198, 203, 
    200, 105, 181, 110,  83, 184, 
    238, 198, 185,  36, 159,  75, 
     43, 139, 148, 179,  86, 165, 
    164, 135, 250, 138,  70, 222, 
    129, 206, 117,  63, 174, 127, 
     12, 239, 101, 165, 168, 135, 
    143,  21,  57, 229, 169,  67, 
     47, 233, 209, 193,  18, 196, 
    241, 222, 157, 231, 122, 108, 
    168, 200,  19, 120, 175, 232, 
     69,  93,  27,  41, 113,  29, 
    239, 213, 124,  73, 143, 143, 
     79,  67, 100, 177,  88,  73, 
     76, 148, 120,  10, 125, 174, 
    124,  81, 215, 167, 166, 121, 
    168, 191,  23, 218,  23,  75, 
    149, 212, 201, 105,  30, 238, 
     47, 128, 218, 119,  10, 162, 
    163,   3, 144,  92, 156, 174, 
    100, 144, 179,  77,  49, 105, 
    177, 254,  34, 120, 142, 157, 
    226, 218,  40,   7, 117, 112, 
     24, 226,  51,  99, 160, 180, 
    157, 129,  14,  44, 183,  98, 
    121, 166, 175,  23, 210,  50, 
    174,  91, 255,  93, 177,  19, 
    125, 160, 155, 180, 196, 104, 
      9,  60,  67, 195,  92, 159, 
     57,  14, 234, 248,  36,  92, 
    178, 176,  45, 103,  34,  10, 
     57,  28,  95, 246, 236, 175, 
    204,  52, 111,  50, 182,  85, 
    191,  56,  11,  29, 199, 122, 
    121, 250, 116,   1, 210, 232, 
    115,  96, 219, 206, 193,   1, 
    208,  40, 222, 232, 154, 216, 
    133,  62, 119, 222, 164, 165, 
    102, 166, 193,  51,  49, 137, 
    249, 247, 102, 205, 211,  30, 
    229, 158, 249,  89,  30, 194, 
     58,  82, 255, 243, 162,  11, 
     99, 134, 191, 180, 109, 166, 
    185,  87, 176, 189, 122,  30, 
     99,  13,  13, 112, 109, 164, 
      8,  49, 244, 169, 216, 190, 
    107, 124,  24, 116, 138,  57, 
    243,  61, 145,  57, 238, 212, 
      4, 231,  91,  53,  39, 225, 
      8,  23, 119, 205,  47, 111, 
    216,  62,  76, 188, 159,  33, 
    236, 120,  71, 116, 181,  43, 
    176, 107,  94, 219, 248, 157, 
    115, 106, 120, 167,  55,  44, 
    123,  78,  23, 120,  20, 203, 
    220, 163,  47,  25, 125,  69, 
    176,  47,  90,  79,  23, 198, 
     85,  47, 198,  33,  54, 129, 
    227, 156,  42,   2,  83, 170, 
     53, 193, 241, 106,  45,  53, 
    127, 188, 178, 130, 121,  37, 
    192, 164,  36, 184,  78,  72, 
    130, 251, 148, 180,  19, 157, 
    147, 119, 102, 207, 201,  38, 
    133,  98, 191, 188, 241, 126, 
    223, 237, 163, 128, 235,  16, 
    138, 224,  90,  82, 191, 201, 
     21, 236,  87, 131, 157,   1, 
     93, 246,  12, 197,  57, 141, 
    223,  63, 179,  38, 122,  26, 
    253,   9, 202,  43, 181, 248, 
     68, 209, 117,   2, 243, 207, 
     49, 197,  75, 200, 119, 208, 
    113, 114, 108, 207, 158, 158, 
     52, 108,   7, 198, 115, 206, 
    191, 167, 103, 207,  78,  67, 
     39, 222, 103, 206, 255,  68, 
     23,  20,  37,  12, 145,  48, 
    236,  20,  78, 200,  38,  77, 
      3, 218,  95, 209, 228, 180, 
    174,  82, 159, 221, 199,  69, 
     79, 218,   6,  59, 195,  41, 
    153,   1, 171, 181,  79, 228, 
     93,  17, 234, 239, 163, 251, 
    230,  89, 204, 113, 251,  80, 
      9, 236, 227, 167, 192,  62, 
    117,   6,  20, 166, 213, 149, 
     54, 147, 220,  49,  63, 135, 
    115, 186,  90, 183,  15, 109, 
     39,  40, 231, 236, 227, 219, 
      9, 202,  49, 251, 212, 118, 
     98, 119, 250,   2, 190,  26, 
     86, 121, 168, 111,   1,  58, 
    207, 159,   3, 105,  94, 169, 
     52, 199,  72,  57,  30, 234, 
    219,  78,  80, 238, 133,  79, 
    126,  95,  23,  52,  45, 236, 
     78, 234, 176,  19,  47, 203, 
     38, 155,  13, 232, 153, 170, 
    165,  79, 233,   2,   8, 248, 
    158,  91, 171, 251, 255, 116, 
    223,  76, 251, 203, 140, 254, 
    136, 160,  84, 231, 112, 191, 
     53, 199, 231, 196, 242, 174, 
    182,  95, 154, 155,  99,  76, 
     58,  20,  23, 237, 155,  88, 
    228, 182,  72, 252, 227, 145, 
    187,  34, 160, 213,  35,  63, 
     22, 115, 125,  11,  60,  58, 
    216,  11, 169, 147,  39, 192, 
     53, 175, 225, 222, 219,  27, 
     63, 237, 169, 232, 224, 118, 
     34, 143,  86,  93, 252, 185, 
     46, 216, 108,  97,  15,  62, 
    167,  77, 136, 205,  38,  91, 
     85, 196, 246, 108, 194,  93, 
    221, 197,  68, 197, 215, 114, 
     97, 215, 188, 186, 193, 254, 
    184, 219, 223, 130, 229,  14, 
    103, 116,  76,  38, 171, 198, 
    199, 172, 100,  61, 169,  49, 
    226, 236,  60, 191, 109, 118, 
    144, 157, 223,  54, 119, 205, 
     71,  43,  18,  62,  87,  36, 
    220,  59,  82,  68,   1, 226, 
     19,  66, 206, 205, 241,  39, 
    219,  53,  87,   2, 125, 177, 
    228, 109, 220,  51, 200,  57, 
    121, 215, 120,  86, 232,  73, 
    228,  60, 216, 139, 185,  59, 
      0, 249, 197,   5, 176, 204, 
    219,  42, 205, 185, 161, 253, 
    174, 141, 224,  60, 139, 229, 
     61,  78, 242,  18, 217,   1, 
     38,   4, 235,  12, 159, 101, 
    118,  39, 128,  93, 117, 129, 
    221, 227,   6,  33, 100,   2, 
    103, 183,  15, 156, 253,  65, 
    112,  58,  20, 160,  57, 131, 
    147, 219, 102, 226,   1, 200, 
     47,  52, 159, 175, 184,  38, 
    122, 193, 117, 190,   8, 244, 
    188,  86, 208,  31,  69, 126, 
     93, 216, 135, 122, 241, 103, 
    122, 210, 110, 115,  17, 159, 
     88, 250, 182,  24,  67,  27, 
     79, 223,  53, 114,  81,  79, 
     35, 191,  17, 220,  91, 216, 
    103,  30, 251, 140, 163, 237, 
     70, 203, 216,  18, 114,  16, 
    216,  69, 220, 231, 242, 236, 
    113, 176, 206,  78, 130, 109, 
    118,  26,  90, 204,  62,  46, 
    155, 131, 220, 106,  86, 184, 
     51,  98,   2, 127,  95,  24, 
    252, 253,  81, 240,  99, 174, 
    211, 154,  41,  23, 183, 205, 
    212, 183, 130, 156, 162, 243, 
    189,  21,  11, 230, 132, 101, 
    168,   8,  22, 204, 203, 183, 
     37,  41, 231, 193, 184,  26, 
    198, 141, 162, 141, 163, 189, 
    195, 216, 116, 194, 239,   3, 
     61,  20,   4,  92, 119,  80, 
     10,  28,  28, 133,  97, 128, 
     66,   1, 251,  10,  99,  95, 
     81, 236,  75, 227, 254,  54, 
     19, 132, 146,   1,   8, 245, 
    235,  16, 178,  99,  44,  81, 
    204, 189,  45, 203, 185,  59, 
    169, 212, 244, 218,  64, 126, 
    186, 202,  88, 238,  85,  73, 
     58,  18, 139, 248, 184,  22, 
     11, 242, 112, 187, 194,  41, 
    223,  92, 241,  48, 168, 241, 
     40, 184, 227,  26, 198,  11, 
     96,  60,  29, 227, 217, 120, 
     53, 101, 202, 173, 229, 227, 
    185,  87,  69, 241, 200, 183, 
    101, 249,   8, 107,  97,   5, 
    104, 243, 113, 103,  50, 200, 
     93, 248,  30,  20,  44, 166, 
    130, 106,  21,  11, 175,  49, 
    118, 132, 222,  41,  45,  61, 
     56, 238,  47, 224, 184, 143, 
     42, 252,  13, 108, 131, 212, 
     11, 215, 209, 223, 158, 245, 
    241, 116, 103, 144, 103, 187, 
    240,  93, 234,  53, 129,   9, 
    253,  97, 241, 211,  13,  92, 
    191,  71, 206, 212, 236,   7, 
    206,   1,  25, 123, 121, 179, 
    141, 172, 113, 126, 119,  64, 
    100, 163, 194,  67,  33, 136, 
     62, 252,  70, 122,  40, 212, 
     14, 125, 248, 109, 246,  80, 
    232, 224,  18, 125, 116, 214, 
    254, 153, 208, 225,  56, 250, 
    246, 159, 135,  27, 209,  69, 
    225, 145, 163,  94,  28, 143, 
    225, 203, 161, 105, 138,  65, 
     13, 125, 244,  29, 219, 148, 
    119,  27, 193,  87,  27,  22, 
     95, 129, 204, 138,  42,  52, 
    206, 148, 233, 239,  10,  17, 
    223, 150,  36, 242,  87, 191, 
    243, 135, 247, 234, 215, 255, 
     66, 247,  36, 191, 111, 180, 
    249,  69, 195,  18,  39,   5, 
    245, 161, 188,  75, 151, 127, 
     17, 177, 241,  31, 200,  95, 
     27, 237, 104, 204,  52,  84, 
     48,   6, 135,  66, 187,   6, 
     69, 111, 212,  11,  55,  44, 
    205,  23, 157, 209,  30, 228, 
     49, 208,  40,  95,  64,  37, 
    166,  99, 197, 242, 200, 220, 
     68, 249, 198, 205, 167, 174, 
     46, 127, 179,  60, 115, 237, 
    230, 141, 242, 216, 181, 149, 
    229, 167, 111,  94, 152, 155, 
     41, 223,  88, 121, 186, 124, 
    246, 217, 203,  87, 151,  87, 
    110, 148,  71,  95, 248, 218, 
    245, 107, 207,  45,  95,  45, 
     95, 184, 242, 194, 139, 167, 
    159,  95, 158,  45, 157,  25, 
    127, 230,  25, 172, 248, 212, 
    236, 217, 185, 229,  23, 111, 
    126,  99, 101, 249, 234, 185, 
    229, 231,  94, 120, 250, 218, 
    205, 111, 229, 175,  95, 189, 
    194, 254,   9, 125,  87,  59, 
     84,   0,   0,   0,  88,  72, 
     83,  72,   8,   0,   0,   0, 
      8, 107, 141, 222, 170, 210, 
    112, 238,  88,  80,  68,  80, 
     89,   0,   0,   0,  68,  58, 
     92,  65,  84,  71,  92, 115, 
    116,  95, 100, 101, 118,  92, 
     75, 105, 116, 115,  92,  68, 
    105, 114, 101,  99, 116,  88, 
     84,  75,  92, 115, 114,  99, 
     92,  83, 104,  97, 100, 101, 
    114, 115,  92,  67, 111, 109, 
    112, 105, 108, 101, 100,  92, 
     88,  98, 111, 120,  79, 110, 
    101,  80,  66,  82,  69, 102, 
    102, 101,  99, 116,  95,  80, 
     83,  84, 101, 120, 116, 117, 
    114, 101, 100,  86, 101, 108, 
    111,  99, 105, 116, 121,  46, 
    112, 100,  98
};
