#if 0
//
// Generated by Microsoft (R) D3D Shader Disassembler for Durango
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xy          0     NONE   float   xy  
// TEXCOORD                 1   xyzw        1     NONE   float   xyz 
// TEXCOORD                 2   xyz         2     NONE   float   xyz 
// COLOR                    0   xyzw        3     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
// Opaque Custom Data - XBOX Precompiled Shader Header
// First Precompiled Shader at offset:[614]
// Embedded Data:
//  0x00000266 - Offset To First Precompiled Shader
//  0x00000050 - Original Shader Descriptor
//  0x00000261 - Original Shader Size
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[26], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t2
dcl_input_ps linear v0.xy
dcl_input_ps linear v1.xyz
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyzw
dcl_output o0.xyzw
dcl_temps 5
deriv_rtx_coarse r0.xyz, v1.yzxy
deriv_rty_coarse r1.xyz, v1.zxyz
mul r2.xyz, r0.xyzx, r1.yzxy
mad r2.xyz, r0.zxyz, r1.zxyz, -r2.xyzx
mul r3.xyz, r0.xyzx, r2.xyzx
mad r0.xyz, r2.zxyz, r0.yzxy, -r3.xyzx
deriv_rty_coarse r3.xy, v0.xyxx
mul r3.xzw, r0.xxyz, r3.xxxx
mul r0.xyz, r0.xyzx, r3.yyyy
mul r4.xyz, r1.xyzx, r2.zxyz
mad r1.xyz, r1.zxyz, r2.xyzx, -r4.xyzx
deriv_rtx_coarse r2.xy, v0.xyxx
mad r2.xzw, r2.xxxx, r1.xxyz, r3.xxzw
mad r0.xyz, r2.yyyy, r1.xyzx, r0.xyzx
dp3 r0.w, r2.xzwx, r2.xzwx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r2.xzwx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
sample_indexable(texture2d)(float,float,float,float) r2.xy, v0.xyxx, t2.xyzw, s0
mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r0.xyz, r0.xyzx, r2.yyyy
mad r0.xyz, r2.xxxx, r1.xyzx, r0.xyzx
dp2 r0.w, r2.xyxx, r2.xyxx
add r0.w, -r0.w, l(1.000000)
sqrt r0.w, r0.w
mad r0.xyz, r0.wwww, v2.xyzx, r0.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
add r1.xyz, -v1.xyzx, cb0[12].xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mad r2.xyz, r1.xyzx, r0.wwww, -cb0[3].xyzx
dp3 r1.w, r2.xyzx, r2.xyzx
rsq r1.w, r1.w
mul r2.xyz, r1.wwww, r2.xyzx
dp3 r2.x, r2.xyzx, r0.xyzx
mad r3.xyz, r1.xyzx, r0.wwww, -cb0[4].xyzx
mad r1.xyz, r1.xyzx, r0.wwww, -cb0[5].xyzx
dp3 r0.w, r3.xyzx, r3.xyzx
rsq r0.w, r0.w
mul r3.xyz, r0.wwww, r3.xyzx
dp3 r2.y, r3.xyzx, r0.xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r1.xyzx
dp3 r2.z, r1.xyzx, r0.xyzx
max r1.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
dp3 r2.x, -cb0[3].xyzx, r0.xyzx
dp3 r2.y, -cb0[4].xyzx, r0.xyzx
dp3 r2.z, -cb0[5].xyzx, r0.xyzx
ge r0.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
and r0.xyz, r0.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
mul r1.xyz, r0.xyzx, r1.xyzx
mul r0.xyz, r2.xyzx, r0.xyzx
log r1.xyz, r1.xyzx
mul r1.xyz, r1.xyzx, cb0[2].wwww
exp r1.xyz, r1.xyzx
mul r1.xyz, r2.xyzx, r1.xyzx
mul r2.xyz, r1.yyyy, cb0[10].xyzx
mad r1.xyw, r1.xxxx, cb0[9].xyxz, r2.xyxz
mad r1.xyz, r1.zzzz, cb0[11].xyzx, r1.xywx
mul r1.xyz, r1.xyzx, cb0[2].xyzx
sample_indexable(texture2d)(float,float,float,float) r2.xyzw, v0.xyxx, t0.xyzw, s0
mul r2.xyzw, r2.xyzw, v3.xyzw
mul r1.xyz, r1.xyzx, r2.wwww
mul r3.xyz, r0.yyyy, cb0[7].xyzx
mad r0.xyw, r0.xxxx, cb0[6].xyxz, r3.xyxz
mad r0.xyz, r0.zzzz, cb0[8].xyzx, r0.xywx
mad r0.xyz, r0.xyzx, cb0[0].xyzx, cb0[1].xyzx
mad o0.xyz, r2.xyzx, r0.xyzx, r1.xyzx
mov o0.w, r2.w
ret 
// Opaque Custom Data - XBOX Precompiled Shader Object
// Offset:[614], bundle is:[402] DWORDS.
// Disassembled Precompiled Shader Object:
// Shader Type               : (PS)
// Shader Hw Stage           : (PS)
// PDB Filename              : D:\ATG\st_dev\Kits\DirectXTK\src\Shaders\Compiled\XboxOneNormalMapEffect_PSNormalPixelLightingTxNoFogSpec.pdb
// Shader Semantic Hash      : 0x9d95ec5b52e7409c
//
// Shader Data:
; ----------------- PS Data ------------------------
; Input Semantic Mappings
;   [0] generic,  usageIdx 0, channelMask  3, param0, paramSlot0, DefaultVal={0,0,0,0}
;   [1] generic,  usageIdx 1, channelMask  7, param1, paramSlot1, DefaultVal={0,0,0,0}
;   [2] generic,  usageIdx 2, channelMask  7, param2, paramSlot2, DefaultVal={0,0,0,0}
;   [3] generic,  usageIdx 3, channelMask 15, param3, paramSlot3, DefaultVal={0,0,0,0}

codeLenInByte        = 1352 bytes;

; launchModeFlags    = 0x0000000E
srdTableSupport      = TRUE
immediateSupportExt  = TRUE
srdTableSupportExt   = TRUE

userElementCount     = 1;
;  userElements[0]      = PTR_EXTENDED_USER_DATA, ReferencedExtUserElements=1, s[0x0:1]
extUserElementCount  = 4;
;  extUserElements 1[0] = IMM_RESOURCE 0, offset 0x0:7 dwords
;  extUserElements 1[1] = IMM_RESOURCE 2, offset 0x8:15 dwords
;  extUserElements 1[2] = IMM_SAMPLER 0, offset 0x10:19 dwords
;  extUserElements 1[3] = IMM_CONST_BUFFER 0, offset 0x14:23 dwords
NumVgprs             = 29;
NumSgprs             = 46;
FloatMode            = 192;
IeeeMode             = 0;
FlatPtr32            = 0;
ScratchSize          = 0 dwords/thread;
LDSByteSize          = 0 bytes/workgroup (compile time only);
ScratchWaveOffsetReg = s65535;
; texSamplerUsage         = 0x00000001
; constBufUsage           = 0x00000001

; SPI_SHADER_PGM_RSRC2_PS = 0x00000004
SSPRP:SCRATCH_EN            = 0
SSPRP:USER_SGPR             = 2
SSPRP:TRAP_PRESENT          = 0
SSPRP:WAVE_CNT_EN           = 0
SSPRP:EXTRA_LDS_SIZE        = 0
SSPRP:EXCP_EN               = 0
; SPI_SHADER_Z_FORMAT     = 0x00000000
SPZF:Z_EXPORT_FORMAT        = 0; SPI_SHADER_ZERO
; SPI_PS_IN_CONTROL       = 0x00000004
SPIC:NUM_INTERP             = 4
SPIC:PARAM_GEN              = 0
SPIC:FOG_ADDR               = 0
SPIC:BC_OPTIMIZE_DISABLE    = 0
SPIC:PASS_FOG_THROUGH_PS    = 0
; SPI_PS_INPUT_ADDR       = 0x00000002
SPIA:PERSP_CENTER_ENA       = 1
; DB_SHADER_CONTROL       = 0x00000010
DB:Z_ORDER                  = 1
DB:CONSERVATIVE_Z_EXPORT    = 0; EXPORT_ANY_Z
; CB_SHADER_MASK          = 0x0000000F
CB:OUTPUT0_ENABLE           = 15

; export table for mrt0 [patch@(bytes=0x534, dwords=0x14D)]
// Export Patch Code (FMT_ZERO):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_nop         0x0000                                  // 000000000000: BF800000
  s_nop         0x0000                                  // 000000000004: BF800000
  exp           null, off, off, off, off done vm        // 000000000008: F8001890 00000000
end
// Export Patch Code (FMT_32_R):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_nop         0x0000                                  // 000000000000: BF800000
  s_nop         0x0000                                  // 000000000004: BF800000
  exp           mrt0, v6, off, off, off done vm         // 000000000008: F8001801 00000006
end
// Export Patch Code (FMT_32_GR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_nop         0x0000                                  // 000000000000: BF800000
  s_nop         0x0000                                  // 000000000004: BF800000
  exp           mrt0, v6, v9, off, off done vm          // 000000000008: F8001803 00000906
end
// Export Patch Code (FMT_32_AR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_nop         0x0000                                  // 000000000000: BF800000
  s_nop         0x0000                                  // 000000000004: BF800000
  exp           mrt0, v6, v1, off, off done vm          // 000000000008: F8001803 00000106
end
// Export Patch Code (FMT_FP16_ABGR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  v_cvt_pkrtz_f16_f32  v0, v6, v9                       // 000000000000: 5E001306
  v_cvt_pkrtz_f16_f32  v1, v2, v1                       // 000000000004: 5E020302
  exp           mrt0, v0, v0, v1, v1 done compr vm      // 000000000008: F8001C0F 00000100
end
// Export Patch Code (FMT_UNORM16_ABGR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  v_cvt_pknorm_u16_f32  v0, v6, v9                      // 000000000000: 5C001306
  v_cvt_pknorm_u16_f32  v1, v2, v1                      // 000000000004: 5C020302
  exp           mrt0, v0, v0, v1, v1 done compr vm      // 000000000008: F8001C0F 00000100
end
// Export Patch Code (FMT_SNORM16_ABGR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  v_cvt_pknorm_i16_f32  v0, v6, v9                      // 000000000000: 5A001306
  v_cvt_pknorm_i16_f32  v1, v2, v1                      // 000000000004: 5A020302
  exp           mrt0, v0, v0, v1, v1 done compr vm      // 000000000008: F8001C0F 00000100
end
// Export Patch Code (FMT_UINT16_ABGR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  v_cvt_pk_u16_u32  v0, v6, v9                          // 000000000000: 60001306
  v_cvt_pk_u16_u32  v1, v2, v1                          // 000000000004: 60020302
  exp           mrt0, v0, v0, v1, v1 done compr vm      // 000000000008: F8001C0F 00000100
end
// Export Patch Code (FMT_SINT16_ABGR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  v_cvt_pk_i16_i32  v0, v6, v9                          // 000000000000: 62001306
  v_cvt_pk_i16_i32  v1, v2, v1                          // 000000000004: 62020302
  exp           mrt0, v0, v0, v1, v1 done compr vm      // 000000000008: F8001C0F 00000100
end
// Export Patch Code (FMT_32_ABGR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_nop         0x0000                                  // 000000000000: BF800000
  s_nop         0x0000                                  // 000000000004: BF800000
  exp           mrt0, v6, v9, v2, v1 done vm            // 000000000008: F800180F 01020906
end

// Shader Instructions:
shader main
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_mov_b64     s[26:27], exec                          // 000000000000: BE9A047E
  s_wqm_b64     exec, exec // wrscc                     // 000000000004: BEFE0A7E
  s_load_dwordx8  s[4:11], s[0:1], 0x08                 // 000000000008: C0C20108
  s_load_dwordx4  s[12:15], s[0:1], 0x10                // 00000000000C: C0860110
  s_mov_b32     m0, s2                                  // 000000000010: BEFC0302
  v_interp_p1_f32  v2, v0, attr0.x                      // 000000000014: C8080000
  v_interp_p1_f32  v3, v0, attr0.y                      // 000000000018: C80C0100
  v_interp_p2_f32  v2, v1, attr0.x                      // 00000000001C: C8090001
  v_interp_p2_f32  v3, v1, attr0.y                      // 000000000020: C80D0101
  s_waitcnt     lgkmcnt(0)                              // 000000000024: BF8C007F
  image_sample  v[6:9], v[2:3], s[4:11], s[12:15] dmask:0x3 // 000000000028: F0800300 00610602
  s_load_dwordx8  s[4:11], s[0:1], 0x00                 // 000000000030: C0C20100
  s_waitcnt     lgkmcnt(0)                              // 000000000034: BF8C007F
  image_sample  v[8:11], v[2:3], s[4:11], s[12:15] dmask:0xf // 000000000038: F0800F00 00610802
  v_interp_p1_f32  v4, v0, attr1.x                      // 000000000040: C8100400
  v_interp_p1_f32  v5, v0, attr1.z                      // 000000000044: C8140600
  v_interp_p2_f32  v4, v1, attr1.x                      // 000000000048: C8110401
  v_interp_p1_f32  v12, v0, attr1.y                     // 00000000004C: C8300500
  v_interp_p2_f32  v5, v1, attr1.z                      // 000000000050: C8150601
  s_load_dwordx4  s[0:3], s[0:1], 0x14                  // 000000000054: C0800114
  v_interp_p2_f32  v12, v1, attr1.y                     // 000000000058: C8310501
  ds_swizzle_b32  v13, v4 offset:32853                  // 00000000005C: D8D48055 0D000004
  ds_swizzle_b32  v14, v4 offset:32768                  // 000000000064: D8D48000 0E000004
  ds_swizzle_b32  v15, v5 offset:32938                  // 00000000006C: D8D480AA 0F000005
  ds_swizzle_b32  v16, v5 offset:32768                  // 000000000074: D8D48000 10000005
  ds_swizzle_b32  v17, v5 offset:32853                  // 00000000007C: D8D48055 11000005
  ds_swizzle_b32  v18, v5 offset:32768                  // 000000000084: D8D48000 12000005
  s_waitcnt     lgkmcnt(0)                              // 00000000008C: BF8C007F
  v_sub_f32     v13, v13, v14                           // 000000000090: 081A1D0D
  v_sub_f32     v14, v15, v16                           // 000000000094: 081C210F
  ds_swizzle_b32  v15, v4 offset:32938                  // 000000000098: D8D480AA 0F000004
  ds_swizzle_b32  v16, v4 offset:32768                  // 0000000000A0: D8D48000 10000004
  ds_swizzle_b32  v19, v12 offset:32938                 // 0000000000A8: D8D480AA 1300000C
  ds_swizzle_b32  v20, v12 offset:32768                 // 0000000000B0: D8D48000 1400000C
  ds_swizzle_b32  v21, v12 offset:32853                 // 0000000000B8: D8D48055 1500000C
  ds_swizzle_b32  v22, v12 offset:32768                 // 0000000000C0: D8D48000 1600000C
  v_sub_f32     v17, v17, v18                           // 0000000000C8: 08222511
  s_waitcnt     lgkmcnt(4)                              // 0000000000CC: BF8C047F
  v_sub_f32     v15, v15, v16                           // 0000000000D0: 081E210F
  s_waitcnt     lgkmcnt(2)                              // 0000000000D4: BF8C027F
  v_sub_f32     v16, v19, v20                           // 0000000000D8: 08202913
  v_mul_legacy_f32  v18, v13, v14                       // 0000000000DC: 0E241D0D
  s_waitcnt     lgkmcnt(0)                              // 0000000000E0: BF8C007F
  v_sub_f32     v19, v21, v22                           // 0000000000E4: 08262D15
  v_mul_legacy_f32  v20, v17, v16                       // 0000000000E8: 0E282111
  v_mad_legacy_f32  v18, v17, v15, -v18                 // 0000000000EC: D2800012 844A1F11
  v_mul_legacy_f32  v21, v19, v15                       // 0000000000F4: 0E2A1F13
  v_mad_legacy_f32  v20, v19, v14, -v20                 // 0000000000F8: D2800014 84521D13
  v_mul_legacy_f32  v22, v13, v18                       // 000000000100: 0E2C250D
  ds_swizzle_b32  v23, v3 offset:32938                  // 000000000104: D8D480AA 17000003
  ds_swizzle_b32  v24, v3 offset:32768                  // 00000000010C: D8D48000 18000003
  s_buffer_load_dwordx4  s[4:7], s[0:3], 0x30           // 000000000114: C2820130
  v_mad_legacy_f32  v21, v13, v16, -v21                 // 000000000118: D2800015 8456210D
  v_mul_legacy_f32  v25, v17, v20                       // 000000000120: 0E322911
  v_mad_legacy_f32  v22, v20, v19, -v22                 // 000000000124: D2800016 845A2714
  ds_swizzle_b32  v26, v2 offset:32938                  // 00000000012C: D8D480AA 1A000002
  ds_swizzle_b32  v27, v2 offset:32768                  // 000000000134: D8D48000 1B000002
  s_waitcnt     lgkmcnt(0)                              // 00000000013C: BF8C007F
  v_sub_f32     v23, v23, v24                           // 000000000140: 082E3117
  v_mul_legacy_f32  v24, v16, v20                       // 000000000144: 0E302910
  ds_swizzle_b32  v28, v3 offset:32853                  // 000000000148: D8D48055 1C000003
  ds_swizzle_b32  v3, v3 offset:32768                   // 000000000150: D8D48000 03000003
  v_mul_legacy_f32  v19, v19, v21                       // 000000000158: 0E262B13
  v_mad_legacy_f32  v25, v21, v13, -v25                 // 00000000015C: D2800019 84661B15
  v_sub_f32     v13, v26, v27                           // 000000000164: 081A371A
  v_mul_legacy_f32  v26, v22, v23                       // 000000000168: 0E342F16
  v_mul_legacy_f32  v27, v15, v21                       // 00000000016C: 0E362B0F
  v_mad_legacy_f32  v24, v15, v18, -v24                 // 000000000170: D2800018 8462250F
  ds_swizzle_b32  v15, v2 offset:32853                  // 000000000178: D8D48055 0F000002
  ds_swizzle_b32  v2, v2 offset:32768                   // 000000000180: D8D48000 02000002
  s_waitcnt     lgkmcnt(2)                              // 000000000188: BF8C027F
  v_sub_f32     v3, v28, v3                             // 00000000018C: 0806071C
  v_mad_legacy_f32  v19, v18, v17, -v19                 // 000000000190: D2800013 844E2312
  v_mul_legacy_f32  v17, v22, v13                       // 000000000198: 0E221B16
  v_mul_legacy_f32  v22, v25, v23                       // 00000000019C: 0E2C2F19
  v_mul_legacy_f32  v18, v14, v18                       // 0000000001A0: 0E24250E
  v_mad_legacy_f32  v27, v14, v20, -v27                 // 0000000001A4: D280001B 846E290E
  s_waitcnt     lgkmcnt(0)                              // 0000000001AC: BF8C007F
  v_sub_f32     v2, v15, v2                             // 0000000001B0: 0804050F
  v_mac_f32     v26, v3, v24                            // 0000000001B4: 3E343103
  v_mul_legacy_f32  v14, v25, v13                       // 0000000001B8: 0E1C1B19
  v_mul_legacy_f32  v15, v19, v23                       // 0000000001BC: 0E1E2F13
  v_mad_legacy_f32  v18, v16, v21, -v18                 // 0000000001C0: D2800012 844A2B10
  v_mac_f32     v17, v2, v24                            // 0000000001C8: 3E223102
  v_mac_f32     v22, v3, v27                            // 0000000001CC: 3E2C3703
  v_mul_legacy_f32  v16, v26, v26                       // 0000000001D0: 0E20351A
  v_mul_legacy_f32  v13, v19, v13                       // 0000000001D4: 0E1A1B13
  v_mac_f32     v14, v2, v27                            // 0000000001D8: 3E1C3702
  v_mac_f32     v15, v3, v18                            // 0000000001DC: 3E1E2503
  v_mul_legacy_f32  v3, v17, v17                        // 0000000001E0: 0E062311
  v_mac_f32     v16, v22, v22                           // 0000000001E4: 3E202D16
  s_buffer_load_dwordx4  s[8:11], s[0:3], 0x10          // 0000000001E8: C2840110
  v_mac_f32     v13, v2, v18                            // 0000000001EC: 3E1A2502
  v_mac_f32     v3, v14, v14                            // 0000000001F0: 3E061D0E
  v_mac_f32     v16, v15, v15                           // 0000000001F4: 3E201F0F
  s_waitcnt     vmcnt(1)                                // 0000000001F8: BF8C0F71
  v_mad_f32     v2, v6, 2.0, -1.0                       // 0000000001FC: D2820002 03CDE906
  v_sub_f32     v5, s6, v5                              // 000000000204: 080A0A06
  s_buffer_load_dwordx4  s[12:15], s[0:3], 0x0c         // 000000000208: C286010C
  v_mac_f32     v3, v13, v13                            // 00000000020C: 3E061B0D
  v_rsq_f32     v6, v16                                 // 000000000210: 7E0C5D10
  v_mad_f32     v7, v7, 2.0, -1.0                       // 000000000214: D2820007 03CDE907
  v_mul_legacy_f32  v16, v2, v2                         // 00000000021C: 0E200502
  v_sub_f32     v12, s5, v12                            // 000000000220: 08181805
  v_mul_legacy_f32  v18, v5, v5                         // 000000000224: 0E240B05
  s_buffer_load_dwordx4  s[16:19], s[0:3], 0x14         // 000000000228: C2880114
  v_rsq_f32     v3, v3                                  // 00000000022C: 7E065D03
  v_mul_legacy_f32  v19, v26, v6                        // 000000000230: 0E260D1A
  v_mac_f32     v16, v7, v7                             // 000000000234: 3E200F07
  v_sub_f32     v4, s4, v4                              // 000000000238: 08080804
  v_mac_f32     v18, v12, v12                           // 00000000023C: 3E24190C
  v_mul_legacy_f32  v17, v17, v3                        // 000000000240: 0E220711
  v_mul_legacy_f32  v20, v22, v6                        // 000000000244: 0E280D16
  v_mul_legacy_f32  v19, v19, v7                        // 000000000248: 0E260F13
  v_sub_f32     v16, 1.0, v16                           // 00000000024C: 082020F2
  v_interp_p1_f32  v21, v0, attr2.z                     // 000000000250: C8540A00
  v_mac_f32     v18, v4, v4                             // 000000000254: 3E240904
  v_mul_legacy_f32  v14, v14, v3                        // 000000000258: 0E1C070E
  v_mul_legacy_f32  v6, v15, v6                         // 00000000025C: 0E0C0D0F
  v_mul_legacy_f32  v15, v20, v7                        // 000000000260: 0E1E0F14
  v_mac_f32     v19, v2, v17                            // 000000000264: 3E262302
  v_sqrt_f32    v16, v16                                // 000000000268: 7E206710
  v_interp_p1_f32  v17, v0, attr2.y                     // 00000000026C: C8440900
  v_interp_p2_f32  v21, v1, attr2.z                     // 000000000270: C8550A01
  v_rsq_f32     v18, v18                                // 000000000274: 7E245D12
  v_mul_legacy_f32  v3, v13, v3                         // 000000000278: 0E06070D
  v_mul_legacy_f32  v6, v6, v7                          // 00000000027C: 0E0C0F06
  v_mac_f32     v15, v2, v14                            // 000000000280: 3E1E1D02
  v_interp_p1_f32  v7, v0, attr2.x                      // 000000000284: C81C0800
  v_interp_p2_f32  v17, v1, attr2.y                     // 000000000288: C8450901
  v_mac_f32     v19, v16, v21                           // 00000000028C: 3E262B10
  s_waitcnt     lgkmcnt(0)                              // 000000000290: BF8C007F
  v_mad_legacy_f32  v13, v5, v18, -s10                  // 000000000294: D280000D 802A2505
  v_mac_f32     v6, v2, v3                              // 00000000029C: 3E0C0702
  v_interp_p2_f32  v7, v1, attr2.x                      // 0000000002A0: C81D0801
  v_mac_f32     v15, v16, v17                           // 0000000002A4: 3E1E2310
  v_mul_legacy_f32  v2, v19, v19                        // 0000000002A8: 0E042713
  v_mad_legacy_f32  v3, v5, v18, -s14                   // 0000000002AC: D2800003 803A2505
  v_mad_legacy_f32  v14, v12, v18, -s9                  // 0000000002B4: D280000E 8026250C
  v_mul_legacy_f32  v17, v13, v13                       // 0000000002BC: 0E221B0D
  v_mac_f32     v6, v16, v7                             // 0000000002C0: 3E0C0F10
  v_mac_f32     v2, v15, v15                            // 0000000002C4: 3E041F0F
  v_mad_legacy_f32  v7, v12, v18, -s13                  // 0000000002C8: D2800007 8036250C
  v_mul_legacy_f32  v16, v3, v3                         // 0000000002D0: 0E200703
  v_mad_legacy_f32  v20, v4, v18, -s8                   // 0000000002D4: D2800014 80222504
  v_mad_legacy_f32  v5, v5, v18, -s18                   // 0000000002DC: D2800005 804A2505
  v_mac_f32     v17, v14, v14                           // 0000000002E4: 3E221D0E
  v_mac_f32     v2, v6, v6                              // 0000000002E8: 3E040D06
  v_mad_legacy_f32  v21, v4, v18, -s12                  // 0000000002EC: D2800015 80322504
  v_mac_f32     v16, v7, v7                             // 0000000002F4: 3E200F07
  v_mad_legacy_f32  v12, v12, v18, -s17                 // 0000000002F8: D280000C 8046250C
  v_mac_f32     v17, v20, v20                           // 000000000300: 3E222914
  v_mul_legacy_f32  v22, v5, v5                         // 000000000304: 0E2C0B05
  v_rsq_f32     v2, v2                                  // 000000000308: 7E045D02
  v_mac_f32     v16, v21, v21                           // 00000000030C: 3E202B15
  v_mad_legacy_f32  v4, v4, v18, -s16                   // 000000000310: D2800004 80422504
  v_rsq_f32     v17, v17                                // 000000000318: 7E225D11
  v_mac_f32     v22, v12, v12                           // 00000000031C: 3E2C190C
  v_mul_legacy_f32  v18, v19, v2                        // 000000000320: 0E240513
  v_rsq_f32     v16, v16                                // 000000000324: 7E205D10
  v_mul_legacy_f32  v13, v13, v17                       // 000000000328: 0E1A230D
  v_mac_f32     v22, v4, v4                             // 00000000032C: 3E2C0904
  v_mul_legacy_f32  v15, v15, v2                        // 000000000330: 0E1E050F
  v_mul_legacy_f32  v3, v3, v16                         // 000000000334: 0E062103
  v_mul_legacy_f32  v14, v14, v17                       // 000000000338: 0E1C230E
  v_mul_legacy_f32  v13, v18, v13                       // 00000000033C: 0E1A1B12
  v_rsq_f32     v19, v22                                // 000000000340: 7E265D16
  v_mul_legacy_f32  v22, v18, -s10                      // 000000000344: D20E0016 40001512
  s_buffer_load_dwordx4  s[4:7], s[0:3], 0x08           // 00000000034C: C2820108
  v_mul_legacy_f32  v2, v6, v2                          // 000000000350: 0E040506
  v_mul_legacy_f32  v6, v7, v16                         // 000000000354: 0E0C2107
  v_mul_legacy_f32  v3, v18, v3                         // 000000000358: 0E060712
  v_mul_legacy_f32  v7, v20, v17                        // 00000000035C: 0E0E2314
  v_mac_f32     v13, v14, v15                           // 000000000360: 3E1A1F0E
  v_mul_legacy_f32  v5, v5, v19                         // 000000000364: 0E0A2705
  v_mul_legacy_f32  v14, v18, -s14                      // 000000000368: D20E000E 40001D12
  v_mad_legacy_f32  v22, -s9, v15, v22                  // 000000000370: D2800016 245A1E09
  v_mul_legacy_f32  v16, v21, v16                       // 000000000378: 0E202115
  v_mac_f32     v3, v6, v15                             // 00000000037C: 3E061F06
  v_mac_f32     v13, v7, v2                             // 000000000380: 3E1A0507
  v_mul_legacy_f32  v6, v12, v19                        // 000000000384: 0E0C270C
  v_mul_legacy_f32  v5, v18, v5                         // 000000000388: 0E0A0B12
  v_mad_legacy_f32  v14, -s13, v15, v14                 // 00000000038C: D280000E 243A1E0D
  v_mad_legacy_f32  v22, -s8, v2, v22                   // 000000000394: D2800016 245A0408
  v_mul_legacy_f32  v7, v18, -s18                       // 00000000039C: D20E0007 40002512
  v_mac_f32     v3, v16, v2                             // 0000000003A4: 3E060510
  v_mul_legacy_f32  v4, v4, v19                         // 0000000003A8: 0E082704
  v_mac_f32     v5, v6, v15                             // 0000000003AC: 3E0A1F06
  v_max_legacy_f32  v6, 0, v13                          // 0000000003B0: 1C0C1A80
  v_mad_legacy_f32  v14, -s12, v2, v14                  // 0000000003B4: D280000E 243A040C
  v_mad_legacy_f32  v7, -s17, v15, v7                   // 0000000003BC: D2800007 241E1E11
  v_cmp_ge_f32  s[8:9], v22, 0                          // 0000000003C4: D00C0008 00010116
  s_buffer_load_dwordx4  s[12:15], s[0:3], 0x28         // 0000000003CC: C2860128
  v_mac_f32     v5, v4, v2                              // 0000000003D0: 3E0A0504
  v_max_legacy_f32  v3, 0, v3                           // 0000000003D4: 1C060680
  v_mad_legacy_f32  v7, -s16, v2, v7                    // 0000000003D8: D2800007 241E0410
  v_cmp_ge_f32  s[10:11], v14, 0                        // 0000000003E0: D00C000A 0001010E
  v_cndmask_b32  v2, 0, v6, s[8:9]                      // 0000000003E8: D2000002 00220C80
  s_buffer_load_dwordx4  s[16:19], s[0:3], 0x1c         // 0000000003F0: C288011C
  s_buffer_load_dwordx4  s[20:23], s[0:3], 0x24         // 0000000003F4: C28A0124
  v_max_legacy_f32  v4, 0, v5                           // 0000000003F8: 1C080A80
  v_cmp_ge_f32  s[24:25], v7, 0                         // 0000000003FC: D00C0018 00010107
  v_cndmask_b32  v3, 0, v3, s[10:11]                    // 000000000404: D2000003 002A0680
  v_log_f32     v2, v2                                  // 00000000040C: 7E044F02
  s_buffer_load_dwordx4  s[28:31], s[0:3], 0x18         // 000000000410: C28E0118
  s_buffer_load_dwordx4  s[32:35], s[0:3], 0x2c         // 000000000414: C290012C
  v_cndmask_b32  v4, 0, v4, s[24:25]                    // 000000000418: D2000004 00620880
  v_log_f32     v3, v3                                  // 000000000420: 7E064F03
  s_waitcnt     lgkmcnt(0)                              // 000000000424: BF8C007F
  v_mul_legacy_f32  v2, s7, v2                          // 000000000428: 0E040407
  s_buffer_load_dwordx4  s[36:39], s[0:3], 0x04         // 00000000042C: C2920104
  s_buffer_load_dwordx4  s[40:43], s[0:3], 0x20         // 000000000430: C2940120
  v_log_f32     v4, v4                                  // 000000000434: 7E084F04
  v_mul_legacy_f32  v3, s7, v3                          // 000000000438: 0E060607
  v_exp_f32     v2, v2                                  // 00000000043C: 7E044B02
  s_buffer_load_dwordx4  s[0:3], s[0:3], 0x00           // 000000000440: C2800100
  v_mul_legacy_f32  v4, s7, v4                          // 000000000444: 0E080807
  v_exp_f32     v3, v3                                  // 000000000448: 7E064B03
  v_mul_legacy_f32  v2, v22, v2                         // 00000000044C: 0E040516
  v_cndmask_b32  v5, 0, v22, s[8:9]                     // 000000000450: D2000005 00222C80
  v_exp_f32     v4, v4                                  // 000000000458: 7E084B04
  v_mul_legacy_f32  v3, v14, v3                         // 00000000045C: 0E06070E
  v_mul_legacy_f32  v6, s12, v2                         // 000000000460: 0E0C040C
  v_mul_legacy_f32  v12, s13, v2                        // 000000000464: 0E18040D
  v_mul_legacy_f32  v2, s14, v2                         // 000000000468: 0E04040E
  v_cndmask_b32  v13, 0, v14, s[10:11]                  // 00000000046C: D200000D 002A1C80
  v_mul_legacy_f32  v4, v7, v4                          // 000000000474: 0E080907
  v_mac_f32     v6, s20, v3                             // 000000000478: 3E0C0614
  v_mac_f32     v12, s21, v3                            // 00000000047C: 3E180615
  v_mac_f32     v2, s22, v3                             // 000000000480: 3E040616
  v_interp_p1_f32  v3, v0, attr3.w                      // 000000000484: C80C0F00
  v_mul_legacy_f32  v14, s16, v5                        // 000000000488: 0E1C0A10
  v_mul_legacy_f32  v15, s17, v5                        // 00000000048C: 0E1E0A11
  v_mul_legacy_f32  v5, s18, v5                         // 000000000490: 0E0A0A12
  v_cndmask_b32  v7, 0, v7, s[24:25]                    // 000000000494: D2000007 00620E80
  v_mac_f32     v6, s32, v4                             // 00000000049C: 3E0C0820
  v_mac_f32     v12, s33, v4                            // 0000000004A0: 3E180821
  v_mac_f32     v2, s34, v4                             // 0000000004A4: 3E040822
  v_interp_p1_f32  v4, v0, attr3.x                      // 0000000004A8: C8100C00
  v_interp_p1_f32  v16, v0, attr3.y                     // 0000000004AC: C8400D00
  v_interp_p1_f32  v0, v0, attr3.z                      // 0000000004B0: C8000E00
  v_interp_p2_f32  v3, v1, attr3.w                      // 0000000004B4: C80D0F01
  v_mac_f32     v14, s28, v13                           // 0000000004B8: 3E1C1A1C
  v_mac_f32     v15, s29, v13                           // 0000000004BC: 3E1E1A1D
  v_mac_f32     v5, s30, v13                            // 0000000004C0: 3E0A1A1E
  v_mul_legacy_f32  v6, s4, v6                          // 0000000004C4: 0E0C0C04
  v_mul_legacy_f32  v12, s5, v12                        // 0000000004C8: 0E181805
  v_mul_legacy_f32  v2, s6, v2                          // 0000000004CC: 0E040406
  v_interp_p2_f32  v4, v1, attr3.x                      // 0000000004D0: C8110C01
  v_interp_p2_f32  v16, v1, attr3.y                     // 0000000004D4: C8410D01
  v_interp_p2_f32  v0, v1, attr3.z                      // 0000000004D8: C8010E01
  s_waitcnt     vmcnt(0)                                // 0000000004DC: BF8C0F70
  v_mul_legacy_f32  v1, v11, v3                         // 0000000004E0: 0E02070B
  s_waitcnt     lgkmcnt(0)                              // 0000000004E4: BF8C007F
  v_mac_f32     v14, s40, v7                            // 0000000004E8: 3E1C0E28
  v_mac_f32     v15, s41, v7                            // 0000000004EC: 3E1E0E29
  v_mac_f32     v5, s42, v7                             // 0000000004F0: 3E0A0E2A
  v_mov_b32     v3, s36                                 // 0000000004F4: 7E060224
  v_mov_b32     v7, s37                                 // 0000000004F8: 7E0E0225
  v_mov_b32     v11, s38                                // 0000000004FC: 7E160226
  v_mul_legacy_f32  v4, v8, v4                          // 000000000500: 0E080908
  v_mul_legacy_f32  v8, v9, v16                         // 000000000504: 0E102109
  v_mul_legacy_f32  v0, v10, v0                         // 000000000508: 0E00010A
  v_mul_legacy_f32  v6, v6, v1                          // 00000000050C: 0E0C0306
  v_mul_legacy_f32  v9, v12, v1                         // 000000000510: 0E12030C
  v_mul_legacy_f32  v2, v2, v1                          // 000000000514: 0E040302
  v_mac_f32     v3, s0, v14                             // 000000000518: 3E061C00
  v_mac_f32     v7, s1, v15                             // 00000000051C: 3E0E1E01
  v_mac_f32     v11, s2, v5                             // 000000000520: 3E160A02
  v_mac_f32     v6, v4, v3                              // 000000000524: 3E0C0704
  v_mac_f32     v9, v8, v7                              // 000000000528: 3E120F08
  v_mac_f32     v2, v0, v11                             // 00000000052C: 3E041700
  s_mov_b64     exec, s[26:27]                          // 000000000530: BEFE041A
  v_cvt_pkrtz_f16_f32  v0, v6, v9                       // 000000000534: 5E001306
  v_cvt_pkrtz_f16_f32  v1, v2, v1                       // 000000000538: 5E020302
  exp           mrt0, v0, v0, v1, v1 done compr vm      // 00000000053C: F8001C0F 00000100
  s_endpgm                                              // 000000000544: BF810000
end


// Shader Statistics:
//  NumActiveWaveFront:         32
//  WorkgroupSize:              64
//  NumVRegs:                   29
//  NumSRegs:                   46
//  NumActiveWaveFrontByVReg:   32
//  NumActiveWaveFrontBySReg:   40
//  NumActiveWaveFrontByLDS:    40
//  CycleSim:                   268
//  CycleSimNWaves:             268
//  Code Size:                  1352
//Assembler Counts:
//  num_32bit_ops                     : 216
//  num_64bit_ops                     : 61
//  num_alu                           : 218
//  num_fc                            : 36
//  num_inst_exp                      : 1
//  num_inst_ldsgds                   : 20
//  num_inst_mimg                     : 2
//  num_inst_mtbuf                    : 0
//  num_inst_mubuf                    : 0
//  num_inst_sopp                     : 15
//  num_inst_sopc                     : 0
//  num_inst_sop1                     : 4
//  num_inst_sop2                     : 0
//  num_inst_smrd                     : 0
//  num_inst_sopk                     : 0
//  num_inst_vop1                     : 17
//  num_inst_vop2                     : 139
//  num_inst_vop3                     : 30
//  num_inst_vopc                     : 0
//  num_inst_vintrp                   : 24
//  constant_literal_operands         : 0
//  num_tex                           : 23
//  num_vmem_group                    : 2
//  vmem_grouping_started             : 0
//
//Compilation Notes:
//
//  PS has no UAV writes, consider forcing REZ/LATEZ.
// Shader Statistics:
// m_uNumActiveWaveFront             : 32
// m_uVRegLimit                      : 256
// m_uSRegLimit                      : 512
// m_uNumVRegs                       : 29
// m_uNumSRegs                       : 46
// m_uSCCodeSize                     : 1352
// m_uWorkgroupSize                  : 64
// m_uNumActiveWaveFrontByVReg       : 32
// m_uNumActiveWaveFrontBySReg       : 40
// m_uNumActiveWaveFrontByLDS        : 40
// m_uCycleSim1Wave                  : 268
// m_uCycleSimNWaves                 : 268

// Assembler Counts:
// num_32bit_ops                     : 216
// num_64bit_ops                     : 61
// num_alu                           : 218
// num_fc                            : 36
// num_inst_exp                      : 1
// num_inst_ldsgds                   : 20
// num_inst_mimg                     : 2
// num_inst_mtbuf                    : 0
// num_inst_mubuf                    : 0
// num_inst_sopp                     : 15
// num_inst_sopc                     : 0
// num_inst_sop1                     : 4
// num_inst_sop2                     : 0
// num_inst_smrd                     : 0
// num_inst_sopk                     : 0
// num_inst_vop1                     : 17
// num_inst_vop2                     : 139
// num_inst_vop3                     : 30
// num_inst_vopc                     : 0
// num_inst_vintrp                   : 24
// num_inst_smem                     : 17
// constant_literal_operands         : 0
// num_tex                           : 23
// num_vmem_group                    : 2
// vmem_grouping_started             : 0
// m_fFullPrecompilePromise          : 0
// m_fIntegerDivideExpansion         : 0
// m_fIntegerModExpansion            : 0
// m_fDoubleDivideExpansion          : 0
// m_fUsesScratch                    : 0
// m_fPerThreadIndirection           : 0
// m_fUsingTableLoads                : 0
// m_fUsingSHmemLoads                : 1
// fSemanticHashFlagOverrideApplied  : 0
// fPSHasNoUAVWrite                  : 1
// m_fRenderTargetsCanBeCompacted    : 0
// version                           : 3
// fCodePatched                      : 0

// Approximately 0 instruction slots used
#endif

const BYTE NormalMapEffect_PSNormalPixelLightingTxNoFogSpec[] =
{
     68,  88,  66,  67,  54, 197, 
     47, 137, 164, 174, 233, 223, 
    196, 155,  31,  85, 222, 157, 
    131, 117,   1,   0,   0,   0, 
     93,  17,   0,   0,   5,   0, 
      0,   0,  52,   0,   0,   0, 
    180,   0,   0,   0, 232,   0, 
      0,   0, 216,  16,   0,   0, 
    232,  16,   0,   0,  73,  83, 
     71,  78, 120,   0,   0,   0, 
      4,   0,   0,   0,   8,   0, 
      0,   0, 104,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      0,   0,   0,   0,   3,   3, 
      0,   0, 104,   0,   0,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   0,   0,  15,   7, 
      0,   0, 104,   0,   0,   0, 
      2,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      2,   0,   0,   0,   7,   7, 
      0,   0, 113,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      3,   0,   0,   0,  15,  15, 
      0,   0,  84,  69,  88,  67, 
     79,  79,  82,  68,   0,  67, 
     79,  76,  79,  82,   0, 171, 
     79,  83,  71,  78,  44,   0, 
      0,   0,   1,   0,   0,   0, 
      8,   0,   0,   0,  32,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   3,   0, 
      0,   0,   0,   0,   0,   0, 
     15,   0,   0,   0,  83,  86, 
     95,  84,  97, 114, 103, 101, 
    116,   0, 171, 171,  83,  72, 
     69,  88, 232,  15,   0,   0, 
     80,   0,   0,   0, 250,   3, 
      0,   0,  53,  16,   0,   0, 
      5,   0,   0,   0, 102,   2, 
      0,   0,  80,   0,   0,   0, 
     97,   2,   0,   0, 106,   8, 
      0,   1,  89,   0,   0,   4, 
     70, 142,  32,   0,   0,   0, 
      0,   0,  26,   0,   0,   0, 
     90,   0,   0,   3,   0,  96, 
     16,   0,   0,   0,   0,   0, 
     88,  24,   0,   4,   0, 112, 
     16,   0,   0,   0,   0,   0, 
     85,  85,   0,   0,  88,  24, 
      0,   4,   0, 112,  16,   0, 
      2,   0,   0,   0,  85,  85, 
      0,   0,  98,  16,   0,   3, 
     50,  16,  16,   0,   0,   0, 
      0,   0,  98,  16,   0,   3, 
    114,  16,  16,   0,   1,   0, 
      0,   0,  98,  16,   0,   3, 
    114,  16,  16,   0,   2,   0, 
      0,   0,  98,  16,   0,   3, 
    242,  16,  16,   0,   3,   0, 
      0,   0, 101,   0,   0,   3, 
    242,  32,  16,   0,   0,   0, 
      0,   0, 104,   0,   0,   2, 
      5,   0,   0,   0, 122,   0, 
      0,   5, 114,   0,  16,   0, 
      0,   0,   0,   0, 150,  20, 
     16,   0,   1,   0,   0,   0, 
    124,   0,   0,   5, 114,   0, 
     16,   0,   1,   0,   0,   0, 
     38,  25,  16,   0,   1,   0, 
      0,   0,  56,   0,   0,   7, 
    114,   0,  16,   0,   2,   0, 
      0,   0,  70,   2,  16,   0, 
      0,   0,   0,   0, 150,   4, 
     16,   0,   1,   0,   0,   0, 
     50,   0,   0,  10, 114,   0, 
     16,   0,   2,   0,   0,   0, 
     38,   9,  16,   0,   0,   0, 
      0,   0,  38,   9,  16,   0, 
      1,   0,   0,   0,  70,   2, 
     16, 128,  65,   0,   0,   0, 
      2,   0,   0,   0,  56,   0, 
      0,   7, 114,   0,  16,   0, 
      3,   0,   0,   0,  70,   2, 
     16,   0,   0,   0,   0,   0, 
     70,   2,  16,   0,   2,   0, 
      0,   0,  50,   0,   0,  10, 
    114,   0,  16,   0,   0,   0, 
      0,   0,  38,   9,  16,   0, 
      2,   0,   0,   0, 150,   4, 
     16,   0,   0,   0,   0,   0, 
     70,   2,  16, 128,  65,   0, 
      0,   0,   3,   0,   0,   0, 
    124,   0,   0,   5,  50,   0, 
     16,   0,   3,   0,   0,   0, 
     70,  16,  16,   0,   0,   0, 
      0,   0,  56,   0,   0,   7, 
    210,   0,  16,   0,   3,   0, 
      0,   0,   6,   9,  16,   0, 
      0,   0,   0,   0,   6,   0, 
     16,   0,   3,   0,   0,   0, 
     56,   0,   0,   7, 114,   0, 
     16,   0,   0,   0,   0,   0, 
     70,   2,  16,   0,   0,   0, 
      0,   0,  86,   5,  16,   0, 
      3,   0,   0,   0,  56,   0, 
      0,   7, 114,   0,  16,   0, 
      4,   0,   0,   0,  70,   2, 
     16,   0,   1,   0,   0,   0, 
     38,   9,  16,   0,   2,   0, 
      0,   0,  50,   0,   0,  10, 
    114,   0,  16,   0,   1,   0, 
      0,   0,  38,   9,  16,   0, 
      1,   0,   0,   0,  70,   2, 
     16,   0,   2,   0,   0,   0, 
     70,   2,  16, 128,  65,   0, 
      0,   0,   4,   0,   0,   0, 
    122,   0,   0,   5,  50,   0, 
     16,   0,   2,   0,   0,   0, 
     70,  16,  16,   0,   0,   0, 
      0,   0,  50,   0,   0,   9, 
    210,   0,  16,   0,   2,   0, 
      0,   0,   6,   0,  16,   0, 
      2,   0,   0,   0,   6,   9, 
     16,   0,   1,   0,   0,   0, 
      6,  14,  16,   0,   3,   0, 
      0,   0,  50,   0,   0,   9, 
    114,   0,  16,   0,   0,   0, 
      0,   0,  86,   5,  16,   0, 
      2,   0,   0,   0,  70,   2, 
     16,   0,   1,   0,   0,   0, 
     70,   2,  16,   0,   0,   0, 
      0,   0,  16,   0,   0,   7, 
    130,   0,  16,   0,   0,   0, 
      0,   0, 134,   3,  16,   0, 
      2,   0,   0,   0, 134,   3, 
     16,   0,   2,   0,   0,   0, 
     68,   0,   0,   5, 130,   0, 
     16,   0,   0,   0,   0,   0, 
     58,   0,  16,   0,   0,   0, 
      0,   0,  56,   0,   0,   7, 
    114,   0,  16,   0,   1,   0, 
      0,   0, 246,  15,  16,   0, 
      0,   0,   0,   0, 134,   3, 
     16,   0,   2,   0,   0,   0, 
     16,   0,   0,   7, 130,   0, 
     16,   0,   0,   0,   0,   0, 
     70,   2,  16,   0,   0,   0, 
      0,   0,  70,   2,  16,   0, 
      0,   0,   0,   0,  68,   0, 
      0,   5, 130,   0,  16,   0, 
      0,   0,   0,   0,  58,   0, 
     16,   0,   0,   0,   0,   0, 
     56,   0,   0,   7, 114,   0, 
     16,   0,   0,   0,   0,   0, 
    246,  15,  16,   0,   0,   0, 
      0,   0,  70,   2,  16,   0, 
      0,   0,   0,   0,  69,   0, 
      0, 139, 194,   0,   0, 128, 
     67,  85,  21,   0,  50,   0, 
     16,   0,   2,   0,   0,   0, 
     70,  16,  16,   0,   0,   0, 
      0,   0,  70, 126,  16,   0, 
      2,   0,   0,   0,   0,  96, 
     16,   0,   0,   0,   0,   0, 
     50,   0,   0,  15,  50,   0, 
     16,   0,   2,   0,   0,   0, 
     70,   0,  16,   0,   2,   0, 
      0,   0,   2,  64,   0,   0, 
      0,   0,   0,  64,   0,   0, 
      0,  64,   0,   0,   0,   0, 
      0,   0,   0,   0,   2,  64, 
      0,   0,   0,   0, 128, 191, 
      0,   0, 128, 191,   0,   0, 
      0,   0,   0,   0,   0,   0, 
     56,   0,   0,   7, 114,   0, 
     16,   0,   0,   0,   0,   0, 
     70,   2,  16,   0,   0,   0, 
      0,   0,  86,   5,  16,   0, 
      2,   0,   0,   0,  50,   0, 
      0,   9, 114,   0,  16,   0, 
      0,   0,   0,   0,   6,   0, 
     16,   0,   2,   0,   0,   0, 
     70,   2,  16,   0,   1,   0, 
      0,   0,  70,   2,  16,   0, 
      0,   0,   0,   0,  15,   0, 
      0,   7, 130,   0,  16,   0, 
      0,   0,   0,   0,  70,   0, 
     16,   0,   2,   0,   0,   0, 
     70,   0,  16,   0,   2,   0, 
      0,   0,   0,   0,   0,   8, 
    130,   0,  16,   0,   0,   0, 
      0,   0,  58,   0,  16, 128, 
     65,   0,   0,   0,   0,   0, 
      0,   0,   1,  64,   0,   0, 
      0,   0, 128,  63,  75,   0, 
      0,   5, 130,   0,  16,   0, 
      0,   0,   0,   0,  58,   0, 
     16,   0,   0,   0,   0,   0, 
     50,   0,   0,   9, 114,   0, 
     16,   0,   0,   0,   0,   0, 
    246,  15,  16,   0,   0,   0, 
      0,   0,  70,  18,  16,   0, 
      2,   0,   0,   0,  70,   2, 
     16,   0,   0,   0,   0,   0, 
     16,   0,   0,   7, 130,   0, 
     16,   0,   0,   0,   0,   0, 
     70,   2,  16,   0,   0,   0, 
      0,   0,  70,   2,  16,   0, 
      0,   0,   0,   0,  68,   0, 
      0,   5, 130,   0,  16,   0, 
      0,   0,   0,   0,  58,   0, 
     16,   0,   0,   0,   0,   0, 
     56,   0,   0,   7, 114,   0, 
     16,   0,   0,   0,   0,   0, 
    246,  15,  16,   0,   0,   0, 
      0,   0,  70,   2,  16,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   9, 114,   0,  16,   0, 
      1,   0,   0,   0,  70,  18, 
     16, 128,  65,   0,   0,   0, 
      1,   0,   0,   0,  70, 130, 
     32,   0,   0,   0,   0,   0, 
     12,   0,   0,   0,  16,   0, 
      0,   7, 130,   0,  16,   0, 
      0,   0,   0,   0,  70,   2, 
     16,   0,   1,   0,   0,   0, 
     70,   2,  16,   0,   1,   0, 
      0,   0,  68,   0,   0,   5, 
    130,   0,  16,   0,   0,   0, 
      0,   0,  58,   0,  16,   0, 
      0,   0,   0,   0,  50,   0, 
      0,  11, 114,   0,  16,   0, 
      2,   0,   0,   0,  70,   2, 
     16,   0,   1,   0,   0,   0, 
    246,  15,  16,   0,   0,   0, 
      0,   0,  70, 130,  32, 128, 
     65,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
     16,   0,   0,   7, 130,   0, 
     16,   0,   1,   0,   0,   0, 
     70,   2,  16,   0,   2,   0, 
      0,   0,  70,   2,  16,   0, 
      2,   0,   0,   0,  68,   0, 
      0,   5, 130,   0,  16,   0, 
      1,   0,   0,   0,  58,   0, 
     16,   0,   1,   0,   0,   0, 
     56,   0,   0,   7, 114,   0, 
     16,   0,   2,   0,   0,   0, 
    246,  15,  16,   0,   1,   0, 
      0,   0,  70,   2,  16,   0, 
      2,   0,   0,   0,  16,   0, 
      0,   7,  18,   0,  16,   0, 
      2,   0,   0,   0,  70,   2, 
     16,   0,   2,   0,   0,   0, 
     70,   2,  16,   0,   0,   0, 
      0,   0,  50,   0,   0,  11, 
    114,   0,  16,   0,   3,   0, 
      0,   0,  70,   2,  16,   0, 
      1,   0,   0,   0, 246,  15, 
     16,   0,   0,   0,   0,   0, 
     70, 130,  32, 128,  65,   0, 
      0,   0,   0,   0,   0,   0, 
      4,   0,   0,   0,  50,   0, 
      0,  11, 114,   0,  16,   0, 
      1,   0,   0,   0,  70,   2, 
     16,   0,   1,   0,   0,   0, 
    246,  15,  16,   0,   0,   0, 
      0,   0,  70, 130,  32, 128, 
     65,   0,   0,   0,   0,   0, 
      0,   0,   5,   0,   0,   0, 
     16,   0,   0,   7, 130,   0, 
     16,   0,   0,   0,   0,   0, 
     70,   2,  16,   0,   3,   0, 
      0,   0,  70,   2,  16,   0, 
      3,   0,   0,   0,  68,   0, 
      0,   5, 130,   0,  16,   0, 
      0,   0,   0,   0,  58,   0, 
     16,   0,   0,   0,   0,   0, 
     56,   0,   0,   7, 114,   0, 
     16,   0,   3,   0,   0,   0, 
    246,  15,  16,   0,   0,   0, 
      0,   0,  70,   2,  16,   0, 
      3,   0,   0,   0,  16,   0, 
      0,   7,  34,   0,  16,   0, 
      2,   0,   0,   0,  70,   2, 
     16,   0,   3,   0,   0,   0, 
     70,   2,  16,   0,   0,   0, 
      0,   0,  16,   0,   0,   7, 
    130,   0,  16,   0,   0,   0, 
      0,   0,  70,   2,  16,   0, 
      1,   0,   0,   0,  70,   2, 
     16,   0,   1,   0,   0,   0, 
     68,   0,   0,   5, 130,   0, 
     16,   0,   0,   0,   0,   0, 
     58,   0,  16,   0,   0,   0, 
      0,   0,  56,   0,   0,   7, 
    114,   0,  16,   0,   1,   0, 
      0,   0, 246,  15,  16,   0, 
      0,   0,   0,   0,  70,   2, 
     16,   0,   1,   0,   0,   0, 
     16,   0,   0,   7,  66,   0, 
     16,   0,   2,   0,   0,   0, 
     70,   2,  16,   0,   1,   0, 
      0,   0,  70,   2,  16,   0, 
      0,   0,   0,   0,  52,   0, 
      0,  10, 114,   0,  16,   0, 
      1,   0,   0,   0,  70,   2, 
     16,   0,   2,   0,   0,   0, 
      2,  64,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,  16,   0,   0,   9, 
     18,   0,  16,   0,   2,   0, 
      0,   0,  70, 130,  32, 128, 
     65,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
     70,   2,  16,   0,   0,   0, 
      0,   0,  16,   0,   0,   9, 
     34,   0,  16,   0,   2,   0, 
      0,   0,  70, 130,  32, 128, 
     65,   0,   0,   0,   0,   0, 
      0,   0,   4,   0,   0,   0, 
     70,   2,  16,   0,   0,   0, 
      0,   0,  16,   0,   0,   9, 
     66,   0,  16,   0,   2,   0, 
      0,   0,  70, 130,  32, 128, 
     65,   0,   0,   0,   0,   0, 
      0,   0,   5,   0,   0,   0, 
     70,   2,  16,   0,   0,   0, 
      0,   0,  29,   0,   0,  10, 
    114,   0,  16,   0,   0,   0, 
      0,   0,  70,   2,  16,   0, 
      2,   0,   0,   0,   2,  64, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      1,   0,   0,  10, 114,   0, 
     16,   0,   0,   0,   0,   0, 
     70,   2,  16,   0,   0,   0, 
      0,   0,   2,  64,   0,   0, 
      0,   0, 128,  63,   0,   0, 
    128,  63,   0,   0, 128,  63, 
      0,   0,   0,   0,  56,   0, 
      0,   7, 114,   0,  16,   0, 
      1,   0,   0,   0,  70,   2, 
     16,   0,   0,   0,   0,   0, 
     70,   2,  16,   0,   1,   0, 
      0,   0,  56,   0,   0,   7, 
    114,   0,  16,   0,   0,   0, 
      0,   0,  70,   2,  16,   0, 
      2,   0,   0,   0,  70,   2, 
     16,   0,   0,   0,   0,   0, 
     47,   0,   0,   5, 114,   0, 
     16,   0,   1,   0,   0,   0, 
     70,   2,  16,   0,   1,   0, 
      0,   0,  56,   0,   0,   8, 
    114,   0,  16,   0,   1,   0, 
      0,   0,  70,   2,  16,   0, 
      1,   0,   0,   0, 246, 143, 
     32,   0,   0,   0,   0,   0, 
      2,   0,   0,   0,  25,   0, 
      0,   5, 114,   0,  16,   0, 
      1,   0,   0,   0,  70,   2, 
     16,   0,   1,   0,   0,   0, 
     56,   0,   0,   7, 114,   0, 
     16,   0,   1,   0,   0,   0, 
     70,   2,  16,   0,   2,   0, 
      0,   0,  70,   2,  16,   0, 
      1,   0,   0,   0,  56,   0, 
      0,   8, 114,   0,  16,   0, 
      2,   0,   0,   0,  86,   5, 
     16,   0,   1,   0,   0,   0, 
     70, 130,  32,   0,   0,   0, 
      0,   0,  10,   0,   0,   0, 
     50,   0,   0,  10, 178,   0, 
     16,   0,   1,   0,   0,   0, 
      6,   0,  16,   0,   1,   0, 
      0,   0,  70, 136,  32,   0, 
      0,   0,   0,   0,   9,   0, 
      0,   0,  70,   8,  16,   0, 
      2,   0,   0,   0,  50,   0, 
      0,  10, 114,   0,  16,   0, 
      1,   0,   0,   0, 166,  10, 
     16,   0,   1,   0,   0,   0, 
     70, 130,  32,   0,   0,   0, 
      0,   0,  11,   0,   0,   0, 
     70,   3,  16,   0,   1,   0, 
      0,   0,  56,   0,   0,   8, 
    114,   0,  16,   0,   1,   0, 
      0,   0,  70,   2,  16,   0, 
      1,   0,   0,   0,  70, 130, 
     32,   0,   0,   0,   0,   0, 
      2,   0,   0,   0,  69,   0, 
      0, 139, 194,   0,   0, 128, 
     67,  85,  21,   0, 242,   0, 
     16,   0,   2,   0,   0,   0, 
     70,  16,  16,   0,   0,   0, 
      0,   0,  70, 126,  16,   0, 
      0,   0,   0,   0,   0,  96, 
     16,   0,   0,   0,   0,   0, 
     56,   0,   0,   7, 242,   0, 
     16,   0,   2,   0,   0,   0, 
     70,  14,  16,   0,   2,   0, 
      0,   0,  70,  30,  16,   0, 
      3,   0,   0,   0,  56,   0, 
      0,   7, 114,   0,  16,   0, 
      1,   0,   0,   0,  70,   2, 
     16,   0,   1,   0,   0,   0, 
    246,  15,  16,   0,   2,   0, 
      0,   0,  56,   0,   0,   8, 
    114,   0,  16,   0,   3,   0, 
      0,   0,  86,   5,  16,   0, 
      0,   0,   0,   0,  70, 130, 
     32,   0,   0,   0,   0,   0, 
      7,   0,   0,   0,  50,   0, 
      0,  10, 178,   0,  16,   0, 
      0,   0,   0,   0,   6,   0, 
     16,   0,   0,   0,   0,   0, 
     70, 136,  32,   0,   0,   0, 
      0,   0,   6,   0,   0,   0, 
     70,   8,  16,   0,   3,   0, 
      0,   0,  50,   0,   0,  10, 
    114,   0,  16,   0,   0,   0, 
      0,   0, 166,  10,  16,   0, 
      0,   0,   0,   0,  70, 130, 
     32,   0,   0,   0,   0,   0, 
      8,   0,   0,   0,  70,   3, 
     16,   0,   0,   0,   0,   0, 
     50,   0,   0,  11, 114,   0, 
     16,   0,   0,   0,   0,   0, 
     70,   2,  16,   0,   0,   0, 
      0,   0,  70, 130,  32,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,  70, 130,  32,   0, 
      0,   0,   0,   0,   1,   0, 
      0,   0,  50,   0,   0,   9, 
    114,  32,  16,   0,   0,   0, 
      0,   0,  70,   2,  16,   0, 
      2,   0,   0,   0,  70,   2, 
     16,   0,   0,   0,   0,   0, 
     70,   2,  16,   0,   1,   0, 
      0,   0,  54,   0,   0,   5, 
    130,  32,  16,   0,   0,   0, 
      0,   0,  58,   0,  16,   0, 
      2,   0,   0,   0,  62,   0, 
      0,   1,  53,  16,   0,   0, 
    148,   1,   0,   0,  23,   0, 
      1,   0,  41, 174,  20,   0, 
    120,   1, 237,  88,  77, 136, 
     28, 199,  21, 174, 234, 174, 
    174, 174, 233, 237, 126, 221, 
    243, 171, 217, 217, 158, 222, 
    153, 217, 153, 217,  95, 235, 
    199, 216,  22,   8,  92,  89, 
     71, 178,  98, 180, 177, 100, 
     44,  57, 152, 205, 172, 109, 
    173, 180, 146,  23, 100, 237, 
     90,  18,  65, 167,  86, 199, 
    140,  77,  72,  54,  65, 132, 
      4, 140, 177, 111,  62, 229, 
    144, 115,  78, 218, 101,  78, 
    125,  49, 152, 193,   7,  39, 
     39, 223,  66,  32, 135,  16, 
    114, 240,  33,  56, 121, 175, 
     53,  99, 173, 255, 110,  11, 
      9, 102,  63, 248, 234, 213, 
    171, 122,  85, 253,  94, 189, 
    215, 195,  84, 255, 177, 196, 
     50, 252, 185, 249, 246,   6, 
    201, 179,  79,  94, 153, 235, 
    231,  24, 179, 176, 207, 145, 
     36,   9, 239, 122, 212,  50, 
    118, 166,  72,  45,  99,  13, 
    106, 200, 192,  96, 172, 142, 
    226,  40, 242,  57,  52,  94, 
     70,  73, 115, 115,  35, 178, 
    251,  59, 167,  63, 122, 255, 
    215, 167, 169, 187, 128,  36, 
     91,  23, 215,  17,  63, 197, 
    254, 211, 200, 191,  32, 219, 
     72,  28,  98, 228,  14, 110, 
    249,  37, 124, 106,  16, 130, 
    154, 125, 200,  35, 127, 133, 
    140, 144, 132,  42, 146, 198, 
      8,  71, 144, 251, 247,  96, 
     89, 100, 223, 142,  50,  62, 
    148, 124, 250,  46, 144, 111, 
    180,  23, 249,  69, 254, 145, 
    159,   4, 138, 247, 127,  13, 
    242, 135,  49, 147, 154, 172, 
     79,  28, 231, 137,  64, 249, 
    216,  15,  64, 146,  13, 225, 
    179,   2, 181, 143, 206, 245, 
     95,  35, 157, 206, 130,  98, 
    219,  67, 126,  23, 254, 131, 
    160, 243, 222, 143, 177,  78, 
    251, 201, 145,  79, 146,  99, 
     38,  20,  74,  99, 150, 177, 
      0, 165, 249, 131,  71, 134, 
    223,  99, 140, 207, 148,  36, 
    213,  14, 134, 254, 101,  29, 
     19, 198, 243, 207, 103, 201, 
     72, 118, 137, 247, 171, 236, 
    115, 210, 198,  58,  71,  93, 
    146,  58, 210,  77, 210, 241, 
    189, 252, 138, 142, 235, 101, 
    145, 189,  98, 152, 198,  43, 
    126, 136, 235,  31, 234,  61, 
    212, 123, 251, 244,  85, 212, 
     87, 247, 233, 175, 161, 254, 
    218,  62, 125,  29, 245, 245, 
    177,  62, 222, 223, 207, 158, 
    103, 112, 202,  53,  14, 198, 
    255, 207,  60, 244, 241,  96, 
    120, 232, 227, 193, 240, 208, 
    199, 131, 225, 161, 143,   7, 
    195,  67,  31,  15, 134, 135, 
     62,  30,  12,  15, 125,  60, 
     48, 178,  88, 188, 247,  32, 
    118, 190, 120, 160, 248,  96, 
     47, 224, 239, 236,  25, 230, 
    191,  31, 224, 159, 238, 148, 
    113,  55, 229,  44, 151, 114, 
    238, 165, 247, 216, 206,  46, 
     51, 147, 127,  24, 242,  50, 
     94,   0,   6, 123, 153, 238, 
    163, 174,  80,  23,  65, 202, 
    100,  41, 229,  34, 159,  50, 
    235, 120, 202, 101,  57,  45, 
    241, 100, 143,  91,  39, 210, 
    151, 146,  79,  62, 197, 255, 
    170,  30, 123,  40, 225,  15, 
     40, 241,  74, 225, 147, 142, 
     50, 160, 121, 148, 249, 145, 
     94, 160, 125, 189, 122,  77, 
    249, 205,  80, 145,  45, 174, 
    201, 108,  81,   6, 164, 187, 
    140,  21,  73,  71,  89, 162, 
    181,  40, 203,  35, 189, 146, 
    239, 180, 212,  61, 177, 179, 
    235,  55,  35, 117, 207, 216, 
    217,  45, 206,  55, 148,  87, 
    111,   3, 237,  89, 126, 172, 
    171, 242, 205,  57,  40, 176, 
    100, 152, 159,  62, 215,  47, 
     78,  47,  64,   9, 251, 197, 
    250, 139, 125, 175, 179, 148, 
    249, 133,  55, 142,  35, 180, 
     23, 202, 234, 113, 254, 214, 
      0,  55,  30, 122, 205, 159, 
    244, 243, 243, 143,  67,   5, 
    251, 165, 217, 213,  62, 217, 
    225, 255, 241,  26, 217, 161, 
    156, 162, 189, 143, 156,  56, 
    170, 130, 249, 227,  64, 254, 
    224, 218, 112, 180, 135,  89, 
     92, 236, 194,  36, 174,  43, 
     79,  93, 235, 215,  78, 214, 
     84, 229, 216,  19, 224,  47, 
     62,   5,  85,  28, 243,  59, 
    235, 125, 178, 199,  61, 178, 
    248,  80,  26, 228, 115, 104, 
     75, 133,   1,  14,  11,  51, 
    231, 251, 149, 169,  22,  76, 
     30,  91,   2, 232, 180,  97, 
     10, 199,  96, 254, 102, 159, 
    158, 231,  91,  66, 153,  39, 
    158, 208, 147,  83,  33,  20, 
    143,  69,  89,  76, 193, 226, 
    185, 190, 113, 162, 165, 205, 
    147,  75, 186, 246, 100,   3, 
    138,  83,  53,  48,  78, 134, 
    218, 236,  68,  58,  63,  35, 
    161, 242,  88,  67,   7, 188, 
     63,  48,  58,  53,  13, 117, 
    169, 253, 233, 134, 126, 211, 
    223, 217,  53, 216,  91,  67, 
    249, 183, 143,  76, 233,  56, 
    202, 229, 239,  12, 188,  41, 
    169, 131,  53,  55, 182, 113, 
    220, 198, 113, 195, 106, 128, 
     85, 173,  42, 107, 162,  13, 
     37, 254, 139, 129, 185,  38, 
    227, 154, 215,   5, 219, 111, 
    104, 161, 148, 114,  39, 219, 
     58, 111, 183, 160, 226, 205, 
     65, 209, 239, 194,  63,  27, 
     13, 197, 156,  75, 169, 200, 
    181,  53, 216,  33, 248, 158, 
     11,  37,  63,   2,  99, 166, 
    171, 131, 235, 141, 152, 229, 
    206, 164, 220, 121,  41,  45, 
    172, 181,  99, 207, 150,  32, 
    125,  23, 140, 122, 164, 153, 
     10,  83, 158, 123,  54,  13, 
     22, 187, 154,  98, 196, 130, 
     25,  90, 157, 133, 196, 176, 
     93, 205,  85,  61,  13, 102, 
     34,  93, 156,  21,  96, 102, 
    227, 167,  18,  64, 233, 118, 
    186, 137, 135, 103,  20, 248, 
     46, 198,  35, 180, 157, 141, 
     61, 149, 152, 118,  35, 203, 
    173, 232, 180,  18,  11, 165, 
    213,  57, 151,  64, 189, 165, 
    165,  39,  52, 229,  84, 116, 
     30,  79, 200, 127,  23, 251, 
    110, 231, 108,  82, 154, 111, 
    105, 107,  98,   9, 140,  53, 
     17, 151,  23,  49, 174, 204, 
    230, 135,  73, 126, 173,  21, 
    187, 147,  75, 186, 104, 181, 
     33,  88, 107, 196, 222,  76, 
     13,  68, 110,  73, 251,  86, 
      4, 102,  83,   2, 204, 132, 
     80, 192, 115, 174, 172, 117, 
    227,  10, 131,  97, 161, 204, 
    150,  21, 214, 141, 180,   4, 
    216,  77,  23,  10,  24,  95, 
    105,   6,   0, 166, 107, 218, 
    154, 117,   0, 200, 166, 206, 
    150, 169, 150, 114, 209, 106, 
    187, 220, 108, 128, 156, 150, 
    218, 182, 106, 218, 157,  69, 
    251,   9, 178, 193, 154, 139, 
     78, 181, 201,  70, 137, 213, 
    182,  77, 107,  58, 108,  57, 
    176, 164,  22, 179,  10, 237, 
     29, 157, 212, 220,  48, 139, 
     95, 156, 194, 121, 172, 231, 
     40, 106,  43, 230, 126,  92, 
    225, 156, 205,  97,  14, 133, 
    133,  54,  82, 134,  52,  23, 
    136, 168, 237, 224,  28, 224, 
     28, 214, 216,  48, 113,  91, 
     44, 196,  60, 182, 249,  47, 
      7, 137, 163, 194,  42, 206, 
    217,  56, 135, 245,  58,  76, 
    228,   2,  51,  46, 136, 184, 
    202, 127,  51,  88, 226, 247, 
      7, 248, 206,  13,  19, 181, 
    206, 204,  11,  50, 166, 156, 
    216,  66, 128, 224, 191,  29, 
     52, 248, 239,   6, 226, 130, 
    138, 109,  41, 193,  88,  17, 
     49, 227, 201, 192,  86,  10, 
    204,  21,  25,  87,  48, 118, 
    124, 143, 135, 201,  82, 139, 
    137,  21,  21,   3, 158, 129, 
     43,  92, 240,  68,  21,   0, 
    215, 123,  52,  23,  46,  48, 
     59, 167, 160,  36,  93,  93, 
    150,  85,  93, 145,  66,  51, 
    223,  77,   3,  39, 132, 188, 
    131, 245, 236,  56,  96, 147, 
     29, 172, 179, 134, 114, 117, 
     83,  85, 117,  75, 161, 141, 
    139, 191,  51, 222, 114, 202, 
    128, 165, 220, 247, 210, 176, 
     22, 234, 122,  45, 210,  81, 
    205, 209, 194, 117, 169,  78, 
     65, 226,  51, 184, 155,  79, 
    185, 247,  76, 202, 129, 167, 
    219,  88, 227,  19, 182, 145, 
    253,   6, 204,  65, 168, 231, 
     33, 210,  11, 224, 232, 182, 
     33, 227, 142,   1, 113, 215, 
    168, 196,  10, 125, 201,  53, 
      3, 112,  56,   3, 105, 186, 
    224, 154,   5,  48,  76,   1, 
     44, 148, 154,  71, 160,  13, 
    167, 162,   5, 214, 161, 242, 
     11, 154,  29,  17, 186,  38, 
    190, 120, 128, 119, 222, 175, 
    220, 153,  25, 251, 249, 238, 
     36,  73,  60, 228, 111,  64, 
    101,   6, 143,  64,  54,  56, 
    166,  80, 140, 145,  89,   8, 
    158, 221, 243, 199, 200, 182, 
    194,  49, 250, 110,  52,  70, 
     50, 250, 118, 214,  27,  73, 
    250, 150,  68,  87, 250,  44, 
    131, 136,  26,  82, 176, 135, 
    183, 254, 247, 151, 255, 250, 
    226,  79, 255, 254, 251,  15, 
    168,  79, 248, 211, 104, 205, 
    187,  35,  73, 223, 216, 240, 
    119, 115,  31,  62, 164, 230, 
     27, 248, 108, 100, 255, 241, 
     72, 146, 143,  88,  27, 152, 
      6, 204,  52, 129,  62,  10, 
     17,  70, 142, 126,  62, 178, 
    163, 248,  38, 144,  95, 247, 
    163,  58, 178, 187, 137,  36, 
     79, 207, 156, 234,  61, 115, 
    233,  71, 189, 219, 119,  94, 
    189, 186, 241, 179, 222, 202, 
    230, 157, 219, 189,  51, 155, 
    183,  54, 174, 220, 121, 249, 
    210,  74, 239, 246, 173,  43, 
    189, 139, 175,  95, 190, 186, 
    113, 235, 118, 239, 244, 214, 
     27, 219, 155,  55,  54, 174, 
    246,  94,  94, 223, 186, 123, 
    225, 230, 198, 249, 173,  91, 
    111,  92, 190, 241, 252, 229, 
    237, 103, 175,  93,  67, 243, 
     87,  95, 184, 248, 112, 228, 
    133, 205, 187,  27,  55, 126, 
    188, 121, 253, 245,  59, 155, 
     55, 175,  95, 186, 123, 126, 
    235, 236, 214, 245, 139, 219, 
     27,  87, 142, 110,  95,  93, 
    103, 255,   5,  52, 161, 234, 
    142,   0,   0,   0,  88,  72, 
     83,  72,   8,   0,   0,   0, 
    156,  64, 231,  82,  91, 236, 
    149, 157,  88,  80,  68,  80, 
    109,   0,   0,   0,  68,  58, 
     92,  65,  84,  71,  92, 115, 
    116,  95, 100, 101, 118,  92, 
     75, 105, 116, 115,  92,  68, 
    105, 114, 101,  99, 116,  88, 
     84,  75,  92, 115, 114,  99, 
     92,  83, 104,  97, 100, 101, 
    114, 115,  92,  67, 111, 109, 
    112, 105, 108, 101, 100,  92, 
     88,  98, 111, 120,  79, 110, 
    101,  78, 111, 114, 109,  97, 
    108,  77,  97, 112,  69, 102, 
    102, 101,  99, 116,  95,  80, 
     83,  78, 111, 114, 109,  97, 
    108,  80, 105, 120, 101, 108, 
     76, 105, 103, 104, 116, 105, 
    110, 103,  84, 120,  78, 111, 
     70, 111, 103,  83, 112, 101, 
     99,  46, 112, 100,  98
};
