#if 0
//
// Generated by Microsoft (R) D3D Shader Disassembler for Durango
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// COLOR                    0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xyz         3     NONE   float   xyz 
// TEXCOORD                 2   xyz         4     NONE   float       
// TEXCOORD                 3   xyz         5     NONE   float   xyz 
// TEXCOORD                 4   xyzw        6     NONE   float       
// TEXCOORD                 5   xyz         7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
// Opaque Custom Data - XBOX Precompiled Shader Header
// First Precompiled Shader at offset:[441]
// Embedded Data:
//  0x000001b9 - Offset To First Precompiled Shader
//  0x00000050 - Original Shader Descriptor
//  0x000001b4 - Original Shader Size
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[5], immediateIndexed
dcl_constantbuffer CB1[21], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v2.xy
dcl_input_ps linear v3.xyz
dcl_input_ps linear v5.xyz
dcl_output o0.xyzw
dcl_temps 5
sample_indexable(texture2d)(float,float,float,float) r0.xyzw, v2.xyxx, t0.xyzw, s0
mul r0.w, r0.w, v1.w
eq r1.x, r0.w, l(0.000000)
discard_nz r1.x
dp3 r1.x, v3.xyzx, v3.xyzx
rsq r1.x, r1.x
mul r1.xyz, r1.xxxx, v3.xyzx
dp3 r1.w, v5.xyzx, v5.xyzx
rsq r1.w, r1.w
dp3_sat r2.x, cb1[9].xyzx, r1.xyzx
mul r2.xyz, r2.xxxx, cb1[1].xyzx
mul r2.xyz, r2.xyzx, v1.xyzx
mad r2.xyz, cb0[0].xyzx, cb1[0].xyzx, r2.xyzx
mad r3.xyz, v5.xyzx, r1.wwww, cb1[9].xyzx
dp3 r2.w, r3.xyzx, r3.xyzx
rsq r2.w, r2.w
mul r3.xyz, r2.wwww, r3.xyzx
dp3_sat r2.w, r1.xyzx, r3.xyzx
max r3.x, cb0[4].x, l(0.000100)
log r2.w, r2.w
mul r2.w, r2.w, r3.x
exp r2.w, r2.w
mul r2.w, r2.w, cb1[13].x
mul r3.yzw, cb0[2].xxyz, cb1[1].xxyz
dp3_sat r4.x, cb1[10].xyzx, r1.xyzx
mul r4.xyz, r4.xxxx, cb1[2].xyzx
mad r2.xyz, r4.xyzx, v1.xyzx, r2.xyzx
mad r4.xyz, v5.xyzx, r1.wwww, cb1[10].xyzx
dp3 r4.w, r4.xyzx, r4.xyzx
rsq r4.w, r4.w
mul r4.xyz, r4.wwww, r4.xyzx
dp3_sat r4.x, r1.xyzx, r4.xyzx
log r4.x, r4.x
mul r4.x, r3.x, r4.x
exp r4.x, r4.x
mul r4.x, r4.x, cb1[14].x
mul r4.yzw, cb0[2].xxyz, cb1[2].xxyz
mul r4.xyz, r4.xxxx, r4.yzwy
mad r3.yzw, r3.yyzw, r2.wwww, r4.xxyz
dp3_sat r2.w, cb1[11].xyzx, r1.xyzx
mul r4.xyz, r2.wwww, cb1[3].xyzx
mad_sat r2.xyz, r4.xyzx, v1.xyzx, r2.xyzx
mad r4.xyz, v5.xyzx, r1.wwww, cb1[11].xyzx
dp3 r1.w, r4.xyzx, r4.xyzx
rsq r1.w, r1.w
mul r4.xyz, r1.wwww, r4.xyzx
dp3_sat r1.x, r1.xyzx, r4.xyzx
log r1.x, r1.x
mul r1.x, r1.x, r3.x
exp r1.x, r1.x
mul r1.x, r1.x, cb1[15].x
mul r1.yzw, cb0[2].xxyz, cb1[3].xxyz
mad r1.xyz, r1.yzwy, r1.xxxx, r3.yzwy
mad o0.xyz, r2.xyzx, r0.xyzx, r1.xyzx
mov o0.w, r0.w
ret 
// Opaque Custom Data - XBOX Precompiled Shader Object
// Offset:[441], bundle is:[312] DWORDS.
// Disassembled Precompiled Shader Object:
// Shader Type               : (PS)
// Shader Hw Stage           : (PS)
// PDB Filename              : D:\ATG\st_dev\Kits\DirectXTK\src\Shaders\Compiled\XboxOneDGSLPhong_mainTxTk.pdb
// Shader Semantic Hash      : 0xb844a8c143c99b9
//
// Shader Data:
; ----------------- PS Data ------------------------
; Input Semantic Mappings
;   [0] generic,  usageIdx 1, channelMask 15, param0, paramSlot1, DefaultVal={0,0,0,0}
;   [1] generic,  usageIdx 2, channelMask  3, param1, paramSlot2, DefaultVal={0,0,0,0}
;   [2] generic,  usageIdx 3, channelMask  7, param2, paramSlot3, DefaultVal={0,0,0,0}
;   [3] generic,  usageIdx 5, channelMask  7, param3, paramSlot5, DefaultVal={0,0,0,0}

codeLenInByte        = 828 bytes;

; launchModeFlags    = 0x0000000E
srdTableSupport      = TRUE
immediateSupportExt  = TRUE
srdTableSupportExt   = TRUE

userElementCount     = 1;
;  userElements[0]      = PTR_EXTENDED_USER_DATA, ReferencedExtUserElements=1, s[0x0:1]
extUserElementCount  = 4;
;  extUserElements 1[0] = IMM_RESOURCE 0, offset 0x0:7 dwords
;  extUserElements 1[1] = IMM_SAMPLER 0, offset 0x8:11 dwords
;  extUserElements 1[2] = IMM_CONST_BUFFER 0, offset 0xc:15 dwords
;  extUserElements 1[3] = IMM_CONST_BUFFER 1, offset 0x10:19 dwords
NumVgprs             = 27;
NumSgprs             = 44;
FloatMode            = 192;
IeeeMode             = 0;
FlatPtr32            = 0;
ScratchSize          = 0 dwords/thread;
LDSByteSize          = 0 bytes/workgroup (compile time only);
ScratchWaveOffsetReg = s65535;
; texSamplerUsage         = 0x00000001
; constBufUsage           = 0x00000003

; SPI_SHADER_PGM_RSRC2_PS = 0x00000004
SSPRP:SCRATCH_EN            = 0
SSPRP:USER_SGPR             = 2
SSPRP:TRAP_PRESENT          = 0
SSPRP:WAVE_CNT_EN           = 0
SSPRP:EXTRA_LDS_SIZE        = 0
SSPRP:EXCP_EN               = 0
; SPI_SHADER_Z_FORMAT     = 0x00000000
SPZF:Z_EXPORT_FORMAT        = 0; SPI_SHADER_ZERO
; SPI_PS_IN_CONTROL       = 0x00000004
SPIC:NUM_INTERP             = 4
SPIC:PARAM_GEN              = 0
SPIC:FOG_ADDR               = 0
SPIC:BC_OPTIMIZE_DISABLE    = 0
SPIC:PASS_FOG_THROUGH_PS    = 0
; SPI_PS_INPUT_ADDR       = 0x00000002
SPIA:PERSP_CENTER_ENA       = 1
; DB_SHADER_CONTROL       = 0x00000050
DB:Z_ORDER                  = 1
DB:KILL_ENABLE              = 1
DB:CONSERVATIVE_Z_EXPORT    = 0; EXPORT_ANY_Z
; CB_SHADER_MASK          = 0x0000000F
CB:OUTPUT0_ENABLE           = 15

; export table for mrt0 [patch@(bytes=0x328, dwords=0xCA)]
// Export Patch Code (FMT_ZERO):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_nop         0x0000                                  // 000000000000: BF800000
  s_nop         0x0000                                  // 000000000004: BF800000
  exp           null, off, off, off, off done vm        // 000000000008: F8001890 00000000
end
// Export Patch Code (FMT_32_R):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_nop         0x0000                                  // 000000000000: BF800000
  s_nop         0x0000                                  // 000000000004: BF800000
  exp           mrt0, v15, off, off, off done vm        // 000000000008: F8001801 0000000F
end
// Export Patch Code (FMT_32_GR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_nop         0x0000                                  // 000000000000: BF800000
  s_nop         0x0000                                  // 000000000004: BF800000
  exp           mrt0, v15, v19, off, off done vm        // 000000000008: F8001803 0000130F
end
// Export Patch Code (FMT_32_AR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_nop         0x0000                                  // 000000000000: BF800000
  s_nop         0x0000                                  // 000000000004: BF800000
  exp           mrt0, v15, v5, off, off done vm         // 000000000008: F8001803 0000050F
end
// Export Patch Code (FMT_FP16_ABGR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  v_cvt_pkrtz_f16_f32  v0, v15, v19                     // 000000000000: 5E00270F
  v_cvt_pkrtz_f16_f32  v1, v12, v5                      // 000000000004: 5E020B0C
  exp           mrt0, v0, v0, v1, v1 done compr vm      // 000000000008: F8001C0F 00000100
end
// Export Patch Code (FMT_UNORM16_ABGR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  v_cvt_pknorm_u16_f32  v0, v15, v19                    // 000000000000: 5C00270F
  v_cvt_pknorm_u16_f32  v1, v12, v5                     // 000000000004: 5C020B0C
  exp           mrt0, v0, v0, v1, v1 done compr vm      // 000000000008: F8001C0F 00000100
end
// Export Patch Code (FMT_SNORM16_ABGR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  v_cvt_pknorm_i16_f32  v0, v15, v19                    // 000000000000: 5A00270F
  v_cvt_pknorm_i16_f32  v1, v12, v5                     // 000000000004: 5A020B0C
  exp           mrt0, v0, v0, v1, v1 done compr vm      // 000000000008: F8001C0F 00000100
end
// Export Patch Code (FMT_UINT16_ABGR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  v_cvt_pk_u16_u32  v0, v15, v19                        // 000000000000: 6000270F
  v_cvt_pk_u16_u32  v1, v12, v5                         // 000000000004: 60020B0C
  exp           mrt0, v0, v0, v1, v1 done compr vm      // 000000000008: F8001C0F 00000100
end
// Export Patch Code (FMT_SINT16_ABGR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  v_cvt_pk_i16_i32  v0, v15, v19                        // 000000000000: 6200270F
  v_cvt_pk_i16_i32  v1, v12, v5                         // 000000000004: 62020B0C
  exp           mrt0, v0, v0, v1, v1 done compr vm      // 000000000008: F8001C0F 00000100
end
// Export Patch Code (FMT_32_ABGR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_nop         0x0000                                  // 000000000000: BF800000
  s_nop         0x0000                                  // 000000000004: BF800000
  exp           mrt0, v15, v19, v12, v5 done vm         // 000000000008: F800180F 050C130F
end

// Shader Instructions:
shader main
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_mov_b64     s[40:41], exec                          // 000000000000: BEA8047E
  s_wqm_b64     exec, exec // wrscc                     // 000000000004: BEFE0A7E
  s_load_dwordx16  s[4:19], s[0:1], 0x00                // 000000000008: C1020100
  s_mov_b32     m0, s2                                  // 00000000000C: BEFC0302
  v_interp_p1_f32  v2, v0, attr1.x                      // 000000000010: C8080400
  v_interp_p1_f32  v3, v0, attr1.y                      // 000000000014: C80C0500
  v_interp_p2_f32  v2, v1, attr1.x                      // 000000000018: C8090401
  v_interp_p2_f32  v3, v1, attr1.y                      // 00000000001C: C80D0501
  s_waitcnt     lgkmcnt(0)                              // 000000000020: BF8C007F
  image_sample  v[2:5], v[2:3], s[4:11], s[12:15] dmask:0xf // 000000000024: F0800F00 00610202
  s_load_dwordx4  s[0:3], s[0:1], 0x10                  // 00000000002C: C0800110
  v_interp_p1_f32  v6, v0, attr0.w                      // 000000000030: C8180300
  v_interp_p2_f32  v6, v1, attr0.w                      // 000000000034: C8190301
  s_waitcnt     vmcnt(0)                                // 000000000038: BF8C0F70
  v_mul_legacy_f32  v5, v5, v6                          // 00000000003C: 0E0A0D05
  v_cmp_eq_f32  vcc, 0, v5                              // 000000000040: 7C040A80
  s_andn2_b64   s[40:41], s[40:41], vcc // wrscc        // 000000000044: 8AA86A28
  s_cbranch_scc0  label_00C9                            // 000000000048: BF8400B6
  s_and_b64     exec, exec, s[40:41] // wrscc           // 00000000004C: 87FE287E
  s_wqm_b64     exec, exec // wrscc                     // 000000000050: BEFE0A7E
  v_interp_p1_f32  v6, v0, attr3.z                      // 000000000054: C8180E00
  s_waitcnt     lgkmcnt(0)                              // 000000000058: BF8C007F
  s_buffer_load_dwordx4  s[4:7], s[0:3], 0x28           // 00000000005C: C2820128
  v_interp_p1_f32  v7, v0, attr3.y                      // 000000000060: C81C0D00
  v_interp_p2_f32  v6, v1, attr3.z                      // 000000000064: C8190E01
  s_buffer_load_dwordx4  s[8:11], s[0:3], 0x24          // 000000000068: C2840124
  v_interp_p1_f32  v8, v0, attr3.x                      // 00000000006C: C8200C00
  v_interp_p2_f32  v7, v1, attr3.y                      // 000000000070: C81D0D01
  v_mul_legacy_f32  v9, v6, v6                          // 000000000074: 0E120D06
  s_buffer_load_dwordx4  s[12:15], s[0:3], 0x2c         // 000000000078: C286012C
  v_interp_p2_f32  v8, v1, attr3.x                      // 00000000007C: C8210C01
  v_mac_f32     v9, v7, v7                              // 000000000080: 3E120F07
  v_mac_f32     v9, v8, v8                              // 000000000084: 3E121108
  v_interp_p1_f32  v10, v0, attr2.z                     // 000000000088: C8280A00
  v_rsq_f32     v9, v9                                  // 00000000008C: 7E125D09
  v_interp_p1_f32  v11, v0, attr2.y                     // 000000000090: C82C0900
  v_interp_p2_f32  v10, v1, attr2.z                     // 000000000094: C8290A01
  s_waitcnt     lgkmcnt(0)                              // 000000000098: BF8C007F
  v_mad_f32     v12, v6, v9, s6                         // 00000000009C: D282000C 001A1306
  v_interp_p1_f32  v13, v0, attr2.x                     // 0000000000A4: C8340800
  v_interp_p2_f32  v11, v1, attr2.y                     // 0000000000A8: C82D0901
  v_mul_legacy_f32  v14, v10, v10                       // 0000000000AC: 0E1C150A
  v_mad_f32     v15, v6, v9, s10                        // 0000000000B0: D282000F 002A1306
  v_mad_f32     v16, v7, v9, s5                         // 0000000000B8: D2820010 00161307
  v_mul_legacy_f32  v17, v12, v12                       // 0000000000C0: 0E22190C
  v_interp_p2_f32  v13, v1, attr2.x                     // 0000000000C4: C8350801
  v_mac_f32     v14, v11, v11                           // 0000000000C8: 3E1C170B
  v_mad_f32     v18, v7, v9, s9                         // 0000000000CC: D2820012 00261307
  v_mul_legacy_f32  v19, v15, v15                       // 0000000000D4: 0E261F0F
  v_mad_f32     v20, v8, v9, s4                         // 0000000000D8: D2820014 00121308
  v_mac_f32     v17, v16, v16                           // 0000000000E0: 3E222110
  v_mad_f32     v6, v6, v9, s14                         // 0000000000E4: D2820006 003A1306
  v_mac_f32     v14, v13, v13                           // 0000000000EC: 3E1C1B0D
  v_mad_f32     v21, v8, v9, s8                         // 0000000000F0: D2820015 00221308
  v_mac_f32     v19, v18, v18                           // 0000000000F8: 3E262512
  v_mac_f32     v17, v20, v20                           // 0000000000FC: 3E222914
  v_mad_f32     v7, v7, v9, s13                         // 000000000100: D2820007 00361307
  v_mul_legacy_f32  v22, v6, v6                         // 000000000108: 0E2C0D06
  s_buffer_load_dword  s7, s[16:19], 0x10               // 00000000010C: C2039110
  v_rsq_f32     v14, v14                                // 000000000110: 7E1C5D0E
  v_mac_f32     v19, v21, v21                           // 000000000114: 3E262B15
  v_rsq_f32     v17, v17                                // 000000000118: 7E225D11
  v_mad_f32     v8, v8, v9, s12                         // 00000000011C: D2820008 00321308
  v_mac_f32     v22, v7, v7                             // 000000000124: 3E2C0F07
  v_mul_legacy_f32  v9, v10, v14                        // 000000000128: 0E121D0A
  v_rsq_f32     v10, v19                                // 00000000012C: 7E145D13
  v_mul_legacy_f32  v12, v12, v17                       // 000000000130: 0E18230C
  v_mac_f32     v22, v8, v8                             // 000000000134: 3E2C1108
  s_buffer_load_dwordx4  s[20:23], s[0:3], 0x04         // 000000000138: C28A0104
  s_buffer_load_dwordx4  s[24:27], s[0:3], 0x08         // 00000000013C: C28C0108
  v_mul_legacy_f32  v11, v11, v14                       // 000000000140: 0E161D0B
  v_mul_legacy_f32  v15, v15, v10                       // 000000000144: 0E1E150F
  v_mul_legacy_f32  v16, v16, v17                       // 000000000148: 0E202310
  v_mul_legacy_f32  v12, v9, v12                        // 00000000014C: 0E181909
  v_rsq_f32     v19, v22                                // 000000000150: 7E265D16
  s_buffer_load_dwordx4  s[28:31], s[0:3], 0x00         // 000000000154: C28E0100
  s_buffer_load_dwordx4  s[32:35], s[16:19], 0x08       // 000000000158: C2901108
  s_buffer_load_dword  s11, s[0:3], 0x38                // 00000000015C: C2058138
  v_mul_legacy_f32  v13, v13, v14                       // 000000000160: 0E1A1D0D
  v_mul_legacy_f32  v14, v18, v10                       // 000000000164: 0E1C1512
  v_mul_legacy_f32  v15, v9, v15                        // 000000000168: 0E1E1F09
  v_mul_legacy_f32  v17, v20, v17                       // 00000000016C: 0E222314
  v_mac_f32     v12, v11, v16                           // 000000000170: 3E18210B
  v_mul_legacy_f32  v6, v6, v19                         // 000000000174: 0E0C2706
  s_buffer_load_dwordx4  s[16:19], s[16:19], 0x00       // 000000000178: C2881100
  s_buffer_load_dwordx4  s[36:39], s[0:3], 0x0c         // 00000000017C: C292010C
  s_buffer_load_dword  s15, s[0:3], 0x34                // 000000000180: C2078134
  v_mul_legacy_f32  v16, s10, v9                        // 000000000184: 0E20120A
  v_mul_legacy_f32  v10, v21, v10                       // 000000000188: 0E141515
  v_mac_f32     v15, v11, v14                           // 00000000018C: 3E1E1D0B
  v_mov_b32     v14, 0x38d1b717                         // 000000000190: 7E1C02FF 38D1B717
  v_mad_legacy_f32  v12, v13, v17, v12 clamp            // 000000000198: D280080C 0432230D
  v_mul_legacy_f32  v7, v7, v19                         // 0000000001A0: 0E0E2707
  v_mul_legacy_f32  v6, v9, v6                          // 0000000001A4: 0E0C0D09
  s_buffer_load_dword  s0, s[0:3], 0x3c                 // 0000000001A8: C200013C
  v_mac_f32     v16, s9, v11                            // 0000000001AC: 3E201609
  v_mad_legacy_f32  v15, v13, v10, v15 clamp            // 0000000001B0: D280080F 043E150D
  s_waitcnt     lgkmcnt(0)                              // 0000000001B8: BF8C007F
  v_max_legacy_f32  v10, s7, v14                        // 0000000001BC: 1C141C07
  v_log_f32     v12, v12                                // 0000000001C0: 7E184F0C
  v_mul_legacy_f32  v8, v8, v19                         // 0000000001C4: 0E102708
  v_mac_f32     v6, v11, v7                             // 0000000001C8: 3E0C0F0B
  v_mad_legacy_f32  v16, s8, v13, v16 clamp             // 0000000001CC: D2800810 04421A08
  v_interp_p1_f32  v7, v0, attr0.x                      // 0000000001D4: C81C0000
  v_interp_p1_f32  v14, v0, attr0.y                     // 0000000001D8: C8380100
  v_interp_p1_f32  v0, v0, attr0.z                      // 0000000001DC: C8000200
  v_log_f32     v15, v15                                // 0000000001E0: 7E1E4F0F
  v_mul_legacy_f32  v17, s6, v9                         // 0000000001E4: 0E221206
  v_mul_legacy_f32  v12, v10, v12                       // 0000000001E8: 0E18190A
  v_mad_legacy_f32  v6, v13, v8, v6 clamp               // 0000000001EC: D2800806 041A110D
  v_mul_legacy_f32  v8, s20, v16                        // 0000000001F4: 0E102014
  v_mul_legacy_f32  v18, s21, v16                       // 0000000001F8: 0E242015
  v_mul_legacy_f32  v16, s22, v16                       // 0000000001FC: 0E202016
  v_interp_p2_f32  v7, v1, attr0.x                      // 000000000200: C81D0001
  v_interp_p2_f32  v14, v1, attr0.y                     // 000000000204: C8390101
  v_interp_p2_f32  v0, v1, attr0.z                      // 000000000208: C8010201
  v_mul_legacy_f32  v1, v10, v15                        // 00000000020C: 0E021F0A
  v_mac_f32     v17, s5, v11                            // 000000000210: 3E221605
  v_exp_f32     v12, v12                                // 000000000214: 7E184B0C
  v_mov_b32     v15, s24                                // 000000000218: 7E1E0218
  v_mov_b32     v19, s25                                // 00000000021C: 7E260219
  v_mov_b32     v20, s26                                // 000000000220: 7E28021A
  v_mul_legacy_f32  v9, s14, v9                         // 000000000224: 0E12120E
  v_log_f32     v6, v6                                  // 000000000228: 7E0C4F06
  v_mul_legacy_f32  v8, v8, v7                          // 00000000022C: 0E100F08
  v_mul_legacy_f32  v18, v18, v14                       // 000000000230: 0E241D12
  v_mul_legacy_f32  v16, v16, v0                        // 000000000234: 0E200110
  v_mov_b32     v21, s28                                // 000000000238: 7E2A021C
  v_mov_b32     v22, s29                                // 00000000023C: 7E2C021D
  v_mov_b32     v23, s30                                // 000000000240: 7E2E021E
  v_exp_f32     v1, v1                                  // 000000000244: 7E024B01
  v_mov_b32     v24, s32                                // 000000000248: 7E300220
  v_mov_b32     v25, s33                                // 00000000024C: 7E320221
  v_mov_b32     v26, s34                                // 000000000250: 7E340222
  v_mad_legacy_f32  v17, s4, v13, v17 clamp             // 000000000254: D2800811 04461A04
  v_mul_legacy_f32  v12, s11, v12                       // 00000000025C: 0E18180B
  v_mul_legacy_f32  v15, s32, v15                       // 000000000260: 0E1E1E20
  v_mul_legacy_f32  v19, s33, v19                       // 000000000264: 0E262621
  v_mul_legacy_f32  v20, s34, v20                       // 000000000268: 0E282822
  v_mac_f32     v9, s13, v11                            // 00000000026C: 3E12160D
  v_mul_legacy_f32  v6, v10, v6                         // 000000000270: 0E0C0D0A
  v_mac_f32     v8, s16, v21                            // 000000000274: 3E102A10
  v_mac_f32     v18, s17, v22                           // 000000000278: 3E242C11
  v_mac_f32     v16, s18, v23                           // 00000000027C: 3E202E12
  v_mul_legacy_f32  v1, s15, v1                         // 000000000280: 0E02020F
  v_mul_legacy_f32  v10, s20, v24                       // 000000000284: 0E143014
  v_mul_legacy_f32  v11, s21, v25                       // 000000000288: 0E163215
  v_mul_legacy_f32  v21, s22, v26                       // 00000000028C: 0E2A3416
  v_mul_legacy_f32  v22, s24, v17                       // 000000000290: 0E2C2218
  v_mul_legacy_f32  v23, s25, v17                       // 000000000294: 0E2E2219
  v_mul_legacy_f32  v17, s26, v17                       // 000000000298: 0E22221A
  v_mul_legacy_f32  v15, v12, v15                       // 00000000029C: 0E1E1F0C
  v_mul_legacy_f32  v19, v12, v19                       // 0000000002A0: 0E26270C
  v_mul_legacy_f32  v12, v12, v20                       // 0000000002A4: 0E18290C
  v_mad_legacy_f32  v9, s12, v13, v9 clamp              // 0000000002A8: D2800809 04261A0C
  v_exp_f32     v6, v6                                  // 0000000002B0: 7E0C4B06
  v_mov_b32     v13, s36                                // 0000000002B4: 7E1A0224
  v_mov_b32     v20, s37                                // 0000000002B8: 7E280225
  v_mov_b32     v24, s38                                // 0000000002BC: 7E300226
  v_mac_f32     v8, v22, v7                             // 0000000002C0: 3E100F16
  v_mac_f32     v18, v23, v14                           // 0000000002C4: 3E241D17
  v_mac_f32     v16, v17, v0                            // 0000000002C8: 3E200111
  v_mac_f32     v15, v10, v1                            // 0000000002CC: 3E1E030A
  v_mac_f32     v19, v11, v1                            // 0000000002D0: 3E26030B
  v_mac_f32     v12, v21, v1                            // 0000000002D4: 3E180315
  v_mul_legacy_f32  v1, s36, v9                         // 0000000002D8: 0E021224
  v_mul_legacy_f32  v10, s37, v9                        // 0000000002DC: 0E141225
  v_mul_legacy_f32  v9, s38, v9                         // 0000000002E0: 0E121226
  v_mul_legacy_f32  v6, s0, v6                          // 0000000002E4: 0E0C0C00
  v_mul_legacy_f32  v11, s32, v13                       // 0000000002E8: 0E161A20
  v_mul_legacy_f32  v13, s33, v20                       // 0000000002EC: 0E1A2821
  v_mul_legacy_f32  v17, s34, v24                       // 0000000002F0: 0E223022
  v_mad_legacy_f32  v8, v1, v7, v8 clamp                // 0000000002F4: D2800808 04220F01
  v_mad_legacy_f32  v18, v10, v14, v18 clamp            // 0000000002FC: D2800812 044A1D0A
  v_mad_legacy_f32  v16, v9, v0, v16 clamp              // 000000000304: D2800810 04420109
  v_mac_f32     v15, v11, v6                            // 00000000030C: 3E1E0D0B
  v_mac_f32     v19, v13, v6                            // 000000000310: 3E260D0D
  v_mac_f32     v12, v17, v6                            // 000000000314: 3E180D11
  v_mac_f32     v15, v8, v2                             // 000000000318: 3E1E0508
  v_mac_f32     v19, v18, v3                            // 00000000031C: 3E260712
  v_mac_f32     v12, v16, v4                            // 000000000320: 3E180910
label_00C9:
  s_mov_b64     exec, s[40:41]                          // 000000000324: BEFE0428
  v_cvt_pkrtz_f16_f32  v0, v15, v19                     // 000000000328: 5E00270F
  v_cvt_pkrtz_f16_f32  v1, v12, v5                      // 00000000032C: 5E020B0C
  exp           mrt0, v0, v0, v1, v1 done compr vm      // 000000000330: F8001C0F 00000100
  s_endpgm                                              // 000000000338: BF810000
end


// Shader Statistics:
//  NumActiveWaveFront:         36
//  WorkgroupSize:              64
//  NumVRegs:                   27
//  NumSRegs:                   44
//  NumActiveWaveFrontByVReg:   36
//  NumActiveWaveFrontBySReg:   40
//  NumActiveWaveFrontByLDS:    40
//  CycleSim:                   194
//  CycleSimNWaves:             194
//  Code Size:                  828
//Assembler Counts:
//  num_32bit_ops                     : 166
//  num_64bit_ops                     : 20
//  num_alu                           : 155
//  num_fc                            : 29
//  num_inst_exp                      : 1
//  num_inst_ldsgds                   : 0
//  num_inst_mimg                     : 1
//  num_inst_mtbuf                    : 0
//  num_inst_mubuf                    : 0
//  num_inst_sopp                     : 7
//  num_inst_sopc                     : 0
//  num_inst_sop1                     : 5
//  num_inst_sop2                     : 2
//  num_inst_smrd                     : 0
//  num_inst_sopk                     : 0
//  num_inst_vop1                     : 24
//  num_inst_vop2                     : 88
//  num_inst_vop3                     : 21
//  num_inst_vopc                     : 1
//  num_inst_vintrp                   : 24
//  constant_literal_operands         : 0
//  num_tex                           : 2
//  num_vmem_group                    : 1
//  vmem_grouping_started             : 0
//
//Compilation Notes:
//
//  PS has no UAV writes, consider forcing REZ/LATEZ.
// Shader Statistics:
// m_uNumActiveWaveFront             : 36
// m_uVRegLimit                      : 256
// m_uSRegLimit                      : 512
// m_uNumVRegs                       : 27
// m_uNumSRegs                       : 44
// m_uSCCodeSize                     : 828
// m_uWorkgroupSize                  : 64
// m_uNumActiveWaveFrontByVReg       : 36
// m_uNumActiveWaveFrontBySReg       : 40
// m_uNumActiveWaveFrontByLDS        : 40
// m_uCycleSim1Wave                  : 194
// m_uCycleSimNWaves                 : 194

// Assembler Counts:
// num_32bit_ops                     : 166
// num_64bit_ops                     : 20
// num_alu                           : 155
// num_fc                            : 29
// num_inst_exp                      : 1
// num_inst_ldsgds                   : 0
// num_inst_mimg                     : 1
// num_inst_mtbuf                    : 0
// num_inst_mubuf                    : 0
// num_inst_sopp                     : 7
// num_inst_sopc                     : 0
// num_inst_sop1                     : 5
// num_inst_sop2                     : 2
// num_inst_smrd                     : 0
// num_inst_sopk                     : 0
// num_inst_vop1                     : 24
// num_inst_vop2                     : 88
// num_inst_vop3                     : 21
// num_inst_vopc                     : 1
// num_inst_vintrp                   : 24
// num_inst_smem                     : 15
// constant_literal_operands         : 0
// num_tex                           : 2
// num_vmem_group                    : 1
// vmem_grouping_started             : 0
// m_fFullPrecompilePromise          : 0
// m_fIntegerDivideExpansion         : 0
// m_fIntegerModExpansion            : 0
// m_fDoubleDivideExpansion          : 0
// m_fUsesScratch                    : 0
// m_fPerThreadIndirection           : 0
// m_fUsingTableLoads                : 0
// m_fUsingSHmemLoads                : 1
// fSemanticHashFlagOverrideApplied  : 0
// fPSHasNoUAVWrite                  : 1
// m_fRenderTargetsCanBeCompacted    : 0
// version                           : 3
// fCodePatched                      : 0

// Approximately 0 instruction slots used
#endif

const BYTE DGSLPhong_mainTxTk[] =
{
     68,  88,  66,  67,   8, 159, 
    220,   6, 179,  23,   5,  13, 
    112, 134,  22, 165, 198,  14, 
     65, 128,   1,   0,   0,   0, 
    143,  13,   0,   0,   5,   0, 
      0,   0,  52,   0,   0,   0, 
     32,   1,   0,   0,  84,   1, 
      0,   0,  40,  13,   0,   0, 
     56,  13,   0,   0,  73,  83, 
     71,  78, 228,   0,   0,   0, 
      8,   0,   0,   0,   8,   0, 
      0,   0, 200,   0,   0,   0, 
      0,   0,   0,   0,   1,   0, 
      0,   0,   3,   0,   0,   0, 
      0,   0,   0,   0,  15,   0, 
      0,   0, 212,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   0,   0,  15,  15, 
      0,   0, 218,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      2,   0,   0,   0,   3,   3, 
      0,   0, 218,   0,   0,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      3,   0,   0,   0,   7,   7, 
      0,   0, 218,   0,   0,   0, 
      2,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      4,   0,   0,   0,   7,   0, 
      0,   0, 218,   0,   0,   0, 
      3,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      5,   0,   0,   0,   7,   7, 
      0,   0, 218,   0,   0,   0, 
      4,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      6,   0,   0,   0,  15,   0, 
      0,   0, 218,   0,   0,   0, 
      5,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      7,   0,   0,   0,   7,   0, 
      0,   0,  83,  86,  95,  80, 
     79,  83,  73,  84,  73,  79, 
     78,   0,  67,  79,  76,  79, 
     82,   0,  84,  69,  88,  67, 
     79,  79,  82,  68,   0, 171, 
     79,  83,  71,  78,  44,   0, 
      0,   0,   1,   0,   0,   0, 
      8,   0,   0,   0,  32,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   3,   0, 
      0,   0,   0,   0,   0,   0, 
     15,   0,   0,   0,  83,  86, 
     95,  84,  97, 114, 103, 101, 
    116,   0, 171, 171,  83,  72, 
     69,  88, 204,  11,   0,   0, 
     80,   0,   0,   0, 243,   2, 
      0,   0,  53,  16,   0,   0, 
      5,   0,   0,   0, 185,   1, 
      0,   0,  80,   0,   0,   0, 
    180,   1,   0,   0, 106,   8, 
      0,   1,  89,   0,   0,   4, 
     70, 142,  32,   0,   0,   0, 
      0,   0,   5,   0,   0,   0, 
     89,   0,   0,   4,  70, 142, 
     32,   0,   1,   0,   0,   0, 
     21,   0,   0,   0,  90,   0, 
      0,   3,   0,  96,  16,   0, 
      0,   0,   0,   0,  88,  24, 
      0,   4,   0, 112,  16,   0, 
      0,   0,   0,   0,  85,  85, 
      0,   0,  98,  16,   0,   3, 
    242,  16,  16,   0,   1,   0, 
      0,   0,  98,  16,   0,   3, 
     50,  16,  16,   0,   2,   0, 
      0,   0,  98,  16,   0,   3, 
    114,  16,  16,   0,   3,   0, 
      0,   0,  98,  16,   0,   3, 
    114,  16,  16,   0,   5,   0, 
      0,   0, 101,   0,   0,   3, 
    242,  32,  16,   0,   0,   0, 
      0,   0, 104,   0,   0,   2, 
      5,   0,   0,   0,  69,   0, 
      0, 139, 194,   0,   0, 128, 
     67,  85,  21,   0, 242,   0, 
     16,   0,   0,   0,   0,   0, 
     70,  16,  16,   0,   2,   0, 
      0,   0,  70, 126,  16,   0, 
      0,   0,   0,   0,   0,  96, 
     16,   0,   0,   0,   0,   0, 
     56,   0,   0,   7, 130,   0, 
     16,   0,   0,   0,   0,   0, 
     58,   0,  16,   0,   0,   0, 
      0,   0,  58,  16,  16,   0, 
      1,   0,   0,   0,  24,   0, 
      0,   7,  18,   0,  16,   0, 
      1,   0,   0,   0,  58,   0, 
     16,   0,   0,   0,   0,   0, 
      1,  64,   0,   0,   0,   0, 
      0,   0,  13,   0,   4,   3, 
     10,   0,  16,   0,   1,   0, 
      0,   0,  16,   0,   0,   7, 
     18,   0,  16,   0,   1,   0, 
      0,   0,  70,  18,  16,   0, 
      3,   0,   0,   0,  70,  18, 
     16,   0,   3,   0,   0,   0, 
     68,   0,   0,   5,  18,   0, 
     16,   0,   1,   0,   0,   0, 
     10,   0,  16,   0,   1,   0, 
      0,   0,  56,   0,   0,   7, 
    114,   0,  16,   0,   1,   0, 
      0,   0,   6,   0,  16,   0, 
      1,   0,   0,   0,  70,  18, 
     16,   0,   3,   0,   0,   0, 
     16,   0,   0,   7, 130,   0, 
     16,   0,   1,   0,   0,   0, 
     70,  18,  16,   0,   5,   0, 
      0,   0,  70,  18,  16,   0, 
      5,   0,   0,   0,  68,   0, 
      0,   5, 130,   0,  16,   0, 
      1,   0,   0,   0,  58,   0, 
     16,   0,   1,   0,   0,   0, 
     16,  32,   0,   8,  18,   0, 
     16,   0,   2,   0,   0,   0, 
     70, 130,  32,   0,   1,   0, 
      0,   0,   9,   0,   0,   0, 
     70,   2,  16,   0,   1,   0, 
      0,   0,  56,   0,   0,   8, 
    114,   0,  16,   0,   2,   0, 
      0,   0,   6,   0,  16,   0, 
      2,   0,   0,   0,  70, 130, 
     32,   0,   1,   0,   0,   0, 
      1,   0,   0,   0,  56,   0, 
      0,   7, 114,   0,  16,   0, 
      2,   0,   0,   0,  70,   2, 
     16,   0,   2,   0,   0,   0, 
     70,  18,  16,   0,   1,   0, 
      0,   0,  50,   0,   0,  11, 
    114,   0,  16,   0,   2,   0, 
      0,   0,  70, 130,  32,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,  70, 130,  32,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0,  70,   2,  16,   0, 
      2,   0,   0,   0,  50,   0, 
      0,  10, 114,   0,  16,   0, 
      3,   0,   0,   0,  70,  18, 
     16,   0,   5,   0,   0,   0, 
    246,  15,  16,   0,   1,   0, 
      0,   0,  70, 130,  32,   0, 
      1,   0,   0,   0,   9,   0, 
      0,   0,  16,   0,   0,   7, 
    130,   0,  16,   0,   2,   0, 
      0,   0,  70,   2,  16,   0, 
      3,   0,   0,   0,  70,   2, 
     16,   0,   3,   0,   0,   0, 
     68,   0,   0,   5, 130,   0, 
     16,   0,   2,   0,   0,   0, 
     58,   0,  16,   0,   2,   0, 
      0,   0,  56,   0,   0,   7, 
    114,   0,  16,   0,   3,   0, 
      0,   0, 246,  15,  16,   0, 
      2,   0,   0,   0,  70,   2, 
     16,   0,   3,   0,   0,   0, 
     16,  32,   0,   7, 130,   0, 
     16,   0,   2,   0,   0,   0, 
     70,   2,  16,   0,   1,   0, 
      0,   0,  70,   2,  16,   0, 
      3,   0,   0,   0,  52,   0, 
      0,   8,  18,   0,  16,   0, 
      3,   0,   0,   0,  10, 128, 
     32,   0,   0,   0,   0,   0, 
      4,   0,   0,   0,   1,  64, 
      0,   0,  23, 183, 209,  56, 
     47,   0,   0,   5, 130,   0, 
     16,   0,   2,   0,   0,   0, 
     58,   0,  16,   0,   2,   0, 
      0,   0,  56,   0,   0,   7, 
    130,   0,  16,   0,   2,   0, 
      0,   0,  58,   0,  16,   0, 
      2,   0,   0,   0,  10,   0, 
     16,   0,   3,   0,   0,   0, 
     25,   0,   0,   5, 130,   0, 
     16,   0,   2,   0,   0,   0, 
     58,   0,  16,   0,   2,   0, 
      0,   0,  56,   0,   0,   8, 
    130,   0,  16,   0,   2,   0, 
      0,   0,  58,   0,  16,   0, 
      2,   0,   0,   0,  10, 128, 
     32,   0,   1,   0,   0,   0, 
     13,   0,   0,   0,  56,   0, 
      0,   9, 226,   0,  16,   0, 
      3,   0,   0,   0,   6, 137, 
     32,   0,   0,   0,   0,   0, 
      2,   0,   0,   0,   6, 137, 
     32,   0,   1,   0,   0,   0, 
      1,   0,   0,   0,  16,  32, 
      0,   8,  18,   0,  16,   0, 
      4,   0,   0,   0,  70, 130, 
     32,   0,   1,   0,   0,   0, 
     10,   0,   0,   0,  70,   2, 
     16,   0,   1,   0,   0,   0, 
     56,   0,   0,   8, 114,   0, 
     16,   0,   4,   0,   0,   0, 
      6,   0,  16,   0,   4,   0, 
      0,   0,  70, 130,  32,   0, 
      1,   0,   0,   0,   2,   0, 
      0,   0,  50,   0,   0,   9, 
    114,   0,  16,   0,   2,   0, 
      0,   0,  70,   2,  16,   0, 
      4,   0,   0,   0,  70,  18, 
     16,   0,   1,   0,   0,   0, 
     70,   2,  16,   0,   2,   0, 
      0,   0,  50,   0,   0,  10, 
    114,   0,  16,   0,   4,   0, 
      0,   0,  70,  18,  16,   0, 
      5,   0,   0,   0, 246,  15, 
     16,   0,   1,   0,   0,   0, 
     70, 130,  32,   0,   1,   0, 
      0,   0,  10,   0,   0,   0, 
     16,   0,   0,   7, 130,   0, 
     16,   0,   4,   0,   0,   0, 
     70,   2,  16,   0,   4,   0, 
      0,   0,  70,   2,  16,   0, 
      4,   0,   0,   0,  68,   0, 
      0,   5, 130,   0,  16,   0, 
      4,   0,   0,   0,  58,   0, 
     16,   0,   4,   0,   0,   0, 
     56,   0,   0,   7, 114,   0, 
     16,   0,   4,   0,   0,   0, 
    246,  15,  16,   0,   4,   0, 
      0,   0,  70,   2,  16,   0, 
      4,   0,   0,   0,  16,  32, 
      0,   7,  18,   0,  16,   0, 
      4,   0,   0,   0,  70,   2, 
     16,   0,   1,   0,   0,   0, 
     70,   2,  16,   0,   4,   0, 
      0,   0,  47,   0,   0,   5, 
     18,   0,  16,   0,   4,   0, 
      0,   0,  10,   0,  16,   0, 
      4,   0,   0,   0,  56,   0, 
      0,   7,  18,   0,  16,   0, 
      4,   0,   0,   0,  10,   0, 
     16,   0,   3,   0,   0,   0, 
     10,   0,  16,   0,   4,   0, 
      0,   0,  25,   0,   0,   5, 
     18,   0,  16,   0,   4,   0, 
      0,   0,  10,   0,  16,   0, 
      4,   0,   0,   0,  56,   0, 
      0,   8,  18,   0,  16,   0, 
      4,   0,   0,   0,  10,   0, 
     16,   0,   4,   0,   0,   0, 
     10, 128,  32,   0,   1,   0, 
      0,   0,  14,   0,   0,   0, 
     56,   0,   0,   9, 226,   0, 
     16,   0,   4,   0,   0,   0, 
      6, 137,  32,   0,   0,   0, 
      0,   0,   2,   0,   0,   0, 
      6, 137,  32,   0,   1,   0, 
      0,   0,   2,   0,   0,   0, 
     56,   0,   0,   7, 114,   0, 
     16,   0,   4,   0,   0,   0, 
      6,   0,  16,   0,   4,   0, 
      0,   0, 150,   7,  16,   0, 
      4,   0,   0,   0,  50,   0, 
      0,   9, 226,   0,  16,   0, 
      3,   0,   0,   0,  86,  14, 
     16,   0,   3,   0,   0,   0, 
    246,  15,  16,   0,   2,   0, 
      0,   0,   6,   9,  16,   0, 
      4,   0,   0,   0,  16,  32, 
      0,   8, 130,   0,  16,   0, 
      2,   0,   0,   0,  70, 130, 
     32,   0,   1,   0,   0,   0, 
     11,   0,   0,   0,  70,   2, 
     16,   0,   1,   0,   0,   0, 
     56,   0,   0,   8, 114,   0, 
     16,   0,   4,   0,   0,   0, 
    246,  15,  16,   0,   2,   0, 
      0,   0,  70, 130,  32,   0, 
      1,   0,   0,   0,   3,   0, 
      0,   0,  50,  32,   0,   9, 
    114,   0,  16,   0,   2,   0, 
      0,   0,  70,   2,  16,   0, 
      4,   0,   0,   0,  70,  18, 
     16,   0,   1,   0,   0,   0, 
     70,   2,  16,   0,   2,   0, 
      0,   0,  50,   0,   0,  10, 
    114,   0,  16,   0,   4,   0, 
      0,   0,  70,  18,  16,   0, 
      5,   0,   0,   0, 246,  15, 
     16,   0,   1,   0,   0,   0, 
     70, 130,  32,   0,   1,   0, 
      0,   0,  11,   0,   0,   0, 
     16,   0,   0,   7, 130,   0, 
     16,   0,   1,   0,   0,   0, 
     70,   2,  16,   0,   4,   0, 
      0,   0,  70,   2,  16,   0, 
      4,   0,   0,   0,  68,   0, 
      0,   5, 130,   0,  16,   0, 
      1,   0,   0,   0,  58,   0, 
     16,   0,   1,   0,   0,   0, 
     56,   0,   0,   7, 114,   0, 
     16,   0,   4,   0,   0,   0, 
    246,  15,  16,   0,   1,   0, 
      0,   0,  70,   2,  16,   0, 
      4,   0,   0,   0,  16,  32, 
      0,   7,  18,   0,  16,   0, 
      1,   0,   0,   0,  70,   2, 
     16,   0,   1,   0,   0,   0, 
     70,   2,  16,   0,   4,   0, 
      0,   0,  47,   0,   0,   5, 
     18,   0,  16,   0,   1,   0, 
      0,   0,  10,   0,  16,   0, 
      1,   0,   0,   0,  56,   0, 
      0,   7,  18,   0,  16,   0, 
      1,   0,   0,   0,  10,   0, 
     16,   0,   1,   0,   0,   0, 
     10,   0,  16,   0,   3,   0, 
      0,   0,  25,   0,   0,   5, 
     18,   0,  16,   0,   1,   0, 
      0,   0,  10,   0,  16,   0, 
      1,   0,   0,   0,  56,   0, 
      0,   8,  18,   0,  16,   0, 
      1,   0,   0,   0,  10,   0, 
     16,   0,   1,   0,   0,   0, 
     10, 128,  32,   0,   1,   0, 
      0,   0,  15,   0,   0,   0, 
     56,   0,   0,   9, 226,   0, 
     16,   0,   1,   0,   0,   0, 
      6, 137,  32,   0,   0,   0, 
      0,   0,   2,   0,   0,   0, 
      6, 137,  32,   0,   1,   0, 
      0,   0,   3,   0,   0,   0, 
     50,   0,   0,   9, 114,   0, 
     16,   0,   1,   0,   0,   0, 
    150,   7,  16,   0,   1,   0, 
      0,   0,   6,   0,  16,   0, 
      1,   0,   0,   0, 150,   7, 
     16,   0,   3,   0,   0,   0, 
     50,   0,   0,   9, 114,  32, 
     16,   0,   0,   0,   0,   0, 
     70,   2,  16,   0,   2,   0, 
      0,   0,  70,   2,  16,   0, 
      0,   0,   0,   0,  70,   2, 
     16,   0,   1,   0,   0,   0, 
     54,   0,   0,   5, 130,  32, 
     16,   0,   0,   0,   0,   0, 
     58,   0,  16,   0,   0,   0, 
      0,   0,  62,   0,   0,   1, 
     53,  16,   0,   0,  58,   1, 
      0,   0,  23,   0,   1,   0, 
     41, 144,  18,   0, 120,   1, 
    237,  88, 205, 111,  27,  69, 
     20, 127, 179,  94, 175, 215, 
    246, 238, 219, 245, 250, 163, 
    107, 215, 118, 157, 141, 187, 
    113, 131, 137, 162,  40,  64, 
     90,  85,  35, 104,  10, 149, 
     26, 164,  84, 106,  14,  85, 
    229, 244,  35,  77,  68,   3, 
    244,  67,  77,  65,  61, 160, 
     37, 173,  42, 168, 170, 168, 
     42, 156, 138,  56, 130, 128, 
    191, 128, 175,  67,  82, 124, 
     90,  33,  14,  37, 226,  15, 
    224, 200, 145,  99,  15, 168, 
    229, 189, 181,  29, 220,  66, 
    111, 150,  64, 200,  63, 233, 
    247, 222, 252, 102, 223, 204, 
    188, 157, 217,  61, 188, 185, 
    235,  64, 132, 207, 126, 186, 
    181, 201, 222, 106,  86, 222, 
    121, 160,   1, 196, 169,  45, 
    136, 236,  25, 247,  76, 182, 
      0,  51,  25, 182,   0, 117, 
     54,  28, 160,   0, 236,  38, 
    215,  36,  30, 140,   1, 188, 
     76, 158, 159,  53, 186, 220, 
    127, 103, 118, 118, 251, 203, 
     87, 103, 169,   9,  83, 196, 
     50, 177, 221, 229,  23, 196, 
     28, 241,  83,  98, 133, 200, 
    211,  49, 122, 158, 145,  96, 
     67, 224,  60, 104, 169,  29, 
    184, 196,  19, 196,  60, 145, 
    227,  89,  91,  68,   6, 199, 
    245, 207,   1,  43, 108, 254, 
     25, 223,  19,  57, 255, 103, 
    129, 115, 235, 205, 197, 158, 
    243, 100, 240, 251, 254, 219, 
    232, 228, 245, 151, 165, 237, 
    223,  57,  39,   6, 159,  71, 
     63, 144, 216, 137,   6, 248, 
    197, 102,  11, 160, 178,  33, 
    252, 214, 213, 189, 179, 188, 
     79, 124,  22,  30,  19, 248, 
    220, 250, 209, 211,  60, 159, 
     38, 232,  36, 116, 242,  74, 
     22, 128, 230, 213,  98,  99, 
    209,   1, 105, 241, 151,  58, 
     31, 197, 255,  28, 189,  61, 
    101, 207, 223, 226,  49,  98, 
    239, 219, 100, 244, 158, 255, 
    200,   6, 214, 183, 152, 119, 
     93, 120, 200, 170, 167,   5, 
    233, 206, 152, 142, 142, 177, 
    166, 237, 124,  66, 211,  79, 
     97, 141, 193,  41,  35, 173, 
    156, 178, 202,  52, 158,  14, 
    151, 116, 139, 116, 171,  79, 
    159,  36, 125, 178,  79, 159, 
     33, 125, 166,  79,  47, 145, 
     94, 234, 233, 222, 252,  86, 
    180, 158,  17, 231, 179, 166, 
    206, 224, 191, 204,  97, 142, 
    131, 225,  48, 199, 193, 112, 
    152, 227,  96,  56, 204, 113, 
     48,  28, 230,  56,  24,  14, 
    115,  28,  12, 135,  57,  14, 
    140,  16, 168,  95, 109,   6, 
    169,  71, 155,  32, 148,  31, 
    148, 216,  31, 155, 160, 234, 
     33, 196, 141,  80, 168, 201, 
     80, 196, 205, 240, 125, 216, 
    216,   2, 107, 253, 119,  69, 
     57,  11, 182,  88, 191,  15, 
     49,  55,  20, 177,  98, 120, 
    217, 218, 216, 138, 155,  41, 
     92,  79, 169, 239,  53, 222, 
    252, 234, 246, 215, 112, 115, 
     43, 104,  60, 250,  48, 154, 
     11, 221, 104,  92,  67, 220, 
    104, 131,  89,  14,   5,  22, 
    195, 186, 184, 217,   6, 163, 
     22,  10, 179,  18, 106, 166, 
    131,  77, 241,  65,  91,  24, 
     35,  97, 194, 114, 164, 158, 
    113,  36, 164,  26,  97, 114, 
    209,   9,  32, 217,  12,  69, 
    106,  95,  52, 222, 128,  27, 
    219,  90, 182,  68, 181, 192, 
    116,  40, 146, 207, 135, 169, 
    124,  25, 173, 168, 111, 156, 
    202, 130,  27, 219, 137, 108, 
      1, 140, 162, 135,  66, 127, 
     33,  76, 239,  42,  75,  39, 
    234, 243, 193, 218, 227,  99, 
    142, 218, 122, 214,   1, 123, 
    196, 147,  26, 181, 181, 236, 
      1,  48, 119, 151, 101,  62, 
    234, 247, 192, 217, 235, 203, 
    220,  62,  79,  38,  72,  39, 
    178,  47, 130, 102,  54, 209, 
    254,  40, 214, 198, 197, 114, 
    144, 127, 206, 151, 153,  69, 
     47, 208, 163, 216,  41,  72, 
     88,  77, 153, 170,  56, 152, 
     93, 204,   5, 198, 168, 139, 
    122, 166,  41,  85, 113, 187, 
    173, 139, 141, 118, 186,  82, 
     64,  43,  95,  69, 123, 180, 
    134, 201, 162, 139, 133,  69, 
     63,   0, 113, 167, 173, 103, 
    238, 182, 103, 174, 199, 219, 
    102, 165, 132,  14, 229, 157, 
    220,  83, 197, 220, 168, 135, 
    233,  17,  87, 106,  99,   6, 
     66, 230,  86, 219,  16,  31, 
    183, 167, 175,  39, 218,  41, 
    167, 134, 249, 124,  14, 211, 
    149, 170, 124, 172, 148, 131, 
     93, 223, 252,  60,  99, 232, 
    235, 219, 230, 232, 148, 154, 
     24,  67,  76, 154,   6,  30, 
     20, 208,  78,  22, 106, 210, 
    226, 254, 188,  84, 121, 127, 
     18, 229,  92, 217, 152, 119, 
      3, 125, 204, 198, 180, 101, 
     72, 155, 158, 233, 165,  67, 
     84,  30, 148,  67,  16,  51, 
     33,  21,  15, 161,  53,  95, 
     13,  52, 199, 195,  20, 229, 
    166, 241, 216,  76,  73, 205, 
    213, 108, 204, 215, 234,  88, 
    168, 213,  80,  64,  37,  20, 
     98, 127,  40,  20,  17, 166, 
    246,  40,  24,  47, 120, 210, 
    152, 115,   3,  87, 169,   6, 
     69, 197,  15,  74,  74,  35, 
     64, 199,  65, 109, 222,   8, 
    116, 203,  70, 167,  82,  71, 
     91, 212, 176, 172, 140,   7, 
     21, 165,  25,  84, 149, 137, 
     64, 204,  41,  65,  77, 153, 
     12,  70, 148, 169, 192,  83, 
    166, 131,  12, 173, 163, 150, 
     94,  83, 211, 174, 139, 181, 
    106,  21,  71, 124,  31, 189, 
     70,   3, 205, 130,  35,  83, 
    244,  46, 246, 184,  45,  51, 
    205, 186, 116,  38, 232, 125, 
     20,   5, 115, 147,  57, 204, 
     79,  21, 176,  48,  61, 142, 
    174, 215, 196, 162,  55, 129, 
     37, 207,  67, 131, 246, 204, 
     24, 243, 209, 216, 231,  98, 
    146, 230,  52,  74, 190, 170, 
    205,  25,  65,  93,  41,   5, 
    123,  41,  47, 159, 214,  44, 
     88, 182, 220,  85, 169, 203, 
    140, 168, 201,  84, 172,  42, 
    211,  49,  95, 230,  99, 174, 
    172,  59,  10, 238, 117, 114, 
    232,  83, 238,  96,  24,  88, 
     43,  21, 112, 164,  81,  66, 
    111, 210,  67, 157, 230,  18, 
    150, 167,  58, 228,  83, 149, 
    163,  42, 239,  91,  82,  28, 
     82, 211, 102,  85, 154,  38, 
    157, 189, 233,  74,  61,  94, 
    149,  78, 194, 151, 118, 210, 
    149,  13, 245, 209,  38, 213, 
     57,  79, 212,  73,   0, 215, 
    183, 138, 236, 185,  64, 123, 
     26, 122,  20, 176, 131,  72, 
    169, 130,  75, 218,  29,  68, 
    195, 168, 207,  96, 223, 133, 
    194, 129, 212, 215,  45, 165, 
     35, 172, 119, 239,  75, 142, 
    117, 253,  36,  49,  73,  20, 
     84, 173, 115, 120, 231, 254, 
    162,  83, 168, 243,  29, 135, 
     10,  26,  89, 128, 239,  62, 
     57, 152, 219,  56, 122,  51, 
    205, 109, 198, 183, 221, 241, 
    247, 186, 190,  70, 236,  95, 
     27, 224, 115,  54, 127, 195, 
    175, 221, 248,   7,  93, 207, 
    185, 209,   7,   6,  24, 173, 
     70, 224,  75,   1,  70, 247, 
     30, 232,  97,  55, 142, 223, 
    149,  23, 127,  58,  15, 183, 
     27, 199,  53,  45, 103, 122, 
    248,  64, 235, 149, 133,  35, 
    173, 181, 171, 167, 151,  87, 
    222, 109, 205, 173,  94,  93, 
    107,  29,  94, 189, 178, 114, 
    238, 234, 137, 133, 185, 214, 
    218, 149, 115, 173, 227, 231, 
    207,  46, 175,  92,  89, 107, 
    205,  94, 186, 112, 121, 245, 
    237, 149, 229, 214, 137, 165, 
     75, 215, 230,  47, 174,  28, 
     62, 114, 252, 245,  99, 231, 
     47,  93, 124, 227, 244, 133, 
    179, 171,  23,  23, 174,  45, 
    188,  53, 113, 121, 121,   9, 
    254,   4, 139, 146, 104,  23, 
      0,   0,  88,  72,  83,  72, 
      8,   0,   0,   0, 185, 153, 
     60,  20, 140,  74, 132,  11, 
     88,  80,  68,  80,  79,   0, 
      0,   0,  68,  58,  92,  65, 
     84,  71,  92, 115, 116,  95, 
    100, 101, 118,  92,  75, 105, 
    116, 115,  92,  68, 105, 114, 
    101,  99, 116,  88,  84,  75, 
     92, 115, 114,  99,  92,  83, 
    104,  97, 100, 101, 114, 115, 
     92,  67, 111, 109, 112, 105, 
    108, 101, 100,  92,  88,  98, 
    111, 120,  79, 110, 101,  68, 
     71,  83,  76,  80, 104, 111, 
    110, 103,  95, 109,  97, 105, 
    110,  84, 120,  84, 107,  46, 
    112, 100,  98
};
