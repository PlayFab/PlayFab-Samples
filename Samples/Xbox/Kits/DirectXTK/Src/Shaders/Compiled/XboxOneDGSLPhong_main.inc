#if 0
//
// Generated by Microsoft (R) D3D Shader Disassembler for Durango
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// COLOR                    0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 0   xy          2     NONE   float       
// TEXCOORD                 1   xyz         3     NONE   float   xyz 
// TEXCOORD                 2   xyz         4     NONE   float       
// TEXCOORD                 3   xyz         5     NONE   float   xyz 
// TEXCOORD                 4   xyzw        6     NONE   float       
// TEXCOORD                 5   xyz         7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
// Opaque Custom Data - XBOX Precompiled Shader Header
// First Precompiled Shader at offset:[401]
// Embedded Data:
//  0x00000191 - Offset To First Precompiled Shader
//  0x00000050 - Original Shader Descriptor
//  0x0000018c - Original Shader Size
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[5], immediateIndexed
dcl_constantbuffer CB1[21], immediateIndexed
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v3.xyz
dcl_input_ps linear v5.xyz
dcl_output o0.xyzw
dcl_temps 5
mul r0.xyz, cb0[2].xyzx, cb1[1].xyzx
mul r1.xyz, cb0[2].xyzx, cb1[2].xyzx
dp3 r0.w, v5.xyzx, v5.xyzx
rsq r0.w, r0.w
mad r2.xyz, v5.xyzx, r0.wwww, cb1[10].xyzx
dp3 r1.w, r2.xyzx, r2.xyzx
rsq r1.w, r1.w
mul r2.xyz, r1.wwww, r2.xyzx
dp3 r1.w, v3.xyzx, v3.xyzx
rsq r1.w, r1.w
mul r3.xyz, r1.wwww, v3.xyzx
dp3_sat r1.w, r3.xyzx, r2.xyzx
log r1.w, r1.w
max r2.x, cb0[4].x, l(0.000100)
mul r1.w, r1.w, r2.x
exp r1.w, r1.w
mul r1.w, r1.w, cb1[14].x
mul r1.xyz, r1.wwww, r1.xyzx
mad r2.yzw, v5.xxyz, r0.wwww, cb1[9].xxyz
mad r4.xyz, v5.xyzx, r0.wwww, cb1[11].xyzx
dp3 r0.w, r2.yzwy, r2.yzwy
rsq r0.w, r0.w
mul r2.yzw, r0.wwww, r2.yyzw
dp3_sat r0.w, r3.xyzx, r2.yzwy
log r0.w, r0.w
mul r0.w, r0.w, r2.x
exp r0.w, r0.w
mul r0.w, r0.w, cb1[13].x
mad r0.xyz, r0.xyzx, r0.wwww, r1.xyzx
mul r1.xyz, cb0[2].xyzx, cb1[3].xyzx
dp3 r0.w, r4.xyzx, r4.xyzx
rsq r0.w, r0.w
mul r2.yzw, r0.wwww, r4.xxyz
dp3_sat r0.w, r3.xyzx, r2.yzwy
log r0.w, r0.w
mul r0.w, r0.w, r2.x
exp r0.w, r0.w
mul r0.w, r0.w, cb1[15].x
mad r0.xyz, r1.xyzx, r0.wwww, r0.xyzx
dp3_sat r0.w, cb1[9].xyzx, r3.xyzx
mul r1.xyz, r0.wwww, cb1[1].xyzx
mul r1.xyz, r1.xyzx, v1.xyzx
mad r1.xyz, cb0[0].xyzx, cb1[0].xyzx, r1.xyzx
dp3_sat r0.w, cb1[10].xyzx, r3.xyzx
dp3_sat r1.w, cb1[11].xyzx, r3.xyzx
mul r2.xyz, r1.wwww, cb1[3].xyzx
mul r3.xyz, r0.wwww, cb1[2].xyzx
mad r1.xyz, r3.xyzx, v1.xyzx, r1.xyzx
mad_sat r1.xyz, r2.xyzx, v1.xyzx, r1.xyzx
add o0.xyz, r0.xyzx, r1.xyzx
mov o0.w, v1.w
ret 
// Opaque Custom Data - XBOX Precompiled Shader Object
// Offset:[401], bundle is:[284] DWORDS.
// Disassembled Precompiled Shader Object:
// Shader Type               : (PS)
// Shader Hw Stage           : (PS)
// PDB Filename              : D:\ATG\st_dev\Kits\DirectXTK\src\Shaders\Compiled\XboxOneDGSLPhong_main.pdb
// Shader Semantic Hash      : 0x8b16818a220b9bac
//
// Shader Data:
; ----------------- PS Data ------------------------
; Input Semantic Mappings
;   [0] generic,  usageIdx 1, channelMask 15, param0, paramSlot1, DefaultVal={0,0,0,0}
;   [1] generic,  usageIdx 3, channelMask  7, param1, paramSlot3, DefaultVal={0,0,0,0}
;   [2] generic,  usageIdx 5, channelMask  7, param2, paramSlot5, DefaultVal={0,0,0,0}

codeLenInByte        = 760 bytes;

; launchModeFlags    = 0x0000000E
srdTableSupport      = TRUE
immediateSupportExt  = TRUE
srdTableSupportExt   = TRUE

userElementCount     = 1;
;  userElements[0]      = PTR_EXTENDED_USER_DATA, ReferencedExtUserElements=1, s[0x0:1]
extUserElementCount  = 2;
;  extUserElements 1[0] = IMM_CONST_BUFFER 0, offset 0x0:3 dwords
;  extUserElements 1[1] = IMM_CONST_BUFFER 1, offset 0x4:7 dwords
NumVgprs             = 25;
NumSgprs             = 42;
FloatMode            = 192;
IeeeMode             = 0;
FlatPtr32            = 0;
ScratchSize          = 0 dwords/thread;
LDSByteSize          = 0 bytes/workgroup (compile time only);
ScratchWaveOffsetReg = s65535;
; texSamplerUsage         = 0x00000000
; constBufUsage           = 0x00000003

; SPI_SHADER_PGM_RSRC2_PS = 0x00000004
SSPRP:SCRATCH_EN            = 0
SSPRP:USER_SGPR             = 2
SSPRP:TRAP_PRESENT          = 0
SSPRP:WAVE_CNT_EN           = 0
SSPRP:EXTRA_LDS_SIZE        = 0
SSPRP:EXCP_EN               = 0
; SPI_SHADER_Z_FORMAT     = 0x00000000
SPZF:Z_EXPORT_FORMAT        = 0; SPI_SHADER_ZERO
; SPI_PS_IN_CONTROL       = 0x00000003
SPIC:NUM_INTERP             = 3
SPIC:PARAM_GEN              = 0
SPIC:FOG_ADDR               = 0
SPIC:BC_OPTIMIZE_DISABLE    = 0
SPIC:PASS_FOG_THROUGH_PS    = 0
; SPI_PS_INPUT_ADDR       = 0x00000002
SPIA:PERSP_CENTER_ENA       = 1
; DB_SHADER_CONTROL       = 0x00000010
DB:Z_ORDER                  = 1
DB:CONSERVATIVE_Z_EXPORT    = 0; EXPORT_ANY_Z
; CB_SHADER_MASK          = 0x0000000F
CB:OUTPUT0_ENABLE           = 15

; export table for mrt0 [patch@(bytes=0x2E4, dwords=0xB9)]
// Export Patch Code (FMT_ZERO):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_nop         0x0000                                  // 000000000000: BF800000
  s_nop         0x0000                                  // 000000000004: BF800000
  exp           null, off, off, off, off done vm        // 000000000008: F8001890 00000000
end
// Export Patch Code (FMT_32_R):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_nop         0x0000                                  // 000000000000: BF800000
  s_nop         0x0000                                  // 000000000004: BF800000
  exp           mrt0, v2, off, off, off done vm         // 000000000008: F8001801 00000002
end
// Export Patch Code (FMT_32_GR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_nop         0x0000                                  // 000000000000: BF800000
  s_nop         0x0000                                  // 000000000004: BF800000
  exp           mrt0, v2, v4, off, off done vm          // 000000000008: F8001803 00000402
end
// Export Patch Code (FMT_32_AR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_nop         0x0000                                  // 000000000000: BF800000
  s_nop         0x0000                                  // 000000000004: BF800000
  exp           mrt0, v2, v0, off, off done vm          // 000000000008: F8001803 00000002
end
// Export Patch Code (FMT_FP16_ABGR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  v_cvt_pkrtz_f16_f32  v1, v2, v4                       // 000000000000: 5E020902
  v_cvt_pkrtz_f16_f32  v0, v3, v0                       // 000000000004: 5E000103
  exp           mrt0, v1, v1, v0, v0 done compr vm      // 000000000008: F8001C0F 00000001
end
// Export Patch Code (FMT_UNORM16_ABGR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  v_cvt_pknorm_u16_f32  v1, v2, v4                      // 000000000000: 5C020902
  v_cvt_pknorm_u16_f32  v0, v3, v0                      // 000000000004: 5C000103
  exp           mrt0, v1, v1, v0, v0 done compr vm      // 000000000008: F8001C0F 00000001
end
// Export Patch Code (FMT_SNORM16_ABGR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  v_cvt_pknorm_i16_f32  v1, v2, v4                      // 000000000000: 5A020902
  v_cvt_pknorm_i16_f32  v0, v3, v0                      // 000000000004: 5A000103
  exp           mrt0, v1, v1, v0, v0 done compr vm      // 000000000008: F8001C0F 00000001
end
// Export Patch Code (FMT_UINT16_ABGR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  v_cvt_pk_u16_u32  v1, v2, v4                          // 000000000000: 60020902
  v_cvt_pk_u16_u32  v0, v3, v0                          // 000000000004: 60000103
  exp           mrt0, v1, v1, v0, v0 done compr vm      // 000000000008: F8001C0F 00000001
end
// Export Patch Code (FMT_SINT16_ABGR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  v_cvt_pk_i16_i32  v1, v2, v4                          // 000000000000: 62020902
  v_cvt_pk_i16_i32  v0, v3, v0                          // 000000000004: 62000103
  exp           mrt0, v1, v1, v0, v0 done compr vm      // 000000000008: F8001C0F 00000001
end
// Export Patch Code (FMT_32_ABGR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_nop         0x0000                                  // 000000000000: BF800000
  s_nop         0x0000                                  // 000000000004: BF800000
  exp           mrt0, v2, v4, v3, v0 done vm            // 000000000008: F800180F 00030402
end

// Shader Instructions:
shader main
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_load_dwordx8  s[4:11], s[0:1], 0x00                 // 000000000000: C0C20100
  s_mov_b32     m0, s2                                  // 000000000004: BEFC0302
  v_interp_p1_f32  v2, v0, attr2.z                      // 000000000008: C8080A00
  s_waitcnt     lgkmcnt(0)                              // 00000000000C: BF8C007F
  s_buffer_load_dwordx4  s[0:3], s[8:11], 0x28          // 000000000010: C2800928
  v_interp_p1_f32  v3, v0, attr2.y                      // 000000000014: C80C0900
  v_interp_p2_f32  v2, v1, attr2.z                      // 000000000018: C8090A01
  s_buffer_load_dwordx4  s[12:15], s[8:11], 0x24        // 00000000001C: C2860924
  v_interp_p1_f32  v4, v0, attr2.x                      // 000000000020: C8100800
  v_interp_p2_f32  v3, v1, attr2.y                      // 000000000024: C80D0901
  v_mul_legacy_f32  v5, v2, v2                          // 000000000028: 0E0A0502
  s_buffer_load_dwordx4  s[16:19], s[8:11], 0x2c        // 00000000002C: C288092C
  v_interp_p2_f32  v4, v1, attr2.x                      // 000000000030: C8110801
  v_mac_f32     v5, v3, v3                              // 000000000034: 3E0A0703
  v_mac_f32     v5, v4, v4                              // 000000000038: 3E0A0904
  v_rsq_f32     v5, v5                                  // 00000000003C: 7E0A5D05
  v_interp_p1_f32  v6, v0, attr1.z                      // 000000000040: C8180600
  s_waitcnt     lgkmcnt(0)                              // 000000000044: BF8C007F
  v_mad_f32     v7, v2, v5, s2                          // 000000000048: D2820007 000A0B02
  v_interp_p1_f32  v8, v0, attr1.y                      // 000000000050: C8200500
  v_interp_p2_f32  v6, v1, attr1.z                      // 000000000054: C8190601
  v_mad_f32     v9, v3, v5, s1                          // 000000000058: D2820009 00060B03
  v_mul_legacy_f32  v10, v7, v7                         // 000000000060: 0E140F07
  v_interp_p1_f32  v11, v0, attr1.x                     // 000000000064: C82C0400
  v_interp_p2_f32  v8, v1, attr1.y                      // 000000000068: C8210501
  v_mul_legacy_f32  v12, v6, v6                         // 00000000006C: 0E180D06
  v_mad_f32     v13, v2, v5, s14                        // 000000000070: D282000D 003A0B02
  v_mad_f32     v14, v4, v5, s0                         // 000000000078: D282000E 00020B04
  v_mac_f32     v10, v9, v9                             // 000000000080: 3E141309
  v_interp_p2_f32  v11, v1, attr1.x                     // 000000000084: C82D0401
  v_mac_f32     v12, v8, v8                             // 000000000088: 3E181108
  v_mad_f32     v15, v3, v5, s13                        // 00000000008C: D282000F 00360B03
  v_mad_f32     v2, v2, v5, s18                         // 000000000094: D2820002 004A0B02
  v_mul_legacy_f32  v16, v13, v13                       // 00000000009C: 0E201B0D
  v_mac_f32     v10, v14, v14                           // 0000000000A0: 3E141D0E
  v_mac_f32     v12, v11, v11                           // 0000000000A4: 3E18170B
  v_mad_f32     v17, v4, v5, s12                        // 0000000000A8: D2820011 00320B04
  v_mad_f32     v3, v3, v5, s17                         // 0000000000B0: D2820003 00460B03
  v_mac_f32     v16, v15, v15                           // 0000000000B8: 3E201F0F
  v_mul_legacy_f32  v18, v2, v2                         // 0000000000BC: 0E240502
  s_buffer_load_dword  s3, s[4:7], 0x10                 // 0000000000C0: C2018510
  v_rsq_f32     v10, v10                                // 0000000000C4: 7E145D0A
  v_rsq_f32     v12, v12                                // 0000000000C8: 7E185D0C
  v_mad_f32     v4, v4, v5, s16                         // 0000000000CC: D2820004 00420B04
  v_mac_f32     v16, v17, v17                           // 0000000000D4: 3E202311
  v_mac_f32     v18, v3, v3                             // 0000000000D8: 3E240703
  v_mul_legacy_f32  v5, v7, v10                         // 0000000000DC: 0E0A1507
  v_mul_legacy_f32  v6, v6, v12                         // 0000000000E0: 0E0C1906
  v_rsq_f32     v7, v16                                 // 0000000000E4: 7E0E5D10
  v_mac_f32     v18, v4, v4                             // 0000000000E8: 3E240904
  s_buffer_load_dwordx4  s[20:23], s[8:11], 0x04        // 0000000000EC: C28A0904
  s_buffer_load_dwordx4  s[24:27], s[8:11], 0x08        // 0000000000F0: C28C0908
  v_mul_legacy_f32  v9, v9, v10                         // 0000000000F4: 0E121509
  v_mul_legacy_f32  v8, v8, v12                         // 0000000000F8: 0E101908
  v_mul_legacy_f32  v5, v5, v6                          // 0000000000FC: 0E0A0D05
  v_mul_legacy_f32  v13, v13, v7                        // 000000000100: 0E1A0F0D
  v_rsq_f32     v16, v18                                // 000000000104: 7E205D12
  s_buffer_load_dwordx4  s[28:31], s[4:7], 0x08         // 000000000108: C28E0508
  s_buffer_load_dwordx4  s[32:35], s[8:11], 0x00        // 00000000010C: C2900900
  s_buffer_load_dword  s15, s[8:11], 0x38               // 000000000110: C2078938
  v_mul_legacy_f32  v10, v14, v10                       // 000000000114: 0E14150E
  v_mul_legacy_f32  v11, v11, v12                       // 000000000118: 0E16190B
  v_mac_f32     v5, v8, v9                              // 00000000011C: 3E0A1308
  v_mul_legacy_f32  v9, v15, v7                         // 000000000120: 0E120F0F
  v_mul_legacy_f32  v12, v6, v13                        // 000000000124: 0E181B06
  v_mul_legacy_f32  v2, v2, v16                         // 000000000128: 0E042102
  s_buffer_load_dwordx4  s[36:39], s[8:11], 0x0c        // 00000000012C: C292090C
  s_buffer_load_dword  s19, s[8:11], 0x34               // 000000000130: C2098934
  s_buffer_load_dwordx4  s[4:7], s[4:7], 0x00           // 000000000134: C2820500
  v_mad_legacy_f32  v5, v11, v10, v5 clamp              // 000000000138: D2800805 0416150B
  v_mov_b32     v10, 0x38d1b717                         // 000000000140: 7E1402FF 38D1B717
  v_mul_legacy_f32  v7, v17, v7                         // 000000000148: 0E0E0F11
  v_mac_f32     v12, v8, v9                             // 00000000014C: 3E181308
  v_mul_legacy_f32  v3, v3, v16                         // 000000000150: 0E062103
  v_mul_legacy_f32  v2, v6, v2                          // 000000000154: 0E040506
  v_mul_legacy_f32  v9, s14, v6                         // 000000000158: 0E120C0E
  s_waitcnt     lgkmcnt(0)                              // 00000000015C: BF8C007F
  s_buffer_load_dword  s7, s[8:11], 0x3c                // 000000000160: C203893C
  v_log_f32     v5, v5                                  // 000000000164: 7E0A4F05
  v_max_legacy_f32  v10, s3, v10                        // 000000000168: 1C141403
  v_mad_legacy_f32  v12, v11, v7, v12 clamp             // 00000000016C: D280080C 04320F0B
  v_mul_legacy_f32  v4, v4, v16                         // 000000000174: 0E082104
  v_mac_f32     v2, v8, v3                              // 000000000178: 3E040708
  v_mac_f32     v9, s13, v8                             // 00000000017C: 3E12100D
  v_mul_legacy_f32  v3, v5, v10                         // 000000000180: 0E061505
  v_log_f32     v5, v12                                 // 000000000184: 7E0A4F0C
  v_mad_legacy_f32  v2, v11, v4, v2 clamp               // 000000000188: D2800802 040A090B
  v_mad_legacy_f32  v9, s12, v11, v9 clamp              // 000000000190: D2800809 0426160C
  v_interp_p1_f32  v4, v0, attr0.x                      // 000000000198: C8100000
  v_interp_p1_f32  v7, v0, attr0.y                      // 00000000019C: C81C0100
  v_interp_p1_f32  v12, v0, attr0.z                     // 0000000001A0: C8300200
  v_mul_legacy_f32  v13, s2, v6                         // 0000000001A4: 0E1A0C02
  v_mov_b32     v14, s24                                // 0000000001A8: 7E1C0218
  v_mov_b32     v15, s25                                // 0000000001AC: 7E1E0219
  v_mov_b32     v16, s26                                // 0000000001B0: 7E20021A
  v_exp_f32     v3, v3                                  // 0000000001B4: 7E064B03
  v_mul_legacy_f32  v5, v10, v5                         // 0000000001B8: 0E0A0B0A
  v_log_f32     v2, v2                                  // 0000000001BC: 7E044F02
  v_mul_legacy_f32  v17, s20, v9                        // 0000000001C0: 0E221214
  v_mul_legacy_f32  v18, s21, v9                        // 0000000001C4: 0E241215
  v_mul_legacy_f32  v9, s22, v9                         // 0000000001C8: 0E121216
  v_interp_p2_f32  v4, v1, attr0.x                      // 0000000001CC: C8110001
  v_interp_p2_f32  v7, v1, attr0.y                      // 0000000001D0: C81D0101
  v_interp_p2_f32  v12, v1, attr0.z                     // 0000000001D4: C8310201
  v_mac_f32     v13, s1, v8                             // 0000000001D8: 3E1A1001
  v_mul_legacy_f32  v6, s18, v6                         // 0000000001DC: 0E0C0C12
  v_mov_b32     v19, s20                                // 0000000001E0: 7E260214
  v_mov_b32     v20, s21                                // 0000000001E4: 7E280215
  v_mov_b32     v21, s22                                // 0000000001E8: 7E2A0216
  v_mul_legacy_f32  v14, s28, v14                       // 0000000001EC: 0E1C1C1C
  v_mul_legacy_f32  v15, s29, v15                       // 0000000001F0: 0E1E1E1D
  v_mul_legacy_f32  v16, s30, v16                       // 0000000001F4: 0E20201E
  v_mul_legacy_f32  v3, s15, v3                         // 0000000001F8: 0E06060F
  v_exp_f32     v5, v5                                  // 0000000001FC: 7E0A4B05
  v_mul_legacy_f32  v2, v10, v2                         // 000000000200: 0E04050A
  v_mul_legacy_f32  v10, v17, v4                        // 000000000204: 0E140911
  v_mul_legacy_f32  v17, v18, v7                        // 000000000208: 0E220F12
  v_mul_legacy_f32  v9, v9, v12                         // 00000000020C: 0E121909
  v_mov_b32     v18, s32                                // 000000000210: 7E240220
  v_mov_b32     v22, s33                                // 000000000214: 7E2C0221
  v_mov_b32     v23, s34                                // 000000000218: 7E2E0222
  v_mad_legacy_f32  v13, s0, v11, v13 clamp             // 00000000021C: D280080D 04361600
  v_mac_f32     v6, s17, v8                             // 000000000224: 3E0C1011
  v_mul_legacy_f32  v8, s28, v19                        // 000000000228: 0E10261C
  v_mul_legacy_f32  v19, s29, v20                       // 00000000022C: 0E26281D
  v_mul_legacy_f32  v20, s30, v21                       // 000000000230: 0E282A1E
  v_mul_legacy_f32  v14, v14, v3                        // 000000000234: 0E1C070E
  v_mul_legacy_f32  v15, v15, v3                        // 000000000238: 0E1E070F
  v_mul_legacy_f32  v3, v16, v3                         // 00000000023C: 0E060710
  v_mul_legacy_f32  v5, s19, v5                         // 000000000240: 0E0A0A13
  v_mov_b32     v16, s36                                // 000000000244: 7E200224
  v_mov_b32     v21, s37                                // 000000000248: 7E2A0225
  v_mov_b32     v24, s38                                // 00000000024C: 7E300226
  v_exp_f32     v2, v2                                  // 000000000250: 7E044B02
  v_mac_f32     v10, s4, v18                            // 000000000254: 3E142404
  v_mac_f32     v17, s5, v22                            // 000000000258: 3E222C05
  v_mac_f32     v9, s6, v23                             // 00000000025C: 3E122E06
  v_mad_legacy_f32  v6, s16, v11, v6 clamp              // 000000000260: D2800806 041A1610
  v_mul_legacy_f32  v11, s24, v13                       // 000000000268: 0E161A18
  v_mul_legacy_f32  v18, s25, v13                       // 00000000026C: 0E241A19
  v_mul_legacy_f32  v13, s26, v13                       // 000000000270: 0E1A1A1A
  v_mac_f32     v14, v8, v5                             // 000000000274: 3E1C0B08
  v_mac_f32     v15, v19, v5                            // 000000000278: 3E1E0B13
  v_mac_f32     v3, v20, v5                             // 00000000027C: 3E060B14
  v_mul_legacy_f32  v5, s28, v16                        // 000000000280: 0E0A201C
  v_mul_legacy_f32  v8, s29, v21                        // 000000000284: 0E102A1D
  v_mul_legacy_f32  v16, s30, v24                       // 000000000288: 0E20301E
  s_waitcnt     lgkmcnt(0)                              // 00000000028C: BF8C007F
  v_mul_legacy_f32  v2, s7, v2                          // 000000000290: 0E040407
  v_mul_legacy_f32  v19, s36, v6                        // 000000000294: 0E260C24
  v_mul_legacy_f32  v20, s37, v6                        // 000000000298: 0E280C25
  v_mul_legacy_f32  v6, s38, v6                         // 00000000029C: 0E0C0C26
  v_mac_f32     v10, v11, v4                            // 0000000002A0: 3E14090B
  v_mac_f32     v17, v18, v7                            // 0000000002A4: 3E220F12
  v_mac_f32     v9, v13, v12                            // 0000000002A8: 3E12190D
  v_mac_f32     v14, v5, v2                             // 0000000002AC: 3E1C0505
  v_mac_f32     v15, v8, v2                             // 0000000002B0: 3E1E0508
  v_mac_f32     v3, v16, v2                             // 0000000002B4: 3E060510
  v_mad_legacy_f32  v10, v19, v4, v10 clamp             // 0000000002B8: D280080A 042A0913
  v_mad_legacy_f32  v17, v20, v7, v17 clamp             // 0000000002C0: D2800811 04460F14
  v_mad_legacy_f32  v9, v6, v12, v9 clamp               // 0000000002C8: D2800809 04261906
  v_add_f32     v2, v14, v10                            // 0000000002D0: 0604150E
  v_add_f32     v4, v15, v17                            // 0000000002D4: 0608230F
  v_add_f32     v3, v3, v9                              // 0000000002D8: 06061303
  v_interp_p1_f32  v0, v0, attr0.w                      // 0000000002DC: C8000300
  v_interp_p2_f32  v0, v1, attr0.w                      // 0000000002E0: C8010301
  v_cvt_pkrtz_f16_f32  v1, v2, v4                       // 0000000002E4: 5E020902
  v_cvt_pkrtz_f16_f32  v0, v3, v0                       // 0000000002E8: 5E000103
  exp           mrt0, v1, v1, v0, v0 done compr vm      // 0000000002EC: F8001C0F 00000001
  s_endpgm                                              // 0000000002F4: BF810000
end


// Shader Statistics:
//  NumActiveWaveFront:         36
//  WorkgroupSize:              64
//  NumVRegs:                   25
//  NumSRegs:                   42
//  NumActiveWaveFrontByVReg:   36
//  NumActiveWaveFrontBySReg:   40
//  NumActiveWaveFrontByLDS:    40
//  CycleSim:                   186
//  CycleSimNWaves:             186
//  Code Size:                  760
//Assembler Counts:
//  num_32bit_ops                     : 151
//  num_64bit_ops                     : 19
//  num_alu                           : 149
//  num_fc                            : 20
//  num_inst_exp                      : 1
//  num_inst_ldsgds                   : 0
//  num_inst_mimg                     : 0
//  num_inst_mtbuf                    : 0
//  num_inst_mubuf                    : 0
//  num_inst_sopp                     : 5
//  num_inst_sopc                     : 0
//  num_inst_sop1                     : 1
//  num_inst_sop2                     : 0
//  num_inst_smrd                     : 0
//  num_inst_sopk                     : 0
//  num_inst_vop1                     : 24
//  num_inst_vop2                     : 87
//  num_inst_vop3                     : 18
//  num_inst_vopc                     : 0
//  num_inst_vintrp                   : 20
//  constant_literal_operands         : 0
//  num_tex                           : 1
//  num_vmem_group                    : 0
//  vmem_grouping_started             : 0
//
//Compilation Notes:
//
//  PS has no UAV writes, consider forcing REZ/LATEZ.
// Shader Statistics:
// m_uNumActiveWaveFront             : 36
// m_uVRegLimit                      : 256
// m_uSRegLimit                      : 512
// m_uNumVRegs                       : 25
// m_uNumSRegs                       : 42
// m_uSCCodeSize                     : 760
// m_uWorkgroupSize                  : 64
// m_uNumActiveWaveFrontByVReg       : 36
// m_uNumActiveWaveFrontBySReg       : 40
// m_uNumActiveWaveFrontByLDS        : 40
// m_uCycleSim1Wave                  : 186
// m_uCycleSimNWaves                 : 186

// Assembler Counts:
// num_32bit_ops                     : 151
// num_64bit_ops                     : 19
// num_alu                           : 149
// num_fc                            : 20
// num_inst_exp                      : 1
// num_inst_ldsgds                   : 0
// num_inst_mimg                     : 0
// num_inst_mtbuf                    : 0
// num_inst_mubuf                    : 0
// num_inst_sopp                     : 5
// num_inst_sopc                     : 0
// num_inst_sop1                     : 1
// num_inst_sop2                     : 0
// num_inst_smrd                     : 0
// num_inst_sopk                     : 0
// num_inst_vop1                     : 24
// num_inst_vop2                     : 87
// num_inst_vop3                     : 18
// num_inst_vopc                     : 0
// num_inst_vintrp                   : 20
// num_inst_smem                     : 14
// constant_literal_operands         : 0
// num_tex                           : 1
// num_vmem_group                    : 0
// vmem_grouping_started             : 0
// m_fFullPrecompilePromise          : 0
// m_fIntegerDivideExpansion         : 0
// m_fIntegerModExpansion            : 0
// m_fDoubleDivideExpansion          : 0
// m_fUsesScratch                    : 0
// m_fPerThreadIndirection           : 0
// m_fUsingTableLoads                : 0
// m_fUsingSHmemLoads                : 1
// fSemanticHashFlagOverrideApplied  : 0
// fPSHasNoUAVWrite                  : 1
// m_fRenderTargetsCanBeCompacted    : 0
// version                           : 3
// fCodePatched                      : 0

// Approximately 0 instruction slots used
#endif

const BYTE DGSLPhong_main[] =
{
     68,  88,  66,  67,  13,  57, 
    253,  64, 201,  64,  45, 103, 
    193, 105, 172, 193,  37, 155, 
     80,  20,   1,   0,   0,   0, 
    123,  12,   0,   0,   5,   0, 
      0,   0,  52,   0,   0,   0, 
     32,   1,   0,   0,  84,   1, 
      0,   0,  24,  12,   0,   0, 
     40,  12,   0,   0,  73,  83, 
     71,  78, 228,   0,   0,   0, 
      8,   0,   0,   0,   8,   0, 
      0,   0, 200,   0,   0,   0, 
      0,   0,   0,   0,   1,   0, 
      0,   0,   3,   0,   0,   0, 
      0,   0,   0,   0,  15,   0, 
      0,   0, 212,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   0,   0,  15,  15, 
      0,   0, 218,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      2,   0,   0,   0,   3,   0, 
      0,   0, 218,   0,   0,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      3,   0,   0,   0,   7,   7, 
      0,   0, 218,   0,   0,   0, 
      2,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      4,   0,   0,   0,   7,   0, 
      0,   0, 218,   0,   0,   0, 
      3,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      5,   0,   0,   0,   7,   7, 
      0,   0, 218,   0,   0,   0, 
      4,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      6,   0,   0,   0,  15,   0, 
      0,   0, 218,   0,   0,   0, 
      5,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      7,   0,   0,   0,   7,   0, 
      0,   0,  83,  86,  95,  80, 
     79,  83,  73,  84,  73,  79, 
     78,   0,  67,  79,  76,  79, 
     82,   0,  84,  69,  88,  67, 
     79,  79,  82,  68,   0, 171, 
     79,  83,  71,  78,  44,   0, 
      0,   0,   1,   0,   0,   0, 
      8,   0,   0,   0,  32,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   3,   0, 
      0,   0,   0,   0,   0,   0, 
     15,   0,   0,   0,  83,  86, 
     95,  84,  97, 114, 103, 101, 
    116,   0, 171, 171,  83,  72, 
     69,  88, 188,  10,   0,   0, 
     80,   0,   0,   0, 175,   2, 
      0,   0,  53,  16,   0,   0, 
      5,   0,   0,   0, 145,   1, 
      0,   0,  80,   0,   0,   0, 
    140,   1,   0,   0, 106,   8, 
      0,   1,  89,   0,   0,   4, 
     70, 142,  32,   0,   0,   0, 
      0,   0,   5,   0,   0,   0, 
     89,   0,   0,   4,  70, 142, 
     32,   0,   1,   0,   0,   0, 
     21,   0,   0,   0,  98,  16, 
      0,   3, 242,  16,  16,   0, 
      1,   0,   0,   0,  98,  16, 
      0,   3, 114,  16,  16,   0, 
      3,   0,   0,   0,  98,  16, 
      0,   3, 114,  16,  16,   0, 
      5,   0,   0,   0, 101,   0, 
      0,   3, 242,  32,  16,   0, 
      0,   0,   0,   0, 104,   0, 
      0,   2,   5,   0,   0,   0, 
     56,   0,   0,   9, 114,   0, 
     16,   0,   0,   0,   0,   0, 
     70, 130,  32,   0,   0,   0, 
      0,   0,   2,   0,   0,   0, 
     70, 130,  32,   0,   1,   0, 
      0,   0,   1,   0,   0,   0, 
     56,   0,   0,   9, 114,   0, 
     16,   0,   1,   0,   0,   0, 
     70, 130,  32,   0,   0,   0, 
      0,   0,   2,   0,   0,   0, 
     70, 130,  32,   0,   1,   0, 
      0,   0,   2,   0,   0,   0, 
     16,   0,   0,   7, 130,   0, 
     16,   0,   0,   0,   0,   0, 
     70,  18,  16,   0,   5,   0, 
      0,   0,  70,  18,  16,   0, 
      5,   0,   0,   0,  68,   0, 
      0,   5, 130,   0,  16,   0, 
      0,   0,   0,   0,  58,   0, 
     16,   0,   0,   0,   0,   0, 
     50,   0,   0,  10, 114,   0, 
     16,   0,   2,   0,   0,   0, 
     70,  18,  16,   0,   5,   0, 
      0,   0, 246,  15,  16,   0, 
      0,   0,   0,   0,  70, 130, 
     32,   0,   1,   0,   0,   0, 
     10,   0,   0,   0,  16,   0, 
      0,   7, 130,   0,  16,   0, 
      1,   0,   0,   0,  70,   2, 
     16,   0,   2,   0,   0,   0, 
     70,   2,  16,   0,   2,   0, 
      0,   0,  68,   0,   0,   5, 
    130,   0,  16,   0,   1,   0, 
      0,   0,  58,   0,  16,   0, 
      1,   0,   0,   0,  56,   0, 
      0,   7, 114,   0,  16,   0, 
      2,   0,   0,   0, 246,  15, 
     16,   0,   1,   0,   0,   0, 
     70,   2,  16,   0,   2,   0, 
      0,   0,  16,   0,   0,   7, 
    130,   0,  16,   0,   1,   0, 
      0,   0,  70,  18,  16,   0, 
      3,   0,   0,   0,  70,  18, 
     16,   0,   3,   0,   0,   0, 
     68,   0,   0,   5, 130,   0, 
     16,   0,   1,   0,   0,   0, 
     58,   0,  16,   0,   1,   0, 
      0,   0,  56,   0,   0,   7, 
    114,   0,  16,   0,   3,   0, 
      0,   0, 246,  15,  16,   0, 
      1,   0,   0,   0,  70,  18, 
     16,   0,   3,   0,   0,   0, 
     16,  32,   0,   7, 130,   0, 
     16,   0,   1,   0,   0,   0, 
     70,   2,  16,   0,   3,   0, 
      0,   0,  70,   2,  16,   0, 
      2,   0,   0,   0,  47,   0, 
      0,   5, 130,   0,  16,   0, 
      1,   0,   0,   0,  58,   0, 
     16,   0,   1,   0,   0,   0, 
     52,   0,   0,   8,  18,   0, 
     16,   0,   2,   0,   0,   0, 
     10, 128,  32,   0,   0,   0, 
      0,   0,   4,   0,   0,   0, 
      1,  64,   0,   0,  23, 183, 
    209,  56,  56,   0,   0,   7, 
    130,   0,  16,   0,   1,   0, 
      0,   0,  58,   0,  16,   0, 
      1,   0,   0,   0,  10,   0, 
     16,   0,   2,   0,   0,   0, 
     25,   0,   0,   5, 130,   0, 
     16,   0,   1,   0,   0,   0, 
     58,   0,  16,   0,   1,   0, 
      0,   0,  56,   0,   0,   8, 
    130,   0,  16,   0,   1,   0, 
      0,   0,  58,   0,  16,   0, 
      1,   0,   0,   0,  10, 128, 
     32,   0,   1,   0,   0,   0, 
     14,   0,   0,   0,  56,   0, 
      0,   7, 114,   0,  16,   0, 
      1,   0,   0,   0, 246,  15, 
     16,   0,   1,   0,   0,   0, 
     70,   2,  16,   0,   1,   0, 
      0,   0,  50,   0,   0,  10, 
    226,   0,  16,   0,   2,   0, 
      0,   0,   6,  25,  16,   0, 
      5,   0,   0,   0, 246,  15, 
     16,   0,   0,   0,   0,   0, 
      6, 137,  32,   0,   1,   0, 
      0,   0,   9,   0,   0,   0, 
     50,   0,   0,  10, 114,   0, 
     16,   0,   4,   0,   0,   0, 
     70,  18,  16,   0,   5,   0, 
      0,   0, 246,  15,  16,   0, 
      0,   0,   0,   0,  70, 130, 
     32,   0,   1,   0,   0,   0, 
     11,   0,   0,   0,  16,   0, 
      0,   7, 130,   0,  16,   0, 
      0,   0,   0,   0, 150,   7, 
     16,   0,   2,   0,   0,   0, 
    150,   7,  16,   0,   2,   0, 
      0,   0,  68,   0,   0,   5, 
    130,   0,  16,   0,   0,   0, 
      0,   0,  58,   0,  16,   0, 
      0,   0,   0,   0,  56,   0, 
      0,   7, 226,   0,  16,   0, 
      2,   0,   0,   0, 246,  15, 
     16,   0,   0,   0,   0,   0, 
     86,  14,  16,   0,   2,   0, 
      0,   0,  16,  32,   0,   7, 
    130,   0,  16,   0,   0,   0, 
      0,   0,  70,   2,  16,   0, 
      3,   0,   0,   0, 150,   7, 
     16,   0,   2,   0,   0,   0, 
     47,   0,   0,   5, 130,   0, 
     16,   0,   0,   0,   0,   0, 
     58,   0,  16,   0,   0,   0, 
      0,   0,  56,   0,   0,   7, 
    130,   0,  16,   0,   0,   0, 
      0,   0,  58,   0,  16,   0, 
      0,   0,   0,   0,  10,   0, 
     16,   0,   2,   0,   0,   0, 
     25,   0,   0,   5, 130,   0, 
     16,   0,   0,   0,   0,   0, 
     58,   0,  16,   0,   0,   0, 
      0,   0,  56,   0,   0,   8, 
    130,   0,  16,   0,   0,   0, 
      0,   0,  58,   0,  16,   0, 
      0,   0,   0,   0,  10, 128, 
     32,   0,   1,   0,   0,   0, 
     13,   0,   0,   0,  50,   0, 
      0,   9, 114,   0,  16,   0, 
      0,   0,   0,   0,  70,   2, 
     16,   0,   0,   0,   0,   0, 
    246,  15,  16,   0,   0,   0, 
      0,   0,  70,   2,  16,   0, 
      1,   0,   0,   0,  56,   0, 
      0,   9, 114,   0,  16,   0, 
      1,   0,   0,   0,  70, 130, 
     32,   0,   0,   0,   0,   0, 
      2,   0,   0,   0,  70, 130, 
     32,   0,   1,   0,   0,   0, 
      3,   0,   0,   0,  16,   0, 
      0,   7, 130,   0,  16,   0, 
      0,   0,   0,   0,  70,   2, 
     16,   0,   4,   0,   0,   0, 
     70,   2,  16,   0,   4,   0, 
      0,   0,  68,   0,   0,   5, 
    130,   0,  16,   0,   0,   0, 
      0,   0,  58,   0,  16,   0, 
      0,   0,   0,   0,  56,   0, 
      0,   7, 226,   0,  16,   0, 
      2,   0,   0,   0, 246,  15, 
     16,   0,   0,   0,   0,   0, 
      6,   9,  16,   0,   4,   0, 
      0,   0,  16,  32,   0,   7, 
    130,   0,  16,   0,   0,   0, 
      0,   0,  70,   2,  16,   0, 
      3,   0,   0,   0, 150,   7, 
     16,   0,   2,   0,   0,   0, 
     47,   0,   0,   5, 130,   0, 
     16,   0,   0,   0,   0,   0, 
     58,   0,  16,   0,   0,   0, 
      0,   0,  56,   0,   0,   7, 
    130,   0,  16,   0,   0,   0, 
      0,   0,  58,   0,  16,   0, 
      0,   0,   0,   0,  10,   0, 
     16,   0,   2,   0,   0,   0, 
     25,   0,   0,   5, 130,   0, 
     16,   0,   0,   0,   0,   0, 
     58,   0,  16,   0,   0,   0, 
      0,   0,  56,   0,   0,   8, 
    130,   0,  16,   0,   0,   0, 
      0,   0,  58,   0,  16,   0, 
      0,   0,   0,   0,  10, 128, 
     32,   0,   1,   0,   0,   0, 
     15,   0,   0,   0,  50,   0, 
      0,   9, 114,   0,  16,   0, 
      0,   0,   0,   0,  70,   2, 
     16,   0,   1,   0,   0,   0, 
    246,  15,  16,   0,   0,   0, 
      0,   0,  70,   2,  16,   0, 
      0,   0,   0,   0,  16,  32, 
      0,   8, 130,   0,  16,   0, 
      0,   0,   0,   0,  70, 130, 
     32,   0,   1,   0,   0,   0, 
      9,   0,   0,   0,  70,   2, 
     16,   0,   3,   0,   0,   0, 
     56,   0,   0,   8, 114,   0, 
     16,   0,   1,   0,   0,   0, 
    246,  15,  16,   0,   0,   0, 
      0,   0,  70, 130,  32,   0, 
      1,   0,   0,   0,   1,   0, 
      0,   0,  56,   0,   0,   7, 
    114,   0,  16,   0,   1,   0, 
      0,   0,  70,   2,  16,   0, 
      1,   0,   0,   0,  70,  18, 
     16,   0,   1,   0,   0,   0, 
     50,   0,   0,  11, 114,   0, 
     16,   0,   1,   0,   0,   0, 
     70, 130,  32,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
     70, 130,  32,   0,   1,   0, 
      0,   0,   0,   0,   0,   0, 
     70,   2,  16,   0,   1,   0, 
      0,   0,  16,  32,   0,   8, 
    130,   0,  16,   0,   0,   0, 
      0,   0,  70, 130,  32,   0, 
      1,   0,   0,   0,  10,   0, 
      0,   0,  70,   2,  16,   0, 
      3,   0,   0,   0,  16,  32, 
      0,   8, 130,   0,  16,   0, 
      1,   0,   0,   0,  70, 130, 
     32,   0,   1,   0,   0,   0, 
     11,   0,   0,   0,  70,   2, 
     16,   0,   3,   0,   0,   0, 
     56,   0,   0,   8, 114,   0, 
     16,   0,   2,   0,   0,   0, 
    246,  15,  16,   0,   1,   0, 
      0,   0,  70, 130,  32,   0, 
      1,   0,   0,   0,   3,   0, 
      0,   0,  56,   0,   0,   8, 
    114,   0,  16,   0,   3,   0, 
      0,   0, 246,  15,  16,   0, 
      0,   0,   0,   0,  70, 130, 
     32,   0,   1,   0,   0,   0, 
      2,   0,   0,   0,  50,   0, 
      0,   9, 114,   0,  16,   0, 
      1,   0,   0,   0,  70,   2, 
     16,   0,   3,   0,   0,   0, 
     70,  18,  16,   0,   1,   0, 
      0,   0,  70,   2,  16,   0, 
      1,   0,   0,   0,  50,  32, 
      0,   9, 114,   0,  16,   0, 
      1,   0,   0,   0,  70,   2, 
     16,   0,   2,   0,   0,   0, 
     70,  18,  16,   0,   1,   0, 
      0,   0,  70,   2,  16,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   7, 114,  32,  16,   0, 
      0,   0,   0,   0,  70,   2, 
     16,   0,   0,   0,   0,   0, 
     70,   2,  16,   0,   1,   0, 
      0,   0,  54,   0,   0,   5, 
    130,  32,  16,   0,   0,   0, 
      0,   0,  58,  16,  16,   0, 
      1,   0,   0,   0,  62,   0, 
      0,   1,  53,  16,   0,   0, 
     30,   1,   0,   0,  23,   0, 
      1,   0,  41,  32,  18,   0, 
    120,   1, 237,  88,  77, 111, 
     27,  69,  24, 158, 157, 157, 
     29, 239, 151, 223,  93, 175, 
    215, 142, 237,  58, 102, 147, 
    186,  38, 138,  66,   9,  17, 
    170, 162,  10, 141, 128,  86, 
    173,  68,  34,   5, 209,  74, 
     84, 149, 211, 143,  52,  22, 
    141,  68,  63, 148,  68, 136, 
     11,  75,  90,   9,  68,  74, 
    132,  34,  84,   4,  18, 215, 
    158,  80, 239, 124,  28, 104, 
    181, 167,  61, 112,  33,  55, 
    238, 253,  17,  57,  32, 149, 
    247, 221, 172, 193, 164, 244, 
    102,   9,  36, 252,  72, 207, 
    204,  60,  51, 239, 204,  62, 
    251, 206,  30, 102,  54,  10, 
     88, 134,  31, 126, 211, 175, 
     82, 221, 216, 110, 220, 159, 
    149, 140,  25, 216, 214, 144, 
     84,  19, 190,  41,  82, 201, 
    216,  47,  62, 149, 140, 181, 
    169, 160,   0, 206,  88,  29, 
    171, 105, 228,  62, 182,  95, 
    199, 154, 198, 166, 114,  62, 
    153, 159,  59, 245, 209,  59, 
     39,  78, 225,  16, 123,  25, 
     73, 177,  63, 229, 252,  26, 
     89,  70, 126, 133,  12, 145, 
    180, 220,  97, 244, 159, 127, 
    120, 172, 134, 124,  23, 153, 
    219, 207, 230,   3, 146, 240, 
    204,  58,  61,  42, 254,  25, 
    223,  33, 201, 211, 243,  64, 
    222, 250, 160, 117, 233,  57, 
      4, 122, 223, 127,  27, 135, 
    223,  83,  71, 246, 247, 137, 
     64, 251,  49,   8, 202,  79, 
    127, 206, 110, 190, 143, 253, 
    144,   7, 185, 166,  92, 208, 
    187,  61,  70,  62,  15,  79, 
     17,  38,  53,   6, 208, 215, 
    228,  65, 106,  94, 214,  33, 
    245, 177, 108, 163, 164, 241, 
    226, 193, 199, 240,  63, 129, 
    160,   2,  65, 185, 160, 252, 
     82, 106,  49,  35, 127, 162, 
     63, 254,  35,  21, 108, 235, 
     17, 113, 183, 198, 246,  73, 
    245, 181, 134, 250,  96, 111, 
     14, 180,  78,  58, 155,  56, 
    160,  81, 113, 139,  95, 210, 
     53, 118, 201, 107, 178, 125, 
    218,  91, 212,  93, 212, 221, 
      1, 125,  17, 245, 197,   1, 
    125,   5, 245, 149,   1, 189, 
    130, 122, 165, 175, 251, 235, 
    123, 217, 243, 244, 108, 175, 
    177,  51, 254,  47, 115, 228, 
    113,  56,  28, 121,  28,  14, 
     71,  30, 135, 195, 145, 199, 
    225, 112, 228, 113,  56,  28, 
    121,  28,  14,  71,  30, 135, 
     70,  60, 208,  39, 143, 185, 
    254, 251, 207, 204,  54, 211, 
    143, 217, 206, 163,  41, 107, 
     43,  97, 150, 155, 106, 182, 
    149, 182, 173,  79,  19, 102, 
    250, 169, 102,  21,  83, 110, 
    216,  48,  99, 125, 150, 104, 
    102,  41, 213,  11, 182,  18, 
    150, 173, 140, 101,  59, 102, 
    178, 150, 205,  43, 176, 187, 
    123, 220, 177, 241, 194,  21, 
    165, 154, 172, 167,  22, 106, 
    221, 145, 172, 224, 133, 192, 
    196,  76, 170,  25,  19, 169, 
     44, 214, 160, 152, 197, 157, 
    196, 187, 196, 221,  61, 225, 
    112, 102, 149,  67, 165, 137, 
    151,  82, 179,  84,  83,  30, 
    246, 233, 206,   9,  60, 243, 
     82, 204,  91, 172, 120,  36, 
      2,  24,  15, 149,  51,  86, 
     83,  37, 236,  19, 206,  28, 
    158, 137,  41, 230,  12, 243, 
     94, 136,  20,  55, 218, 224, 
    127, 162,  37, 246, 114,  24, 
    187, 203, 181,  88, 100,  49, 
    111, 178, 210, 209,  72, 233, 
    133, 182,  42,  84, 108, 144, 
    117,  23, 252, 101, 136, 133, 
    213,  70, 207, 247,  18, 211, 
    218,  73, 172,  74,   0, 102, 
    221,   7, 163, 104,  67, 209, 
    107,  64, 176,  28, 197, 166, 
    241,   5, 190, 247, 110,  50, 
    191,  93,  72, 160,  18, 130, 
     83, 175, 130,  89, 182, 149, 
    231,   5,  32, 143, 212, 128, 
     79,   8, 112, 173,  47, 147, 
     87, 183, 173, 132,  25, 119, 
     19, 195, 220, 218, 115,  42, 
     85, 241, 148, 135, 241, 216, 
    247, 191, 206, 151,  60, 192, 
    248, 154, 210,  39,  36,  72, 
     67,   0, 184,   1,  80,  94, 
     94, 219, 214,  19,  99, 201, 
    142, 245,  48, 108, 186,  52, 
    199, 155,  19,  98, 194,   4, 
    179,  32,  84, 209,  15, 148, 
     81, 145, 224, 226,  56, 167, 
     49, 203,  22,  22, 214, 110, 
    181, 131,  39, 117,  63, 101, 
     90,  51, 101, 124,  54, 229, 
    110,   3, 106, 188,  25, 215, 
    121,  43, 110, 240,  40, 214, 
     23, 100, 108,  59,  54, 240, 
     37,  17, 135, 193,  36,  84, 
    130,  54,  84, 131,   0,  52, 
     86,  74,  53, 109,  60, 213, 
    248,  43, 169, 230,  55,  84, 
    224, 186,  16, 242,  78,  92, 
    225,  83, 113, 149,  79, 199, 
    205, 102,  19, 198,  91,  45, 
    104,  69,  17, 120,  82, 130, 
    177,  96, 199,  54, 122,  45, 
     89,  33,   4, 222,  36,  88, 
    245,   0,  34, 222, 142,  39, 
    248,  76,  60, 201, 143, 199, 
     69, 244, 194, 170,  39,  68, 
    201, 119,  85, 179, 227, 195, 
    248,  84,   7,  90, 211,  83, 
      0, 133,  38, 120, 133,  22, 
    248,   5,   9, 101, 219, 134, 
     54, 122,  58, 134, 235, 119, 
    248, 108, 204,  23,  68,  44, 
    218, 161,  50, 102,  38, 149, 
     60,  30,  40, 137, 107, 248, 
    213, 134, 168,  53, 170,  80, 
    111, 180, 161, 209, 104, 128, 
    233,  52,  85, 217, 105, 169, 
    208, 145, 170,  25, 217,  48, 
     62, 237,  67, 107,  54, 202, 
    242,  85,  16,   2, 218, 110, 
      7, 142, 185,  83, 208,  65, 
    255, 142,  21,  42, 244, 166, 
    138, 117, 204, 149, 209,  84, 
    166, 209,  82, 190,  33, 149, 
    141, 235, 150, 173, 105,  81, 
    194,  58, 244, 206, 100, 121, 
    147, 245, 142, 128, 138, 144, 
    222,  81,  83, 234, 101,  41, 
    241,  99,  73,  53,  93,  75, 
    241, 142, 242, 183,  59,  14, 
     99, 119,  30, 213, 169,  65, 
     23, 160,   1, 100,  82,  28, 
     68, 244, 193,  73,  98,  95, 
    118, 117, 202,  17, 150, 168, 
    100, 236,  73, 126, 231, 157, 
     69,  90,  72,  13,  31,  72, 
    160, 127,  14, 212, 166, 169, 
     21, 164,  96,  18,  75, 198, 
     30, 126, 235,  76, 222, 187, 
     83, 253, 156, 218, 132, 197, 
    124, 157, 153, 188, 142, 144, 
     46, 242,  47,  60, 160, 226, 
     25, 108, 230, 241, 171, 121, 
     77,  54, 200,  31, 244, 255, 
    118, 228,  63,  50, 238, 231, 
    227,  59, 121,  77, 119, 108, 
      7, 121, 216, 199, 195, 124, 
    124,  17,  73,  78,  79, 159, 
    236, 190, 113, 254, 108, 119, 
     99, 243, 242, 106, 239, 131, 
    238, 194, 218, 230,  70, 247, 
    244, 218, 122, 239, 218, 230, 
    133, 243,  11, 221, 141, 245, 
    107, 221, 115, 215, 175, 174, 
    246, 214,  55, 186, 167, 110, 
    221, 184, 189, 246, 126, 111, 
    181, 123,  97, 229, 214, 135, 
     75,  55, 123, 167, 207, 158, 
     91, 124, 251, 250, 173, 155, 
    239,  93, 190, 113, 117, 237, 
    230, 241, 219, 171,  43, 236, 
     15,   3,   6,  67, 128,   0, 
     88,  72,  83,  72,   8,   0, 
      0,   0, 172, 155,  11,  34, 
    138, 129,  22, 139,  88,  80, 
     68,  80,  75,   0,   0,   0, 
     68,  58,  92,  65,  84,  71, 
     92, 115, 116,  95, 100, 101, 
    118,  92,  75, 105, 116, 115, 
     92,  68, 105, 114, 101,  99, 
    116,  88,  84,  75,  92, 115, 
    114,  99,  92,  83, 104,  97, 
    100, 101, 114, 115,  92,  67, 
    111, 109, 112, 105, 108, 101, 
    100,  92,  88,  98, 111, 120, 
     79, 110, 101,  68,  71,  83, 
     76,  80, 104, 111, 110, 103, 
     95, 109,  97, 105, 110,  46, 
    112, 100,  98
};
