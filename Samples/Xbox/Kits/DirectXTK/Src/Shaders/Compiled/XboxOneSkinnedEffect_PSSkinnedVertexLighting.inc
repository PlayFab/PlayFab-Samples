#if 0
//
// Generated by Microsoft (R) D3D Shader Disassembler for Durango
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// COLOR                    0   xyzw        0     NONE   float   xyzw
// COLOR                    1   xyzw        1     NONE   float   xyzw
// TEXCOORD                 0   xy          2     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
// Opaque Custom Data - XBOX Precompiled Shader Header
// First Precompiled Shader at offset:[86]
// Embedded Data:
//  0x00000056 - Offset To First Precompiled Shader
//  0x00000050 - Original Shader Descriptor
//  0x00000051 - Original Shader Size
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[242], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_input_ps linear v0.xyzw
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v2.xy
dcl_output o0.xyzw
dcl_temps 2
sample_indexable(texture2d)(float,float,float,float) r0.xyzw, v2.xyxx, t0.xyzw, s0
mul r0.xyzw, r0.xyzw, v0.xyzw
mad r0.xyz, v1.xyzx, r0.wwww, r0.xyzx
mad r1.xyz, cb0[13].xyzx, r0.wwww, -r0.xyzx
mov o0.w, r0.w
mad o0.xyz, v1.wwww, r1.xyzx, r0.xyzx
ret 
// Opaque Custom Data - XBOX Precompiled Shader Object
// Offset:[86], bundle is:[178] DWORDS.
// Disassembled Precompiled Shader Object:
// Shader Type               : (PS)
// Shader Hw Stage           : (PS)
// PDB Filename              : D:\ATG\st_dev\Kits\DirectXTK\src\Shaders\Compiled\XboxOneSkinnedEffect_PSSkinnedVertexLighting.pdb
// Shader Semantic Hash      : 0x4393c742747489f4
//
// Shader Data:
; ----------------- PS Data ------------------------
; Input Semantic Mappings
;   [0] generic,  usageIdx 0, channelMask 15, param0, paramSlot0, DefaultVal={0,0,0,0}
;   [1] generic,  usageIdx 1, channelMask 15, param1, paramSlot1, DefaultVal={0,0,0,0}
;   [2] generic,  usageIdx 2, channelMask  3, param2, paramSlot2, DefaultVal={0,0,0,0}

codeLenInByte        = 208 bytes;

; launchModeFlags    = 0x0000000E
srdTableSupport      = TRUE
immediateSupportExt  = TRUE
srdTableSupportExt   = TRUE

userElementCount     = 1;
;  userElements[0]      = PTR_EXTENDED_USER_DATA, ReferencedExtUserElements=1, s[0x0:1]
extUserElementCount  = 3;
;  extUserElements 1[0] = IMM_RESOURCE 0, offset 0x0:7 dwords
;  extUserElements 1[1] = IMM_SAMPLER 0, offset 0x8:11 dwords
;  extUserElements 1[2] = IMM_CONST_BUFFER 0, offset 0xc:15 dwords
NumVgprs             = 13;
NumSgprs             = 24;
FloatMode            = 192;
IeeeMode             = 0;
FlatPtr32            = 0;
ScratchSize          = 0 dwords/thread;
LDSByteSize          = 0 bytes/workgroup (compile time only);
ScratchWaveOffsetReg = s65535;
; texSamplerUsage         = 0x00000001
; constBufUsage           = 0x00000001

; SPI_SHADER_PGM_RSRC2_PS = 0x00000004
SSPRP:SCRATCH_EN            = 0
SSPRP:USER_SGPR             = 2
SSPRP:TRAP_PRESENT          = 0
SSPRP:WAVE_CNT_EN           = 0
SSPRP:EXTRA_LDS_SIZE        = 0
SSPRP:EXCP_EN               = 0
; SPI_SHADER_Z_FORMAT     = 0x00000000
SPZF:Z_EXPORT_FORMAT        = 0; SPI_SHADER_ZERO
; SPI_PS_IN_CONTROL       = 0x00000003
SPIC:NUM_INTERP             = 3
SPIC:PARAM_GEN              = 0
SPIC:FOG_ADDR               = 0
SPIC:BC_OPTIMIZE_DISABLE    = 0
SPIC:PASS_FOG_THROUGH_PS    = 0
; SPI_PS_INPUT_ADDR       = 0x00000002
SPIA:PERSP_CENTER_ENA       = 1
; DB_SHADER_CONTROL       = 0x00000010
DB:Z_ORDER                  = 1
DB:CONSERVATIVE_Z_EXPORT    = 0; EXPORT_ANY_Z
; CB_SHADER_MASK          = 0x0000000F
CB:OUTPUT0_ENABLE           = 15

; export table for mrt0 [patch@(bytes=0xBC, dwords=0x2F)]
// Export Patch Code (FMT_ZERO):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_nop         0x0000                                  // 000000000000: BF800000
  s_nop         0x0000                                  // 000000000004: BF800000
  exp           null, off, off, off, off done vm        // 000000000008: F8001890 00000000
end
// Export Patch Code (FMT_32_R):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_nop         0x0000                                  // 000000000000: BF800000
  s_nop         0x0000                                  // 000000000004: BF800000
  exp           mrt0, v2, off, off, off done vm         // 000000000008: F8001801 00000002
end
// Export Patch Code (FMT_32_GR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_nop         0x0000                                  // 000000000000: BF800000
  s_nop         0x0000                                  // 000000000004: BF800000
  exp           mrt0, v2, v3, off, off done vm          // 000000000008: F8001803 00000302
end
// Export Patch Code (FMT_32_AR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_nop         0x0000                                  // 000000000000: BF800000
  s_nop         0x0000                                  // 000000000004: BF800000
  exp           mrt0, v2, v5, off, off done vm          // 000000000008: F8001803 00000502
end
// Export Patch Code (FMT_FP16_ABGR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  v_cvt_pkrtz_f16_f32  v0, v2, v3                       // 000000000000: 5E000702
  v_cvt_pkrtz_f16_f32  v1, v4, v5                       // 000000000004: 5E020B04
  exp           mrt0, v0, v0, v1, v1 done compr vm      // 000000000008: F8001C0F 00000100
end
// Export Patch Code (FMT_UNORM16_ABGR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  v_cvt_pknorm_u16_f32  v0, v2, v3                      // 000000000000: 5C000702
  v_cvt_pknorm_u16_f32  v1, v4, v5                      // 000000000004: 5C020B04
  exp           mrt0, v0, v0, v1, v1 done compr vm      // 000000000008: F8001C0F 00000100
end
// Export Patch Code (FMT_SNORM16_ABGR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  v_cvt_pknorm_i16_f32  v0, v2, v3                      // 000000000000: 5A000702
  v_cvt_pknorm_i16_f32  v1, v4, v5                      // 000000000004: 5A020B04
  exp           mrt0, v0, v0, v1, v1 done compr vm      // 000000000008: F8001C0F 00000100
end
// Export Patch Code (FMT_UINT16_ABGR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  v_cvt_pk_u16_u32  v0, v2, v3                          // 000000000000: 60000702
  v_cvt_pk_u16_u32  v1, v4, v5                          // 000000000004: 60020B04
  exp           mrt0, v0, v0, v1, v1 done compr vm      // 000000000008: F8001C0F 00000100
end
// Export Patch Code (FMT_SINT16_ABGR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  v_cvt_pk_i16_i32  v0, v2, v3                          // 000000000000: 62000702
  v_cvt_pk_i16_i32  v1, v4, v5                          // 000000000004: 62020B04
  exp           mrt0, v0, v0, v1, v1 done compr vm      // 000000000008: F8001C0F 00000100
end
// Export Patch Code (FMT_32_ABGR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_nop         0x0000                                  // 000000000000: BF800000
  s_nop         0x0000                                  // 000000000004: BF800000
  exp           mrt0, v2, v3, v4, v5 done vm            // 000000000008: F800180F 05040302
end

// Shader Instructions:
shader main
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_mov_b64     s[20:21], exec                          // 000000000000: BE94047E
  s_wqm_b64     exec, exec // wrscc                     // 000000000004: BEFE0A7E
  s_load_dwordx16  s[4:19], s[0:1], 0x00                // 000000000008: C1020100
  s_mov_b32     m0, s2                                  // 00000000000C: BEFC0302
  v_interp_p1_f32  v2, v0, attr2.x                      // 000000000010: C8080800
  v_interp_p1_f32  v3, v0, attr2.y                      // 000000000014: C80C0900
  v_interp_p2_f32  v2, v1, attr2.x                      // 000000000018: C8090801
  v_interp_p2_f32  v3, v1, attr2.y                      // 00000000001C: C80D0901
  s_waitcnt     lgkmcnt(0)                              // 000000000020: BF8C007F
  image_sample  v[2:5], v[2:3], s[4:11], s[12:15] dmask:0xf // 000000000024: F0800F00 00610202
  s_buffer_load_dwordx4  s[0:3], s[16:19], 0x34         // 00000000002C: C2801134
  v_interp_p1_f32  v6, v0, attr0.x                      // 000000000030: C8180000
  v_interp_p1_f32  v7, v0, attr0.y                      // 000000000034: C81C0100
  v_interp_p1_f32  v8, v0, attr0.z                      // 000000000038: C8200200
  v_interp_p1_f32  v9, v0, attr0.w                      // 00000000003C: C8240300
  v_interp_p2_f32  v6, v1, attr0.x                      // 000000000040: C8190001
  v_interp_p2_f32  v7, v1, attr0.y                      // 000000000044: C81D0101
  v_interp_p2_f32  v8, v1, attr0.z                      // 000000000048: C8210201
  v_interp_p2_f32  v9, v1, attr0.w                      // 00000000004C: C8250301
  v_interp_p1_f32  v10, v0, attr1.x                     // 000000000050: C8280400
  v_interp_p1_f32  v11, v0, attr1.y                     // 000000000054: C82C0500
  v_interp_p1_f32  v12, v0, attr1.z                     // 000000000058: C8300600
  s_waitcnt     vmcnt(0)                                // 00000000005C: BF8C0F70
  v_mul_legacy_f32  v2, v2, v6                          // 000000000060: 0E040D02
  v_mul_legacy_f32  v3, v3, v7                          // 000000000064: 0E060F03
  v_mul_legacy_f32  v4, v4, v8                          // 000000000068: 0E081104
  v_mul_legacy_f32  v5, v5, v9                          // 00000000006C: 0E0A1305
  v_interp_p2_f32  v10, v1, attr1.x                     // 000000000070: C8290401
  v_interp_p2_f32  v11, v1, attr1.y                     // 000000000074: C82D0501
  v_interp_p2_f32  v12, v1, attr1.z                     // 000000000078: C8310601
  v_mac_f32     v2, v10, v5                             // 00000000007C: 3E040B0A
  v_mac_f32     v3, v11, v5                             // 000000000080: 3E060B0B
  v_mac_f32     v4, v12, v5                             // 000000000084: 3E080B0C
  v_interp_p1_f32  v0, v0, attr1.w                      // 000000000088: C8000700
  s_waitcnt     lgkmcnt(0)                              // 00000000008C: BF8C007F
  v_mad_legacy_f32  v6, s0, v5, -v2                     // 000000000090: D2800006 840A0A00
  v_mad_legacy_f32  v7, s1, v5, -v3                     // 000000000098: D2800007 840E0A01
  v_mad_legacy_f32  v8, s2, v5, -v4                     // 0000000000A0: D2800008 84120A02
  v_interp_p2_f32  v0, v1, attr1.w                      // 0000000000A8: C8010701
  v_mac_f32     v2, v0, v6                              // 0000000000AC: 3E040D00
  v_mac_f32     v3, v0, v7                              // 0000000000B0: 3E060F00
  v_mac_f32     v4, v0, v8                              // 0000000000B4: 3E081100
  s_mov_b64     exec, s[20:21]                          // 0000000000B8: BEFE0414
  v_cvt_pkrtz_f16_f32  v0, v2, v3                       // 0000000000BC: 5E000702
  v_cvt_pkrtz_f16_f32  v1, v4, v5                       // 0000000000C0: 5E020B04
  exp           mrt0, v0, v0, v1, v1 done compr vm      // 0000000000C4: F8001C0F 00000100
  s_endpgm                                              // 0000000000CC: BF810000
end


// Shader Statistics:
//  NumActiveWaveFront:         40
//  WorkgroupSize:              64
//  NumVRegs:                   13
//  NumSRegs:                   24
//  NumActiveWaveFrontByVReg:   40
//  NumActiveWaveFrontBySReg:   40
//  NumActiveWaveFrontByLDS:    40
//  CycleSim:                   78
//  CycleSimNWaves:             78
//  Code Size:                  208
//Assembler Counts:
//  num_32bit_ops                     : 42
//  num_64bit_ops                     : 5
//  num_alu                           : 35
//  num_fc                            : 10
//  num_inst_exp                      : 1
//  num_inst_ldsgds                   : 0
//  num_inst_mimg                     : 1
//  num_inst_mtbuf                    : 0
//  num_inst_mubuf                    : 0
//  num_inst_sopp                     : 4
//  num_inst_sopc                     : 0
//  num_inst_sop1                     : 4
//  num_inst_sop2                     : 0
//  num_inst_smrd                     : 0
//  num_inst_sopk                     : 0
//  num_inst_vop1                     : 0
//  num_inst_vop2                     : 12
//  num_inst_vop3                     : 6
//  num_inst_vopc                     : 0
//  num_inst_vintrp                   : 20
//  constant_literal_operands         : 0
//  num_tex                           : 2
//  num_vmem_group                    : 1
//  vmem_grouping_started             : 0
//
//Compilation Notes:
//
//  PS has no UAV writes, consider forcing REZ/LATEZ.
// Shader Statistics:
// m_uNumActiveWaveFront             : 40
// m_uVRegLimit                      : 256
// m_uSRegLimit                      : 512
// m_uNumVRegs                       : 13
// m_uNumSRegs                       : 24
// m_uSCCodeSize                     : 208
// m_uWorkgroupSize                  : 64
// m_uNumActiveWaveFrontByVReg       : 40
// m_uNumActiveWaveFrontBySReg       : 40
// m_uNumActiveWaveFrontByLDS        : 40
// m_uCycleSim1Wave                  : 78
// m_uCycleSimNWaves                 : 78

// Assembler Counts:
// num_32bit_ops                     : 42
// num_64bit_ops                     : 5
// num_alu                           : 35
// num_fc                            : 10
// num_inst_exp                      : 1
// num_inst_ldsgds                   : 0
// num_inst_mimg                     : 1
// num_inst_mtbuf                    : 0
// num_inst_mubuf                    : 0
// num_inst_sopp                     : 4
// num_inst_sopc                     : 0
// num_inst_sop1                     : 4
// num_inst_sop2                     : 0
// num_inst_smrd                     : 0
// num_inst_sopk                     : 0
// num_inst_vop1                     : 0
// num_inst_vop2                     : 12
// num_inst_vop3                     : 6
// num_inst_vopc                     : 0
// num_inst_vintrp                   : 20
// num_inst_smem                     : 2
// constant_literal_operands         : 0
// num_tex                           : 2
// num_vmem_group                    : 1
// vmem_grouping_started             : 0
// m_fFullPrecompilePromise          : 0
// m_fIntegerDivideExpansion         : 0
// m_fIntegerModExpansion            : 0
// m_fDoubleDivideExpansion          : 0
// m_fUsesScratch                    : 0
// m_fPerThreadIndirection           : 0
// m_fUsingTableLoads                : 0
// m_fUsingSHmemLoads                : 1
// fSemanticHashFlagOverrideApplied  : 0
// fPSHasNoUAVWrite                  : 1
// m_fRenderTargetsCanBeCompacted    : 0
// version                           : 3
// fCodePatched                      : 0

// Approximately 0 instruction slots used
#endif

const BYTE SkinnedEffect_PSSkinnedVertexLighting[] =
{
     68,  88,  66,  67, 152, 160, 
    173,  49, 207, 248,  55, 221, 
    180, 107, 233,  56, 143, 231, 
    153, 106,   1,   0,   0,   0, 
    122,   5,   0,   0,   5,   0, 
      0,   0,  52,   0,   0,   0, 
    156,   0,   0,   0, 208,   0, 
      0,   0,   0,   5,   0,   0, 
     16,   5,   0,   0,  73,  83, 
     71,  78,  96,   0,   0,   0, 
      3,   0,   0,   0,   8,   0, 
      0,   0,  80,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      0,   0,   0,   0,  15,  15, 
      0,   0,  80,   0,   0,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   0,   0,  15,  15, 
      0,   0,  86,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      2,   0,   0,   0,   3,   3, 
      0,   0,  67,  79,  76,  79, 
     82,   0,  84,  69,  88,  67, 
     79,  79,  82,  68,   0, 171, 
     79,  83,  71,  78,  44,   0, 
      0,   0,   1,   0,   0,   0, 
      8,   0,   0,   0,  32,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   3,   0, 
      0,   0,   0,   0,   0,   0, 
     15,   0,   0,   0,  83,  86, 
     95,  84,  97, 114, 103, 101, 
    116,   0, 171, 171,  83,  72, 
     69,  88,  40,   4,   0,   0, 
     80,   0,   0,   0,  10,   1, 
      0,   0,  53,  16,   0,   0, 
      5,   0,   0,   0,  86,   0, 
      0,   0,  80,   0,   0,   0, 
     81,   0,   0,   0, 106,   8, 
      0,   1,  89,   0,   0,   4, 
     70, 142,  32,   0,   0,   0, 
      0,   0, 242,   0,   0,   0, 
     90,   0,   0,   3,   0,  96, 
     16,   0,   0,   0,   0,   0, 
     88,  24,   0,   4,   0, 112, 
     16,   0,   0,   0,   0,   0, 
     85,  85,   0,   0,  98,  16, 
      0,   3, 242,  16,  16,   0, 
      0,   0,   0,   0,  98,  16, 
      0,   3, 242,  16,  16,   0, 
      1,   0,   0,   0,  98,  16, 
      0,   3,  50,  16,  16,   0, 
      2,   0,   0,   0, 101,   0, 
      0,   3, 242,  32,  16,   0, 
      0,   0,   0,   0, 104,   0, 
      0,   2,   2,   0,   0,   0, 
     69,   0,   0, 139, 194,   0, 
      0, 128,  67,  85,  21,   0, 
    242,   0,  16,   0,   0,   0, 
      0,   0,  70,  16,  16,   0, 
      2,   0,   0,   0,  70, 126, 
     16,   0,   0,   0,   0,   0, 
      0,  96,  16,   0,   0,   0, 
      0,   0,  56,   0,   0,   7, 
    242,   0,  16,   0,   0,   0, 
      0,   0,  70,  14,  16,   0, 
      0,   0,   0,   0,  70,  30, 
     16,   0,   0,   0,   0,   0, 
     50,   0,   0,   9, 114,   0, 
     16,   0,   0,   0,   0,   0, 
     70,  18,  16,   0,   1,   0, 
      0,   0, 246,  15,  16,   0, 
      0,   0,   0,   0,  70,   2, 
     16,   0,   0,   0,   0,   0, 
     50,   0,   0,  11, 114,   0, 
     16,   0,   1,   0,   0,   0, 
     70, 130,  32,   0,   0,   0, 
      0,   0,  13,   0,   0,   0, 
    246,  15,  16,   0,   0,   0, 
      0,   0,  70,   2,  16, 128, 
     65,   0,   0,   0,   0,   0, 
      0,   0,  54,   0,   0,   5, 
    130,  32,  16,   0,   0,   0, 
      0,   0,  58,   0,  16,   0, 
      0,   0,   0,   0,  50,   0, 
      0,   9, 114,  32,  16,   0, 
      0,   0,   0,   0, 246,  31, 
     16,   0,   1,   0,   0,   0, 
     70,   2,  16,   0,   1,   0, 
      0,   0,  70,   2,  16,   0, 
      0,   0,   0,   0,  62,   0, 
      0,   1,  53,  16,   0,   0, 
    180,   0,   0,   0,  23,   0, 
      1,   0,  41,  23,  16,   0, 
    120,   1, 237,  87,  77, 107, 
     19,  65,  24, 126, 103, 179, 
    217, 108,  54,  31, 219, 104, 
    197,  22,  42,  86, 173,  80, 
    181, 126,  81,  79,  30, 130, 
    182,  17,  15,  21,  21,  90, 
    164, 148, 165,  31, 105, 182, 
    109, 176, 166,  37,  89, 164, 
      7, 169,  17, 122,  17,  10, 
     10, 122, 240,   7, 248,  35, 
     60,  37, 234, 197,   1,  21, 
    138, 191,  68, 164,   7,  15, 
    162, 190, 207, 102, 182, 110, 
    171, 189,  45,  40, 178,  15, 
     60, 239, 179,  79, 102, 230, 
    221, 119, 118,  38,  48, 115, 
    184, 139, 124, 116,  59, 239, 
     91, 208, 174,  39, 233,  67, 
     37,  65, 148, 228, 103,  22, 
     95, 129,  23,  57,  68, 162, 
     87, 121,  68, 162,  65,   4, 
    116, 208, 136, 208, 212, 195, 
    220,  98,  94,  97, 162,  45, 
    224, 199,  15, 199,  71, 134, 
    135, 207, 140, 240,  35,  21, 
    152, 232, 123,  83, 241,  52, 
     19, 249,  79,  48,  45,  38, 
    210,   1, 129,   2,  58,   2, 
     35, 208,  48, 178,  76, 131, 
      9, 116,  51, 185,  20,  31, 
    208, 112,  14, 114,  17, 254, 
    140, 243,  76, 212, 180,  31, 
     80,  91, 144,  11, 138,  58, 
      1, 204, 247, 111, 163,  83, 
    215, 175,   8,   6, 235,   4, 
     96,  61, 194, 192, 210, 161, 
     15, 176, 164, 214,  49, 129, 
    192, 120, 160,  60, 134,  99, 
    110, 175, 153, 251, 225,   7, 
     67, 109, 155,  29,   4,  30, 
    249,  12, 178,  57, 178, 138, 
    163,  68,  38, 171, 198,  95, 
    113, 239, 128, 255,  24, 193, 
     94, 197, 183, 192,  94, 196, 
    212,  59,  95, 164, 131, 160, 
     29, 123, 143, 168, 217,   6, 
    159, 246, 208,  87, 184, 192, 
     11, 246,  24,  27, 248,   4, 
     60,  18, 134,  61, 255, 121, 
    180,  20,  77, 235,  25, 109, 
    218, 238, 227, 241, 188, 184, 
    236,  29, 246,  78, 200,  79, 
    177, 159,  10, 249,  89, 246, 
    179,  33,  95, 102,  95,  14, 
    124, 144, 223, 246, 223, 167, 
     39, 177, 214, 252, 227, 250, 
    191, 204, 184, 198, 104,  24, 
    215,  24,  13, 227,  26, 163, 
     97,  92,  99,  52, 140, 107, 
    140, 134, 113, 141, 209,  48, 
    174,  49,  50, 210, 186, 254, 
    188, 181, 110, 125, 111, 145, 
    208, 222, 104, 137, 111,  45, 
     50,  77,  73, 233, 172,  20, 
    102,  90, 138, 116,  78,  62, 
    164, 205,  54, 217, 205, 207, 
    154,  54,  71, 151,  10, 205, 
    183, 124, 186, 151,  36, 250, 
     36, 105, 253, 146,  18,   3, 
     82,  80, 175,  20, 226, 136, 
     20, 218,  49,  41,  18,  39, 
     37, 233, 131, 146, 146,  67, 
    146, 140,  11, 114, 213, 222, 
    108, 107,  57,  61, 159, 176, 
    141, 188,  94,  48, 243, 201, 
    131,  86,  94, 232, 167, 164, 
     72, 158, 149, 194, 184,  40, 
    173, 140,  94, 204, 100, 140, 
     98,  54,  99,  22,  41,  69, 
    254, 187,  12, 106, 126,  34, 
    203, 218,  72, 177,  10,  43, 
    191,  97, 178, 106, 214, 129, 
     13, 145,  18, 146, 114, 122, 
    145, 108, 163,  72,   5, 179, 
    216, 173, 127, 111, 241, 217, 
    115, 215, 217, 149, 232,  81, 
    187,  23, 218,  57, 248, 238, 
    134, 233, 119, 216, 129, 239, 
    116, 129, 235, 197,  14, 252, 
     97, 252,  27, 238, 133,   1, 
    182, 213, 189, 102,  75, 233, 
      0,  51, 205,  20, 254, 233, 
    156, 232,  11,  83,  87, 183, 
    200, 237, 199, 158,  55, 242, 
    238, 217,  40, 158, 129,  33, 
    117, 104, 207,  42, 237, 103, 
    134, 115,  19, 189,  68, 248, 
     13,  19, 170, 127,  73,  41, 
    206, 255,  56, 243, 231, 131, 
    219, 180, 170, 197,  83, 237, 
    203,  74,  49, 151,  12, 115, 
    111,  29, 155, 170, 125, 158, 
    137,  74,  75, 151, 157, 171, 
     19, 215, 157, 134,  55,  83, 
    113, 239,  59,  99,  85, 175, 
    225, 148, 170, 117, 119, 222, 
    155, 156,  24, 115,  26, 245, 
    121, 103, 124, 105, 174, 226, 
    214,  27, 206, 232, 202, 189, 
    213, 234, 178,  91, 113,  38, 
    203,  43, 107, 183, 106, 238, 
    248, 221, 106, 173, 230,  86, 
    174,  45,  44, 112, 231, 153, 
    219, 227, 202, 223, 113, 235, 
    158, 187, 118, 163, 186, 184, 
    228,  85, 107, 139, 231,  86, 
     43, 101, 250,   9, 219,  47, 
    248,  66,  88,  72,  83,  72, 
      8,   0,   0,   0, 244, 137, 
    116, 116,  66, 199, 147,  67, 
     88,  80,  68,  80,  98,   0, 
      0,   0,  68,  58,  92,  65, 
     84,  71,  92, 115, 116,  95, 
    100, 101, 118,  92,  75, 105, 
    116, 115,  92,  68, 105, 114, 
    101,  99, 116,  88,  84,  75, 
     92, 115, 114,  99,  92,  83, 
    104,  97, 100, 101, 114, 115, 
     92,  67, 111, 109, 112, 105, 
    108, 101, 100,  92,  88,  98, 
    111, 120,  79, 110, 101,  83, 
    107, 105, 110, 110, 101, 100, 
     69, 102, 102, 101,  99, 116, 
     95,  80,  83,  83, 107, 105, 
    110, 110, 101, 100,  86, 101, 
    114, 116, 101, 120,  76, 105, 
    103, 104, 116, 105, 110, 103, 
     46, 112, 100,  98
};
