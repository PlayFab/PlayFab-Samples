#if 0
//
// Generated by Microsoft (R) D3D Shader Disassembler for Durango
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xy          2     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// COLOR                    0   xyzw        0     NONE   float   xyzw
// COLOR                    1   xyzw        1     NONE   float   xyzw
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1     zw        2     NONE   float     zw
// SV_Position              0   xyzw        3      POS   float   xyzw
//
vs_5_0
// Opaque Custom Data - XBOX Precompiled Shader Header
// First Precompiled Shader at offset:[102]
// Embedded Data:
//  0x00000066 - Offset To First Precompiled Shader
//  0x00010050 - Original Shader Descriptor
//  0x00000061 - Original Shader Size
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[7], immediateIndexed
dcl_input v0.xyzw
dcl_input v1.xy
dcl_input v2.xy
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.xy
dcl_output o2.zw
dcl_output_siv o3.xyzw, position
mov o0.xyzw, cb0[0].xyzw
dp4_sat o1.w, v0.xyzw, cb0[2].xyzw
mov o1.xyz, l(0,0,0,0)
mov o2.xy, v1.xyxx
mov o2.zw, v2.xxxy
dp4 o3.x, v0.xyzw, cb0[3].xyzw
dp4 o3.y, v0.xyzw, cb0[4].xyzw
dp4 o3.z, v0.xyzw, cb0[5].xyzw
dp4 o3.w, v0.xyzw, cb0[6].xyzw
ret 
// Opaque Custom Data - XBOX Precompiled Shader Object
// Offset:[102], bundle is:[162] DWORDS.
// Disassembled Precompiled Shader Object:
// Shader Type               : (VS)
// Shader Hw Stage           : (VS)
// PDB Filename              : D:\ATG\st_dev\Kits\DirectXTK\src\Shaders\Compiled\XboxOneDualTextureEffect_VSDualTexture.pdb
// Shader Semantic Hash      : 0xbc2b8dc3b66b9bc
//
// Shader Data:
; ----------------- VS Data ------------------------
; Input Semantic Mappings
;   [0] generic, usageIdx  0, channelMask 15, v[4:7]
;   [1] generic, usageIdx  1, channelMask  3, v[8:9]
;   [2] generic, usageIdx  2, channelMask  3, v[12:13]
; Output Semantic Mappings
;   [0] generic,  usageIdx 0, paramIdx 0, paramSlot 0
;   [1] generic,  usageIdx 1, paramIdx 1, paramSlot 0
;   [2] generic,  usageIdx 2, paramIdx 2, paramSlot 0

codeLenInByte        = 168 bytes;

; launchModeFlags    = 0x0000000E
srdTableSupport      = TRUE
immediateSupportExt  = TRUE
srdTableSupportExt   = TRUE

userElementCount     = 3;
;  userElements[0]      = PTR_VERTEX_BUFFER_TABLE, Element=1 dwords, s[0x2:3]
;  userElements[1]      = PTR_EXTENDED_USER_DATA, ReferencedExtUserElements=1, s[0x2:3]
;  userElements[2]      = SUB_PTR_FETCH_SHADER, s[0x2:3]
extUserElementCount  = 1;
;  extUserElements 1[0] = IMM_CONST_BUFFER 0, offset 0x0:3 dwords
NumVgprs             = 14;
NumSgprs             = 26;
FloatMode            = 192;
IeeeMode             = 0;
FlatPtr32            = 0;
ScratchSize          = 0 dwords/thread;
LDSByteSize          = 0 bytes/workgroup (compile time only);
ScratchWaveOffsetReg = s65535;
; texSamplerUsage         = 0x00000000
; constBufUsage           = 0x00000001

; SPI_SHADER_PGM_RSRC2_VS = 0x00000008
SSPRV:USER_SGPR             = 4
; PA_CL_VS_OUT_CNTL       = 0x00000000
; SPI_VS_OUT_CONFIG       = 0x00000004
SVOC:VS_EXPORT_COUNT        = 2
SVOC:VS_HALF_PACK           = 0
SVOC:VS_EXPORTS_FOG         = 0
SVOC:VS_OUT_FOG_VEC_ADDR    = 0
; SPI_SHADER_POS_FORMAT     = 0x00000004
SSPF:POS0_EXPORT_FORMAT     = 4
SSPF:POS1_EXPORT_FORMAT     = 0
SSPF:POS2_EXPORT_FORMAT     = 0
SSPF:POS3_EXPORT_FORMAT     = 0
VGT_STRMOUT_CONFIG = 0x0
VGT_STRMOUT_CONFIG:RAST_STREAM = 0
VGT_STRMOUT_CONFIG:STREAMOUT_0_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_1_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_2_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_3_EN = 0
; exportVertexSize          = 4

// Shader Instructions:
shader main
  asic(CI)
  type(VS)
  s_swappc_b64  s[2:3], s[2:3]                          // 000000000000: BE822102
  s_load_dwordx4  s[0:3], s[2:3], 0x00                  // 000000000004: C0800300
  s_waitcnt     lgkmcnt(0)                              // 000000000008: BF8C007F
  s_buffer_load_dwordx16  s[4:19], s[0:3], 0x08         // 00000000000C: C3020108
  s_buffer_load_dwordx4  s[20:23], s[0:3], 0x18         // 000000000010: C28A0118
  s_buffer_load_dwordx4  s[0:3], s[0:3], 0x00           // 000000000014: C2800100
  s_waitcnt     vmcnt(0) & lgkmcnt(0)                   // 000000000018: BF8C0070
  v_mul_legacy_f32  v0, s7, v7                          // 00000000001C: 0E000E07
  v_mul_legacy_f32  v1, s11, v7                         // 000000000020: 0E020E0B
  v_mul_legacy_f32  v2, s15, v7                         // 000000000024: 0E040E0F
  v_mul_legacy_f32  v3, s19, v7                         // 000000000028: 0E060E13
  v_mul_legacy_f32  v7, s23, v7                         // 00000000002C: 0E0E0E17
  v_mac_f32     v0, s6, v6                              // 000000000030: 3E000C06
  v_mac_legacy_f32  v1, s10, v6                         // 000000000034: 0C020C0A
  v_mac_legacy_f32  v2, s14, v6                         // 000000000038: 0C040C0E
  v_mac_legacy_f32  v3, s18, v6                         // 00000000003C: 0C060C12
  v_mac_legacy_f32  v7, s22, v6                         // 000000000040: 0C0E0C16
  v_mac_f32     v0, s5, v5                              // 000000000044: 3E000A05
  v_mac_legacy_f32  v1, s9, v5                          // 000000000048: 0C020A09
  v_mac_legacy_f32  v2, s13, v5                         // 00000000004C: 0C040A0D
  v_mac_legacy_f32  v3, s17, v5                         // 000000000050: 0C060A11
  v_mac_legacy_f32  v7, s21, v5                         // 000000000054: 0C0E0A15
  v_mad_legacy_f32  v0, v4, s4, v0 clamp                // 000000000058: D2800800 04000904
  v_mac_legacy_f32  v1, s8, v4                          // 000000000060: 0C020808
  v_mac_legacy_f32  v2, s12, v4                         // 000000000064: 0C04080C
  v_mac_legacy_f32  v3, s16, v4                         // 000000000068: 0C060810
  v_mac_legacy_f32  v7, s20, v4                         // 00000000006C: 0C0E0814
  v_mov_b32     v4, s0                                  // 000000000070: 7E080200
  v_mov_b32     v5, s1                                  // 000000000074: 7E0A0201
  v_mov_b32     v6, s2                                  // 000000000078: 7E0C0202
  v_mov_b32     v10, s3                                 // 00000000007C: 7E140203
  v_mov_b32     v11, 0                                  // 000000000080: 7E160280
  exp           pos0, v1, v2, v3, v7 done               // 000000000084: F80008CF 07030201
  exp           param0, v4, v5, v6, v10                 // 00000000008C: F800020F 0A060504
  exp           param1, v11, v11, v11, v0               // 000000000094: F800021F 000B0B0B
  exp           param2, v8, v9, v12, v13                // 00000000009C: F800022F 0D0C0908
  s_endpgm                                              // 0000000000A4: BF810000
end


// Shader Statistics:
//  NumActiveWaveFront:         40
//  WorkgroupSize:              64
//  NumVRegs:                   14
//  NumSRegs:                   26
//  NumActiveWaveFrontByVReg:   40
//  NumActiveWaveFrontBySReg:   40
//  NumActiveWaveFrontByLDS:    40
//  CycleSim:                   83
//  CycleSimNWaves:             83
//  Code Size:                  168
//Assembler Counts:
//  num_32bit_ops                     : 32
//  num_64bit_ops                     : 5
//  num_alu                           : 25
//  num_fc                            : 8
//  num_inst_exp                      : 4
//  num_inst_ldsgds                   : 0
//  num_inst_mimg                     : 0
//  num_inst_mtbuf                    : 0
//  num_inst_mubuf                    : 0
//  num_inst_sopp                     : 3
//  num_inst_sopc                     : 0
//  num_inst_sop1                     : 1
//  num_inst_sop2                     : 0
//  num_inst_smrd                     : 0
//  num_inst_sopk                     : 0
//  num_inst_vop1                     : 5
//  num_inst_vop2                     : 19
//  num_inst_vop3                     : 0
//  num_inst_vopc                     : 0
//  num_inst_vintrp                   : 0
//  constant_literal_operands         : 0
//  num_tex                           : 4
//  num_vmem_group                    : 0
//  vmem_grouping_started             : 0
// Shader Statistics:
// m_uNumActiveWaveFront             : 40
// m_uVRegLimit                      : 256
// m_uSRegLimit                      : 512
// m_uNumVRegs                       : 14
// m_uNumSRegs                       : 26
// m_uSCCodeSize                     : 168
// m_uWorkgroupSize                  : 64
// m_uNumActiveWaveFrontByVReg       : 40
// m_uNumActiveWaveFrontBySReg       : 40
// m_uNumActiveWaveFrontByLDS        : 40
// m_uCycleSim1Wave                  : 83
// m_uCycleSimNWaves                 : 83

// Assembler Counts:
// num_32bit_ops                     : 32
// num_64bit_ops                     : 5
// num_alu                           : 25
// num_fc                            : 8
// num_inst_exp                      : 4
// num_inst_ldsgds                   : 0
// num_inst_mimg                     : 0
// num_inst_mtbuf                    : 0
// num_inst_mubuf                    : 0
// num_inst_sopp                     : 3
// num_inst_sopc                     : 0
// num_inst_sop1                     : 1
// num_inst_sop2                     : 0
// num_inst_smrd                     : 0
// num_inst_sopk                     : 0
// num_inst_vop1                     : 5
// num_inst_vop2                     : 19
// num_inst_vop3                     : 0
// num_inst_vopc                     : 0
// num_inst_vintrp                   : 0
// num_inst_smem                     : 4
// constant_literal_operands         : 0
// num_tex                           : 4
// num_vmem_group                    : 0
// vmem_grouping_started             : 0
// m_fFullPrecompilePromise          : 0
// m_fIntegerDivideExpansion         : 0
// m_fIntegerModExpansion            : 0
// m_fDoubleDivideExpansion          : 0
// m_fUsesScratch                    : 0
// m_fPerThreadIndirection           : 0
// m_fUsingTableLoads                : 0
// m_fUsingSHmemLoads                : 1
// fSemanticHashFlagOverrideApplied  : 0
// fPSHasNoUAVWrite                  : 0
// m_fRenderTargetsCanBeCompacted    : 0
// version                           : 3
// fCodePatched                      : 0

// Opaque Custom Data - XBOX Precompiled Shader Object
// Offset:[266], bundle is:[176] DWORDS.
// Disassembled Precompiled Shader Object:
// Shader Type               : (VS)
// Shader Hw Stage           : (ES)
// PDB Filename              : D:\ATG\st_dev\Kits\DirectXTK\src\Shaders\Compiled\XboxOneDualTextureEffect_VSDualTexture.pdb
// Shader Semantic Hash      : 0xbc2b8dc3b66b9bc
//
// Shader Data:
; ----------------- VS Data ------------------------
; Input Semantic Mappings
;   [0] generic, usageIdx  0, channelMask 15, v[4:7]
;   [1] generic, usageIdx  1, channelMask  3, v[8:9]
;   [2] generic, usageIdx  2, channelMask  3, v[12:13]
; Output Semantic Mappings
;   [0] position,  usageIdx 3, paramIdx 3, paramSlot 0
;   [1] generic,  usageIdx 0, paramIdx 0, paramSlot 0
;   [2] generic,  usageIdx 1, paramIdx 1, paramSlot 0
;   [3] generic,  usageIdx 2, paramIdx 2, paramSlot 0

codeLenInByte        = 276 bytes;

; launchModeFlags    = 0x0000000E
srdTableSupport      = TRUE
immediateSupportExt  = TRUE
srdTableSupportExt   = TRUE

userElementCount     = 4;
;  userElements[0]      = PTR_VERTEX_BUFFER_TABLE, Element=1 dwords, s[0x2:3]
;  userElements[1]      = PTR_EXTENDED_USER_DATA, ReferencedExtUserElements=1, s[0x2:3]
;  userElements[2]      = PTR_INTERNAL_GLOBAL_TABLE, Element=1 dwords, s[0x2:3]
;  userElements[3]      = SUB_PTR_FETCH_SHADER, s[0x2:3]
extUserElementCount  = 1;
;  extUserElements 1[0] = IMM_CONST_BUFFER 0, offset 0x0:3 dwords
NumVgprs             = 14;
NumSgprs             = 34;
FloatMode            = 192;
IeeeMode             = 0;
FlatPtr32            = 0;
ScratchSize          = 0 dwords/thread;
LDSByteSize          = 0 bytes/workgroup (compile time only);
ScratchWaveOffsetReg = s65535;
; texSamplerUsage         = 0x00000000
; constBufUsage           = 0x00000001

; SPI_SHADER_PGM_RSRC2_VS = 0x00000008
SSPRV:USER_SGPR             = 4
; PA_CL_VS_OUT_CNTL       = 0x00000000
; SPI_VS_OUT_CONFIG       = 0x00000000
SVOC:VS_EXPORT_COUNT        = 0
SVOC:VS_HALF_PACK           = 0
SVOC:VS_EXPORTS_FOG         = 0
SVOC:VS_OUT_FOG_VEC_ADDR    = 0
; SPI_SHADER_POS_FORMAT     = 0x00000004
SSPF:POS0_EXPORT_FORMAT     = 4
SSPF:POS1_EXPORT_FORMAT     = 0
SSPF:POS2_EXPORT_FORMAT     = 0
SSPF:POS3_EXPORT_FORMAT     = 0
VGT_STRMOUT_CONFIG = 0x0
VGT_STRMOUT_CONFIG:RAST_STREAM = 0
VGT_STRMOUT_CONFIG:STREAMOUT_0_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_1_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_2_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_3_EN = 0
; exportVertexSize          = 16
; esGsRingItemSize          = 16

// Shader Instructions:
shader main
  asic(CI)
  type(VS)
  s_swappc_b64  s[2:3], s[2:3]                          // 000000000000: BE822102
  s_load_dwordx4  s[8:11], s[2:3], 0x00                 // 000000000004: C0840300
  s_waitcnt     lgkmcnt(0)                              // 000000000008: BF8C007F
  s_buffer_load_dwordx16  s[12:27], s[8:11], 0x08       // 00000000000C: C3060908
  s_buffer_load_dwordx4  s[28:31], s[8:11], 0x18        // 000000000010: C28E0918
  s_waitcnt     vmcnt(0) & lgkmcnt(0)                   // 000000000014: BF8C0070
  v_mul_legacy_f32  v0, s19, v7                         // 000000000018: 0E000E13
  s_load_dwordx4  s[0:3], s[2:3], 0x0c                  // 00000000001C: C080030C
  v_mac_legacy_f32  v0, s18, v6                         // 000000000020: 0C000C12
  v_mul_legacy_f32  v1, s23, v7                         // 000000000024: 0E020E17
  s_buffer_load_dwordx4  s[8:11], s[8:11], 0x00         // 000000000028: C2840900
  v_mac_legacy_f32  v0, s17, v5                         // 00000000002C: 0C000A11
  v_mac_legacy_f32  v1, s22, v6                         // 000000000030: 0C020C16
  v_mul_legacy_f32  v2, s27, v7                         // 000000000034: 0E040E1B
  v_mac_legacy_f32  v0, s16, v4                         // 000000000038: 0C000810
  v_mac_legacy_f32  v1, s21, v5                         // 00000000003C: 0C020A15
  v_mac_legacy_f32  v2, s26, v6                         // 000000000040: 0C040C1A
  v_mul_legacy_f32  v3, s31, v7                         // 000000000044: 0E060E1F
  v_mac_legacy_f32  v1, s20, v4                         // 000000000048: 0C020814
  v_mac_legacy_f32  v2, s25, v5                         // 00000000004C: 0C040A19
  v_mac_legacy_f32  v3, s30, v6                         // 000000000050: 0C060C1E
  v_mac_legacy_f32  v2, s24, v4                         // 000000000054: 0C040818
  v_mac_legacy_f32  v3, s29, v5                         // 000000000058: 0C060A1D
  v_mac_legacy_f32  v3, s28, v4                         // 00000000005C: 0C06081C
  s_waitcnt     lgkmcnt(0)                              // 000000000060: BF8C007F
  buffer_store_dword  v0, v0, s[0:3], s4 offset:48 glc slc // 000000000064: E0704030 04400000
  buffer_store_dword  v1, v0, s[0:3], s4 offset:52 glc slc // 00000000006C: E0704034 04400100
  v_mov_b32     v0, s8                                  // 000000000074: 7E000208
  buffer_store_dword  v2, v0, s[0:3], s4 offset:56 glc slc // 000000000078: E0704038 04400200
  v_mov_b32     v1, s9                                  // 000000000080: 7E020209
  buffer_store_dword  v3, v0, s[0:3], s4 offset:60 glc slc // 000000000084: E070403C 04400300
  v_mov_b32     v2, s10                                 // 00000000008C: 7E04020A
  buffer_store_dword  v0, v0, s[0:3], s4 glc slc        // 000000000090: E0704000 04400000
  v_mov_b32     v0, s11                                 // 000000000098: 7E00020B
  v_mul_legacy_f32  v3, s15, v7                         // 00000000009C: 0E060E0F
  buffer_store_dword  v1, v0, s[0:3], s4 offset:4 glc slc // 0000000000A0: E0704004 04400100
  v_mov_b32     v1, 0                                   // 0000000000A8: 7E020280
  v_mac_legacy_f32  v3, s14, v6                         // 0000000000AC: 0C060C0E
  buffer_store_dword  v2, v0, s[0:3], s4 offset:8 glc slc // 0000000000B0: E0704008 04400200
  v_mac_legacy_f32  v3, s13, v5                         // 0000000000B8: 0C060A0D
  s_nop         0x0000                                  // 0000000000BC: BF800000
  buffer_store_dword  v0, v0, s[0:3], s4 offset:12 glc slc // 0000000000C0: E070400C 04400000
  v_mad_legacy_f32  v3, v4, s12, v3 clamp               // 0000000000C8: D2800803 040C1904
  buffer_store_dword  v1, v0, s[0:3], s4 offset:16 glc slc // 0000000000D0: E0704010 04400100
  buffer_store_dword  v1, v0, s[0:3], s4 offset:20 glc slc // 0000000000D8: E0704014 04400100
  buffer_store_dword  v1, v0, s[0:3], s4 offset:24 glc slc // 0000000000E0: E0704018 04400100
  buffer_store_dword  v3, v0, s[0:3], s4 offset:28 glc slc // 0000000000E8: E070401C 04400300
  buffer_store_dword  v8, v0, s[0:3], s4 offset:32 glc slc // 0000000000F0: E0704020 04400800
  buffer_store_dword  v9, v0, s[0:3], s4 offset:36 glc slc // 0000000000F8: E0704024 04400900
  buffer_store_dword  v12, v0, s[0:3], s4 offset:40 glc slc // 000000000100: E0704028 04400C00
  buffer_store_dword  v13, v0, s[0:3], s4 offset:44 glc slc // 000000000108: E070402C 04400D00
  s_endpgm                                              // 000000000110: BF810000
end


// Shader Statistics:
//  NumActiveWaveFront:         40
//  WorkgroupSize:              64
//  NumVRegs:                   14
//  NumSRegs:                   34
//  NumActiveWaveFrontByVReg:   40
//  NumActiveWaveFrontBySReg:   40
//  NumActiveWaveFrontByLDS:    40
//  CycleSim:                   87
//  CycleSimNWaves:             87
//  Code Size:                  276
//Assembler Counts:
//  num_32bit_ops                     : 35
//  num_64bit_ops                     : 17
//  num_alu                           : 25
//  num_fc                            : 11
//  num_inst_exp                      : 0
//  num_inst_ldsgds                   : 0
//  num_inst_mimg                     : 0
//  num_inst_mtbuf                    : 0
//  num_inst_mubuf                    : 16
//  num_inst_sopp                     : 5
//  num_inst_sopc                     : 0
//  num_inst_sop1                     : 1
//  num_inst_sop2                     : 0
//  num_inst_smrd                     : 0
//  num_inst_sopk                     : 0
//  num_inst_vop1                     : 5
//  num_inst_vop2                     : 19
//  num_inst_vop3                     : 0
//  num_inst_vopc                     : 0
//  num_inst_vintrp                   : 0
//  constant_literal_operands         : 0
//  num_tex                           : 16
//  num_vmem_group                    : 8
//  vmem_grouping_started             : 0
// Shader Statistics:
// m_uNumActiveWaveFront             : 40
// m_uVRegLimit                      : 256
// m_uSRegLimit                      : 512
// m_uNumVRegs                       : 14
// m_uNumSRegs                       : 34
// m_uSCCodeSize                     : 276
// m_uWorkgroupSize                  : 64
// m_uNumActiveWaveFrontByVReg       : 40
// m_uNumActiveWaveFrontBySReg       : 40
// m_uNumActiveWaveFrontByLDS        : 40
// m_uCycleSim1Wave                  : 87
// m_uCycleSimNWaves                 : 87

// Assembler Counts:
// num_32bit_ops                     : 35
// num_64bit_ops                     : 17
// num_alu                           : 25
// num_fc                            : 11
// num_inst_exp                      : 0
// num_inst_ldsgds                   : 0
// num_inst_mimg                     : 0
// num_inst_mtbuf                    : 0
// num_inst_mubuf                    : 16
// num_inst_sopp                     : 5
// num_inst_sopc                     : 0
// num_inst_sop1                     : 1
// num_inst_sop2                     : 0
// num_inst_smrd                     : 0
// num_inst_sopk                     : 0
// num_inst_vop1                     : 5
// num_inst_vop2                     : 19
// num_inst_vop3                     : 0
// num_inst_vopc                     : 0
// num_inst_vintrp                   : 0
// num_inst_smem                     : 5
// constant_literal_operands         : 0
// num_tex                           : 16
// num_vmem_group                    : 8
// vmem_grouping_started             : 0
// m_fFullPrecompilePromise          : 0
// m_fIntegerDivideExpansion         : 0
// m_fIntegerModExpansion            : 0
// m_fDoubleDivideExpansion          : 0
// m_fUsesScratch                    : 0
// m_fPerThreadIndirection           : 0
// m_fUsingTableLoads                : 0
// m_fUsingSHmemLoads                : 1
// fSemanticHashFlagOverrideApplied  : 0
// fPSHasNoUAVWrite                  : 0
// m_fRenderTargetsCanBeCompacted    : 0
// version                           : 3
// fCodePatched                      : 0

// Opaque Custom Data - XBOX Precompiled Shader Object
// Offset:[444], bundle is:[170] DWORDS.
// Disassembled Precompiled Shader Object:
// Shader Type               : (VS)
// Shader Hw Stage           : (LS)
// PDB Filename              : D:\ATG\st_dev\Kits\DirectXTK\src\Shaders\Compiled\XboxOneDualTextureEffect_VSDualTexture.pdb
// Shader Semantic Hash      : 0xbc2b8dc3b66b9bc
//
// Shader Data:
; ----------------- VS Data ------------------------
; Input Semantic Mappings
;   [0] generic, usageIdx  0, channelMask 15, v[4:7]
;   [1] generic, usageIdx  1, channelMask  3, v[8:9]
;   [2] generic, usageIdx  2, channelMask  3, v[12:13]
; Output Semantic Mappings
;   [0] position,  usageIdx 3, paramIdx 3, paramSlot 0
;   [1] generic,  usageIdx 0, paramIdx 0, paramSlot 0
;   [2] generic,  usageIdx 1, paramIdx 1, paramSlot 0
;   [3] generic,  usageIdx 2, paramIdx 2, paramSlot 0

codeLenInByte        = 212 bytes;

; launchModeFlags    = 0x0000000E
srdTableSupport      = TRUE
immediateSupportExt  = TRUE
srdTableSupportExt   = TRUE

userElementCount     = 3;
;  userElements[0]      = PTR_VERTEX_BUFFER_TABLE, Element=1 dwords, s[0x2:3]
;  userElements[1]      = PTR_EXTENDED_USER_DATA, ReferencedExtUserElements=1, s[0x2:3]
;  userElements[2]      = SUB_PTR_FETCH_SHADER, s[0x2:3]
extUserElementCount  = 1;
;  extUserElements 1[0] = IMM_CONST_BUFFER 0, offset 0x0:3 dwords
NumVgprs             = 14;
NumSgprs             = 26;
FloatMode            = 192;
IeeeMode             = 0;
FlatPtr32            = 0;
ScratchSize          = 0 dwords/thread;
LDSByteSize          = 0 bytes/workgroup (compile time only);
ScratchWaveOffsetReg = s65535;
; texSamplerUsage         = 0x00000000
; constBufUsage           = 0x00000001

; SPI_SHADER_PGM_RSRC2_VS = 0x00000008
SSPRV:USER_SGPR             = 4
; PA_CL_VS_OUT_CNTL       = 0x00000000
; SPI_VS_OUT_CONFIG       = 0x00000000
SVOC:VS_EXPORT_COUNT        = 0
SVOC:VS_HALF_PACK           = 0
SVOC:VS_EXPORTS_FOG         = 0
SVOC:VS_OUT_FOG_VEC_ADDR    = 0
; SPI_SHADER_POS_FORMAT     = 0x00000004
SSPF:POS0_EXPORT_FORMAT     = 4
SSPF:POS1_EXPORT_FORMAT     = 0
SSPF:POS2_EXPORT_FORMAT     = 0
SSPF:POS3_EXPORT_FORMAT     = 0
VGT_STRMOUT_CONFIG = 0x0
VGT_STRMOUT_CONFIG:RAST_STREAM = 0
VGT_STRMOUT_CONFIG:STREAMOUT_0_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_1_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_2_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_3_EN = 0
; vgprCompCnt               = 1
; exportVertexSize          = 16
; lsStride                  = 64

// Shader Instructions:
shader main
  asic(CI)
  type(VS)
  s_swappc_b64  s[2:3], s[2:3]                          // 000000000000: BE822102
  s_load_dwordx4  s[0:3], s[2:3], 0x00                  // 000000000004: C0800300
  s_waitcnt     lgkmcnt(0)                              // 000000000008: BF8C007F
  s_buffer_load_dwordx16  s[4:19], s[0:3], 0x08         // 00000000000C: C3020108
  s_buffer_load_dwordx4  s[20:23], s[0:3], 0x18         // 000000000010: C28A0118
  s_buffer_load_dwordx4  s[0:3], s[0:3], 0x00           // 000000000014: C2800100
  s_waitcnt     vmcnt(0) & lgkmcnt(0)                   // 000000000018: BF8C0070
  v_mul_legacy_f32  v0, s11, v7                         // 00000000001C: 0E000E0B
  v_mul_legacy_f32  v2, s15, v7                         // 000000000020: 0E040E0F
  v_mac_legacy_f32  v0, s10, v6                         // 000000000024: 0C000C0A
  v_mac_legacy_f32  v2, s14, v6                         // 000000000028: 0C040C0E
  v_mul_legacy_f32  v3, s19, v7                         // 00000000002C: 0E060E13
  v_mul_legacy_f32  v10, s23, v7                        // 000000000030: 0E140E17
  v_mac_legacy_f32  v0, s9, v5                          // 000000000034: 0C000A09
  v_mac_legacy_f32  v2, s13, v5                         // 000000000038: 0C040A0D
  v_mac_legacy_f32  v3, s18, v6                         // 00000000003C: 0C060C12
  v_mac_legacy_f32  v10, s22, v6                        // 000000000040: 0C140C16
  s_mov_b32     m0, 0x00010000                          // 000000000044: BEFC03FF 00010000
  v_mac_legacy_f32  v0, s8, v4                          // 00000000004C: 0C000808
  v_mac_legacy_f32  v2, s12, v4                         // 000000000050: 0C04080C
  v_mac_legacy_f32  v3, s17, v5                         // 000000000054: 0C060A11
  v_mac_legacy_f32  v10, s21, v5                        // 000000000058: 0C140A15
  v_lshlrev_b32  v1, 6, v1                              // 00000000005C: 34020286
  v_mac_legacy_f32  v3, s16, v4                         // 000000000060: 0C060810
  v_mac_legacy_f32  v10, s20, v4                        // 000000000064: 0C140814
  ds_write2_b32  v1, v0, v2 offset0:12 offset1:13       // 000000000068: D8380D0C 00020001
  v_mul_legacy_f32  v0, s7, v7                          // 000000000070: 0E000E07
  ds_write2_b32  v1, v3, v10 offset0:14 offset1:15      // 000000000074: D8380F0E 000A0301
  v_mov_b32     v2, s0                                  // 00000000007C: 7E040200
  v_mov_b32     v3, s1                                  // 000000000080: 7E060201
  v_mac_legacy_f32  v0, s6, v6                          // 000000000084: 0C000C06
  ds_write2_b32  v1, v2, v3 offset1:1                   // 000000000088: D8380100 00030201
  v_mov_b32     v2, s2                                  // 000000000090: 7E040202
  v_mov_b32     v3, s3                                  // 000000000094: 7E060203
  v_mac_legacy_f32  v0, s5, v5                          // 000000000098: 0C000A05
  ds_write2_b32  v1, v2, v3 offset0:2 offset1:3         // 00000000009C: D8380302 00030201
  v_mov_b32     v2, 0                                   // 0000000000A4: 7E040280
  v_mad_legacy_f32  v0, v4, s4, v0 clamp                // 0000000000A8: D2800800 04000904
  ds_write2_b32  v1, v2, v2 offset0:4 offset1:5         // 0000000000B0: D8380504 00020201
  ds_write2_b32  v1, v2, v0 offset0:6 offset1:7         // 0000000000B8: D8380706 00000201
  ds_write2_b32  v1, v8, v9 offset0:8 offset1:9         // 0000000000C0: D8380908 00090801
  ds_write2_b32  v1, v12, v13 offset0:10 offset1:11     // 0000000000C8: D8380B0A 000D0C01
  s_endpgm                                              // 0000000000D0: BF810000
end


// Shader Statistics:
//  NumActiveWaveFront:         40
//  WorkgroupSize:              64
//  NumVRegs:                   14
//  NumSRegs:                   26
//  NumActiveWaveFrontByVReg:   40
//  NumActiveWaveFrontBySReg:   40
//  NumActiveWaveFrontByLDS:    40
//  CycleSim:                   88
//  CycleSimNWaves:             88
//  Code Size:                  212
//Assembler Counts:
//  num_32bit_ops                     : 34
//  num_64bit_ops                     : 9
//  num_alu                           : 26
//  num_fc                            : 9
//  num_inst_exp                      : 0
//  num_inst_ldsgds                   : 8
//  num_inst_mimg                     : 0
//  num_inst_mtbuf                    : 0
//  num_inst_mubuf                    : 0
//  num_inst_sopp                     : 3
//  num_inst_sopc                     : 0
//  num_inst_sop1                     : 2
//  num_inst_sop2                     : 0
//  num_inst_smrd                     : 0
//  num_inst_sopk                     : 0
//  num_inst_vop1                     : 5
//  num_inst_vop2                     : 20
//  num_inst_vop3                     : 0
//  num_inst_vopc                     : 0
//  num_inst_vintrp                   : 0
//  constant_literal_operands         : 0
//  num_tex                           : 8
//  num_vmem_group                    : 0
//  vmem_grouping_started             : 0
// Shader Statistics:
// m_uNumActiveWaveFront             : 40
// m_uVRegLimit                      : 256
// m_uSRegLimit                      : 512
// m_uNumVRegs                       : 14
// m_uNumSRegs                       : 26
// m_uSCCodeSize                     : 212
// m_uWorkgroupSize                  : 64
// m_uNumActiveWaveFrontByVReg       : 40
// m_uNumActiveWaveFrontBySReg       : 40
// m_uNumActiveWaveFrontByLDS        : 40
// m_uCycleSim1Wave                  : 88
// m_uCycleSimNWaves                 : 88

// Assembler Counts:
// num_32bit_ops                     : 34
// num_64bit_ops                     : 9
// num_alu                           : 26
// num_fc                            : 9
// num_inst_exp                      : 0
// num_inst_ldsgds                   : 8
// num_inst_mimg                     : 0
// num_inst_mtbuf                    : 0
// num_inst_mubuf                    : 0
// num_inst_sopp                     : 3
// num_inst_sopc                     : 0
// num_inst_sop1                     : 2
// num_inst_sop2                     : 0
// num_inst_smrd                     : 0
// num_inst_sopk                     : 0
// num_inst_vop1                     : 5
// num_inst_vop2                     : 20
// num_inst_vop3                     : 0
// num_inst_vopc                     : 0
// num_inst_vintrp                   : 0
// num_inst_smem                     : 4
// constant_literal_operands         : 0
// num_tex                           : 8
// num_vmem_group                    : 0
// vmem_grouping_started             : 0
// m_fFullPrecompilePromise          : 0
// m_fIntegerDivideExpansion         : 0
// m_fIntegerModExpansion            : 0
// m_fDoubleDivideExpansion          : 0
// m_fUsesScratch                    : 0
// m_fPerThreadIndirection           : 0
// m_fUsingTableLoads                : 0
// m_fUsingSHmemLoads                : 1
// fSemanticHashFlagOverrideApplied  : 0
// fPSHasNoUAVWrite                  : 0
// m_fRenderTargetsCanBeCompacted    : 0
// version                           : 3
// fCodePatched                      : 0

// Approximately 0 instruction slots used
#endif

const BYTE DualTextureEffect_VSDualTexture[] =
{
     68,  88,  66,  67, 182, 110, 
    137, 156, 205, 253, 213,  43, 
     83,  19,   1,  93, 133, 169, 
    207, 101,   1,   0,   0,   0, 
    100,  11,   0,   0,   5,   0, 
      0,   0,  52,   0,   0,   0, 
    164,   0,   0,   0,  72,   1, 
      0,   0, 240,  10,   0,   0, 
      0,  11,   0,   0,  73,  83, 
     71,  78, 104,   0,   0,   0, 
      3,   0,   0,   0,   8,   0, 
      0,   0,  80,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      0,   0,   0,   0,  15,  15, 
      0,   0,  92,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   0,   0,   3,   3, 
      0,   0,  92,   0,   0,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      2,   0,   0,   0,   3,   3, 
      0,   0,  83,  86,  95,  80, 
    111, 115, 105, 116, 105, 111, 
    110,   0,  84,  69,  88,  67, 
     79,  79,  82,  68,   0, 171, 
    171, 171,  79,  83,  71,  78, 
    156,   0,   0,   0,   5,   0, 
      0,   0,   8,   0,   0,   0, 
    128,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      3,   0,   0,   0,   0,   0, 
      0,   0,  15,   0,   0,   0, 
    128,   0,   0,   0,   1,   0, 
      0,   0,   0,   0,   0,   0, 
      3,   0,   0,   0,   1,   0, 
      0,   0,  15,   0,   0,   0, 
    134,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      3,   0,   0,   0,   2,   0, 
      0,   0,   3,  12,   0,   0, 
    134,   0,   0,   0,   1,   0, 
      0,   0,   0,   0,   0,   0, 
      3,   0,   0,   0,   2,   0, 
      0,   0,  12,   3,   0,   0, 
    143,   0,   0,   0,   0,   0, 
      0,   0,   1,   0,   0,   0, 
      3,   0,   0,   0,   3,   0, 
      0,   0,  15,   0,   0,   0, 
     67,  79,  76,  79,  82,   0, 
     84,  69,  88,  67,  79,  79, 
     82,  68,   0,  83,  86,  95, 
     80, 111, 115, 105, 116, 105, 
    111, 110,   0, 171,  83,  72, 
     69,  88, 160,   9,   0,   0, 
     80,   0,   1,   0, 104,   2, 
      0,   0,  53,  16,   0,   0, 
      5,   0,   0,   0, 102,   0, 
      0,   0,  80,   0,   1,   0, 
     97,   0,   0,   0, 106,   8, 
      0,   1,  89,   0,   0,   4, 
     70, 142,  32,   0,   0,   0, 
      0,   0,   7,   0,   0,   0, 
     95,   0,   0,   3, 242,  16, 
     16,   0,   0,   0,   0,   0, 
     95,   0,   0,   3,  50,  16, 
     16,   0,   1,   0,   0,   0, 
     95,   0,   0,   3,  50,  16, 
     16,   0,   2,   0,   0,   0, 
    101,   0,   0,   3, 242,  32, 
     16,   0,   0,   0,   0,   0, 
    101,   0,   0,   3, 242,  32, 
     16,   0,   1,   0,   0,   0, 
    101,   0,   0,   3,  50,  32, 
     16,   0,   2,   0,   0,   0, 
    101,   0,   0,   3, 194,  32, 
     16,   0,   2,   0,   0,   0, 
    103,   0,   0,   4, 242,  32, 
     16,   0,   3,   0,   0,   0, 
      1,   0,   0,   0,  54,   0, 
      0,   6, 242,  32,  16,   0, 
      0,   0,   0,   0,  70, 142, 
     32,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,  17,  32, 
      0,   8, 130,  32,  16,   0, 
      1,   0,   0,   0,  70,  30, 
     16,   0,   0,   0,   0,   0, 
     70, 142,  32,   0,   0,   0, 
      0,   0,   2,   0,   0,   0, 
     54,   0,   0,   8, 114,  32, 
     16,   0,   1,   0,   0,   0, 
      2,  64,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,  54,   0,   0,   5, 
     50,  32,  16,   0,   2,   0, 
      0,   0,  70,  16,  16,   0, 
      1,   0,   0,   0,  54,   0, 
      0,   5, 194,  32,  16,   0, 
      2,   0,   0,   0,   6,  20, 
     16,   0,   2,   0,   0,   0, 
     17,   0,   0,   8,  18,  32, 
     16,   0,   3,   0,   0,   0, 
     70,  30,  16,   0,   0,   0, 
      0,   0,  70, 142,  32,   0, 
      0,   0,   0,   0,   3,   0, 
      0,   0,  17,   0,   0,   8, 
     34,  32,  16,   0,   3,   0, 
      0,   0,  70,  30,  16,   0, 
      0,   0,   0,   0,  70, 142, 
     32,   0,   0,   0,   0,   0, 
      4,   0,   0,   0,  17,   0, 
      0,   8,  66,  32,  16,   0, 
      3,   0,   0,   0,  70,  30, 
     16,   0,   0,   0,   0,   0, 
     70, 142,  32,   0,   0,   0, 
      0,   0,   5,   0,   0,   0, 
     17,   0,   0,   8, 130,  32, 
     16,   0,   3,   0,   0,   0, 
     70,  30,  16,   0,   0,   0, 
      0,   0,  70, 142,  32,   0, 
      0,   0,   0,   0,   6,   0, 
      0,   0,  62,   0,   0,   1, 
     53,  16,   0,   0, 164,   0, 
      0,   0,  23,   0,   1,   0, 
     32, 193,  22,   0, 120,   1, 
    237, 152,  77,  79,  19,  65, 
     24, 199, 159, 157, 110, 159, 
    110, 183, 195, 180, 188,  23, 
     69, 145,   4, 163,  39, 245, 
    224,  73,  13,  17, 197, 112, 
     32, 134,  67,  27, 195,  97, 
     13,  41, 116,   9,  36,  40, 
     77,  91,  12, 167,  90,  95, 
     78, 198,  47, 160, 103,  15, 
    126,   4,  77, 136,  32,  92, 
     53,  38, 158, 249,  16,  30, 
     60, 112,  48, 209, 255, 179, 
    236, 106,  83, 228, 140, 137, 
    243,  75, 127,  51, 179, 179, 
    157, 157, 103,  94,  78, 207, 
    199,  33, 138, 184,  48, 115, 
    247, 155, 212,  69,  93,  26, 
    127, 238,  16, 165, 229,   1, 
    184,  82, 128, 218, 128, 148, 
     68,  43, 131,  82,  18,  93, 
    148,   2, 255,  35,  69, 100, 
     80, 157, 130, 111, 225,  77, 
     40, 239,  18,  63, 127, 250, 
     49, 245, 250,  85, 234, 214, 
     85, 180, 139, 176,   0,  75, 
    177, 231, 160, 204,  51,   2, 
     61, 152, 204, 213,  73,  74, 
     10,  32,  83, 117,  34, 227, 
    250,  97,  39, 201, 248,  35, 
    223, 169,  72, 241, 119, 206, 
     67, 137, 255,  56,  36, 182, 
      4, 249, 174, 196,  41, 200, 
    122, 255,  53, 100, 143, 146, 
    115,  18, 228,  60,  58, 145, 
    117,  38, 251,  89, 140, 207, 
     49, 217, 215, 114, 252,  44, 
    255, 145, 181, 237, 192, 227, 
    248,   9, 186, 247,  56, 121, 
    150, 239,  51, 205,  93,  97, 
    231,  89, 129, 213,  94, 129, 
    209, 193, 120, 201,  56,  48, 
    102, 152, 129, 216,  68, 206, 
     66,  31, 230, 160, 134,  61, 
     16, 147, 115,  30, 226, 146, 
    112,  47, 236, 131,  56, 100, 
    198, 154,  24, 241,  49, 238, 
     42,  15,  67,  92,  36, 198, 
    193,  48,   2, 229, 211, 112, 
     20, 158, 129, 103, 225,  88, 
     18, 195,  33, 236,  28, 174, 
    144,  21,  46, 234, 127, 132, 
    236,  65, 114,  87, 229, 108, 
    196, 132, 206, 182, 197,  98, 
    177,  88,  44,  22, 139, 197, 
     98, 177,  88,  44,  22, 203, 
     73, 161, 198, 159, 126, 160, 
     84, 123, 231,  49, 189, 220, 
    246,  28, 181,  87, 116,  94, 
    236, 146, 211, 222, 173, 225, 
     57,  99, 200, 228, 140,  50, 
    121, 227, 154, 126, 195, 102, 
    216,  24, 195, 154,  38, 125, 
    173, 180, 209, 174, 238, 211, 
    172, 135, 208,  74, 251,  52, 
    153, 245, 149, 238, 241,  93, 
    221, 235, 179,  30, 244, 141, 
     38, 175, 253, 213, 205, 146, 
    235, 121,  74, 107, 207, 213, 
      5, 143, 245, 128, 135, 126, 
    229, 181,  28, 229, 183, 148, 
    210, 173, 148,  26, 104, 181, 
    213,  80, 235, 139,  71,   7, 
    142,  74, 101, 242, 138,  14, 
    220,  52, 251,  99, 168, 115, 
    185,  28,  93,  70, 237, 101, 
    117,  15, 209, 147, 237,  40, 
    109, 166, 162, 223, 111,  70, 
     36, 229, 212, 213,  39, 121, 
    207, 238, 190, 168, 237,  30, 
    230, 167,  18, 222,  68,  31, 
     36, 106, 199, 245,   4, 204, 
     66,  39, 202, 232,  16, 101, 
    160,  27, 103, 183, 182, 222, 
     47,  95, 223, 127, 183, 155, 
    147, 182, 176,  31, 143, 217, 
    138, 107, 201, 175, 106, 248, 
    135, 182,  20,  71, 112, 227, 
     28, 240, 247, 120, 156, 196, 
     42,  57,  34,  19, 101,  89, 
    129,  36,   5, 193,  68, 252, 
    191, 209, 184, 150, 252, 146, 
     76, 222,  29, 199, 141, 248, 
    253, 125,  40, 145,  78,  95, 
     11, 166, 202,  51,  65, 163, 
    185,  80,  13,  31,   5, 179, 
    171, 205,  70,  48, 189,  90, 
     15, 151, 154, 243, 229, 217, 
    160,  81,  95,  10,  74,  43, 
    149, 106,  88, 111,   4, 183, 
    215,  31, 212,  86, 215, 194, 
    106,  48, 191, 184, 190,  57, 
    247,  48, 156, 222, 168, 172, 
    149, 195, 205, 230,  70,  61, 
    188, 179, 188, 140,   1,  11, 
    247,  74,  29, 125, 151, 106, 
    213,  69, 250,   5, 120,  52, 
    100,  85,  53,  16,   0,   0, 
    178,   0,   0,   0,  23,   0, 
      1,   0,  16,  65,  23,   0, 
    120,   1, 237, 152,  77,  79, 
     83,  65,  20, 134,  79, 111, 
    199, 225, 182,  12, 151,   2, 
      5,  90, 190,  17,  22,  44, 
     12,  97, 193, 194,  40, 139, 
     11,  98, 140, 178,  96,   1, 
     81,  22, 151,  16, 160,  37, 
    146, 160,  52, 109,  49, 172, 
    176, 106, 151, 198,  95, 224, 
    210,  31, 161,   9,  17,   2, 
     91, 221,  24, 151,  46,  92, 
    250,  47, 244, 125, 203,  92, 
    210,  84,  89, 107, 204,  60, 
    233,  59, 103, 102, 238, 153, 
    153,  51,  31, 221, 156, 249, 
    126, 105,  96,  38,  30, 220, 
    167, 205, 153, 149, 241, 122, 
     66, 228,  26,  27, 192,  99, 
      1,  74,  89, 150,  34,  63, 
    122,  89, 138,  76, 177, 128, 
     31,  29,   2, 152, 235,  80, 
     22, 237,  16, 150, 223,  98, 
    125, 254,  52, 189,  32,  50, 
    187, 176, 132, 250,  48, 100, 
    160,  71,  86,  19,  80,  23, 
    148, 135, 218, 161,  86,  50, 
     80,  28,   7, 151, 106, 134, 
    253,  61,  80,  51, 177,  47, 
    199, 249, 208,  37, 155,  44, 
    254, 204,  44, 196, 248, 175, 
    130, 177, 113, 190, 152,  56, 
     78, 238, 247,  95, 131, 103, 
     20, 223,  19, 225, 125,  52, 
    195, 125,  42, 136, 212, 237, 
     61, 198,  46,  95, 109, 155, 
     62, 220, 219,  41, 116,  21, 
     63,  65,  60,  15,  97, 157, 
    231,  72, 146, 144, 150, 229, 
     25, 157, 120, 149, 209, 222, 
    121,  70, 163,  67, 195,  65, 
    227, 114, 180, 134, 218,  32, 
     92, 142,  78,  65, 105,   8, 
      7, 170, 241,  40, 116,   7, 
    132, 197, 117,  39, 132,   3, 
    215, 120,  24, 186,  27, 194, 
     37, 107, 236,  73,  35,  62, 
    221,   7, 225, 189, 234,  28, 
    132, 139, 209,   3, 208,  32, 
     52,   4, 225, 113, 233,  17, 
    104, 212, 238,  49, 201,  72, 
    208, 102,   1, 116, 226,  98, 
    167, 218, 139,  95, 244, 255, 
     13, 207, 160, 249,  63, 208, 
     56,  19,  11, 223,  51, 229, 
    112,  56,  28,  14, 135, 195, 
    225, 112,  56,  28,  14, 135, 
    195, 241,  55, 241, 198,  95, 
    126, 148, 100, 253, 244, 185, 
    188,  62, 241,  83, 250,  60, 
    151, 122, 115,  86,  66, 189, 
     39, 144, 192,  36, 107, 167, 
    221,  70,  76, 127, 224,   5, 
    146, 170, 159, 117, 165, 197, 
    244,  25, 207,  12,   6,  42, 
    200, 248,  98, 122, 211, 158, 
     25,  48, 202, 140,   6,  58, 
    200, 250, 158, 201, 167, 149, 
     25,  49, 218, 228, 124, 101, 
    134, 211, 218,  12, 249, 218, 
    112, 222, 153, 176, 244,  93, 
     36,  84, 179, 180, 137,  80, 
    249, 158,  28, 221, 100, 221, 
     11,  85, 202, 243, 142, 230, 
     88,  79, 134,  42, 237, 169, 
     35,  97,  29, 190, 237, 240, 
    233, 196, 188, 138, 109, 140, 
    169, 193,  47, 192, 220,  62, 
    219,  24, 215, 129, 249,  69, 
    106,  39, 134, 109, 248,  39, 
    253, 218,  23, 149,  55,  42, 
    195,  54, 252, 179, 214, 230, 
    172,  29, 162, 197,  26,  99, 
    180, 126, 168,  38, 105,  83, 
    161, 154, 162,  53, 161, 186, 
     65, 219,  17,  42, 145,  23, 
     39, 141,  20, 157, 215, 248, 
     93, 146, 103,  90, 171, 165, 
     47, 199, 162, 165, 175, 145, 
    239, 105, 233, 107, 212, 213, 
     69,  94,  44, 102, 178, 143, 
     37, 176, 118,  18,  74,  65, 
    137,  70, 102,  79, 164,  13, 
     82,  54, 171, 118, 252,  97, 
    231, 246, 183, 247, 103, 113, 
     74,  84,  34,  59, 102, 206, 
    218,  49,   8, 135, 209,   4, 
    179, 195, 191,  83, 183, 254, 
     85, 107,  25,  43, 243,  85, 
     65, 156, 209, 101,  82,  18, 
    188, 179, 223, 223,  90, 203, 
    252,  22,  23, 111, 141, 227, 
    216, 126,  95, 135,  24, 233, 
    226, 173, 104, 126, 245,  94, 
     84, 169, 110,  20, 138, 207, 
    162, 165, 221, 106,  37,  90, 
    220,  45,  23, 183, 171, 107, 
    171,  75,  81, 165, 188,  29, 
    173,  60, 222,  44,  20, 203, 
    149, 232, 206, 254, 147, 210, 
    238,  94, 177,  16, 173, 109, 
    237,  31,  46,  63,  45,  46, 
     30, 108, 238, 173,  22,  15, 
    171,   7, 229, 226, 221, 157, 
     29,  12, 216, 120, 184, 210, 
    212,  55,  93,  42, 108, 201, 
     47,  30,  71, 127, 254,   0, 
     53,  16,   0,   0, 172,   0, 
      0,   0,  23,   0,   1,   0, 
      0, 237,  22,   0, 120,   1, 
    237, 152,  75, 107,  83,  65, 
     20, 199, 207, 157, 123, 123, 
    114, 115,  51, 189,  73, 219, 
    244, 229, 179,  21,  23, 130, 
     32,  93, 184,  16, 221, 104, 
    141,  40, 116,  81, 161,  65, 
    186, 184,  82, 218, 230, 134, 
      6, 170,  13,  73,  42,  93, 
    213, 248, 192, 133, 184, 116, 
    161, 126,   6,  63, 128, 130, 
    180, 165,   5,  23, 174,  68, 
     92, 184, 240,   3, 184, 241, 
     27,   8, 245, 127, 110, 231, 
    214,  24,  90,  92,  42,  50, 
     63, 242, 159,  51, 115, 230, 
    206, 204, 153,  71,  54, 231, 
    251,  16,  37, 108, 190, 248, 
    240,  94, 236, 136, 158,  25, 
    127, 236,  16, 245,  72, 163, 
    131, 122,  81,  74, 162, 231, 
    131,  82,  18, 157, 145,   2, 
    223, 145,  34,  10,  97, 142, 
     64, 159, 161, 203, 144, 244, 
    165, 170,  86, 251,  39,  95, 
    189,  28, 158,  68, 149,  70, 
    160,  94, 104, 214, 232,  20, 
    148, 133, 100, 172,  88, 193, 
    151, 162,   3,  87,  10, 128, 
    101, 126,  67, 226,  51,  33, 
    237, 227,  73,   1, 186, 231, 
    160, 121,  41,  14, 230,  44, 
     36, 241,  31, 134, 196,  38, 
    164, 115, 166, 113, 166, 254, 
    127,   9, 185, 142, 244, 158, 
      4, 185, 143,  78, 100, 159, 
    233, 121, 150, 204,  61, 202, 
     24, 161, 109, 218, 242, 141, 
    236, 109,  11,  58, 140,  93, 
    144, 158, 117,  74, 218, 150, 
    249, 153, 166,  39, 216, 121, 
     84,  96, 181,  83,  96,  56, 
     24, 157, 140,  11,  99, 134, 
     50,  16,  14, 147, 113, 144, 
     28,  64,  57,  72,  67, 120, 
     24, 140, 197,  57,  15,  21, 
    160,  62, 168,  31,  26, 128, 
    176,  39,  70, 124, 140, 183, 
    202, 195,  16,  30,  18, 143, 
     66,   8, 148, 143,  66, 199, 
    160, 227, 208,   9, 232, 164, 
    137, 197, 149,  72, 208, 150, 
      2, 176, 179, 183,  83,  86, 
    221,  47, 233, 255,  68, 206, 
     32, 125, 179,  66, 114,  38, 
     64,  78,   1, 199, 155,  32, 
    255,  85, 139, 197,  98, 177, 
     88,  44,  22, 139, 197,  98, 
    177,  88,  44, 150, 191, 133, 
     26, 127, 184,  65, 110, 123, 
    235,  62,  61, 219, 244,  29, 
    181,  51, 226,  60, 221,  38, 
    167, 189,  93,  71,  59,  23, 
     82, 152,  15, 189,  48, 208, 
    164,  67, 237, 233, 129, 144, 
    195, 225, 176,  24, 102,   3, 
    210, 189, 129, 167, 251,  53, 
    235,  33,  93, 212, 187, 238, 
    143,  13, 201, 120, 248,  62, 
    105, 237, 123, 186,  47,  96, 
     61,  24,  20, 245,  19, 165, 
    206,  23, 124, 214,  69, 191, 
    168, 117, 239, 133,  47,  14, 
     41, 202,  96, 206,  48, 143, 
    186,  27,  96, 113, 111, 221, 
     81, 188, 206, 152, 159,  28, 
    248, 148,  75,  10,  62,  23, 
    190,  30, 172, 161, 220,  61, 
     95,  27,  62, 242, 219, 159, 
    188,  44, 121,  94, 143, 248, 
     20, 113,  70,  44, 145, 159, 
    133, 245, 179,  20, 228,  96, 
    181, 100,  61,  31, 108,  38, 
     41,  54, 244, 225, 183, 207, 
    168,  36, 100, 186, 124,  73, 
    126, 166, 203, 151, 212,  61, 
    249, 248,  23,  31, 147,   9, 
    137,  94,  27, 123,  26, 146, 
    252, 164,  99, 178, 124,  25, 
    200,  51,  25, 176, 119, 111, 
    171, 151, 190, 190, 217, 206, 
     73,  93, 240,  77, 222, 247, 
    155,  25,  59,   6, 105, 232, 
     79,  76, 152, 113,  99, 198, 
     74, 172, 146,  91,  10, 211, 
    140, 177,  36,  16, 193,  77, 
    211, 127, 195,  88, 201,  69, 
    201, 226, 221, 113,  44, 153, 
    254, 219, 144,  68,  90, 186, 
     24,  93,  41,  95, 143, 154, 
    173, 185,  74, 124,  47, 154, 
    170, 181, 154,  81, 169, 214, 
    136,  23,  91, 179, 229, 169, 
    168, 217,  88, 140, 102, 150, 
    230,  43, 113, 163,  25,  93, 
     93, 185,  83, 175,  45, 199, 
    149, 104, 118,  97, 101, 109, 
    250, 110,  92,  90, 157,  95, 
     46, 199, 107, 173, 213,  70, 
    124, 173,  90, 197, 128, 185, 
     91,  51,  29, 190, 115, 245, 
    202,   2, 253,   4, 129, 136, 
    106, 248,   0,   0,  88,  72, 
     83,  72,   8,   0,   0,   0, 
    188, 185, 102,  59, 220, 184, 
    194,  11,  88,  80,  68,  80, 
     92,   0,   0,   0,  68,  58, 
     92,  65,  84,  71,  92, 115, 
    116,  95, 100, 101, 118,  92, 
     75, 105, 116, 115,  92,  68, 
    105, 114, 101,  99, 116,  88, 
     84,  75,  92, 115, 114,  99, 
     92,  83, 104,  97, 100, 101, 
    114, 115,  92,  67, 111, 109, 
    112, 105, 108, 101, 100,  92, 
     88,  98, 111, 120,  79, 110, 
    101,  68, 117,  97, 108,  84, 
    101, 120, 116, 117, 114, 101, 
     69, 102, 102, 101,  99, 116, 
     95,  86,  83,  68, 117,  97, 
    108,  84, 101, 120, 116, 117, 
    114, 101,  46, 112, 100,  98
};
