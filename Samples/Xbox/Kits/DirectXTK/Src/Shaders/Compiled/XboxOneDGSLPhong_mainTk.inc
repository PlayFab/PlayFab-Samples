#if 0
//
// Generated by Microsoft (R) D3D Shader Disassembler for Durango
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// COLOR                    0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 0   xy          2     NONE   float       
// TEXCOORD                 1   xyz         3     NONE   float   xyz 
// TEXCOORD                 2   xyz         4     NONE   float       
// TEXCOORD                 3   xyz         5     NONE   float   xyz 
// TEXCOORD                 4   xyzw        6     NONE   float       
// TEXCOORD                 5   xyz         7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
// Opaque Custom Data - XBOX Precompiled Shader Header
// First Precompiled Shader at offset:[411]
// Embedded Data:
//  0x0000019b - Offset To First Precompiled Shader
//  0x00000050 - Original Shader Descriptor
//  0x00000196 - Original Shader Size
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[5], immediateIndexed
dcl_constantbuffer CB1[21], immediateIndexed
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v3.xyz
dcl_input_ps linear v5.xyz
dcl_output o0.xyzw
dcl_temps 4
eq r0.x, v1.w, l(0.000000)
discard_nz r0.x
dp3 r0.x, v3.xyzx, v3.xyzx
rsq r0.x, r0.x
mul r0.xyz, r0.xxxx, v3.xyzx
dp3 r0.w, v5.xyzx, v5.xyzx
rsq r0.w, r0.w
dp3_sat r1.x, cb1[9].xyzx, r0.xyzx
mul r1.xyz, r1.xxxx, cb1[1].xyzx
mul r1.xyz, r1.xyzx, v1.xyzx
mad r1.xyz, cb0[0].xyzx, cb1[0].xyzx, r1.xyzx
mad r2.xyz, v5.xyzx, r0.wwww, cb1[9].xyzx
dp3 r1.w, r2.xyzx, r2.xyzx
rsq r1.w, r1.w
mul r2.xyz, r1.wwww, r2.xyzx
dp3_sat r1.w, r0.xyzx, r2.xyzx
max r2.x, cb0[4].x, l(0.000100)
log r1.w, r1.w
mul r1.w, r1.w, r2.x
exp r1.w, r1.w
mul r1.w, r1.w, cb1[13].x
mul r2.yzw, cb0[2].xxyz, cb1[1].xxyz
dp3_sat r3.x, cb1[10].xyzx, r0.xyzx
mul r3.xyz, r3.xxxx, cb1[2].xyzx
mad r1.xyz, r3.xyzx, v1.xyzx, r1.xyzx
mad r3.xyz, v5.xyzx, r0.wwww, cb1[10].xyzx
dp3 r3.w, r3.xyzx, r3.xyzx
rsq r3.w, r3.w
mul r3.xyz, r3.wwww, r3.xyzx
dp3_sat r3.x, r0.xyzx, r3.xyzx
log r3.x, r3.x
mul r3.x, r2.x, r3.x
exp r3.x, r3.x
mul r3.x, r3.x, cb1[14].x
mul r3.yzw, cb0[2].xxyz, cb1[2].xxyz
mul r3.xyz, r3.xxxx, r3.yzwy
mad r2.yzw, r2.yyzw, r1.wwww, r3.xxyz
dp3_sat r1.w, cb1[11].xyzx, r0.xyzx
mul r3.xyz, r1.wwww, cb1[3].xyzx
mad_sat r1.xyz, r3.xyzx, v1.xyzx, r1.xyzx
mad r3.xyz, v5.xyzx, r0.wwww, cb1[11].xyzx
dp3 r0.w, r3.xyzx, r3.xyzx
rsq r0.w, r0.w
mul r3.xyz, r0.wwww, r3.xyzx
dp3_sat r0.x, r0.xyzx, r3.xyzx
log r0.x, r0.x
mul r0.x, r0.x, r2.x
exp r0.x, r0.x
mul r0.x, r0.x, cb1[15].x
mul r0.yzw, cb0[2].xxyz, cb1[3].xxyz
mad r0.xyz, r0.yzwy, r0.xxxx, r2.yzwy
add o0.xyz, r0.xyzx, r1.xyzx
mov o0.w, v1.w
ret 
// Opaque Custom Data - XBOX Precompiled Shader Object
// Offset:[411], bundle is:[291] DWORDS.
// Disassembled Precompiled Shader Object:
// Shader Type               : (PS)
// Shader Hw Stage           : (PS)
// PDB Filename              : D:\ATG\st_dev\Kits\DirectXTK\src\Shaders\Compiled\XboxOneDGSLPhong_mainTk.pdb
// Shader Semantic Hash      : 0x9e8298cf3d7d9d5
//
// Shader Data:
; ----------------- PS Data ------------------------
; Input Semantic Mappings
;   [0] generic,  usageIdx 1, channelMask 15, param0, paramSlot1, DefaultVal={0,0,0,0}
;   [1] generic,  usageIdx 3, channelMask  7, param1, paramSlot3, DefaultVal={0,0,0,0}
;   [2] generic,  usageIdx 5, channelMask  7, param2, paramSlot5, DefaultVal={0,0,0,0}

codeLenInByte        = 784 bytes;

; launchModeFlags    = 0x0000000E
srdTableSupport      = TRUE
immediateSupportExt  = TRUE
srdTableSupportExt   = TRUE

userElementCount     = 1;
;  userElements[0]      = PTR_EXTENDED_USER_DATA, ReferencedExtUserElements=1, s[0x0:1]
extUserElementCount  = 2;
;  extUserElements 1[0] = IMM_CONST_BUFFER 0, offset 0x0:3 dwords
;  extUserElements 1[1] = IMM_CONST_BUFFER 1, offset 0x4:7 dwords
NumVgprs             = 24;
NumSgprs             = 44;
FloatMode            = 192;
IeeeMode             = 0;
FlatPtr32            = 0;
ScratchSize          = 0 dwords/thread;
LDSByteSize          = 0 bytes/workgroup (compile time only);
ScratchWaveOffsetReg = s65535;
; texSamplerUsage         = 0x00000000
; constBufUsage           = 0x00000003

; SPI_SHADER_PGM_RSRC2_PS = 0x00000004
SSPRP:SCRATCH_EN            = 0
SSPRP:USER_SGPR             = 2
SSPRP:TRAP_PRESENT          = 0
SSPRP:WAVE_CNT_EN           = 0
SSPRP:EXTRA_LDS_SIZE        = 0
SSPRP:EXCP_EN               = 0
; SPI_SHADER_Z_FORMAT     = 0x00000000
SPZF:Z_EXPORT_FORMAT        = 0; SPI_SHADER_ZERO
; SPI_PS_IN_CONTROL       = 0x00000003
SPIC:NUM_INTERP             = 3
SPIC:PARAM_GEN              = 0
SPIC:FOG_ADDR               = 0
SPIC:BC_OPTIMIZE_DISABLE    = 0
SPIC:PASS_FOG_THROUGH_PS    = 0
; SPI_PS_INPUT_ADDR       = 0x00000002
SPIA:PERSP_CENTER_ENA       = 1
; DB_SHADER_CONTROL       = 0x00000050
DB:Z_ORDER                  = 1
DB:KILL_ENABLE              = 1
DB:CONSERVATIVE_Z_EXPORT    = 0; EXPORT_ANY_Z
; CB_SHADER_MASK          = 0x0000000F
CB:OUTPUT0_ENABLE           = 15

; export table for mrt0 [patch@(bytes=0x2FC, dwords=0xBF)]
// Export Patch Code (FMT_ZERO):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_nop         0x0000                                  // 000000000000: BF800000
  s_nop         0x0000                                  // 000000000004: BF800000
  exp           null, off, off, off, off done vm        // 000000000008: F8001890 00000000
end
// Export Patch Code (FMT_32_R):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_nop         0x0000                                  // 000000000000: BF800000
  s_nop         0x0000                                  // 000000000004: BF800000
  exp           mrt0, v0, off, off, off done vm         // 000000000008: F8001801 00000000
end
// Export Patch Code (FMT_32_GR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_nop         0x0000                                  // 000000000000: BF800000
  s_nop         0x0000                                  // 000000000004: BF800000
  exp           mrt0, v0, v1, off, off done vm          // 000000000008: F8001803 00000100
end
// Export Patch Code (FMT_32_AR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_nop         0x0000                                  // 000000000000: BF800000
  s_nop         0x0000                                  // 000000000004: BF800000
  exp           mrt0, v0, v2, off, off done vm          // 000000000008: F8001803 00000200
end
// Export Patch Code (FMT_FP16_ABGR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  v_cvt_pkrtz_f16_f32  v0, v0, v1                       // 000000000000: 5E000300
  v_cvt_pkrtz_f16_f32  v1, v3, v2                       // 000000000004: 5E020503
  exp           mrt0, v0, v0, v1, v1 done compr vm      // 000000000008: F8001C0F 00000100
end
// Export Patch Code (FMT_UNORM16_ABGR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  v_cvt_pknorm_u16_f32  v0, v0, v1                      // 000000000000: 5C000300
  v_cvt_pknorm_u16_f32  v1, v3, v2                      // 000000000004: 5C020503
  exp           mrt0, v0, v0, v1, v1 done compr vm      // 000000000008: F8001C0F 00000100
end
// Export Patch Code (FMT_SNORM16_ABGR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  v_cvt_pknorm_i16_f32  v0, v0, v1                      // 000000000000: 5A000300
  v_cvt_pknorm_i16_f32  v1, v3, v2                      // 000000000004: 5A020503
  exp           mrt0, v0, v0, v1, v1 done compr vm      // 000000000008: F8001C0F 00000100
end
// Export Patch Code (FMT_UINT16_ABGR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  v_cvt_pk_u16_u32  v0, v0, v1                          // 000000000000: 60000300
  v_cvt_pk_u16_u32  v1, v3, v2                          // 000000000004: 60020503
  exp           mrt0, v0, v0, v1, v1 done compr vm      // 000000000008: F8001C0F 00000100
end
// Export Patch Code (FMT_SINT16_ABGR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  v_cvt_pk_i16_i32  v0, v0, v1                          // 000000000000: 62000300
  v_cvt_pk_i16_i32  v1, v3, v2                          // 000000000004: 62020503
  exp           mrt0, v0, v0, v1, v1 done compr vm      // 000000000008: F8001C0F 00000100
end
// Export Patch Code (FMT_32_ABGR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_nop         0x0000                                  // 000000000000: BF800000
  s_nop         0x0000                                  // 000000000004: BF800000
  exp           mrt0, v0, v1, v3, v2 done vm            // 000000000008: F800180F 02030100
end

// Shader Instructions:
shader main
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_mov_b64     s[40:41], exec                          // 000000000000: BEA8047E
  s_load_dwordx8  s[4:11], s[0:1], 0x00                 // 000000000004: C0C20100
  s_mov_b32     m0, s2                                  // 000000000008: BEFC0302
  v_interp_p1_f32  v2, v0, attr0.w                      // 00000000000C: C8080300
  v_interp_p2_f32  v2, v1, attr0.w                      // 000000000010: C8090301
  v_cmp_eq_f32  vcc, 0, v2                              // 000000000014: 7C040480
  s_andn2_b64   s[40:41], s[40:41], vcc // wrscc        // 000000000018: 8AA86A28
  s_cbranch_scc0  label_00BE                            // 00000000001C: BF8400B6
  s_and_b64     exec, exec, s[40:41] // wrscc           // 000000000020: 87FE287E
  v_interp_p1_f32  v3, v0, attr2.z                      // 000000000024: C80C0A00
  s_waitcnt     lgkmcnt(0)                              // 000000000028: BF8C007F
  s_buffer_load_dwordx4  s[0:3], s[8:11], 0x28          // 00000000002C: C2800928
  v_interp_p1_f32  v4, v0, attr2.y                      // 000000000030: C8100900
  v_interp_p2_f32  v3, v1, attr2.z                      // 000000000034: C80D0A01
  s_buffer_load_dwordx4  s[12:15], s[8:11], 0x24        // 000000000038: C2860924
  v_interp_p1_f32  v5, v0, attr2.x                      // 00000000003C: C8140800
  v_interp_p2_f32  v4, v1, attr2.y                      // 000000000040: C8110901
  v_mul_legacy_f32  v6, v3, v3                          // 000000000044: 0E0C0703
  s_buffer_load_dwordx4  s[16:19], s[8:11], 0x2c        // 000000000048: C288092C
  v_interp_p2_f32  v5, v1, attr2.x                      // 00000000004C: C8150801
  v_mac_f32     v6, v4, v4                              // 000000000050: 3E0C0904
  v_mac_f32     v6, v5, v5                              // 000000000054: 3E0C0B05
  v_interp_p1_f32  v7, v0, attr1.z                      // 000000000058: C81C0600
  v_rsq_f32     v6, v6                                  // 00000000005C: 7E0C5D06
  v_interp_p1_f32  v8, v0, attr1.y                      // 000000000060: C8200500
  v_interp_p2_f32  v7, v1, attr1.z                      // 000000000064: C81D0601
  s_waitcnt     lgkmcnt(0)                              // 000000000068: BF8C007F
  v_mad_f32     v9, v3, v6, s2                          // 00000000006C: D2820009 000A0D03
  v_interp_p1_f32  v10, v0, attr1.x                     // 000000000074: C8280400
  v_interp_p2_f32  v8, v1, attr1.y                      // 000000000078: C8210501
  v_mul_legacy_f32  v11, v7, v7                         // 00000000007C: 0E160F07
  v_mad_f32     v12, v3, v6, s14                        // 000000000080: D282000C 003A0D03
  v_mad_f32     v13, v4, v6, s1                         // 000000000088: D282000D 00060D04
  v_mul_legacy_f32  v14, v9, v9                         // 000000000090: 0E1C1309
  v_interp_p2_f32  v10, v1, attr1.x                     // 000000000094: C8290401
  v_mac_f32     v11, v8, v8                             // 000000000098: 3E161108
  v_mad_f32     v15, v4, v6, s13                        // 00000000009C: D282000F 00360D04
  v_mul_legacy_f32  v16, v12, v12                       // 0000000000A4: 0E20190C
  v_mad_f32     v17, v5, v6, s0                         // 0000000000A8: D2820011 00020D05
  v_mac_f32     v14, v13, v13                           // 0000000000B0: 3E1C1B0D
  v_mad_f32     v3, v3, v6, s18                         // 0000000000B4: D2820003 004A0D03
  v_mac_f32     v11, v10, v10                           // 0000000000BC: 3E16150A
  v_mad_f32     v18, v5, v6, s12                        // 0000000000C0: D2820012 00320D05
  v_mac_f32     v16, v15, v15                           // 0000000000C8: 3E201F0F
  v_mac_f32     v14, v17, v17                           // 0000000000CC: 3E1C2311
  v_mad_f32     v4, v4, v6, s17                         // 0000000000D0: D2820004 00460D04
  v_mul_legacy_f32  v19, v3, v3                         // 0000000000D8: 0E260703
  s_buffer_load_dword  s3, s[4:7], 0x10                 // 0000000000DC: C2018510
  v_rsq_f32     v11, v11                                // 0000000000E0: 7E165D0B
  v_mac_f32     v16, v18, v18                           // 0000000000E4: 3E202512
  v_rsq_f32     v14, v14                                // 0000000000E8: 7E1C5D0E
  v_mad_f32     v5, v5, v6, s16                         // 0000000000EC: D2820005 00420D05
  v_mac_f32     v19, v4, v4                             // 0000000000F4: 3E260904
  v_mul_legacy_f32  v6, v7, v11                         // 0000000000F8: 0E0C1707
  v_rsq_f32     v7, v16                                 // 0000000000FC: 7E0E5D10
  v_mul_legacy_f32  v9, v9, v14                         // 000000000100: 0E121D09
  v_mac_f32     v19, v5, v5                             // 000000000104: 3E260B05
  s_buffer_load_dwordx4  s[20:23], s[8:11], 0x04        // 000000000108: C28A0904
  s_buffer_load_dwordx4  s[24:27], s[8:11], 0x08        // 00000000010C: C28C0908
  v_mul_legacy_f32  v8, v8, v11                         // 000000000110: 0E101708
  v_mul_legacy_f32  v12, v12, v7                        // 000000000114: 0E180F0C
  v_mul_legacy_f32  v13, v13, v14                       // 000000000118: 0E1A1D0D
  v_mul_legacy_f32  v9, v6, v9                          // 00000000011C: 0E121306
  v_rsq_f32     v16, v19                                // 000000000120: 7E205D13
  s_buffer_load_dwordx4  s[28:31], s[8:11], 0x00        // 000000000124: C28E0900
  s_buffer_load_dwordx4  s[32:35], s[4:7], 0x08         // 000000000128: C2900508
  s_buffer_load_dword  s15, s[8:11], 0x38               // 00000000012C: C2078938
  v_mul_legacy_f32  v10, v10, v11                       // 000000000130: 0E14170A
  v_mul_legacy_f32  v11, v15, v7                        // 000000000134: 0E160F0F
  v_mul_legacy_f32  v12, v6, v12                        // 000000000138: 0E181906
  v_mul_legacy_f32  v14, v17, v14                       // 00000000013C: 0E1C1D11
  v_mac_f32     v9, v8, v13                             // 000000000140: 3E121B08
  v_mul_legacy_f32  v3, v3, v16                         // 000000000144: 0E062103
  s_buffer_load_dwordx4  s[4:7], s[4:7], 0x00           // 000000000148: C2820500
  s_buffer_load_dwordx4  s[36:39], s[8:11], 0x0c        // 00000000014C: C292090C
  s_waitcnt     lgkmcnt(0)                              // 000000000150: BF8C007F
  s_buffer_load_dword  s7, s[8:11], 0x34                // 000000000154: C2038934
  v_mul_legacy_f32  v13, s14, v6                        // 000000000158: 0E1A0C0E
  v_mul_legacy_f32  v7, v18, v7                         // 00000000015C: 0E0E0F12
  v_mac_f32     v12, v8, v11                            // 000000000160: 3E181708
  v_mov_b32     v11, 0x38d1b717                         // 000000000164: 7E1602FF 38D1B717
  v_mad_legacy_f32  v9, v10, v14, v9 clamp              // 00000000016C: D2800809 04261D0A
  v_mul_legacy_f32  v4, v4, v16                         // 000000000174: 0E082104
  v_mul_legacy_f32  v3, v6, v3                          // 000000000178: 0E060706
  s_buffer_load_dword  s8, s[8:11], 0x3c                // 00000000017C: C204093C
  v_mac_f32     v13, s13, v8                            // 000000000180: 3E1A100D
  v_mad_legacy_f32  v12, v10, v7, v12 clamp             // 000000000184: D280080C 04320F0A
  v_max_legacy_f32  v7, s3, v11                         // 00000000018C: 1C0E1603
  v_log_f32     v9, v9                                  // 000000000190: 7E124F09
  v_mul_legacy_f32  v5, v5, v16                         // 000000000194: 0E0A2105
  v_mac_f32     v3, v8, v4                              // 000000000198: 3E060908
  v_mad_legacy_f32  v13, s12, v10, v13 clamp            // 00000000019C: D280080D 0436140C
  v_interp_p1_f32  v4, v0, attr0.x                      // 0000000001A4: C8100000
  v_interp_p1_f32  v11, v0, attr0.y                     // 0000000001A8: C82C0100
  v_interp_p1_f32  v0, v0, attr0.z                      // 0000000001AC: C8000200
  v_log_f32     v12, v12                                // 0000000001B0: 7E184F0C
  v_mul_legacy_f32  v14, s2, v6                         // 0000000001B4: 0E1C0C02
  v_mul_legacy_f32  v9, v7, v9                          // 0000000001B8: 0E121307
  v_mad_legacy_f32  v3, v10, v5, v3 clamp               // 0000000001BC: D2800803 040E0B0A
  v_mul_legacy_f32  v5, s20, v13                        // 0000000001C4: 0E0A1A14
  v_mul_legacy_f32  v15, s21, v13                       // 0000000001C8: 0E1E1A15
  v_mul_legacy_f32  v13, s22, v13                       // 0000000001CC: 0E1A1A16
  v_interp_p2_f32  v4, v1, attr0.x                      // 0000000001D0: C8110001
  v_interp_p2_f32  v11, v1, attr0.y                     // 0000000001D4: C82D0101
  v_interp_p2_f32  v0, v1, attr0.z                      // 0000000001D8: C8010201
  v_mul_legacy_f32  v1, v7, v12                         // 0000000001DC: 0E021907
  v_mac_f32     v14, s1, v8                             // 0000000001E0: 3E1C1001
  v_exp_f32     v9, v9                                  // 0000000001E4: 7E124B09
  v_mov_b32     v12, s24                                // 0000000001E8: 7E180218
  v_mov_b32     v16, s25                                // 0000000001EC: 7E200219
  v_mov_b32     v17, s26                                // 0000000001F0: 7E22021A
  v_mul_legacy_f32  v6, s18, v6                         // 0000000001F4: 0E0C0C12
  v_log_f32     v3, v3                                  // 0000000001F8: 7E064F03
  v_mul_legacy_f32  v5, v5, v4                          // 0000000001FC: 0E0A0905
  v_mul_legacy_f32  v15, v15, v11                       // 000000000200: 0E1E170F
  v_mul_legacy_f32  v13, v13, v0                        // 000000000204: 0E1A010D
  v_mov_b32     v18, s28                                // 000000000208: 7E24021C
  v_mov_b32     v19, s29                                // 00000000020C: 7E26021D
  v_mov_b32     v20, s30                                // 000000000210: 7E28021E
  v_exp_f32     v1, v1                                  // 000000000214: 7E024B01
  v_mov_b32     v21, s32                                // 000000000218: 7E2A0220
  v_mov_b32     v22, s33                                // 00000000021C: 7E2C0221
  v_mov_b32     v23, s34                                // 000000000220: 7E2E0222
  v_mad_legacy_f32  v14, s0, v10, v14 clamp             // 000000000224: D280080E 043A1400
  v_mul_legacy_f32  v9, s15, v9                         // 00000000022C: 0E12120F
  v_mul_legacy_f32  v12, s32, v12                       // 000000000230: 0E181820
  v_mul_legacy_f32  v16, s33, v16                       // 000000000234: 0E202021
  v_mul_legacy_f32  v17, s34, v17                       // 000000000238: 0E222222
  v_mac_f32     v6, s17, v8                             // 00000000023C: 3E0C1011
  v_mul_legacy_f32  v3, v7, v3                          // 000000000240: 0E060707
  v_mac_f32     v5, s4, v18                             // 000000000244: 3E0A2404
  v_mac_f32     v15, s5, v19                            // 000000000248: 3E1E2605
  v_mac_f32     v13, s6, v20                            // 00000000024C: 3E1A2806
  s_waitcnt     lgkmcnt(0)                              // 000000000250: BF8C007F
  v_mul_legacy_f32  v1, s7, v1                          // 000000000254: 0E020207
  v_mul_legacy_f32  v7, s20, v21                        // 000000000258: 0E0E2A14
  v_mul_legacy_f32  v8, s21, v22                        // 00000000025C: 0E102C15
  v_mul_legacy_f32  v18, s22, v23                       // 000000000260: 0E242E16
  v_mul_legacy_f32  v19, s24, v14                       // 000000000264: 0E261C18
  v_mul_legacy_f32  v20, s25, v14                       // 000000000268: 0E281C19
  v_mul_legacy_f32  v14, s26, v14                       // 00000000026C: 0E1C1C1A
  v_mul_legacy_f32  v12, v9, v12                        // 000000000270: 0E181909
  v_mul_legacy_f32  v16, v9, v16                        // 000000000274: 0E202109
  v_mul_legacy_f32  v9, v9, v17                         // 000000000278: 0E122309
  v_mad_legacy_f32  v6, s16, v10, v6 clamp              // 00000000027C: D2800806 041A1410
  v_exp_f32     v3, v3                                  // 000000000284: 7E064B03
  v_mov_b32     v10, s36                                // 000000000288: 7E140224
  v_mov_b32     v17, s37                                // 00000000028C: 7E220225
  v_mov_b32     v21, s38                                // 000000000290: 7E2A0226
  v_mac_f32     v5, v19, v4                             // 000000000294: 3E0A0913
  v_mac_f32     v15, v20, v11                           // 000000000298: 3E1E1714
  v_mac_f32     v13, v14, v0                            // 00000000029C: 3E1A010E
  v_mac_f32     v12, v7, v1                             // 0000000002A0: 3E180307
  v_mac_f32     v16, v8, v1                             // 0000000002A4: 3E200308
  v_mac_f32     v9, v18, v1                             // 0000000002A8: 3E120312
  v_mul_legacy_f32  v1, s36, v6                         // 0000000002AC: 0E020C24
  v_mul_legacy_f32  v7, s37, v6                         // 0000000002B0: 0E0E0C25
  v_mul_legacy_f32  v6, s38, v6                         // 0000000002B4: 0E0C0C26
  v_mul_legacy_f32  v3, s8, v3                          // 0000000002B8: 0E060608
  v_mul_legacy_f32  v8, s32, v10                        // 0000000002BC: 0E101420
  v_mul_legacy_f32  v10, s33, v17                       // 0000000002C0: 0E142221
  v_mul_legacy_f32  v14, s34, v21                       // 0000000002C4: 0E1C2A22
  v_mad_legacy_f32  v5, v1, v4, v5 clamp                // 0000000002C8: D2800805 04160901
  v_mad_legacy_f32  v15, v7, v11, v15 clamp             // 0000000002D0: D280080F 043E1707
  v_mad_legacy_f32  v13, v6, v0, v13 clamp              // 0000000002D8: D280080D 04360106
  v_mac_f32     v12, v8, v3                             // 0000000002E0: 3E180708
  v_mac_f32     v16, v10, v3                            // 0000000002E4: 3E20070A
  v_mac_f32     v9, v14, v3                             // 0000000002E8: 3E12070E
  v_add_f32     v0, v5, v12                             // 0000000002EC: 06001905
  v_add_f32     v1, v15, v16                            // 0000000002F0: 0602210F
  v_add_f32     v3, v13, v9                             // 0000000002F4: 0606130D
label_00BE:
  s_mov_b64     exec, s[40:41]                          // 0000000002F8: BEFE0428
  v_cvt_pkrtz_f16_f32  v0, v0, v1                       // 0000000002FC: 5E000300
  v_cvt_pkrtz_f16_f32  v1, v3, v2                       // 000000000300: 5E020503
  exp           mrt0, v0, v0, v1, v1 done compr vm      // 000000000304: F8001C0F 00000100
  s_endpgm                                              // 00000000030C: BF810000
end


// Shader Statistics:
//  NumActiveWaveFront:         40
//  WorkgroupSize:              64
//  NumVRegs:                   24
//  NumSRegs:                   44
//  NumActiveWaveFrontByVReg:   40
//  NumActiveWaveFrontBySReg:   40
//  NumActiveWaveFrontByLDS:    40
//  CycleSim:                   184
//  CycleSimNWaves:             184
//  Code Size:                  784
//Assembler Counts:
//  num_32bit_ops                     : 157
//  num_64bit_ops                     : 19
//  num_alu                           : 150
//  num_fc                            : 25
//  num_inst_exp                      : 1
//  num_inst_ldsgds                   : 0
//  num_inst_mimg                     : 0
//  num_inst_mtbuf                    : 0
//  num_inst_mubuf                    : 0
//  num_inst_sopp                     : 6
//  num_inst_sopc                     : 0
//  num_inst_sop1                     : 3
//  num_inst_sop2                     : 2
//  num_inst_smrd                     : 0
//  num_inst_sopk                     : 0
//  num_inst_vop1                     : 24
//  num_inst_vop2                     : 87
//  num_inst_vop3                     : 18
//  num_inst_vopc                     : 1
//  num_inst_vintrp                   : 20
//  constant_literal_operands         : 0
//  num_tex                           : 1
//  num_vmem_group                    : 0
//  vmem_grouping_started             : 0
//
//Compilation Notes:
//
//  PS has no UAV writes, consider forcing REZ/LATEZ.
// Shader Statistics:
// m_uNumActiveWaveFront             : 40
// m_uVRegLimit                      : 256
// m_uSRegLimit                      : 512
// m_uNumVRegs                       : 24
// m_uNumSRegs                       : 44
// m_uSCCodeSize                     : 784
// m_uWorkgroupSize                  : 64
// m_uNumActiveWaveFrontByVReg       : 40
// m_uNumActiveWaveFrontBySReg       : 40
// m_uNumActiveWaveFrontByLDS        : 40
// m_uCycleSim1Wave                  : 184
// m_uCycleSimNWaves                 : 184

// Assembler Counts:
// num_32bit_ops                     : 157
// num_64bit_ops                     : 19
// num_alu                           : 150
// num_fc                            : 25
// num_inst_exp                      : 1
// num_inst_ldsgds                   : 0
// num_inst_mimg                     : 0
// num_inst_mtbuf                    : 0
// num_inst_mubuf                    : 0
// num_inst_sopp                     : 6
// num_inst_sopc                     : 0
// num_inst_sop1                     : 3
// num_inst_sop2                     : 2
// num_inst_smrd                     : 0
// num_inst_sopk                     : 0
// num_inst_vop1                     : 24
// num_inst_vop2                     : 87
// num_inst_vop3                     : 18
// num_inst_vopc                     : 1
// num_inst_vintrp                   : 20
// num_inst_smem                     : 14
// constant_literal_operands         : 0
// num_tex                           : 1
// num_vmem_group                    : 0
// vmem_grouping_started             : 0
// m_fFullPrecompilePromise          : 0
// m_fIntegerDivideExpansion         : 0
// m_fIntegerModExpansion            : 0
// m_fDoubleDivideExpansion          : 0
// m_fUsesScratch                    : 0
// m_fPerThreadIndirection           : 0
// m_fUsingTableLoads                : 0
// m_fUsingSHmemLoads                : 1
// fSemanticHashFlagOverrideApplied  : 0
// fPSHasNoUAVWrite                  : 1
// m_fRenderTargetsCanBeCompacted    : 0
// version                           : 3
// fCodePatched                      : 0

// Approximately 0 instruction slots used
#endif

const BYTE DGSLPhong_mainTk[] =
{
     68,  88,  66,  67, 218,   0, 
    227, 115, 243,  72, 215,  52, 
     47,  81, 159, 232, 153, 196, 
    102, 128,   1,   0,   0,   0, 
    193,  12,   0,   0,   5,   0, 
      0,   0,  52,   0,   0,   0, 
     32,   1,   0,   0,  84,   1, 
      0,   0,  92,  12,   0,   0, 
    108,  12,   0,   0,  73,  83, 
     71,  78, 228,   0,   0,   0, 
      8,   0,   0,   0,   8,   0, 
      0,   0, 200,   0,   0,   0, 
      0,   0,   0,   0,   1,   0, 
      0,   0,   3,   0,   0,   0, 
      0,   0,   0,   0,  15,   0, 
      0,   0, 212,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   0,   0,  15,  15, 
      0,   0, 218,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      2,   0,   0,   0,   3,   0, 
      0,   0, 218,   0,   0,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      3,   0,   0,   0,   7,   7, 
      0,   0, 218,   0,   0,   0, 
      2,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      4,   0,   0,   0,   7,   0, 
      0,   0, 218,   0,   0,   0, 
      3,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      5,   0,   0,   0,   7,   7, 
      0,   0, 218,   0,   0,   0, 
      4,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      6,   0,   0,   0,  15,   0, 
      0,   0, 218,   0,   0,   0, 
      5,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      7,   0,   0,   0,   7,   0, 
      0,   0,  83,  86,  95,  80, 
     79,  83,  73,  84,  73,  79, 
     78,   0,  67,  79,  76,  79, 
     82,   0,  84,  69,  88,  67, 
     79,  79,  82,  68,   0, 171, 
     79,  83,  71,  78,  44,   0, 
      0,   0,   1,   0,   0,   0, 
      8,   0,   0,   0,  32,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   3,   0, 
      0,   0,   0,   0,   0,   0, 
     15,   0,   0,   0,  83,  86, 
     95,  84,  97, 114, 103, 101, 
    116,   0, 171, 171,  83,  72, 
     69,  88,   0,  11,   0,   0, 
     80,   0,   0,   0, 192,   2, 
      0,   0,  53,  16,   0,   0, 
      5,   0,   0,   0, 155,   1, 
      0,   0,  80,   0,   0,   0, 
    150,   1,   0,   0, 106,   8, 
      0,   1,  89,   0,   0,   4, 
     70, 142,  32,   0,   0,   0, 
      0,   0,   5,   0,   0,   0, 
     89,   0,   0,   4,  70, 142, 
     32,   0,   1,   0,   0,   0, 
     21,   0,   0,   0,  98,  16, 
      0,   3, 242,  16,  16,   0, 
      1,   0,   0,   0,  98,  16, 
      0,   3, 114,  16,  16,   0, 
      3,   0,   0,   0,  98,  16, 
      0,   3, 114,  16,  16,   0, 
      5,   0,   0,   0, 101,   0, 
      0,   3, 242,  32,  16,   0, 
      0,   0,   0,   0, 104,   0, 
      0,   2,   4,   0,   0,   0, 
     24,   0,   0,   7,  18,   0, 
     16,   0,   0,   0,   0,   0, 
     58,  16,  16,   0,   1,   0, 
      0,   0,   1,  64,   0,   0, 
      0,   0,   0,   0,  13,   0, 
      4,   3,  10,   0,  16,   0, 
      0,   0,   0,   0,  16,   0, 
      0,   7,  18,   0,  16,   0, 
      0,   0,   0,   0,  70,  18, 
     16,   0,   3,   0,   0,   0, 
     70,  18,  16,   0,   3,   0, 
      0,   0,  68,   0,   0,   5, 
     18,   0,  16,   0,   0,   0, 
      0,   0,  10,   0,  16,   0, 
      0,   0,   0,   0,  56,   0, 
      0,   7, 114,   0,  16,   0, 
      0,   0,   0,   0,   6,   0, 
     16,   0,   0,   0,   0,   0, 
     70,  18,  16,   0,   3,   0, 
      0,   0,  16,   0,   0,   7, 
    130,   0,  16,   0,   0,   0, 
      0,   0,  70,  18,  16,   0, 
      5,   0,   0,   0,  70,  18, 
     16,   0,   5,   0,   0,   0, 
     68,   0,   0,   5, 130,   0, 
     16,   0,   0,   0,   0,   0, 
     58,   0,  16,   0,   0,   0, 
      0,   0,  16,  32,   0,   8, 
     18,   0,  16,   0,   1,   0, 
      0,   0,  70, 130,  32,   0, 
      1,   0,   0,   0,   9,   0, 
      0,   0,  70,   2,  16,   0, 
      0,   0,   0,   0,  56,   0, 
      0,   8, 114,   0,  16,   0, 
      1,   0,   0,   0,   6,   0, 
     16,   0,   1,   0,   0,   0, 
     70, 130,  32,   0,   1,   0, 
      0,   0,   1,   0,   0,   0, 
     56,   0,   0,   7, 114,   0, 
     16,   0,   1,   0,   0,   0, 
     70,   2,  16,   0,   1,   0, 
      0,   0,  70,  18,  16,   0, 
      1,   0,   0,   0,  50,   0, 
      0,  11, 114,   0,  16,   0, 
      1,   0,   0,   0,  70, 130, 
     32,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,  70, 130, 
     32,   0,   1,   0,   0,   0, 
      0,   0,   0,   0,  70,   2, 
     16,   0,   1,   0,   0,   0, 
     50,   0,   0,  10, 114,   0, 
     16,   0,   2,   0,   0,   0, 
     70,  18,  16,   0,   5,   0, 
      0,   0, 246,  15,  16,   0, 
      0,   0,   0,   0,  70, 130, 
     32,   0,   1,   0,   0,   0, 
      9,   0,   0,   0,  16,   0, 
      0,   7, 130,   0,  16,   0, 
      1,   0,   0,   0,  70,   2, 
     16,   0,   2,   0,   0,   0, 
     70,   2,  16,   0,   2,   0, 
      0,   0,  68,   0,   0,   5, 
    130,   0,  16,   0,   1,   0, 
      0,   0,  58,   0,  16,   0, 
      1,   0,   0,   0,  56,   0, 
      0,   7, 114,   0,  16,   0, 
      2,   0,   0,   0, 246,  15, 
     16,   0,   1,   0,   0,   0, 
     70,   2,  16,   0,   2,   0, 
      0,   0,  16,  32,   0,   7, 
    130,   0,  16,   0,   1,   0, 
      0,   0,  70,   2,  16,   0, 
      0,   0,   0,   0,  70,   2, 
     16,   0,   2,   0,   0,   0, 
     52,   0,   0,   8,  18,   0, 
     16,   0,   2,   0,   0,   0, 
     10, 128,  32,   0,   0,   0, 
      0,   0,   4,   0,   0,   0, 
      1,  64,   0,   0,  23, 183, 
    209,  56,  47,   0,   0,   5, 
    130,   0,  16,   0,   1,   0, 
      0,   0,  58,   0,  16,   0, 
      1,   0,   0,   0,  56,   0, 
      0,   7, 130,   0,  16,   0, 
      1,   0,   0,   0,  58,   0, 
     16,   0,   1,   0,   0,   0, 
     10,   0,  16,   0,   2,   0, 
      0,   0,  25,   0,   0,   5, 
    130,   0,  16,   0,   1,   0, 
      0,   0,  58,   0,  16,   0, 
      1,   0,   0,   0,  56,   0, 
      0,   8, 130,   0,  16,   0, 
      1,   0,   0,   0,  58,   0, 
     16,   0,   1,   0,   0,   0, 
     10, 128,  32,   0,   1,   0, 
      0,   0,  13,   0,   0,   0, 
     56,   0,   0,   9, 226,   0, 
     16,   0,   2,   0,   0,   0, 
      6, 137,  32,   0,   0,   0, 
      0,   0,   2,   0,   0,   0, 
      6, 137,  32,   0,   1,   0, 
      0,   0,   1,   0,   0,   0, 
     16,  32,   0,   8,  18,   0, 
     16,   0,   3,   0,   0,   0, 
     70, 130,  32,   0,   1,   0, 
      0,   0,  10,   0,   0,   0, 
     70,   2,  16,   0,   0,   0, 
      0,   0,  56,   0,   0,   8, 
    114,   0,  16,   0,   3,   0, 
      0,   0,   6,   0,  16,   0, 
      3,   0,   0,   0,  70, 130, 
     32,   0,   1,   0,   0,   0, 
      2,   0,   0,   0,  50,   0, 
      0,   9, 114,   0,  16,   0, 
      1,   0,   0,   0,  70,   2, 
     16,   0,   3,   0,   0,   0, 
     70,  18,  16,   0,   1,   0, 
      0,   0,  70,   2,  16,   0, 
      1,   0,   0,   0,  50,   0, 
      0,  10, 114,   0,  16,   0, 
      3,   0,   0,   0,  70,  18, 
     16,   0,   5,   0,   0,   0, 
    246,  15,  16,   0,   0,   0, 
      0,   0,  70, 130,  32,   0, 
      1,   0,   0,   0,  10,   0, 
      0,   0,  16,   0,   0,   7, 
    130,   0,  16,   0,   3,   0, 
      0,   0,  70,   2,  16,   0, 
      3,   0,   0,   0,  70,   2, 
     16,   0,   3,   0,   0,   0, 
     68,   0,   0,   5, 130,   0, 
     16,   0,   3,   0,   0,   0, 
     58,   0,  16,   0,   3,   0, 
      0,   0,  56,   0,   0,   7, 
    114,   0,  16,   0,   3,   0, 
      0,   0, 246,  15,  16,   0, 
      3,   0,   0,   0,  70,   2, 
     16,   0,   3,   0,   0,   0, 
     16,  32,   0,   7,  18,   0, 
     16,   0,   3,   0,   0,   0, 
     70,   2,  16,   0,   0,   0, 
      0,   0,  70,   2,  16,   0, 
      3,   0,   0,   0,  47,   0, 
      0,   5,  18,   0,  16,   0, 
      3,   0,   0,   0,  10,   0, 
     16,   0,   3,   0,   0,   0, 
     56,   0,   0,   7,  18,   0, 
     16,   0,   3,   0,   0,   0, 
     10,   0,  16,   0,   2,   0, 
      0,   0,  10,   0,  16,   0, 
      3,   0,   0,   0,  25,   0, 
      0,   5,  18,   0,  16,   0, 
      3,   0,   0,   0,  10,   0, 
     16,   0,   3,   0,   0,   0, 
     56,   0,   0,   8,  18,   0, 
     16,   0,   3,   0,   0,   0, 
     10,   0,  16,   0,   3,   0, 
      0,   0,  10, 128,  32,   0, 
      1,   0,   0,   0,  14,   0, 
      0,   0,  56,   0,   0,   9, 
    226,   0,  16,   0,   3,   0, 
      0,   0,   6, 137,  32,   0, 
      0,   0,   0,   0,   2,   0, 
      0,   0,   6, 137,  32,   0, 
      1,   0,   0,   0,   2,   0, 
      0,   0,  56,   0,   0,   7, 
    114,   0,  16,   0,   3,   0, 
      0,   0,   6,   0,  16,   0, 
      3,   0,   0,   0, 150,   7, 
     16,   0,   3,   0,   0,   0, 
     50,   0,   0,   9, 226,   0, 
     16,   0,   2,   0,   0,   0, 
     86,  14,  16,   0,   2,   0, 
      0,   0, 246,  15,  16,   0, 
      1,   0,   0,   0,   6,   9, 
     16,   0,   3,   0,   0,   0, 
     16,  32,   0,   8, 130,   0, 
     16,   0,   1,   0,   0,   0, 
     70, 130,  32,   0,   1,   0, 
      0,   0,  11,   0,   0,   0, 
     70,   2,  16,   0,   0,   0, 
      0,   0,  56,   0,   0,   8, 
    114,   0,  16,   0,   3,   0, 
      0,   0, 246,  15,  16,   0, 
      1,   0,   0,   0,  70, 130, 
     32,   0,   1,   0,   0,   0, 
      3,   0,   0,   0,  50,  32, 
      0,   9, 114,   0,  16,   0, 
      1,   0,   0,   0,  70,   2, 
     16,   0,   3,   0,   0,   0, 
     70,  18,  16,   0,   1,   0, 
      0,   0,  70,   2,  16,   0, 
      1,   0,   0,   0,  50,   0, 
      0,  10, 114,   0,  16,   0, 
      3,   0,   0,   0,  70,  18, 
     16,   0,   5,   0,   0,   0, 
    246,  15,  16,   0,   0,   0, 
      0,   0,  70, 130,  32,   0, 
      1,   0,   0,   0,  11,   0, 
      0,   0,  16,   0,   0,   7, 
    130,   0,  16,   0,   0,   0, 
      0,   0,  70,   2,  16,   0, 
      3,   0,   0,   0,  70,   2, 
     16,   0,   3,   0,   0,   0, 
     68,   0,   0,   5, 130,   0, 
     16,   0,   0,   0,   0,   0, 
     58,   0,  16,   0,   0,   0, 
      0,   0,  56,   0,   0,   7, 
    114,   0,  16,   0,   3,   0, 
      0,   0, 246,  15,  16,   0, 
      0,   0,   0,   0,  70,   2, 
     16,   0,   3,   0,   0,   0, 
     16,  32,   0,   7,  18,   0, 
     16,   0,   0,   0,   0,   0, 
     70,   2,  16,   0,   0,   0, 
      0,   0,  70,   2,  16,   0, 
      3,   0,   0,   0,  47,   0, 
      0,   5,  18,   0,  16,   0, 
      0,   0,   0,   0,  10,   0, 
     16,   0,   0,   0,   0,   0, 
     56,   0,   0,   7,  18,   0, 
     16,   0,   0,   0,   0,   0, 
     10,   0,  16,   0,   0,   0, 
      0,   0,  10,   0,  16,   0, 
      2,   0,   0,   0,  25,   0, 
      0,   5,  18,   0,  16,   0, 
      0,   0,   0,   0,  10,   0, 
     16,   0,   0,   0,   0,   0, 
     56,   0,   0,   8,  18,   0, 
     16,   0,   0,   0,   0,   0, 
     10,   0,  16,   0,   0,   0, 
      0,   0,  10, 128,  32,   0, 
      1,   0,   0,   0,  15,   0, 
      0,   0,  56,   0,   0,   9, 
    226,   0,  16,   0,   0,   0, 
      0,   0,   6, 137,  32,   0, 
      0,   0,   0,   0,   2,   0, 
      0,   0,   6, 137,  32,   0, 
      1,   0,   0,   0,   3,   0, 
      0,   0,  50,   0,   0,   9, 
    114,   0,  16,   0,   0,   0, 
      0,   0, 150,   7,  16,   0, 
      0,   0,   0,   0,   6,   0, 
     16,   0,   0,   0,   0,   0, 
    150,   7,  16,   0,   2,   0, 
      0,   0,   0,   0,   0,   7, 
    114,  32,  16,   0,   0,   0, 
      0,   0,  70,   2,  16,   0, 
      0,   0,   0,   0,  70,   2, 
     16,   0,   1,   0,   0,   0, 
     54,   0,   0,   5, 130,  32, 
     16,   0,   0,   0,   0,   0, 
     58,  16,  16,   0,   1,   0, 
      0,   0,  62,   0,   0,   1, 
     53,  16,   0,   0,  37,   1, 
      0,   0,  23,   0,   1,   0, 
     41,  58,  18,   0, 120,   1, 
    237,  88,  77, 136,  28,  69, 
     20, 174, 234, 255, 154, 237, 
    126, 221, 211,  59,  59, 211, 
    211, 233,  93, 123,  38, 147, 
    113, 118, 217,  68,  73,  52, 
    134,  69,  10,  53, 139,   1, 
     55, 184, 129,  44,  24, 194, 
    108, 126,  54, 187, 152,  85, 
    243,  67,  54, 136, 135, 208, 
    174, 193, 191, 132,  69, 130, 
      7,  17, 193,  91,  14,  57, 
    120, 240, 164,  30,  36,  27, 
     26,  15, 125,  53,  32, 226, 
    205, 131,   7, 239,  94,  60, 
    132, 196, 247,  58,  61, 235, 
    176,  49, 183,   1,   5, 231, 
    131, 239, 189, 122,  85, 213, 
    175, 190, 122, 213, 135, 174, 
    158, 241, 217,  67, 180,  78, 
     77, 146,  59, 252, 235, 238, 
    198,  49, 131,  49,  29, 219, 
     28,  73, 158, 240, 185,  67, 
    150, 177, 223,  60, 178, 140, 
    117, 200, 208,   4, 133, 177, 
      0, 221,  52, 210,  83,  25, 
    123,   1,  61, 141, 245, 248, 
     69, 253, 217, 131, 251, 246, 
     61, 119,  16, 155, 236,  41, 
     36, 205, 253, 174, 224, 151, 
    200,  81, 228, 103, 200,  58, 
    146, 210, 109,   7,  74, 201, 
    129, 169, 105, 169,  45,  80, 
    158, 215, 144,  36, 159, 158, 
    171,  32,   1,  73, 120,  36, 
    207,  10, 153, 127, 198, 215, 
     72, 202, 245,  56, 144, 182, 
     30,  40,  47, 233,  36, 208, 
    126, 255, 109, 108, 223,  39, 
    213, 168, 119,  78,   4,  58, 
    143, 126,  80, 125, 122, 207, 
    220,  42, 206, 177,  87, 211, 
    239, 139, 152, 106,  65, 123, 
    187, 131, 124,  28,  30,  32, 
     44, 106, 244, 161,  23, 211, 
    146,   6, 119, 243,  14,  67, 
    173, 229,   9,  13, 253, 201, 
    135,  47, 195, 255,   4,  26, 
     25,   4, 213, 130, 234, 123, 
      4, 137,  21, 217,  66, 111, 
    124, 147,  12,  91,  71, 183, 
    190, 121,  35,  96, 127,  82, 
    212, 139, 249, 182,  88, 165, 
     56,  63, 188, 190, 152, 146, 
    171, 236, 132, 170,  43,  39, 
    220, 168,  24,  87,  89,  23, 
    227, 110,  95, 124,  28, 227, 
    227, 125, 241,  41, 140,  79, 
    245, 197,  75,  24,  47, 109, 
    197,  69, 126,  55,  95,  79, 
     85, 232, 172, 177,  51, 249, 
     47, 115, 168, 113,  48,  28, 
    106,  28,  12, 135,  26,   7, 
    195, 161, 198, 193, 112, 168, 
    113,  48,  28, 106,  28,  12, 
    135,  26,   7,  70, 150, 104, 
    183, 110,  51, 158, 222,  81, 
    212, 123, 183, 153, 106, 101, 
     92,  21, 217, 186, 166,  93, 
    233, 188, 113, 235, 250,  55, 
    236, 253, 205, 164, 115, 255, 
     35,  86, 178, 179, 119, 217, 
    198, 102,  71, 172, 167,  76, 
    120,  25,  47,  57,  89,  75, 
    124, 152,  50, 171, 146, 113, 
     81, 206,  84, 211, 134, 105, 
    241, 113, 202, 173, 177,  76, 
     19, 182, 212,  71, 108, 201, 
    140,  40,  51,  22, 237, 132, 
    233, 113, 198, 141, 241, 252, 
    121, 193, 174, 222,  85, 157, 
     18, 126, 192, 118,  50, 174, 
     55,  50, 211, 173, 130, 157, 
    247, 205,  48,   7, 189, 230, 
     24,  76, 140,  70, 192, 181, 
    201, 204,  42,  87, 165, 155, 
    247, 237, 103, 118,  61, 134, 
     50, 182, 117,  71,  97, 206, 
    142,  72, 170, 216,  86, 157, 
     87,  88, 105, 172,  42, 253, 
    188, 127,  47, 115, 159, 136, 
    101, 121, 103,  36,  53, 140, 
     53, 231, 101, 166, 154, 109, 
    240,  62, 224, 233, 200,  98, 
     53, 241, 119, 197,  18,  22, 
    163,  68, 207, 231, 190, 196, 
     52, 209, 150, 102, 205,   6, 
    111,  17,  18,  49, 238, 131, 
     62, 210, 150, 154, 184, 158, 
     90,  98,  35, 181, 106,  30, 
    216, 110,   0, 206, 120,   8, 
    198, 168,  15, 163, 139, 113, 
    194, 196,  39, 169, 165, 223, 
     72,  15,  92,  51, 211,  82, 
    173,   2,  46, 234,  54, 234, 
      1, 148, 199,  35, 176, 118, 
    248,  82, 109,  24, 192, 244, 
    171, 169,  45,  62,  77, 105, 
    159, 207,  92,  83,  83, 176, 
     67, 240,  93,   0, 171,  22, 
    200,   7,  74,  53, 169, 125, 
    251, 227,   1,  97, 173, 223, 
     45, 141, 183,  53, 173,  97, 
    129,  97,  26, 240, 188, 208, 
     82, 199,  11, 165,  77, 253, 
    238,  94,  77, 173,  66,  36, 
    230, 253,  68, 111, 148, 192, 
     18, 134, 116, 176, 223, 174, 
    236, 199, 207, 125,  47,  99, 
    124,  58, 195, 239, 245, 204, 
    158,  15,  18, 197, 142, 192, 
     68, 109,  42,  61,  55,   2, 
     90,  37,  44, 193,  88,  56, 
      1, 213,  48,   4, 206, 202, 
     25, 231, 187,  51, 174, 240, 
    204, 172,  43, 192, 189,  72, 
    138,  57,  63,   9, 148,  32, 
    169,  43, 113,  18,  42, 205, 
    196, 183, 109,  80, 231, 141, 
     68,  23,  37, 112, 107,  19, 
    224, 240,  16,  34, 165, 149, 
    140,  43, 237, 100,  66, 233, 
     36, 124,  78,  73,  98, 101, 
     42, 105,  40, 211,  73,  83, 
    217, 147,   0, 174, 195,  42, 
     51, 154, 235, 251,  16,   7, 
      1,  52, 226,  24, 154, 205, 
     38, 148,  61,  91, 154, 184, 
     15, 173,  85, 146, 122, 123, 
     66,  26, 157,  80, 210, 254, 
     77,  69, 129, 202,  20, 192, 
    216, 180,   7, 213,  61,  45, 
      8, 162,  54, 212, 163,  14, 
    132,  81,   4,   2, 235,  38, 
     26,  49, 136, 157,  62,  24, 
    152, 215, 171, 132, 154,  58, 
    103,  36,  45, 165, 146, 236, 
     66, 109, 109,  92, 119,  84, 
    148, 100, 165,  54,  33, 129, 
    135, 210,  84,   3, 105, 169, 
    177, 244,  85,  95, 182, 108, 
      5, 118, 217,   0, 109, 212, 
    111,  25,   6, 196,  21,  15, 
     26, 205,  10,  52, 167,  34, 
    208,  49,  23,  23,  85, 205, 
     69, 111, 214, 164,  70, 181, 
     51, 248, 126, 205,  50,   3, 
     89,  50, 241, 252,  77,  95, 
    234, 117, 102, 184,  13, 197, 
    112,  70,  13, 163, 163, 221, 
    199, 247, 125, 219, 221, 135, 
    189, 183,  89,  39,  79, 247, 
    162,  62, 228, 161, 150,  79, 
    216, 130,  66,  33, 246, 245, 
    238,  98, 132, 233,  50,  89, 
    198, 238,  21, 119, 225, 167, 
    145,   2, 201, 113,  33, 154, 
     62,  86, 180,   9, 244,  95, 
     68,  43, 254,  78, 252, 244, 
    203, 207, 127, 108,  76, 254, 
     78,  83, 115,  44,  23, 121, 
    102,  11,  31,  35, 109, 228, 
    223, 184,  73, 230,  17, 108, 
     20, 243, 175,  20, 158, 100, 
    144,  62, 124,  57, 209,  34, 
    138,  31,  28,  95,  21, 227, 
     55,  11,  79, 119, 239,  17, 
    228, 118,  29,  63,  20, 227, 
    175,  34,  73, 233, 236,  76, 
    247, 197, 133,  67, 221, 181, 
    203,  39, 151,  87, 222, 238, 
    206, 173,  94,  94, 235, 206, 
    174,  94,  90,  57, 115, 249, 
    216, 194,  92, 119, 237, 210, 
    153, 238, 209, 179, 167, 151, 
     87,  46, 173, 117,  15,  94, 
     56, 119, 113, 245, 173, 149, 
    229, 238, 177, 165,  11, 239, 
    204, 159,  95, 153,  61, 116, 
    244, 240, 145, 179,  23, 206, 
    191, 126, 242, 220, 233, 213, 
    243,  11, 111, 238, 185, 184, 
    188, 196, 254,   2, 226,  60, 
     81,  23,  88,  72,  83,  72, 
      8,   0,   0,   0, 213, 217, 
    215, 243, 140,  41, 232,   9, 
     88,  80,  68,  80,  77,   0, 
      0,   0,  68,  58,  92,  65, 
     84,  71,  92, 115, 116,  95, 
    100, 101, 118,  92,  75, 105, 
    116, 115,  92,  68, 105, 114, 
    101,  99, 116,  88,  84,  75, 
     92, 115, 114,  99,  92,  83, 
    104,  97, 100, 101, 114, 115, 
     92,  67, 111, 109, 112, 105, 
    108, 101, 100,  92,  88,  98, 
    111, 120,  79, 110, 101,  68, 
     71,  83,  76,  80, 104, 111, 
    110, 103,  95, 109,  97, 105, 
    110,  84, 107,  46, 112, 100, 
     98
};
