#if 0
//
// Generated by Microsoft (R) D3D Shader Disassembler for Durango
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xy          0     NONE   float   xy  
// TEXCOORD                 1   xyzw        1     NONE   float   xyzw
// TEXCOORD                 2   xyz         2     NONE   float   xyz 
// COLOR                    0   xyzw        3     NONE   float   xyzw
// SV_Position              0   xyzw        4      POS   float   xyzw
//
vs_5_0
// Opaque Custom Data - XBOX Precompiled Shader Header
// First Precompiled Shader at offset:[166]
// Embedded Data:
//  0x000000a6 - Offset To First Precompiled Shader
//  0x00010050 - Original Shader Descriptor
//  0x000000a1 - Original Shader Size
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[24], immediateIndexed
dcl_input v0.xyzw
dcl_input v1.xyz
dcl_input v2.xy
dcl_output o0.xy
dcl_output o1.xyzw
dcl_output o2.xyz
dcl_output o3.xyzw
dcl_output_siv o4.xyzw, position
dcl_temps 1
mov o0.xy, v2.xyxx
dp4 o1.x, v0.xyzw, cb0[13].xyzw
dp4 o1.y, v0.xyzw, cb0[14].xyzw
dp4 o1.z, v0.xyzw, cb0[15].xyzw
dp4_sat o1.w, v0.xyzw, cb0[12].xyzw
dp3 r0.x, v1.xyzx, cb0[17].xyzx
dp3 r0.y, v1.xyzx, cb0[18].xyzx
dp3 r0.z, v1.xyzx, cb0[19].xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul o2.xyz, r0.wwww, r0.xyzx
mov o3.xyz, l(1.000000,1.000000,1.000000,0)
mov o3.w, cb0[2].w
dp4 o4.x, v0.xyzw, cb0[20].xyzw
dp4 o4.y, v0.xyzw, cb0[21].xyzw
dp4 o4.z, v0.xyzw, cb0[22].xyzw
dp4 o4.w, v0.xyzw, cb0[23].xyzw
ret 
// Opaque Custom Data - XBOX Precompiled Shader Object
// Offset:[166], bundle is:[195] DWORDS.
// Disassembled Precompiled Shader Object:
// Shader Type               : (VS)
// Shader Hw Stage           : (VS)
// PDB Filename              : D:\ATG\st_dev\Kits\DirectXTK\src\Shaders\Compiled\XboxOneEnvironmentMapEffect_VSEnvMapPixelLighting.pdb
// Shader Semantic Hash      : 0x211d8d0a806a707b
//
// Shader Data:
; ----------------- VS Data ------------------------
; Input Semantic Mappings
;   [0] generic, usageIdx  0, channelMask 15, v[4:7]
;   [1] generic, usageIdx  1, channelMask  7, v[8:10]
;   [2] generic, usageIdx  2, channelMask  3, v[12:13]
; Output Semantic Mappings
;   [0] generic,  usageIdx 0, paramIdx 0, paramSlot 0
;   [1] generic,  usageIdx 1, paramIdx 1, paramSlot 0
;   [2] generic,  usageIdx 2, paramIdx 2, paramSlot 0
;   [3] generic,  usageIdx 3, paramIdx 3, paramSlot 0

codeLenInByte        = 296 bytes;

; launchModeFlags    = 0x0000000E
srdTableSupport      = TRUE
immediateSupportExt  = TRUE
srdTableSupportExt   = TRUE

userElementCount     = 3;
;  userElements[0]      = PTR_VERTEX_BUFFER_TABLE, Element=1 dwords, s[0x2:3]
;  userElements[1]      = PTR_EXTENDED_USER_DATA, ReferencedExtUserElements=1, s[0x2:3]
;  userElements[2]      = SUB_PTR_FETCH_SHADER, s[0x2:3]
extUserElementCount  = 1;
;  extUserElements 1[0] = IMM_CONST_BUFFER 0, offset 0x0:3 dwords
NumVgprs             = 17;
NumSgprs             = 50;
FloatMode            = 192;
IeeeMode             = 0;
FlatPtr32            = 0;
ScratchSize          = 0 dwords/thread;
LDSByteSize          = 0 bytes/workgroup (compile time only);
ScratchWaveOffsetReg = s65535;
; texSamplerUsage         = 0x00000000
; constBufUsage           = 0x00000001

; SPI_SHADER_PGM_RSRC2_VS = 0x00000008
SSPRV:USER_SGPR             = 4
; PA_CL_VS_OUT_CNTL       = 0x00000000
; SPI_VS_OUT_CONFIG       = 0x00000006
SVOC:VS_EXPORT_COUNT        = 3
SVOC:VS_HALF_PACK           = 0
SVOC:VS_EXPORTS_FOG         = 0
SVOC:VS_OUT_FOG_VEC_ADDR    = 0
; SPI_SHADER_POS_FORMAT     = 0x00000004
SSPF:POS0_EXPORT_FORMAT     = 4
SSPF:POS1_EXPORT_FORMAT     = 0
SSPF:POS2_EXPORT_FORMAT     = 0
SSPF:POS3_EXPORT_FORMAT     = 0
VGT_STRMOUT_CONFIG = 0x0
VGT_STRMOUT_CONFIG:RAST_STREAM = 0
VGT_STRMOUT_CONFIG:STREAMOUT_0_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_1_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_2_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_3_EN = 0
; exportVertexSize          = 4

// Shader Instructions:
shader main
  asic(CI)
  type(VS)
  s_swappc_b64  s[2:3], s[2:3]                          // 000000000000: BE822102
  s_load_dwordx4  s[0:3], s[2:3], 0x00                  // 000000000004: C0800300
  s_waitcnt     lgkmcnt(0)                              // 000000000008: BF8C007F
  s_buffer_load_dwordx4  s[4:7], s[0:3], 0x4c           // 00000000000C: C282014C
  s_buffer_load_dwordx4  s[8:11], s[0:3], 0x48          // 000000000010: C2840148
  s_buffer_load_dwordx4  s[12:15], s[0:3], 0x44         // 000000000014: C2860144
  s_buffer_load_dwordx16  s[16:31], s[0:3], 0x30        // 000000000018: C3080130
  s_buffer_load_dwordx16  s[32:47], s[0:3], 0x50        // 00000000001C: C3100150
  s_waitcnt     vmcnt(0) & lgkmcnt(0)                   // 000000000020: BF8C0070
  v_mul_legacy_f32  v0, s6, v10                         // 000000000024: 0E001406
  v_mul_legacy_f32  v1, s10, v10                        // 000000000028: 0E02140A
  v_mac_f32     v0, s5, v9                              // 00000000002C: 3E001205
  s_buffer_load_dword  s0, s[0:3], 0x0b                 // 000000000030: C200010B
  v_mul_legacy_f32  v2, s14, v10                        // 000000000034: 0E04140E
  v_mac_f32     v1, s9, v9                              // 000000000038: 3E021209
  v_mac_f32     v0, s4, v8                              // 00000000003C: 3E001004
  v_mac_f32     v2, s13, v9                             // 000000000040: 3E04120D
  v_mac_f32     v1, s8, v8                              // 000000000044: 3E021008
  v_mul_legacy_f32  v3, v0, v0                          // 000000000048: 0E060100
  v_mul_legacy_f32  v9, s23, v7                         // 00000000004C: 0E120E17
  v_mul_legacy_f32  v10, s27, v7                        // 000000000050: 0E140E1B
  v_mul_legacy_f32  v11, s31, v7                        // 000000000054: 0E160E1F
  v_mul_legacy_f32  v14, s19, v7                        // 000000000058: 0E1C0E13
  v_mac_f32     v2, s12, v8                             // 00000000005C: 3E04100C
  v_mac_f32     v3, v1, v1                              // 000000000060: 3E060301
  v_mul_legacy_f32  v8, s35, v7                         // 000000000064: 0E100E23
  v_mul_legacy_f32  v15, s39, v7                        // 000000000068: 0E1E0E27
  v_mul_legacy_f32  v16, s43, v7                        // 00000000006C: 0E200E2B
  v_mul_legacy_f32  v7, s47, v7                         // 000000000070: 0E0E0E2F
  v_mac_f32     v9, s22, v6                             // 000000000074: 3E120C16
  v_mac_f32     v10, s26, v6                            // 000000000078: 3E140C1A
  v_mac_f32     v11, s30, v6                            // 00000000007C: 3E160C1E
  v_mac_f32     v14, s18, v6                            // 000000000080: 3E1C0C12
  v_mac_f32     v3, v2, v2                              // 000000000084: 3E060502
  v_mac_legacy_f32  v8, s34, v6                         // 000000000088: 0C100C22
  v_mac_legacy_f32  v15, s38, v6                        // 00000000008C: 0C1E0C26
  v_mac_legacy_f32  v16, s42, v6                        // 000000000090: 0C200C2A
  v_mac_legacy_f32  v7, s46, v6                         // 000000000094: 0C0E0C2E
  v_mac_f32     v9, s21, v5                             // 000000000098: 3E120A15
  v_mac_f32     v10, s25, v5                            // 00000000009C: 3E140A19
  v_mac_f32     v11, s29, v5                            // 0000000000A0: 3E160A1D
  v_mac_f32     v14, s17, v5                            // 0000000000A4: 3E1C0A11
  v_rsq_f32     v3, v3                                  // 0000000000A8: 7E065D03
  v_mac_legacy_f32  v8, s33, v5                         // 0000000000AC: 0C100A21
  v_mac_legacy_f32  v15, s37, v5                        // 0000000000B0: 0C1E0A25
  v_mac_legacy_f32  v16, s41, v5                        // 0000000000B4: 0C200A29
  v_mac_legacy_f32  v7, s45, v5                         // 0000000000B8: 0C0E0A2D
  v_mac_f32     v9, s20, v4                             // 0000000000BC: 3E120814
  v_mac_f32     v10, s24, v4                            // 0000000000C0: 3E140818
  v_mac_f32     v11, s28, v4                            // 0000000000C4: 3E16081C
  v_mad_legacy_f32  v14, v4, s16, v14 clamp             // 0000000000C8: D280080E 04382104
  v_mul_legacy_f32  v2, v2, v3                          // 0000000000D0: 0E040702
  v_mul_legacy_f32  v1, v1, v3                          // 0000000000D4: 0E020701
  v_mul_legacy_f32  v0, v0, v3                          // 0000000000D8: 0E000700
  v_mac_legacy_f32  v8, s32, v4                         // 0000000000DC: 0C100820
  v_mac_legacy_f32  v15, s36, v4                        // 0000000000E0: 0C1E0824
  v_mac_legacy_f32  v16, s40, v4                        // 0000000000E4: 0C200828
  v_mac_legacy_f32  v7, s44, v4                         // 0000000000E8: 0C0E082C
  v_mov_b32     v3, 0                                   // 0000000000EC: 7E060280
  v_mov_b32     v4, 1.0                                 // 0000000000F0: 7E0802F2
  s_waitcnt     lgkmcnt(0)                              // 0000000000F4: BF8C007F
  v_mov_b32     v5, s0                                  // 0000000000F8: 7E0A0200
  exp           pos0, v8, v15, v16, v7 done             // 0000000000FC: F80008CF 07100F08
  exp           param0, v12, v13, v3, v4                // 000000000104: F800020F 04030D0C
  exp           param1, v9, v10, v11, v14               // 00000000010C: F800021F 0E0B0A09
  exp           param2, v2, v1, v0, v4                  // 000000000114: F800022F 04000102
  exp           param3, v4, v4, v4, v5                  // 00000000011C: F800023F 05040404
  s_endpgm                                              // 000000000124: BF810000
end


// Shader Statistics:
//  NumActiveWaveFront:         36
//  WorkgroupSize:              64
//  NumVRegs:                   17
//  NumSRegs:                   50
//  NumActiveWaveFrontByVReg:   40
//  NumActiveWaveFrontBySReg:   36
//  NumActiveWaveFrontByLDS:    40
//  CycleSim:                   81
//  CycleSimNWaves:             81
//  Code Size:                  296
//Assembler Counts:
//  num_32bit_ops                     : 62
//  num_64bit_ops                     : 6
//  num_alu                           : 51
//  num_fc                            : 12
//  num_inst_exp                      : 5
//  num_inst_ldsgds                   : 0
//  num_inst_mimg                     : 0
//  num_inst_mtbuf                    : 0
//  num_inst_mubuf                    : 0
//  num_inst_sopp                     : 4
//  num_inst_sopc                     : 0
//  num_inst_sop1                     : 1
//  num_inst_sop2                     : 0
//  num_inst_smrd                     : 0
//  num_inst_sopk                     : 0
//  num_inst_vop1                     : 4
//  num_inst_vop2                     : 46
//  num_inst_vop3                     : 0
//  num_inst_vopc                     : 0
//  num_inst_vintrp                   : 0
//  constant_literal_operands         : 0
//  num_tex                           : 5
//  num_vmem_group                    : 0
//  vmem_grouping_started             : 0
// Shader Statistics:
// m_uNumActiveWaveFront             : 36
// m_uVRegLimit                      : 256
// m_uSRegLimit                      : 512
// m_uNumVRegs                       : 17
// m_uNumSRegs                       : 50
// m_uSCCodeSize                     : 296
// m_uWorkgroupSize                  : 64
// m_uNumActiveWaveFrontByVReg       : 40
// m_uNumActiveWaveFrontBySReg       : 36
// m_uNumActiveWaveFrontByLDS        : 40
// m_uCycleSim1Wave                  : 81
// m_uCycleSimNWaves                 : 81

// Assembler Counts:
// num_32bit_ops                     : 62
// num_64bit_ops                     : 6
// num_alu                           : 51
// num_fc                            : 12
// num_inst_exp                      : 5
// num_inst_ldsgds                   : 0
// num_inst_mimg                     : 0
// num_inst_mtbuf                    : 0
// num_inst_mubuf                    : 0
// num_inst_sopp                     : 4
// num_inst_sopc                     : 0
// num_inst_sop1                     : 1
// num_inst_sop2                     : 0
// num_inst_smrd                     : 0
// num_inst_sopk                     : 0
// num_inst_vop1                     : 4
// num_inst_vop2                     : 46
// num_inst_vop3                     : 0
// num_inst_vopc                     : 0
// num_inst_vintrp                   : 0
// num_inst_smem                     : 7
// constant_literal_operands         : 0
// num_tex                           : 5
// num_vmem_group                    : 0
// vmem_grouping_started             : 0
// m_fFullPrecompilePromise          : 0
// m_fIntegerDivideExpansion         : 0
// m_fIntegerModExpansion            : 0
// m_fDoubleDivideExpansion          : 0
// m_fUsesScratch                    : 0
// m_fPerThreadIndirection           : 0
// m_fUsingTableLoads                : 0
// m_fUsingSHmemLoads                : 1
// fSemanticHashFlagOverrideApplied  : 0
// fPSHasNoUAVWrite                  : 0
// m_fRenderTargetsCanBeCompacted    : 0
// version                           : 3
// fCodePatched                      : 0

// Opaque Custom Data - XBOX Precompiled Shader Object
// Offset:[363], bundle is:[210] DWORDS.
// Disassembled Precompiled Shader Object:
// Shader Type               : (VS)
// Shader Hw Stage           : (ES)
// PDB Filename              : D:\ATG\st_dev\Kits\DirectXTK\src\Shaders\Compiled\XboxOneEnvironmentMapEffect_VSEnvMapPixelLighting.pdb
// Shader Semantic Hash      : 0x211d8d0a806a707b
//
// Shader Data:
; ----------------- VS Data ------------------------
; Input Semantic Mappings
;   [0] generic, usageIdx  0, channelMask 15, v[4:7]
;   [1] generic, usageIdx  1, channelMask  7, v[8:10]
;   [2] generic, usageIdx  2, channelMask  3, v[12:13]
; Output Semantic Mappings
;   [0] position,  usageIdx 4, paramIdx 4, paramSlot 0
;   [1] generic,  usageIdx 0, paramIdx 0, paramSlot 0
;   [2] generic,  usageIdx 1, paramIdx 1, paramSlot 0
;   [3] generic,  usageIdx 2, paramIdx 2, paramSlot 0
;   [4] generic,  usageIdx 3, paramIdx 3, paramSlot 0

codeLenInByte        = 396 bytes;

; launchModeFlags    = 0x0000000E
srdTableSupport      = TRUE
immediateSupportExt  = TRUE
srdTableSupportExt   = TRUE

userElementCount     = 4;
;  userElements[0]      = PTR_VERTEX_BUFFER_TABLE, Element=1 dwords, s[0x2:3]
;  userElements[1]      = PTR_EXTENDED_USER_DATA, ReferencedExtUserElements=1, s[0x2:3]
;  userElements[2]      = PTR_INTERNAL_GLOBAL_TABLE, Element=1 dwords, s[0x2:3]
;  userElements[3]      = SUB_PTR_FETCH_SHADER, s[0x2:3]
extUserElementCount  = 1;
;  extUserElements 1[0] = IMM_CONST_BUFFER 0, offset 0x0:3 dwords
NumVgprs             = 16;
NumSgprs             = 58;
FloatMode            = 192;
IeeeMode             = 0;
FlatPtr32            = 0;
ScratchSize          = 0 dwords/thread;
LDSByteSize          = 0 bytes/workgroup (compile time only);
ScratchWaveOffsetReg = s65535;
; texSamplerUsage         = 0x00000000
; constBufUsage           = 0x00000001

; SPI_SHADER_PGM_RSRC2_VS = 0x00000008
SSPRV:USER_SGPR             = 4
; PA_CL_VS_OUT_CNTL       = 0x00000000
; SPI_VS_OUT_CONFIG       = 0x00000000
SVOC:VS_EXPORT_COUNT        = 0
SVOC:VS_HALF_PACK           = 0
SVOC:VS_EXPORTS_FOG         = 0
SVOC:VS_OUT_FOG_VEC_ADDR    = 0
; SPI_SHADER_POS_FORMAT     = 0x00000004
SSPF:POS0_EXPORT_FORMAT     = 4
SSPF:POS1_EXPORT_FORMAT     = 0
SSPF:POS2_EXPORT_FORMAT     = 0
SSPF:POS3_EXPORT_FORMAT     = 0
VGT_STRMOUT_CONFIG = 0x0
VGT_STRMOUT_CONFIG:RAST_STREAM = 0
VGT_STRMOUT_CONFIG:STREAMOUT_0_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_1_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_2_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_3_EN = 0
; exportVertexSize          = 20
; esGsRingItemSize          = 20

// Shader Instructions:
shader main
  asic(CI)
  type(VS)
  s_swappc_b64  s[2:3], s[2:3]                          // 000000000000: BE822102
  s_load_dwordx4  s[8:11], s[2:3], 0x00                 // 000000000004: C0840300
  s_waitcnt     lgkmcnt(0)                              // 000000000008: BF8C007F
  s_buffer_load_dwordx16  s[12:27], s[8:11], 0x50       // 00000000000C: C3060950
  s_waitcnt     vmcnt(0) & lgkmcnt(0)                   // 000000000010: BF8C0070
  v_mul_legacy_f32  v0, s15, v7                         // 000000000014: 0E000E0F
  s_buffer_load_dwordx16  s[28:43], s[8:11], 0x30       // 000000000018: C30E0930
  s_buffer_load_dwordx4  s[44:47], s[8:11], 0x4c        // 00000000001C: C296094C
  s_load_dwordx4  s[0:3], s[2:3], 0x0c                  // 000000000020: C080030C
  v_mac_legacy_f32  v0, s14, v6                         // 000000000024: 0C000C0E
  v_mul_legacy_f32  v1, s19, v7                         // 000000000028: 0E020E13
  s_buffer_load_dwordx4  s[48:51], s[8:11], 0x48        // 00000000002C: C2980948
  v_mac_legacy_f32  v0, s13, v5                         // 000000000030: 0C000A0D
  v_mac_legacy_f32  v1, s18, v6                         // 000000000034: 0C020C12
  v_mul_legacy_f32  v2, s23, v7                         // 000000000038: 0E040E17
  s_buffer_load_dwordx4  s[52:55], s[8:11], 0x44        // 00000000003C: C29A0944
  v_mac_legacy_f32  v0, s12, v4                         // 000000000040: 0C00080C
  v_mac_legacy_f32  v1, s17, v5                         // 000000000044: 0C020A11
  v_mac_legacy_f32  v2, s22, v6                         // 000000000048: 0C040C16
  v_mul_legacy_f32  v3, s27, v7                         // 00000000004C: 0E060E1B
  v_mac_legacy_f32  v1, s16, v4                         // 000000000050: 0C020810
  v_mac_legacy_f32  v2, s21, v5                         // 000000000054: 0C040A15
  v_mac_legacy_f32  v3, s26, v6                         // 000000000058: 0C060C1A
  v_mac_legacy_f32  v2, s20, v4                         // 00000000005C: 0C040814
  v_mac_legacy_f32  v3, s25, v5                         // 000000000060: 0C060A19
  s_waitcnt     lgkmcnt(0)                              // 000000000064: BF8C007F
  v_mul_legacy_f32  v11, s35, v7                        // 000000000068: 0E160E23
  v_mul_legacy_f32  v14, s46, v10                       // 00000000006C: 0E1C142E
  v_mac_legacy_f32  v3, s24, v4                         // 000000000070: 0C060818
  buffer_store_dword  v0, v0, s[0:3], s4 offset:64 glc slc // 000000000074: E0704040 04400000
  v_mac_legacy_f32  v11, s34, v6                        // 00000000007C: 0C160C22
  v_mul_legacy_f32  v0, s39, v7                         // 000000000080: 0E000E27
  v_mul_legacy_f32  v15, s50, v10                       // 000000000084: 0E1E1432
  v_mac_legacy_f32  v14, s45, v9                        // 000000000088: 0C1C122D
  buffer_store_dword  v1, v0, s[0:3], s4 offset:68 glc slc // 00000000008C: E0704044 04400100
  v_mac_legacy_f32  v11, s33, v5                        // 000000000094: 0C160A21
  v_mac_legacy_f32  v0, s38, v6                         // 000000000098: 0C000C26
  v_mul_legacy_f32  v1, s43, v7                         // 00000000009C: 0E020E2B
  v_mul_legacy_f32  v10, s54, v10                       // 0000000000A0: 0E141436
  v_mac_legacy_f32  v15, s49, v9                        // 0000000000A4: 0C1E1231
  v_mac_legacy_f32  v14, s44, v8                        // 0000000000A8: 0C1C102C
  buffer_store_dword  v2, v0, s[0:3], s4 offset:72 glc slc // 0000000000AC: E0704048 04400200
  v_mac_legacy_f32  v11, s32, v4                        // 0000000000B4: 0C160820
  v_mac_legacy_f32  v0, s37, v5                         // 0000000000B8: 0C000A25
  v_mac_legacy_f32  v1, s42, v6                         // 0000000000BC: 0C020C2A
  v_mul_legacy_f32  v2, s31, v7                         // 0000000000C0: 0E040E1F
  v_mac_legacy_f32  v10, s53, v9                        // 0000000000C4: 0C141235
  v_mac_legacy_f32  v15, s48, v8                        // 0000000000C8: 0C1E1030
  v_mul_legacy_f32  v7, v14, v14                        // 0000000000CC: 0E0E1D0E
  buffer_store_dword  v3, v0, s[0:3], s4 offset:76 glc slc // 0000000000D0: E070404C 04400300
  v_mac_legacy_f32  v0, s36, v4                         // 0000000000D8: 0C000824
  v_mac_legacy_f32  v1, s41, v5                         // 0000000000DC: 0C020A29
  v_mac_legacy_f32  v2, s30, v6                         // 0000000000E0: 0C040C1E
  v_mac_legacy_f32  v10, s52, v8                        // 0000000000E4: 0C141034
  v_mac_legacy_f32  v7, v15, v15                        // 0000000000E8: 0C0E1F0F
  buffer_store_dword  v12, v0, s[0:3], s4 glc slc       // 0000000000EC: E0704000 04400C00
  v_mac_legacy_f32  v1, s40, v4                         // 0000000000F4: 0C020828
  v_mac_legacy_f32  v2, s29, v5                         // 0000000000F8: 0C040A1D
  v_mac_legacy_f32  v7, v10, v10                        // 0000000000FC: 0C0E150A
  buffer_store_dword  v13, v0, s[0:3], s4 offset:4 glc slc // 000000000100: E0704004 04400D00
  v_mad_legacy_f32  v2, v4, s28, v2 clamp               // 000000000108: D2800802 04083904
  v_rsq_f32     v3, v7                                  // 000000000110: 7E065D07
  buffer_store_dword  v11, v0, s[0:3], s4 offset:16 glc slc // 000000000114: E0704010 04400B00
  v_mul_legacy_f32  v4, v10, v3                         // 00000000011C: 0E08070A
  buffer_store_dword  v0, v0, s[0:3], s4 offset:20 glc slc // 000000000120: E0704014 04400000
  s_buffer_load_dword  s5, s[8:11], 0x0b                // 000000000128: C202890B
  v_mul_legacy_f32  v0, v15, v3                         // 00000000012C: 0E00070F
  buffer_store_dword  v1, v0, s[0:3], s4 offset:24 glc slc // 000000000130: E0704018 04400100
  v_mul_legacy_f32  v1, v14, v3                         // 000000000138: 0E02070E
  buffer_store_dword  v2, v0, s[0:3], s4 offset:28 glc slc // 00000000013C: E070401C 04400200
  buffer_store_dword  v4, v0, s[0:3], s4 offset:32 glc slc // 000000000144: E0704020 04400400
  v_mov_b32     v2, 1.0                                 // 00000000014C: 7E0402F2
  buffer_store_dword  v0, v0, s[0:3], s4 offset:36 glc slc // 000000000150: E0704024 04400000
  buffer_store_dword  v1, v0, s[0:3], s4 offset:40 glc slc // 000000000158: E0704028 04400100
  buffer_store_dword  v2, v0, s[0:3], s4 offset:48 glc slc // 000000000160: E0704030 04400200
  s_waitcnt     lgkmcnt(0)                              // 000000000168: BF8C007F
  v_mov_b32     v0, s5                                  // 00000000016C: 7E000205
  buffer_store_dword  v2, v0, s[0:3], s4 offset:52 glc slc // 000000000170: E0704034 04400200
  buffer_store_dword  v2, v0, s[0:3], s4 offset:56 glc slc // 000000000178: E0704038 04400200
  buffer_store_dword  v0, v0, s[0:3], s4 offset:60 glc slc // 000000000180: E070403C 04400000
  s_endpgm                                              // 000000000188: BF810000
end


// Shader Statistics:
//  NumActiveWaveFront:         32
//  WorkgroupSize:              64
//  NumVRegs:                   16
//  NumSRegs:                   58
//  NumActiveWaveFrontByVReg:   40
//  NumActiveWaveFrontBySReg:   32
//  NumActiveWaveFrontByLDS:    40
//  CycleSim:                   85
//  CycleSimNWaves:             85
//  Code Size:                  396
//Assembler Counts:
//  num_32bit_ops                     : 63
//  num_64bit_ops                     : 18
//  num_alu                           : 50
//  num_fc                            : 14
//  num_inst_exp                      : 0
//  num_inst_ldsgds                   : 0
//  num_inst_mimg                     : 0
//  num_inst_mtbuf                    : 0
//  num_inst_mubuf                    : 17
//  num_inst_sopp                     : 5
//  num_inst_sopc                     : 0
//  num_inst_sop1                     : 1
//  num_inst_sop2                     : 0
//  num_inst_smrd                     : 0
//  num_inst_sopk                     : 0
//  num_inst_vop1                     : 3
//  num_inst_vop2                     : 46
//  num_inst_vop3                     : 0
//  num_inst_vopc                     : 0
//  num_inst_vintrp                   : 0
//  constant_literal_operands         : 0
//  num_tex                           : 17
//  num_vmem_group                    : 12
//  vmem_grouping_started             : 0
// Shader Statistics:
// m_uNumActiveWaveFront             : 32
// m_uVRegLimit                      : 256
// m_uSRegLimit                      : 512
// m_uNumVRegs                       : 16
// m_uNumSRegs                       : 58
// m_uSCCodeSize                     : 396
// m_uWorkgroupSize                  : 64
// m_uNumActiveWaveFrontByVReg       : 40
// m_uNumActiveWaveFrontBySReg       : 32
// m_uNumActiveWaveFrontByLDS        : 40
// m_uCycleSim1Wave                  : 85
// m_uCycleSimNWaves                 : 85

// Assembler Counts:
// num_32bit_ops                     : 63
// num_64bit_ops                     : 18
// num_alu                           : 50
// num_fc                            : 14
// num_inst_exp                      : 0
// num_inst_ldsgds                   : 0
// num_inst_mimg                     : 0
// num_inst_mtbuf                    : 0
// num_inst_mubuf                    : 17
// num_inst_sopp                     : 5
// num_inst_sopc                     : 0
// num_inst_sop1                     : 1
// num_inst_sop2                     : 0
// num_inst_smrd                     : 0
// num_inst_sopk                     : 0
// num_inst_vop1                     : 3
// num_inst_vop2                     : 46
// num_inst_vop3                     : 0
// num_inst_vopc                     : 0
// num_inst_vintrp                   : 0
// num_inst_smem                     : 8
// constant_literal_operands         : 0
// num_tex                           : 17
// num_vmem_group                    : 12
// vmem_grouping_started             : 0
// m_fFullPrecompilePromise          : 0
// m_fIntegerDivideExpansion         : 0
// m_fIntegerModExpansion            : 0
// m_fDoubleDivideExpansion          : 0
// m_fUsesScratch                    : 0
// m_fPerThreadIndirection           : 0
// m_fUsingTableLoads                : 0
// m_fUsingSHmemLoads                : 1
// fSemanticHashFlagOverrideApplied  : 0
// fPSHasNoUAVWrite                  : 0
// m_fRenderTargetsCanBeCompacted    : 0
// version                           : 3
// fCodePatched                      : 0

// Opaque Custom Data - XBOX Precompiled Shader Object
// Offset:[575], bundle is:[204] DWORDS.
// Disassembled Precompiled Shader Object:
// Shader Type               : (VS)
// Shader Hw Stage           : (LS)
// PDB Filename              : D:\ATG\st_dev\Kits\DirectXTK\src\Shaders\Compiled\XboxOneEnvironmentMapEffect_VSEnvMapPixelLighting.pdb
// Shader Semantic Hash      : 0x211d8d0a806a707b
//
// Shader Data:
; ----------------- VS Data ------------------------
; Input Semantic Mappings
;   [0] generic, usageIdx  0, channelMask 15, v[4:7]
;   [1] generic, usageIdx  1, channelMask  7, v[8:10]
;   [2] generic, usageIdx  2, channelMask  3, v[12:13]
; Output Semantic Mappings
;   [0] position,  usageIdx 4, paramIdx 4, paramSlot 0
;   [1] generic,  usageIdx 0, paramIdx 0, paramSlot 0
;   [2] generic,  usageIdx 1, paramIdx 1, paramSlot 0
;   [3] generic,  usageIdx 2, paramIdx 2, paramSlot 0
;   [4] generic,  usageIdx 3, paramIdx 3, paramSlot 0

codeLenInByte        = 348 bytes;

; launchModeFlags    = 0x0000000E
srdTableSupport      = TRUE
immediateSupportExt  = TRUE
srdTableSupportExt   = TRUE

userElementCount     = 3;
;  userElements[0]      = PTR_VERTEX_BUFFER_TABLE, Element=1 dwords, s[0x2:3]
;  userElements[1]      = PTR_EXTENDED_USER_DATA, ReferencedExtUserElements=1, s[0x2:3]
;  userElements[2]      = SUB_PTR_FETCH_SHADER, s[0x2:3]
extUserElementCount  = 1;
;  extUserElements 1[0] = IMM_CONST_BUFFER 0, offset 0x0:3 dwords
NumVgprs             = 17;
NumSgprs             = 50;
FloatMode            = 192;
IeeeMode             = 0;
FlatPtr32            = 0;
ScratchSize          = 0 dwords/thread;
LDSByteSize          = 0 bytes/workgroup (compile time only);
ScratchWaveOffsetReg = s65535;
; texSamplerUsage         = 0x00000000
; constBufUsage           = 0x00000001

; SPI_SHADER_PGM_RSRC2_VS = 0x00000008
SSPRV:USER_SGPR             = 4
; PA_CL_VS_OUT_CNTL       = 0x00000000
; SPI_VS_OUT_CONFIG       = 0x00000000
SVOC:VS_EXPORT_COUNT        = 0
SVOC:VS_HALF_PACK           = 0
SVOC:VS_EXPORTS_FOG         = 0
SVOC:VS_OUT_FOG_VEC_ADDR    = 0
; SPI_SHADER_POS_FORMAT     = 0x00000004
SSPF:POS0_EXPORT_FORMAT     = 4
SSPF:POS1_EXPORT_FORMAT     = 0
SSPF:POS2_EXPORT_FORMAT     = 0
SSPF:POS3_EXPORT_FORMAT     = 0
VGT_STRMOUT_CONFIG = 0x0
VGT_STRMOUT_CONFIG:RAST_STREAM = 0
VGT_STRMOUT_CONFIG:STREAMOUT_0_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_1_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_2_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_3_EN = 0
; vgprCompCnt               = 1
; exportVertexSize          = 20
; lsStride                  = 80

// Shader Instructions:
shader main
  asic(CI)
  type(VS)
  s_swappc_b64  s[2:3], s[2:3]                          // 000000000000: BE822102
  s_load_dwordx4  s[0:3], s[2:3], 0x00                  // 000000000004: C0800300
  s_waitcnt     lgkmcnt(0)                              // 000000000008: BF8C007F
  s_buffer_load_dwordx16  s[4:19], s[0:3], 0x30         // 00000000000C: C3020130
  s_buffer_load_dwordx4  s[20:23], s[0:3], 0x44         // 000000000010: C28A0144
  s_buffer_load_dwordx4  s[24:27], s[0:3], 0x48         // 000000000014: C28C0148
  s_buffer_load_dwordx4  s[28:31], s[0:3], 0x4c         // 000000000018: C28E014C
  s_waitcnt     lgkmcnt(0)                              // 00000000001C: BF8C007F
  s_buffer_load_dword  s23, s[0:3], 0x0b                // 000000000020: C20B810B
  s_buffer_load_dwordx16  s[32:47], s[0:3], 0x50        // 000000000024: C3100150
  s_mov_b32     m0, 0x00010000                          // 000000000028: BEFC03FF 00010000
  s_waitcnt     vmcnt(0)                                // 000000000030: BF8C0F70
  v_mul_legacy_f32  v0, s11, v7                         // 000000000034: 0E000E0B
  v_mac_legacy_f32  v0, s10, v6                         // 000000000038: 0C000C0A
  v_mac_legacy_f32  v0, s9, v5                          // 00000000003C: 0C000A09
  v_mac_legacy_f32  v0, s8, v4                          // 000000000040: 0C000808
  v_mul_legacy_f32  v2, s15, v7                         // 000000000044: 0E040E0F
  v_mac_legacy_f32  v2, s14, v6                         // 000000000048: 0C040C0E
  v_mac_legacy_f32  v2, s13, v5                         // 00000000004C: 0C040A0D
  v_mac_legacy_f32  v2, s12, v4                         // 000000000050: 0C04080C
  v_mul_legacy_f32  v3, s19, v7                         // 000000000054: 0E060E13
  v_mac_legacy_f32  v3, s18, v6                         // 000000000058: 0C060C12
  v_mac_legacy_f32  v3, s17, v5                         // 00000000005C: 0C060A11
  v_mac_legacy_f32  v3, s16, v4                         // 000000000060: 0C060810
  v_mul_legacy_f32  v11, s7, v7                         // 000000000064: 0E160E07
  v_mac_legacy_f32  v11, s6, v6                         // 000000000068: 0C160C06
  v_mac_legacy_f32  v11, s5, v5                         // 00000000006C: 0C160A05
  v_mad_legacy_f32  v11, v4, s4, v11 clamp              // 000000000070: D280080B 042C0904
  v_mul_legacy_f32  v14, s22, v10                       // 000000000078: 0E1C1416
  v_mac_legacy_f32  v14, s21, v9                        // 00000000007C: 0C1C1215
  v_mac_legacy_f32  v14, s20, v8                        // 000000000080: 0C1C1014
  v_mul_legacy_f32  v15, s26, v10                       // 000000000084: 0E1E141A
  v_mac_legacy_f32  v15, s25, v9                        // 000000000088: 0C1E1219
  v_mac_legacy_f32  v15, s24, v8                        // 00000000008C: 0C1E1018
  v_mul_legacy_f32  v10, s30, v10                       // 000000000090: 0E14141E
  v_mac_legacy_f32  v10, s29, v9                        // 000000000094: 0C14121D
  v_mac_legacy_f32  v10, s28, v8                        // 000000000098: 0C14101C
  v_mul_legacy_f32  v8, v10, v10                        // 00000000009C: 0E10150A
  v_mac_legacy_f32  v8, v15, v15                        // 0000000000A0: 0C101F0F
  v_mac_legacy_f32  v8, v14, v14                        // 0000000000A4: 0C101D0E
  v_rsq_f32     v8, v8                                  // 0000000000A8: 7E105D08
  v_mul_legacy_f32  v9, v14, v8                         // 0000000000AC: 0E12110E
  v_mul_legacy_f32  v14, v15, v8                        // 0000000000B0: 0E1C110F
  v_mul_legacy_f32  v8, v10, v8                         // 0000000000B4: 0E10110A
  s_waitcnt     lgkmcnt(0)                              // 0000000000B8: BF8C007F
  v_mul_legacy_f32  v10, s35, v7                        // 0000000000BC: 0E140E23
  v_mac_legacy_f32  v10, s34, v6                        // 0000000000C0: 0C140C22
  v_mac_legacy_f32  v10, s33, v5                        // 0000000000C4: 0C140A21
  v_mac_legacy_f32  v10, s32, v4                        // 0000000000C8: 0C140820
  v_mul_legacy_f32  v15, s39, v7                        // 0000000000CC: 0E1E0E27
  v_mac_legacy_f32  v15, s38, v6                        // 0000000000D0: 0C1E0C26
  v_mac_legacy_f32  v15, s37, v5                        // 0000000000D4: 0C1E0A25
  v_mac_legacy_f32  v15, s36, v4                        // 0000000000D8: 0C1E0824
  v_mul_legacy_f32  v16, s43, v7                        // 0000000000DC: 0E200E2B
  v_mac_legacy_f32  v16, s42, v6                        // 0000000000E0: 0C200C2A
  v_mac_legacy_f32  v16, s41, v5                        // 0000000000E4: 0C200A29
  v_mac_legacy_f32  v16, s40, v4                        // 0000000000E8: 0C200828
  v_mul_legacy_f32  v7, s47, v7                         // 0000000000EC: 0E0E0E2F
  v_mac_legacy_f32  v7, s46, v6                         // 0000000000F0: 0C0E0C2E
  v_mac_legacy_f32  v7, s45, v5                         // 0000000000F4: 0C0E0A2D
  v_mac_legacy_f32  v7, s44, v4                         // 0000000000F8: 0C0E082C
  s_movk_i32    s0, 0x0050                              // 0000000000FC: B0000050
  v_mul_lo_i32  v1, v1, s0                              // 000000000100: D2D60001 00000101
  ds_write2_b32  v1, v10, v15 offset0:16 offset1:17     // 000000000108: D8381110 000F0A01
  ds_write2_b32  v1, v16, v7 offset0:18 offset1:19      // 000000000110: D8381312 00071001
  ds_write2_b32  v1, v12, v13 offset1:1                 // 000000000118: D8380100 000D0C01
  ds_write2_b32  v1, v0, v2 offset0:4 offset1:5         // 000000000120: D8380504 00020001
  ds_write2_b32  v1, v3, v11 offset0:6 offset1:7        // 000000000128: D8380706 000B0301
  ds_write2_b32  v1, v9, v14 offset0:8 offset1:9        // 000000000130: D8380908 000E0901
  ds_write_b32  v1, v8 offset:40                        // 000000000138: D8340028 00000801
  v_mov_b32     v0, 1.0                                 // 000000000140: 7E0002F2
  ds_write2_b32  v1, v0, v0 offset0:12 offset1:13       // 000000000144: D8380D0C 00000001
  v_mov_b32     v2, s23                                 // 00000000014C: 7E040217
  ds_write2_b32  v1, v0, v2 offset0:14 offset1:15       // 000000000150: D8380F0E 00020001
  s_endpgm                                              // 000000000158: BF810000
end


// Shader Statistics:
//  NumActiveWaveFront:         36
//  WorkgroupSize:              64
//  NumVRegs:                   17
//  NumSRegs:                   50
//  NumActiveWaveFrontByVReg:   40
//  NumActiveWaveFrontBySReg:   36
//  NumActiveWaveFrontByLDS:    40
//  CycleSim:                   92
//  CycleSimNWaves:             92
//  Code Size:                  348
//Assembler Counts:
//  num_32bit_ops                     : 64
//  num_64bit_ops                     : 11
//  num_alu                           : 51
//  num_fc                            : 15
//  num_inst_exp                      : 0
//  num_inst_ldsgds                   : 9
//  num_inst_mimg                     : 0
//  num_inst_mtbuf                    : 0
//  num_inst_mubuf                    : 0
//  num_inst_sopp                     : 5
//  num_inst_sopc                     : 0
//  num_inst_sop1                     : 2
//  num_inst_sop2                     : 0
//  num_inst_smrd                     : 0
//  num_inst_sopk                     : 1
//  num_inst_vop1                     : 3
//  num_inst_vop2                     : 46
//  num_inst_vop3                     : 0
//  num_inst_vopc                     : 0
//  num_inst_vintrp                   : 0
//  constant_literal_operands         : 0
//  num_tex                           : 9
//  num_vmem_group                    : 0
//  vmem_grouping_started             : 0
// Shader Statistics:
// m_uNumActiveWaveFront             : 36
// m_uVRegLimit                      : 256
// m_uSRegLimit                      : 512
// m_uNumVRegs                       : 17
// m_uNumSRegs                       : 50
// m_uSCCodeSize                     : 348
// m_uWorkgroupSize                  : 64
// m_uNumActiveWaveFrontByVReg       : 40
// m_uNumActiveWaveFrontBySReg       : 36
// m_uNumActiveWaveFrontByLDS        : 40
// m_uCycleSim1Wave                  : 92
// m_uCycleSimNWaves                 : 92

// Assembler Counts:
// num_32bit_ops                     : 64
// num_64bit_ops                     : 11
// num_alu                           : 51
// num_fc                            : 15
// num_inst_exp                      : 0
// num_inst_ldsgds                   : 9
// num_inst_mimg                     : 0
// num_inst_mtbuf                    : 0
// num_inst_mubuf                    : 0
// num_inst_sopp                     : 5
// num_inst_sopc                     : 0
// num_inst_sop1                     : 2
// num_inst_sop2                     : 0
// num_inst_smrd                     : 0
// num_inst_sopk                     : 1
// num_inst_vop1                     : 3
// num_inst_vop2                     : 46
// num_inst_vop3                     : 0
// num_inst_vopc                     : 0
// num_inst_vintrp                   : 0
// num_inst_smem                     : 7
// constant_literal_operands         : 0
// num_tex                           : 9
// num_vmem_group                    : 0
// vmem_grouping_started             : 0
// m_fFullPrecompilePromise          : 0
// m_fIntegerDivideExpansion         : 0
// m_fIntegerModExpansion            : 0
// m_fDoubleDivideExpansion          : 0
// m_fUsesScratch                    : 0
// m_fPerThreadIndirection           : 0
// m_fUsingTableLoads                : 0
// m_fUsingSHmemLoads                : 1
// fSemanticHashFlagOverrideApplied  : 0
// fPSHasNoUAVWrite                  : 0
// m_fRenderTargetsCanBeCompacted    : 0
// version                           : 3
// fCodePatched                      : 0

// Approximately 0 instruction slots used
#endif

const BYTE EnvironmentMapEffect_VSEnvMapPixelLighting[] =
{
     68,  88,  66,  67, 255, 233, 
     19, 175,  22,  29, 186, 116, 
    119,  41,  75, 126,  85,  86, 
    136,  24,   1,   0,   0,   0, 
      7,  14,   0,   0,   5,   0, 
      0,   0,  52,   0,   0,   0, 
    168,   0,   0,   0,  76,   1, 
      0,   0, 136,  13,   0,   0, 
    152,  13,   0,   0,  73,  83, 
     71,  78, 108,   0,   0,   0, 
      3,   0,   0,   0,   8,   0, 
      0,   0,  80,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      0,   0,   0,   0,  15,  15, 
      0,   0,  92,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   0,   0,   7,   7, 
      0,   0,  99,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      2,   0,   0,   0,   3,   3, 
      0,   0,  83,  86,  95,  80, 
    111, 115, 105, 116, 105, 111, 
    110,   0,  78,  79,  82,  77, 
     65,  76,   0,  84,  69,  88, 
     67,  79,  79,  82,  68,   0, 
     79,  83,  71,  78, 156,   0, 
      0,   0,   5,   0,   0,   0, 
      8,   0,   0,   0, 128,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   3,   0, 
      0,   0,   0,   0,   0,   0, 
      3,  12,   0,   0, 128,   0, 
      0,   0,   1,   0,   0,   0, 
      0,   0,   0,   0,   3,   0, 
      0,   0,   1,   0,   0,   0, 
     15,   0,   0,   0, 128,   0, 
      0,   0,   2,   0,   0,   0, 
      0,   0,   0,   0,   3,   0, 
      0,   0,   2,   0,   0,   0, 
      7,   8,   0,   0, 137,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   3,   0, 
      0,   0,   3,   0,   0,   0, 
     15,   0,   0,   0, 143,   0, 
      0,   0,   0,   0,   0,   0, 
      1,   0,   0,   0,   3,   0, 
      0,   0,   4,   0,   0,   0, 
     15,   0,   0,   0,  84,  69, 
     88,  67,  79,  79,  82,  68, 
      0,  67,  79,  76,  79,  82, 
      0,  83,  86,  95,  80, 111, 
    115, 105, 116, 105, 111, 110, 
      0, 171,  83,  72,  69,  88, 
     52,  12,   0,   0,  80,   0, 
      1,   0,  13,   3,   0,   0, 
     53,  16,   0,   0,   5,   0, 
      0,   0, 166,   0,   0,   0, 
     80,   0,   1,   0, 161,   0, 
      0,   0, 106,   8,   0,   1, 
     89,   0,   0,   4,  70, 142, 
     32,   0,   0,   0,   0,   0, 
     24,   0,   0,   0,  95,   0, 
      0,   3, 242,  16,  16,   0, 
      0,   0,   0,   0,  95,   0, 
      0,   3, 114,  16,  16,   0, 
      1,   0,   0,   0,  95,   0, 
      0,   3,  50,  16,  16,   0, 
      2,   0,   0,   0, 101,   0, 
      0,   3,  50,  32,  16,   0, 
      0,   0,   0,   0, 101,   0, 
      0,   3, 242,  32,  16,   0, 
      1,   0,   0,   0, 101,   0, 
      0,   3, 114,  32,  16,   0, 
      2,   0,   0,   0, 101,   0, 
      0,   3, 242,  32,  16,   0, 
      3,   0,   0,   0, 103,   0, 
      0,   4, 242,  32,  16,   0, 
      4,   0,   0,   0,   1,   0, 
      0,   0, 104,   0,   0,   2, 
      1,   0,   0,   0,  54,   0, 
      0,   5,  50,  32,  16,   0, 
      0,   0,   0,   0,  70,  16, 
     16,   0,   2,   0,   0,   0, 
     17,   0,   0,   8,  18,  32, 
     16,   0,   1,   0,   0,   0, 
     70,  30,  16,   0,   0,   0, 
      0,   0,  70, 142,  32,   0, 
      0,   0,   0,   0,  13,   0, 
      0,   0,  17,   0,   0,   8, 
     34,  32,  16,   0,   1,   0, 
      0,   0,  70,  30,  16,   0, 
      0,   0,   0,   0,  70, 142, 
     32,   0,   0,   0,   0,   0, 
     14,   0,   0,   0,  17,   0, 
      0,   8,  66,  32,  16,   0, 
      1,   0,   0,   0,  70,  30, 
     16,   0,   0,   0,   0,   0, 
     70, 142,  32,   0,   0,   0, 
      0,   0,  15,   0,   0,   0, 
     17,  32,   0,   8, 130,  32, 
     16,   0,   1,   0,   0,   0, 
     70,  30,  16,   0,   0,   0, 
      0,   0,  70, 142,  32,   0, 
      0,   0,   0,   0,  12,   0, 
      0,   0,  16,   0,   0,   8, 
     18,   0,  16,   0,   0,   0, 
      0,   0,  70,  18,  16,   0, 
      1,   0,   0,   0,  70, 130, 
     32,   0,   0,   0,   0,   0, 
     17,   0,   0,   0,  16,   0, 
      0,   8,  34,   0,  16,   0, 
      0,   0,   0,   0,  70,  18, 
     16,   0,   1,   0,   0,   0, 
     70, 130,  32,   0,   0,   0, 
      0,   0,  18,   0,   0,   0, 
     16,   0,   0,   8,  66,   0, 
     16,   0,   0,   0,   0,   0, 
     70,  18,  16,   0,   1,   0, 
      0,   0,  70, 130,  32,   0, 
      0,   0,   0,   0,  19,   0, 
      0,   0,  16,   0,   0,   7, 
    130,   0,  16,   0,   0,   0, 
      0,   0,  70,   2,  16,   0, 
      0,   0,   0,   0,  70,   2, 
     16,   0,   0,   0,   0,   0, 
     68,   0,   0,   5, 130,   0, 
     16,   0,   0,   0,   0,   0, 
     58,   0,  16,   0,   0,   0, 
      0,   0,  56,   0,   0,   7, 
    114,  32,  16,   0,   2,   0, 
      0,   0, 246,  15,  16,   0, 
      0,   0,   0,   0,  70,   2, 
     16,   0,   0,   0,   0,   0, 
     54,   0,   0,   8, 114,  32, 
     16,   0,   3,   0,   0,   0, 
      2,  64,   0,   0,   0,   0, 
    128,  63,   0,   0, 128,  63, 
      0,   0, 128,  63,   0,   0, 
      0,   0,  54,   0,   0,   6, 
    130,  32,  16,   0,   3,   0, 
      0,   0,  58, 128,  32,   0, 
      0,   0,   0,   0,   2,   0, 
      0,   0,  17,   0,   0,   8, 
     18,  32,  16,   0,   4,   0, 
      0,   0,  70,  30,  16,   0, 
      0,   0,   0,   0,  70, 142, 
     32,   0,   0,   0,   0,   0, 
     20,   0,   0,   0,  17,   0, 
      0,   8,  34,  32,  16,   0, 
      4,   0,   0,   0,  70,  30, 
     16,   0,   0,   0,   0,   0, 
     70, 142,  32,   0,   0,   0, 
      0,   0,  21,   0,   0,   0, 
     17,   0,   0,   8,  66,  32, 
     16,   0,   4,   0,   0,   0, 
     70,  30,  16,   0,   0,   0, 
      0,   0,  70, 142,  32,   0, 
      0,   0,   0,   0,  22,   0, 
      0,   0,  17,   0,   0,   8, 
    130,  32,  16,   0,   4,   0, 
      0,   0,  70,  30,  16,   0, 
      0,   0,   0,   0,  70, 142, 
     32,   0,   0,   0,   0,   0, 
     23,   0,   0,   0,  62,   0, 
      0,   1,  53,  16,   0,   0, 
    197,   0,   0,   0,  23,   0, 
      1,   0,  32,  76,  23,   0, 
    120,   1, 237, 152, 205,  79, 
     19,  65,  24, 135, 103, 183, 
    203, 116, 187,  12, 195, 178, 
     44, 229, 171, 148, 162, 168, 
    224,   7,  16, 189,  24,  99, 
     70,  69, 136,  38,  96, 192, 
    128, 134, 195,  26,   2, 180, 
    133,  26,  40,  77, 105,   8, 
    137,  17,  11,  33, 122, 209, 
    171,  81, 227, 209,  63, 195, 
      8, 129, 179,  49,  26, 255, 
      8, 143, 198,  19,  55, 253, 
    189, 101, 215,  52,  32, 103, 
    141, 217,  39, 125, 230, 221, 
    153, 217, 238, 190,  51, 179, 
    167, 119, 180, 153,  85, 248, 
    254, 249, 229,  16, 197, 222, 
    244,  71, 181, 165,  51,  86, 
     67,  29,  96,  80,   3,  10, 
     46, 181, 140, 125, 107, 162, 
    150, 177, 110, 106,  52, 136, 
    123,  27,  16,  46, 194,  30, 
    244, 175,  83, 132,  52,  79, 
    241, 205, 235, 199, 131, 217, 
    236, 198, 224,  61,  92,  15, 
     64, 122, 204,  93,  95,   5, 
     57, 188,   4,   5,  12, 222, 
     89,  77, 240, 126, 122,  85, 
     53,  52, 222,   7, 171, 137, 
     82,   3, 142,  60, 103, 134, 
    154,  63,  67, 139, 166, 252, 
    143, 131, 114,  11, 160, 231, 
     82, 158,   4, 173, 247,  95, 
    131, 246,  40,  56,  39, 130, 
    206, 163,  26,   9,  35, 144, 
    120, 229, 159,  99, 112, 203, 
     87, 191,  31, 156, 229,  14, 
     60, 142, 159,  32,  56, 151, 
    128, 160,  79, 207, 231, 108, 
    108, 128, 107, 207,  82,  92, 
    223, 179,  57,   6,  56,  38, 
     57,  54, 143, 227, 176,  57, 
     14, 137, 155,  48,   6,  45, 
     88,  11, 177, 169, 188,  14, 
     34,  65,  94,  15, 109, 136, 
     68, 184,   3,  27,  33, 214, 
    196, 145,  31, 143,  67, 124, 
    175, 188,   5, 182, 194,  54, 
    216,  14,  19, 176,   3,  38, 
     97, 231,  65,  46, 244,  93, 
     17,  92,  59,  88,  33, 215, 
    241, 161,   2,  30, 161,  12, 
    255, 127, 104,  15, 176, 205, 
     21, 104,  47, 168,  31,  80, 
    125,  29,  18,  18,  18,  18, 
     18,  18,  18,  18,  18,  18, 
     18,  18,  18,  18,  18, 242, 
    183, 208, 187,  54,  63, 176, 
     72, 121, 231,   9, 123, 190, 
     61, 170, 109, 238, 222, 214, 
    182, 118, 135, 180, 167, 187, 
      3, 154, 185,  55, 174, 217, 
    123,   5, 140, 115, 151,  73, 
    203, 213, 101, 141, 195,  84, 
    173, 198, 118, 165, 107, 200, 
    152, 163,  43, 195, 102, 170, 
    206,  49, 148, 105, 235, 138, 
    105,  92,  54,  75,  71, 182, 
     75,  87, 118, 202, 184, 108, 
    148,   9,  41, 108,  67, 105, 
     17, 174,  78,  74,  91, 158, 
    145,  73, 121,  78, 166, 100, 
    191, 148,  50,  46,  28, 213, 
     38,  92, 149,  20, 113, 229, 
    136, 132, 210, 107, 184,  58, 
     33, 108, 113,  90,  36, 197, 
     89, 145,  18, 125,  66, 138, 
     38, 203,  81, 173, 150, 171, 
     58, 172, 184, 106, 176,  18, 
     42, 242, 128, 175, 119,  89, 
    182,  56, 101,  37,  69, 175, 
    149,  18,  23,  44,  41,  92, 
    211,  81,  45, 166, 171,  18, 
    102,  92,  73, 179, 252, 197, 
    232, 186, 108, 232,  81,  67, 
    106,  81,  93, 178,  40, 147, 
     41, 211,  22, 221, 102,  82, 
    244, 152,  41, 113, 222, 148, 
    162, 172, 243, 245,  31, 186, 
    185,  78, 107, 101, 186, 181, 
    254, 201, 100, 251, 102, 189, 
     29, 173, 215, 217, 190, 168, 
    139,  24, 157, 136,  49, 171, 
     86, 246,  35, 234,  26,  51, 
    174,  33,  26, 134,  81, 195, 
    216, 198, 118, 165, 108, 167, 
     87, 126, 191, 105, 165, 146, 
    215, 161,  49, 155, 154,  67, 
     99, 149, 107, 227, 160,  62, 
     22, 208,  29, 167,  22, 248, 
    145, 234, 184,  49, 168, 249, 
    149, 195,  22, 104, 248, 213, 
    181,  71, 133, 135, 101, 235, 
     69,  71,  23,  93,  19, 158, 
    255, 159, 171, 126,  76, 193, 
    160,  94, 122,  64, 153, 154, 
     35, 108, 249, 247, 151, 252, 
     72, 185,  82, 141,  74,   6, 
    149,  92,  42,  92, 130, 119, 
    254, 252,  91,  63,  82, 125, 
    171,  22,  30, 206, 227, 189, 
     63, 191,   0,  41, 211, 161, 
     43, 222, 141, 201,  91, 222, 
     74, 105,  58, 157,  89, 245, 
     70, 114, 165,  21, 111,  40, 
     87, 204, 204, 149, 166,  38, 
     71, 188, 149, 226, 156,  55, 
    177,  48, 147, 206,  20,  87, 
    188, 155, 203,  75, 133, 220, 
     98,  38, 237,  77, 205,  46, 
    175, 141, 229,  51, 195, 249, 
    213,  92, 113,  57, 191, 148, 
    201, 151, 238, 204,  20, 134, 
    179,  89, 252, 103, 250, 254, 
      4, 134, 209,  29, 207, 173, 
    101,  22,  71, 115, 243,  11, 
    165,  92, 126, 190, 175, 144, 
    158, 101, 191,   0,  61, 240, 
    122, 235,   0,   0,  53,  16, 
      0,   0, 212,   0,   0,   0, 
     23,   0,   1,   0,  16, 196, 
     23,   0, 120,   1, 237, 152, 
     79,  79,  19,  65,  24, 198, 
    167, 219,  97, 186,  93, 134, 
    105,  41,  75,  41, 208,  22, 
     80,  84, 240,  15, 169, 164, 
     24,  37,  70,  87, 132,  72, 
      2,   6,  12, 104,  56, 212, 
    240, 175,   5, 106, 160,  52, 
    165,  33,  36,  38, 136, 134, 
    196, 152, 224, 193, 196,  24, 
     99, 140,   7,  63, 131, 241, 
     40, 164, 152, 120, 242,  98, 
    252,   0, 126,   0,  79, 158, 
     73, 244, 121, 219,  45,  98, 
    149, 179, 198, 236,  47, 125, 
    230, 157, 153, 157, 157, 121, 
    118, 102, 122, 121, 223,  55, 
    176,  34, 125, 175, 155,  94, 
     81, 236,  76, 126, 188, 180, 
    169,  49,  86,  69,  13, 128, 
    106, 145, 172,  73,  37,  99, 
     83,  65,  42,  25, 107, 165, 
    194,   5,  97, 128,  31, 161, 
     23, 218,  66, 219,  66, 236, 
    128, 232,  57, 197, 240, 135, 
     39, 125, 111, 167, 158, 246, 
    205, 161, 222,   3,   5, 160, 
    155, 182,  46,  67, 212, 238, 
    134,  20,  84,  73,  45,  84, 
    246,  65,  75,  29, 196,  13, 
    117,  65,   7, 209, 169,   0, 
    244, 158, 132, 246, 153, 166, 
    226, 207, 220, 128, 200, 255, 
     97, 144,  55, 154, 175,  76, 
    217,  39, 125, 239, 191,   6, 
    237,  81, 249, 156,   8,  58, 
    143, 131, 144, 119,  14,  17, 
    123, 245,  84, 254, 220, 215, 
     97, 251,  92, 203, 103, 185, 
      3,  29, 198, 119,  80, 158, 
    135, 160, 122,  28,  34, 232, 
     92,   4,  27, 137,   9, 215, 
    195,  86, 161, 237, 250,   5, 
     58,   4,   6,   8,  28, 164, 
     16, 144,   7, 194,  65,   9, 
     47, 100,  64, 213,  16,  14, 
     75, 212,  64,  48,  40, 124, 
     16,  76,   8, 108, 186, 192, 
    229,  16, 117,  16, 190,  73, 
    192, 175, 128,  71, 129, 251, 
     42,  66,  80,  35, 212,   4, 
     53,  67,  97,  40,   2,  69, 
    161,  22, 251, 206, 112, 114, 
    133,  54,  21,  64, 184,  74, 
     95,  42, 180, 210, 141,  22, 
    110, 114, 250, 255,  66, 123, 
     80, 254,  63,  16, 165, 221, 
     40,  65,  87, 132, 228, 224, 
    224, 224, 224, 224, 224, 224, 
    224, 224, 224, 224, 224, 224, 
    224, 224, 240,  55, 209, 218, 
     30, 188,  99, 238, 205, 157, 
    123, 108, 107, 123, 212,  43, 
    118, 179, 136,  62, 197,  84, 
    204, 171, 118, 135, 189, 207, 
     10, 210, 189, 177, 163,  36, 
    147, 117,  74,  83, 131, 222, 
    231, 133,  26, 131, 201, 128, 
    212, 100, 131, 226, 170, 223, 
    251, 162,  32, 117,  38, 107, 
     13,  77,   6,  37, 151, 205, 
     74,  40, 191, 174, 201, 122, 
    131, 203,  38,  41, 164, 169, 
    115, 217, 104,   8,  73, 115, 
     31,  85,  65, 213, 101, 134, 
     85,  72,  23, 210, 178, 178, 
     95,  24, 179, 248,  17, 188, 
    117,   2, 107, 117, 155,  81, 
    117,  38,  16, 150, 253, 212, 
    239, 178, 120, 155,  17, 148, 
    199, 177, 230,  41, 172, 121, 
    206,  52, 213, 217,  64,  84, 
    158, 246, 135, 229,  32,  61, 
    215,  44, 222, 170,   7, 229, 
     49, 248,  56,   9,  31,  45, 
    240, 209,  19,  48, 101, 204, 
     31, 149,  42, 162, 212,  48, 
    141, 113,  91, 188,  29, 190, 
     58, 225,  43,  10,  95, 113, 
    191,  41, 125,  45, 248,  10, 
    122,  38,  45, 222,   1, 143, 
     17, 120,  52, 234, 149, 228, 
    212,  87,  99, 113,  77, 223, 
    248, 196,  47, 232, 220, 115, 
     91, 172, 251, 169, 175, 218, 
    226, 134,  71,  87,  38, 213, 
    225, 181, 250, 145,  86, 240, 
    121, 152,  10,  81,  27,  30, 
    149,  71,  83,  97, 170, 147, 
     31, 138, 220, 226, 223,  52, 
    190, 222,  78, 117, 140, 239, 
    160, 136, 113,  49, 138,  24, 
     67, 123,  80, 165, 177, 245, 
    184, 221,  62, 111, 199, 139, 
     20,  49, 158, 177, 251, 219, 
    197,  84, 161,  86, 252, 237, 
    211,  72, 233, 180, 138, 190, 
     16,  21,  21, 125, 148,  79, 
    172, 236,  43, 214, 121,  41, 
     31,  87, 230, 165, 157, 127, 
     92, 179,  99,  59, 228, 133, 
     92, 197, 140,  98, 105, 110, 
    110, 103, 243, 238, 102, 239, 
    108,  24, 143,  35, 109,  84, 
     39,  62, 219, 239, 188, 177, 
     35, 229, 158, 127, 201, 255, 
     22, 179, 210, 191, 179, 103, 
    143, 255, 106,  71, 242,  74, 
    121,  50,  85, 202,  32, 150, 
     18, 166,  32, 108, 231, 200, 
     77,  59,  82,  94, 173,  26, 
    170, 244,  17, 183, 159,  47, 
     64, 228, 180, 191,  55, 113, 
    101, 252,  90,  98,  37,  63, 
    153,  76, 173,  38, 134, 210, 
    249, 149,  68, 127,  58, 151, 
    154, 205,  79, 140,  15,  37, 
     86, 114, 179, 137, 177, 133, 
    233, 100,  42, 183, 146, 184, 
    186, 188, 148,  77,  47, 166, 
    146, 137, 137, 153, 229, 181, 
    145,  76, 106,  32, 179, 154, 
    206,  45, 103, 150,  82, 153, 
    252, 245, 233, 236, 192, 220, 
     28, 222, 153, 188,  53, 134, 
    110,  52,  71, 211, 107, 169, 
    197, 225, 244, 252,  66,  62, 
    157, 153, 239, 202,  38, 103, 
    216,  15, 151, 211, 151,  20, 
     53,  16,   0,   0, 206,   0, 
      0,   0,  23,   0,   1,   0, 
      0, 128,  23,   0, 120,   1, 
    237, 152,  75,  79,  19,  81, 
     20, 199, 239, 180, 195, 101, 
     58,  61, 156,  78, 203,  80, 
     30, 182,  67, 241,   9,  62, 
    208, 168,  11, 227, 194,  40, 
     98,  52,   1,  35,   9, 196, 
    176,  24,  99, 128,  22, 168, 
    193, 210, 148, 106,  76,  76, 
     16, 140, 137, 198,  87, 252, 
     24,  46,  93, 186,   2,   2, 
     91,  77, 140,  11, 195, 199, 
     48, 174,  77, 240, 127, 218, 
    169,  54,  68, 226,  82,  99, 
    230, 151, 252, 207, 185, 207, 
    153, 115, 207, 189, 171, 179, 
    210, 169, 106, 228,   6, 239, 
     13, 136,  31, 200, 127, 188, 
    240,  36, 162,  84, 139, 116, 
    154,  40, 187,  98, 149, 202, 
    164, 197,  42, 117,  80, 140, 
      1,  97, 109,  18, 238,  52, 
    228, 163, 127,  17, 190,  31, 
    146, 121, 241,  31,  63,  60, 
     27, 154, 157, 125,  49, 132, 
    166,  58,   1, 165,  32,  63, 
    144, 172, 141,  67, 103, 160, 
      4,  36, 196, 196,  52, 209, 
    136,   3, 191, 249, 137, 252, 
     54,  10,  13,  66, 205, 180, 
    138,   1, 187, 191, 161, 166, 
    196, 252, 158,  17,  72, 226, 
    223,  11, 137,  77, 104, 124, 
    179,  17, 167, 156, 247,  95, 
     67, 242, 210, 184,  39,  65, 
    238, 163,  25, 134,  36, 111, 
    194, 135,  14, 177, 245,  61, 
    130,  21, 220, 107, 227,  46, 
     55, 160, 189, 216,   1, 166, 
     52, 154, 104, 244, 229, 251, 
     90, 221,  56, 165, 141, 167, 
     57,  29, 217, 114,  52,   6, 
     52,  38,  53,  46,  82, 107, 
      8, 151, 164,  45,   8,   9, 
    213,  54, 132,   7, 160,   9, 
    106, 131,  16, 160,  70, 130, 
    181,   3,  33,  16, 141, 199, 
    162, 219,  33, 156,  73,  35, 
     94, 141,  24,  53, 222, 171, 
    238, 130, 186, 161,  30, 104, 
     31, 148, 129, 178, 144,   7, 
    245,   6, 111, 198, 172,  71, 
    132,  95, 214, 208,  70, 253, 
    164,  58,  82, 127,  73,  58, 
     42, 145, 254, 191,  72,  14, 
    144, 230, 159, 212, 179,  81, 
    191, 239, 198,  19,  25,  19, 
     19,  18,  18,  18,  18,  18, 
     18,  18,  18,  18,  18,  18, 
     18,  18,  18,  18, 242, 151, 
    136, 244,  61,  94,  83, 209, 
    149, 141,  71, 234, 229, 250, 
     41,  35, 178,  53, 108,  60, 
    223, 188, 102, 188, 220,  28, 
     53,  94, 111, 202,  88, 124, 
     53, 190,  57, 102,  56,  91, 
     59, 209, 239, 107,  82, 213, 
     40,  39,  48, 198, 138, 109, 
     82,  20, 179,  21,  89, 150, 
    162,   4, 155, 204, 100,  82, 
    155, 109,  18,  89,  38, 181, 
    179, 230,  20, 105,  74, 218, 
    154,  28,  75,  83,  43, 167, 
     89,  83, 154,  90, 236,  52, 
    197, 173, 149, 207, 102, 236, 
    184, 153, 118,  51, 220, 145, 
    202, 144, 235, 100, 168, 199, 
    245, 184,  59, 229,  81, 151, 
    227, 145, 231, 186, 156,  77, 
    185, 148, 113,  92, 178,  59, 
     28,  78, 244,  58, 196,  89, 
    135, 172,  91, 206,  50,  39, 
     83, 156,  72, 102, 216,  78, 
     58,  44, 177,  29,  96, 151, 
    247, 147,  75, 125, 182,  75, 
     57, 203, 165,  35, 236, 241, 
     97, 242, 232, 144, 237, 209, 
     65, 203, 163,  99, 156, 227, 
    163, 148, 163,   1,  59,  71, 
    253,  86, 142,  78,  50, 243, 
     32,  49, 157, 176, 153, 142, 
     91,  76,  99,  74, 189,  51, 
    212, 151, 207,  82, 178, 114, 
    146, 231, 182,  13,  59, 161, 
     82, 237, 240,  78,  43, 142, 
     10,  79, 109, 202, 108, 129, 
     87,  17, 165,  91, 225, 163, 
    113, 101, 197, 224,  99, 172, 
    250, 213, 217, 109, 195,  82, 
    234,  91,  68,  45,  83,  27, 
    198, 144, 203, 206, 136, 185, 
    204,   9, 105,  75, 237, 107, 
    117, 189,  86, 250,  67,  83, 
    122,  13, 186, 101, 225, 174, 
     49,  71, 204, 174, 177,  90, 
    219, 148, 197, 191, 152,  12, 
    106, 135, 103,   3,  47, 181, 
     95, 169, 151,  26,  65, 181, 
    177,  11,  50, 131,  74, 220, 
    195, 242, 157,  21, 251,  85, 
    182,  79, 218, 194, 155,  96, 
     79,  57, 240,  57, 136, 160, 
     63, 241,  62,  88, 255,  54, 
    240,  18, 171, 212, 184, 184, 
     94, 253, 171,  23,  59, 193, 
    118,  48, 255,  41, 240,  82, 
     19, 147, 154, 243, 238,  56, 
    190,   6, 243, 243, 144,  68, 
     58, 124, 222, 191,  52, 113, 
    213,  95, 170, 222, 206,  23, 
    238, 251,  35, 197, 234, 146, 
     63,  92, 172,  20, 102, 170, 
    147,  19,  35, 254,  82, 101, 
    198,  31, 159, 159, 202,  23, 
     42,  75, 254, 229, 197, 187, 
    229, 226,  66,  33, 239,  79, 
     78,  47,  62, 184,  81,  42, 
     92,  41, 221,  47,  86,  22, 
     75, 119,  11, 165, 234, 245, 
    169, 242, 149, 217,  89, 236, 
    185, 125, 115,  28, 195, 232, 
    142,  21,  31,  20,  22,  70, 
    139, 115, 243, 213,  98, 105, 
    110, 176, 156, 159,  86,  63, 
      0, 168, 127, 130, 123,   0, 
      0,   0,  88,  72,  83,  72, 
      8,   0,   0,   0, 123, 112, 
    106, 128,  10, 141,  29,  33, 
     88,  80,  68,  80, 103,   0, 
      0,   0,  68,  58,  92,  65, 
     84,  71,  92, 115, 116,  95, 
    100, 101, 118,  92,  75, 105, 
    116, 115,  92,  68, 105, 114, 
    101,  99, 116,  88,  84,  75, 
     92, 115, 114,  99,  92,  83, 
    104,  97, 100, 101, 114, 115, 
     92,  67, 111, 109, 112, 105, 
    108, 101, 100,  92,  88,  98, 
    111, 120,  79, 110, 101,  69, 
    110, 118, 105, 114, 111, 110, 
    109, 101, 110, 116,  77,  97, 
    112,  69, 102, 102, 101,  99, 
    116,  95,  86,  83,  69, 110, 
    118,  77,  97, 112,  80, 105, 
    120, 101, 108,  76, 105, 103, 
    104, 116, 105, 110, 103,  46, 
    112, 100,  98
};
