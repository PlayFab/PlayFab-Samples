#if 0
//
// Generated by Microsoft (R) D3D Shader Disassembler for Durango
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// COLOR                    0   xyzw        3     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xy          0     NONE   float   xy  
// TEXCOORD                 1   xyzw        1     NONE   float   xyzw
// TEXCOORD                 2   xyz         2     NONE   float   xyz 
// COLOR                    0   xyzw        3     NONE   float   xyzw
// SV_Position              0   xyzw        4      POS   float   xyzw
//
vs_5_0
// Opaque Custom Data - XBOX Precompiled Shader Header
// First Precompiled Shader at offset:[168]
// Embedded Data:
//  0x000000a8 - Offset To First Precompiled Shader
//  0x00010050 - Original Shader Descriptor
//  0x000000a3 - Original Shader Size
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[26], immediateIndexed
dcl_input v0.xyzw
dcl_input v1.xyz
dcl_input v2.xy
dcl_input v3.xyzw
dcl_output o0.xy
dcl_output o1.xyzw
dcl_output o2.xyz
dcl_output o3.xyzw
dcl_output_siv o4.xyzw, position
dcl_temps 1
mov o0.xy, v2.xyxx
dp4 o1.x, v0.xyzw, cb0[15].xyzw
dp4 o1.y, v0.xyzw, cb0[16].xyzw
dp4 o1.z, v0.xyzw, cb0[17].xyzw
dp4_sat o1.w, v0.xyzw, cb0[14].xyzw
dp3 r0.x, v1.xyzx, cb0[19].xyzx
dp3 r0.y, v1.xyzx, cb0[20].xyzx
dp3 r0.z, v1.xyzx, cb0[21].xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul o2.xyz, r0.wwww, r0.xyzx
mul o3.w, v3.w, cb0[0].w
mov o3.xyz, v3.xyzx
dp4 o4.x, v0.xyzw, cb0[22].xyzw
dp4 o4.y, v0.xyzw, cb0[23].xyzw
dp4 o4.z, v0.xyzw, cb0[24].xyzw
dp4 o4.w, v0.xyzw, cb0[25].xyzw
ret 
// Opaque Custom Data - XBOX Precompiled Shader Object
// Offset:[168], bundle is:[195] DWORDS.
// Disassembled Precompiled Shader Object:
// Shader Type               : (VS)
// Shader Hw Stage           : (VS)
// PDB Filename              : D:\ATG\st_dev\Kits\DirectXTK\src\Shaders\Compiled\XboxOneBasicEffect_VSBasicPixelLightingTxVc.pdb
// Shader Semantic Hash      : 0xfab87bc2d6a16fd4
//
// Shader Data:
; ----------------- VS Data ------------------------
; Input Semantic Mappings
;   [0] generic, usageIdx  0, channelMask 15, v[4:7]
;   [1] generic, usageIdx  1, channelMask  7, v[8:10]
;   [2] generic, usageIdx  2, channelMask  3, v[12:13]
;   [3] generic, usageIdx  3, channelMask 15, v[16:19]
; Output Semantic Mappings
;   [0] generic,  usageIdx 0, paramIdx 0, paramSlot 0
;   [1] generic,  usageIdx 1, paramIdx 1, paramSlot 0
;   [2] generic,  usageIdx 2, paramIdx 2, paramSlot 0
;   [3] generic,  usageIdx 3, paramIdx 3, paramSlot 0

codeLenInByte        = 296 bytes;

; launchModeFlags    = 0x0000000E
srdTableSupport      = TRUE
immediateSupportExt  = TRUE
srdTableSupportExt   = TRUE

userElementCount     = 3;
;  userElements[0]      = PTR_VERTEX_BUFFER_TABLE, Element=1 dwords, s[0x2:3]
;  userElements[1]      = PTR_EXTENDED_USER_DATA, ReferencedExtUserElements=1, s[0x2:3]
;  userElements[2]      = SUB_PTR_FETCH_SHADER, s[0x2:3]
extUserElementCount  = 1;
;  extUserElements 1[0] = IMM_CONST_BUFFER 0, offset 0x0:3 dwords
NumVgprs             = 21;
NumSgprs             = 50;
FloatMode            = 192;
IeeeMode             = 0;
FlatPtr32            = 0;
ScratchSize          = 0 dwords/thread;
LDSByteSize          = 0 bytes/workgroup (compile time only);
ScratchWaveOffsetReg = s65535;
; texSamplerUsage         = 0x00000000
; constBufUsage           = 0x00000001

; SPI_SHADER_PGM_RSRC2_VS = 0x00000008
SSPRV:USER_SGPR             = 4
; PA_CL_VS_OUT_CNTL       = 0x00000000
; SPI_VS_OUT_CONFIG       = 0x00000006
SVOC:VS_EXPORT_COUNT        = 3
SVOC:VS_HALF_PACK           = 0
SVOC:VS_EXPORTS_FOG         = 0
SVOC:VS_OUT_FOG_VEC_ADDR    = 0
; SPI_SHADER_POS_FORMAT     = 0x00000004
SSPF:POS0_EXPORT_FORMAT     = 4
SSPF:POS1_EXPORT_FORMAT     = 0
SSPF:POS2_EXPORT_FORMAT     = 0
SSPF:POS3_EXPORT_FORMAT     = 0
VGT_STRMOUT_CONFIG = 0x0
VGT_STRMOUT_CONFIG:RAST_STREAM = 0
VGT_STRMOUT_CONFIG:STREAMOUT_0_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_1_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_2_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_3_EN = 0
; exportVertexSize          = 4

// Shader Instructions:
shader main
  asic(CI)
  type(VS)
  s_swappc_b64  s[2:3], s[2:3]                          // 000000000000: BE822102
  s_load_dwordx4  s[0:3], s[2:3], 0x00                  // 000000000004: C0800300
  s_waitcnt     lgkmcnt(0)                              // 000000000008: BF8C007F
  s_buffer_load_dwordx4  s[4:7], s[0:3], 0x54           // 00000000000C: C2820154
  s_buffer_load_dwordx4  s[8:11], s[0:3], 0x50          // 000000000010: C2840150
  s_buffer_load_dwordx4  s[12:15], s[0:3], 0x4c         // 000000000014: C286014C
  s_buffer_load_dwordx16  s[16:31], s[0:3], 0x38        // 000000000018: C3080138
  s_buffer_load_dwordx16  s[32:47], s[0:3], 0x58        // 00000000001C: C3100158
  s_waitcnt     vmcnt(0) & lgkmcnt(0)                   // 000000000020: BF8C0070
  v_mul_legacy_f32  v0, s6, v10                         // 000000000024: 0E001406
  v_mul_legacy_f32  v1, s10, v10                        // 000000000028: 0E02140A
  v_mac_f32     v0, s5, v9                              // 00000000002C: 3E001205
  s_buffer_load_dword  s0, s[0:3], 0x03                 // 000000000030: C2000103
  v_mul_legacy_f32  v2, s14, v10                        // 000000000034: 0E04140E
  v_mac_f32     v1, s9, v9                              // 000000000038: 3E021209
  v_mac_f32     v0, s4, v8                              // 00000000003C: 3E001004
  v_mac_f32     v2, s13, v9                             // 000000000040: 3E04120D
  v_mac_f32     v1, s8, v8                              // 000000000044: 3E021008
  v_mul_legacy_f32  v3, v0, v0                          // 000000000048: 0E060100
  v_mul_legacy_f32  v9, s23, v7                         // 00000000004C: 0E120E17
  v_mul_legacy_f32  v10, s27, v7                        // 000000000050: 0E140E1B
  v_mul_legacy_f32  v11, s31, v7                        // 000000000054: 0E160E1F
  v_mul_legacy_f32  v14, s19, v7                        // 000000000058: 0E1C0E13
  v_mac_f32     v2, s12, v8                             // 00000000005C: 3E04100C
  v_mac_f32     v3, v1, v1                              // 000000000060: 3E060301
  v_mul_legacy_f32  v8, s35, v7                         // 000000000064: 0E100E23
  v_mul_legacy_f32  v15, s39, v7                        // 000000000068: 0E1E0E27
  v_mul_legacy_f32  v20, s43, v7                        // 00000000006C: 0E280E2B
  v_mul_legacy_f32  v7, s47, v7                         // 000000000070: 0E0E0E2F
  v_mac_f32     v9, s22, v6                             // 000000000074: 3E120C16
  v_mac_f32     v10, s26, v6                            // 000000000078: 3E140C1A
  v_mac_f32     v11, s30, v6                            // 00000000007C: 3E160C1E
  v_mac_f32     v14, s18, v6                            // 000000000080: 3E1C0C12
  v_mac_f32     v3, v2, v2                              // 000000000084: 3E060502
  v_mac_legacy_f32  v8, s34, v6                         // 000000000088: 0C100C22
  v_mac_legacy_f32  v15, s38, v6                        // 00000000008C: 0C1E0C26
  v_mac_legacy_f32  v20, s42, v6                        // 000000000090: 0C280C2A
  v_mac_legacy_f32  v7, s46, v6                         // 000000000094: 0C0E0C2E
  v_mac_f32     v9, s21, v5                             // 000000000098: 3E120A15
  v_mac_f32     v10, s25, v5                            // 00000000009C: 3E140A19
  v_mac_f32     v11, s29, v5                            // 0000000000A0: 3E160A1D
  v_mac_f32     v14, s17, v5                            // 0000000000A4: 3E1C0A11
  v_rsq_f32     v3, v3                                  // 0000000000A8: 7E065D03
  v_mac_legacy_f32  v8, s33, v5                         // 0000000000AC: 0C100A21
  v_mac_legacy_f32  v15, s37, v5                        // 0000000000B0: 0C1E0A25
  v_mac_legacy_f32  v20, s41, v5                        // 0000000000B4: 0C280A29
  v_mac_legacy_f32  v7, s45, v5                         // 0000000000B8: 0C0E0A2D
  v_mac_f32     v9, s20, v4                             // 0000000000BC: 3E120814
  v_mac_f32     v10, s24, v4                            // 0000000000C0: 3E140818
  v_mac_f32     v11, s28, v4                            // 0000000000C4: 3E16081C
  v_mad_legacy_f32  v14, v4, s16, v14 clamp             // 0000000000C8: D280080E 04382104
  v_mul_legacy_f32  v2, v2, v3                          // 0000000000D0: 0E040702
  v_mul_legacy_f32  v1, v1, v3                          // 0000000000D4: 0E020701
  v_mul_legacy_f32  v0, v0, v3                          // 0000000000D8: 0E000700
  s_waitcnt     lgkmcnt(0)                              // 0000000000DC: BF8C007F
  v_mul_legacy_f32  v3, s0, v19                         // 0000000000E0: 0E062600
  v_mac_legacy_f32  v8, s32, v4                         // 0000000000E4: 0C100820
  v_mac_legacy_f32  v15, s36, v4                        // 0000000000E8: 0C1E0824
  v_mac_legacy_f32  v20, s40, v4                        // 0000000000EC: 0C280828
  v_mac_legacy_f32  v7, s44, v4                         // 0000000000F0: 0C0E082C
  v_mov_b32     v4, 0                                   // 0000000000F4: 7E080280
  v_mov_b32     v5, 1.0                                 // 0000000000F8: 7E0A02F2
  exp           pos0, v8, v15, v20, v7 done             // 0000000000FC: F80008CF 07140F08
  exp           param0, v12, v13, v4, v5                // 000000000104: F800020F 05040D0C
  exp           param1, v9, v10, v11, v14               // 00000000010C: F800021F 0E0B0A09
  exp           param2, v2, v1, v0, v5                  // 000000000114: F800022F 05000102
  exp           param3, v16, v17, v18, v3               // 00000000011C: F800023F 03121110
  s_endpgm                                              // 000000000124: BF810000
end


// Shader Statistics:
//  NumActiveWaveFront:         36
//  WorkgroupSize:              64
//  NumVRegs:                   21
//  NumSRegs:                   50
//  NumActiveWaveFrontByVReg:   40
//  NumActiveWaveFrontBySReg:   36
//  NumActiveWaveFrontByLDS:    40
//  CycleSim:                   85
//  CycleSimNWaves:             85
//  Code Size:                  296
//Assembler Counts:
//  num_32bit_ops                     : 62
//  num_64bit_ops                     : 6
//  num_alu                           : 51
//  num_fc                            : 12
//  num_inst_exp                      : 5
//  num_inst_ldsgds                   : 0
//  num_inst_mimg                     : 0
//  num_inst_mtbuf                    : 0
//  num_inst_mubuf                    : 0
//  num_inst_sopp                     : 4
//  num_inst_sopc                     : 0
//  num_inst_sop1                     : 1
//  num_inst_sop2                     : 0
//  num_inst_smrd                     : 0
//  num_inst_sopk                     : 0
//  num_inst_vop1                     : 3
//  num_inst_vop2                     : 47
//  num_inst_vop3                     : 0
//  num_inst_vopc                     : 0
//  num_inst_vintrp                   : 0
//  constant_literal_operands         : 0
//  num_tex                           : 5
//  num_vmem_group                    : 0
//  vmem_grouping_started             : 0
// Shader Statistics:
// m_uNumActiveWaveFront             : 36
// m_uVRegLimit                      : 256
// m_uSRegLimit                      : 512
// m_uNumVRegs                       : 21
// m_uNumSRegs                       : 50
// m_uSCCodeSize                     : 296
// m_uWorkgroupSize                  : 64
// m_uNumActiveWaveFrontByVReg       : 40
// m_uNumActiveWaveFrontBySReg       : 36
// m_uNumActiveWaveFrontByLDS        : 40
// m_uCycleSim1Wave                  : 85
// m_uCycleSimNWaves                 : 85

// Assembler Counts:
// num_32bit_ops                     : 62
// num_64bit_ops                     : 6
// num_alu                           : 51
// num_fc                            : 12
// num_inst_exp                      : 5
// num_inst_ldsgds                   : 0
// num_inst_mimg                     : 0
// num_inst_mtbuf                    : 0
// num_inst_mubuf                    : 0
// num_inst_sopp                     : 4
// num_inst_sopc                     : 0
// num_inst_sop1                     : 1
// num_inst_sop2                     : 0
// num_inst_smrd                     : 0
// num_inst_sopk                     : 0
// num_inst_vop1                     : 3
// num_inst_vop2                     : 47
// num_inst_vop3                     : 0
// num_inst_vopc                     : 0
// num_inst_vintrp                   : 0
// num_inst_smem                     : 7
// constant_literal_operands         : 0
// num_tex                           : 5
// num_vmem_group                    : 0
// vmem_grouping_started             : 0
// m_fFullPrecompilePromise          : 0
// m_fIntegerDivideExpansion         : 0
// m_fIntegerModExpansion            : 0
// m_fDoubleDivideExpansion          : 0
// m_fUsesScratch                    : 0
// m_fPerThreadIndirection           : 0
// m_fUsingTableLoads                : 0
// m_fUsingSHmemLoads                : 1
// fSemanticHashFlagOverrideApplied  : 0
// fPSHasNoUAVWrite                  : 0
// m_fRenderTargetsCanBeCompacted    : 0
// version                           : 3
// fCodePatched                      : 0

// Opaque Custom Data - XBOX Precompiled Shader Object
// Offset:[365], bundle is:[208] DWORDS.
// Disassembled Precompiled Shader Object:
// Shader Type               : (VS)
// Shader Hw Stage           : (ES)
// PDB Filename              : D:\ATG\st_dev\Kits\DirectXTK\src\Shaders\Compiled\XboxOneBasicEffect_VSBasicPixelLightingTxVc.pdb
// Shader Semantic Hash      : 0xfab87bc2d6a16fd4
//
// Shader Data:
; ----------------- VS Data ------------------------
; Input Semantic Mappings
;   [0] generic, usageIdx  0, channelMask 15, v[4:7]
;   [1] generic, usageIdx  1, channelMask  7, v[8:10]
;   [2] generic, usageIdx  2, channelMask  3, v[12:13]
;   [3] generic, usageIdx  3, channelMask 15, v[16:19]
; Output Semantic Mappings
;   [0] position,  usageIdx 4, paramIdx 4, paramSlot 0
;   [1] generic,  usageIdx 0, paramIdx 0, paramSlot 0
;   [2] generic,  usageIdx 1, paramIdx 1, paramSlot 0
;   [3] generic,  usageIdx 2, paramIdx 2, paramSlot 0
;   [4] generic,  usageIdx 3, paramIdx 3, paramSlot 0

codeLenInByte        = 392 bytes;

; launchModeFlags    = 0x0000000E
srdTableSupport      = TRUE
immediateSupportExt  = TRUE
srdTableSupportExt   = TRUE

userElementCount     = 4;
;  userElements[0]      = PTR_VERTEX_BUFFER_TABLE, Element=1 dwords, s[0x2:3]
;  userElements[1]      = PTR_EXTENDED_USER_DATA, ReferencedExtUserElements=1, s[0x2:3]
;  userElements[2]      = PTR_INTERNAL_GLOBAL_TABLE, Element=1 dwords, s[0x2:3]
;  userElements[3]      = SUB_PTR_FETCH_SHADER, s[0x2:3]
extUserElementCount  = 1;
;  extUserElements 1[0] = IMM_CONST_BUFFER 0, offset 0x0:3 dwords
NumVgprs             = 20;
NumSgprs             = 58;
FloatMode            = 192;
IeeeMode             = 0;
FlatPtr32            = 0;
ScratchSize          = 0 dwords/thread;
LDSByteSize          = 0 bytes/workgroup (compile time only);
ScratchWaveOffsetReg = s65535;
; texSamplerUsage         = 0x00000000
; constBufUsage           = 0x00000001

; SPI_SHADER_PGM_RSRC2_VS = 0x00000008
SSPRV:USER_SGPR             = 4
; PA_CL_VS_OUT_CNTL       = 0x00000000
; SPI_VS_OUT_CONFIG       = 0x00000000
SVOC:VS_EXPORT_COUNT        = 0
SVOC:VS_HALF_PACK           = 0
SVOC:VS_EXPORTS_FOG         = 0
SVOC:VS_OUT_FOG_VEC_ADDR    = 0
; SPI_SHADER_POS_FORMAT     = 0x00000004
SSPF:POS0_EXPORT_FORMAT     = 4
SSPF:POS1_EXPORT_FORMAT     = 0
SSPF:POS2_EXPORT_FORMAT     = 0
SSPF:POS3_EXPORT_FORMAT     = 0
VGT_STRMOUT_CONFIG = 0x0
VGT_STRMOUT_CONFIG:RAST_STREAM = 0
VGT_STRMOUT_CONFIG:STREAMOUT_0_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_1_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_2_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_3_EN = 0
; exportVertexSize          = 20
; esGsRingItemSize          = 20

// Shader Instructions:
shader main
  asic(CI)
  type(VS)
  s_swappc_b64  s[2:3], s[2:3]                          // 000000000000: BE822102
  s_load_dwordx4  s[8:11], s[2:3], 0x00                 // 000000000004: C0840300
  s_waitcnt     lgkmcnt(0)                              // 000000000008: BF8C007F
  s_buffer_load_dwordx16  s[12:27], s[8:11], 0x58       // 00000000000C: C3060958
  s_waitcnt     vmcnt(0) & lgkmcnt(0)                   // 000000000010: BF8C0070
  v_mul_legacy_f32  v0, s15, v7                         // 000000000014: 0E000E0F
  s_buffer_load_dwordx16  s[28:43], s[8:11], 0x38       // 000000000018: C30E0938
  s_buffer_load_dwordx4  s[44:47], s[8:11], 0x54        // 00000000001C: C2960954
  s_load_dwordx4  s[0:3], s[2:3], 0x0c                  // 000000000020: C080030C
  v_mac_legacy_f32  v0, s14, v6                         // 000000000024: 0C000C0E
  v_mul_legacy_f32  v1, s19, v7                         // 000000000028: 0E020E13
  s_buffer_load_dwordx4  s[48:51], s[8:11], 0x50        // 00000000002C: C2980950
  v_mac_legacy_f32  v0, s13, v5                         // 000000000030: 0C000A0D
  v_mac_legacy_f32  v1, s18, v6                         // 000000000034: 0C020C12
  v_mul_legacy_f32  v2, s23, v7                         // 000000000038: 0E040E17
  s_buffer_load_dwordx4  s[52:55], s[8:11], 0x4c        // 00000000003C: C29A094C
  v_mac_legacy_f32  v0, s12, v4                         // 000000000040: 0C00080C
  v_mac_legacy_f32  v1, s17, v5                         // 000000000044: 0C020A11
  v_mac_legacy_f32  v2, s22, v6                         // 000000000048: 0C040C16
  v_mul_legacy_f32  v3, s27, v7                         // 00000000004C: 0E060E1B
  v_mac_legacy_f32  v1, s16, v4                         // 000000000050: 0C020810
  v_mac_legacy_f32  v2, s21, v5                         // 000000000054: 0C040A15
  v_mac_legacy_f32  v3, s26, v6                         // 000000000058: 0C060C1A
  v_mac_legacy_f32  v2, s20, v4                         // 00000000005C: 0C040814
  v_mac_legacy_f32  v3, s25, v5                         // 000000000060: 0C060A19
  s_waitcnt     lgkmcnt(0)                              // 000000000064: BF8C007F
  v_mul_legacy_f32  v11, s35, v7                        // 000000000068: 0E160E23
  v_mul_legacy_f32  v14, s46, v10                       // 00000000006C: 0E1C142E
  v_mac_legacy_f32  v3, s24, v4                         // 000000000070: 0C060818
  buffer_store_dword  v0, v0, s[0:3], s4 offset:64 glc slc // 000000000074: E0704040 04400000
  v_mac_legacy_f32  v11, s34, v6                        // 00000000007C: 0C160C22
  v_mul_legacy_f32  v0, s39, v7                         // 000000000080: 0E000E27
  v_mul_legacy_f32  v15, s50, v10                       // 000000000084: 0E1E1432
  v_mac_legacy_f32  v14, s45, v9                        // 000000000088: 0C1C122D
  buffer_store_dword  v1, v0, s[0:3], s4 offset:68 glc slc // 00000000008C: E0704044 04400100
  v_mac_legacy_f32  v11, s33, v5                        // 000000000094: 0C160A21
  v_mac_legacy_f32  v0, s38, v6                         // 000000000098: 0C000C26
  v_mul_legacy_f32  v1, s43, v7                         // 00000000009C: 0E020E2B
  v_mul_legacy_f32  v10, s54, v10                       // 0000000000A0: 0E141436
  v_mac_legacy_f32  v15, s49, v9                        // 0000000000A4: 0C1E1231
  v_mac_legacy_f32  v14, s44, v8                        // 0000000000A8: 0C1C102C
  buffer_store_dword  v2, v0, s[0:3], s4 offset:72 glc slc // 0000000000AC: E0704048 04400200
  v_mac_legacy_f32  v11, s32, v4                        // 0000000000B4: 0C160820
  v_mac_legacy_f32  v0, s37, v5                         // 0000000000B8: 0C000A25
  v_mac_legacy_f32  v1, s42, v6                         // 0000000000BC: 0C020C2A
  v_mul_legacy_f32  v2, s31, v7                         // 0000000000C0: 0E040E1F
  v_mac_legacy_f32  v10, s53, v9                        // 0000000000C4: 0C141235
  v_mac_legacy_f32  v15, s48, v8                        // 0000000000C8: 0C1E1030
  v_mul_legacy_f32  v7, v14, v14                        // 0000000000CC: 0E0E1D0E
  buffer_store_dword  v3, v0, s[0:3], s4 offset:76 glc slc // 0000000000D0: E070404C 04400300
  v_mac_legacy_f32  v0, s36, v4                         // 0000000000D8: 0C000824
  v_mac_legacy_f32  v1, s41, v5                         // 0000000000DC: 0C020A29
  v_mac_legacy_f32  v2, s30, v6                         // 0000000000E0: 0C040C1E
  v_mac_legacy_f32  v10, s52, v8                        // 0000000000E4: 0C141034
  v_mac_legacy_f32  v7, v15, v15                        // 0000000000E8: 0C0E1F0F
  buffer_store_dword  v12, v0, s[0:3], s4 glc slc       // 0000000000EC: E0704000 04400C00
  v_mac_legacy_f32  v1, s40, v4                         // 0000000000F4: 0C020828
  v_mac_legacy_f32  v2, s29, v5                         // 0000000000F8: 0C040A1D
  v_mac_legacy_f32  v7, v10, v10                        // 0000000000FC: 0C0E150A
  buffer_store_dword  v13, v0, s[0:3], s4 offset:4 glc slc // 000000000100: E0704004 04400D00
  v_mad_legacy_f32  v2, v4, s28, v2 clamp               // 000000000108: D2800802 04083904
  v_rsq_f32     v3, v7                                  // 000000000110: 7E065D07
  buffer_store_dword  v11, v0, s[0:3], s4 offset:16 glc slc // 000000000114: E0704010 04400B00
  v_mul_legacy_f32  v4, v10, v3                         // 00000000011C: 0E08070A
  buffer_store_dword  v0, v0, s[0:3], s4 offset:20 glc slc // 000000000120: E0704014 04400000
  s_buffer_load_dword  s5, s[8:11], 0x03                // 000000000128: C2028903
  v_mul_legacy_f32  v0, v15, v3                         // 00000000012C: 0E00070F
  buffer_store_dword  v1, v0, s[0:3], s4 offset:24 glc slc // 000000000130: E0704018 04400100
  v_mul_legacy_f32  v1, v14, v3                         // 000000000138: 0E02070E
  buffer_store_dword  v2, v0, s[0:3], s4 offset:28 glc slc // 00000000013C: E070401C 04400200
  buffer_store_dword  v4, v0, s[0:3], s4 offset:32 glc slc // 000000000144: E0704020 04400400
  buffer_store_dword  v0, v0, s[0:3], s4 offset:36 glc slc // 00000000014C: E0704024 04400000
  buffer_store_dword  v1, v0, s[0:3], s4 offset:40 glc slc // 000000000154: E0704028 04400100
  s_waitcnt     lgkmcnt(0)                              // 00000000015C: BF8C007F
  v_mul_legacy_f32  v0, s5, v19                         // 000000000160: 0E002605
  buffer_store_dword  v16, v0, s[0:3], s4 offset:48 glc slc // 000000000164: E0704030 04401000
  buffer_store_dword  v17, v0, s[0:3], s4 offset:52 glc slc // 00000000016C: E0704034 04401100
  buffer_store_dword  v18, v0, s[0:3], s4 offset:56 glc slc // 000000000174: E0704038 04401200
  buffer_store_dword  v0, v0, s[0:3], s4 offset:60 glc slc // 00000000017C: E070403C 04400000
  s_endpgm                                              // 000000000184: BF810000
end


// Shader Statistics:
//  NumActiveWaveFront:         32
//  WorkgroupSize:              64
//  NumVRegs:                   20
//  NumSRegs:                   58
//  NumActiveWaveFrontByVReg:   40
//  NumActiveWaveFrontBySReg:   32
//  NumActiveWaveFrontByLDS:    40
//  CycleSim:                   88
//  CycleSimNWaves:             88
//  Code Size:                  392
//Assembler Counts:
//  num_32bit_ops                     : 62
//  num_64bit_ops                     : 18
//  num_alu                           : 49
//  num_fc                            : 14
//  num_inst_exp                      : 0
//  num_inst_ldsgds                   : 0
//  num_inst_mimg                     : 0
//  num_inst_mtbuf                    : 0
//  num_inst_mubuf                    : 17
//  num_inst_sopp                     : 5
//  num_inst_sopc                     : 0
//  num_inst_sop1                     : 1
//  num_inst_sop2                     : 0
//  num_inst_smrd                     : 0
//  num_inst_sopk                     : 0
//  num_inst_vop1                     : 1
//  num_inst_vop2                     : 47
//  num_inst_vop3                     : 0
//  num_inst_vopc                     : 0
//  num_inst_vintrp                   : 0
//  constant_literal_operands         : 0
//  num_tex                           : 17
//  num_vmem_group                    : 11
//  vmem_grouping_started             : 0
// Shader Statistics:
// m_uNumActiveWaveFront             : 32
// m_uVRegLimit                      : 256
// m_uSRegLimit                      : 512
// m_uNumVRegs                       : 20
// m_uNumSRegs                       : 58
// m_uSCCodeSize                     : 392
// m_uWorkgroupSize                  : 64
// m_uNumActiveWaveFrontByVReg       : 40
// m_uNumActiveWaveFrontBySReg       : 32
// m_uNumActiveWaveFrontByLDS        : 40
// m_uCycleSim1Wave                  : 88
// m_uCycleSimNWaves                 : 88

// Assembler Counts:
// num_32bit_ops                     : 62
// num_64bit_ops                     : 18
// num_alu                           : 49
// num_fc                            : 14
// num_inst_exp                      : 0
// num_inst_ldsgds                   : 0
// num_inst_mimg                     : 0
// num_inst_mtbuf                    : 0
// num_inst_mubuf                    : 17
// num_inst_sopp                     : 5
// num_inst_sopc                     : 0
// num_inst_sop1                     : 1
// num_inst_sop2                     : 0
// num_inst_smrd                     : 0
// num_inst_sopk                     : 0
// num_inst_vop1                     : 1
// num_inst_vop2                     : 47
// num_inst_vop3                     : 0
// num_inst_vopc                     : 0
// num_inst_vintrp                   : 0
// num_inst_smem                     : 8
// constant_literal_operands         : 0
// num_tex                           : 17
// num_vmem_group                    : 11
// vmem_grouping_started             : 0
// m_fFullPrecompilePromise          : 0
// m_fIntegerDivideExpansion         : 0
// m_fIntegerModExpansion            : 0
// m_fDoubleDivideExpansion          : 0
// m_fUsesScratch                    : 0
// m_fPerThreadIndirection           : 0
// m_fUsingTableLoads                : 0
// m_fUsingSHmemLoads                : 1
// fSemanticHashFlagOverrideApplied  : 0
// fPSHasNoUAVWrite                  : 0
// m_fRenderTargetsCanBeCompacted    : 0
// version                           : 3
// fCodePatched                      : 0

// Opaque Custom Data - XBOX Precompiled Shader Object
// Offset:[575], bundle is:[205] DWORDS.
// Disassembled Precompiled Shader Object:
// Shader Type               : (VS)
// Shader Hw Stage           : (LS)
// PDB Filename              : D:\ATG\st_dev\Kits\DirectXTK\src\Shaders\Compiled\XboxOneBasicEffect_VSBasicPixelLightingTxVc.pdb
// Shader Semantic Hash      : 0xfab87bc2d6a16fd4
//
// Shader Data:
; ----------------- VS Data ------------------------
; Input Semantic Mappings
;   [0] generic, usageIdx  0, channelMask 15, v[4:7]
;   [1] generic, usageIdx  1, channelMask  7, v[8:10]
;   [2] generic, usageIdx  2, channelMask  3, v[12:13]
;   [3] generic, usageIdx  3, channelMask 15, v[16:19]
; Output Semantic Mappings
;   [0] position,  usageIdx 4, paramIdx 4, paramSlot 0
;   [1] generic,  usageIdx 0, paramIdx 0, paramSlot 0
;   [2] generic,  usageIdx 1, paramIdx 1, paramSlot 0
;   [3] generic,  usageIdx 2, paramIdx 2, paramSlot 0
;   [4] generic,  usageIdx 3, paramIdx 3, paramSlot 0

codeLenInByte        = 348 bytes;

; launchModeFlags    = 0x0000000E
srdTableSupport      = TRUE
immediateSupportExt  = TRUE
srdTableSupportExt   = TRUE

userElementCount     = 3;
;  userElements[0]      = PTR_VERTEX_BUFFER_TABLE, Element=1 dwords, s[0x2:3]
;  userElements[1]      = PTR_EXTENDED_USER_DATA, ReferencedExtUserElements=1, s[0x2:3]
;  userElements[2]      = SUB_PTR_FETCH_SHADER, s[0x2:3]
extUserElementCount  = 1;
;  extUserElements 1[0] = IMM_CONST_BUFFER 0, offset 0x0:3 dwords
NumVgprs             = 21;
NumSgprs             = 50;
FloatMode            = 192;
IeeeMode             = 0;
FlatPtr32            = 0;
ScratchSize          = 0 dwords/thread;
LDSByteSize          = 0 bytes/workgroup (compile time only);
ScratchWaveOffsetReg = s65535;
; texSamplerUsage         = 0x00000000
; constBufUsage           = 0x00000001

; SPI_SHADER_PGM_RSRC2_VS = 0x00000008
SSPRV:USER_SGPR             = 4
; PA_CL_VS_OUT_CNTL       = 0x00000000
; SPI_VS_OUT_CONFIG       = 0x00000000
SVOC:VS_EXPORT_COUNT        = 0
SVOC:VS_HALF_PACK           = 0
SVOC:VS_EXPORTS_FOG         = 0
SVOC:VS_OUT_FOG_VEC_ADDR    = 0
; SPI_SHADER_POS_FORMAT     = 0x00000004
SSPF:POS0_EXPORT_FORMAT     = 4
SSPF:POS1_EXPORT_FORMAT     = 0
SSPF:POS2_EXPORT_FORMAT     = 0
SSPF:POS3_EXPORT_FORMAT     = 0
VGT_STRMOUT_CONFIG = 0x0
VGT_STRMOUT_CONFIG:RAST_STREAM = 0
VGT_STRMOUT_CONFIG:STREAMOUT_0_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_1_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_2_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_3_EN = 0
; vgprCompCnt               = 1
; exportVertexSize          = 20
; lsStride                  = 80

// Shader Instructions:
shader main
  asic(CI)
  type(VS)
  s_swappc_b64  s[2:3], s[2:3]                          // 000000000000: BE822102
  s_load_dwordx4  s[0:3], s[2:3], 0x00                  // 000000000004: C0800300
  s_waitcnt     lgkmcnt(0)                              // 000000000008: BF8C007F
  s_buffer_load_dwordx16  s[4:19], s[0:3], 0x38         // 00000000000C: C3020138
  s_buffer_load_dwordx4  s[20:23], s[0:3], 0x4c         // 000000000010: C28A014C
  s_buffer_load_dwordx4  s[24:27], s[0:3], 0x50         // 000000000014: C28C0150
  s_buffer_load_dwordx4  s[28:31], s[0:3], 0x54         // 000000000018: C28E0154
  s_waitcnt     lgkmcnt(0)                              // 00000000001C: BF8C007F
  s_buffer_load_dword  s23, s[0:3], 0x03                // 000000000020: C20B8103
  s_buffer_load_dwordx16  s[32:47], s[0:3], 0x58        // 000000000024: C3100158
  s_mov_b32     m0, 0x00010000                          // 000000000028: BEFC03FF 00010000
  s_waitcnt     vmcnt(0)                                // 000000000030: BF8C0F70
  v_mul_legacy_f32  v0, s11, v7                         // 000000000034: 0E000E0B
  v_mac_legacy_f32  v0, s10, v6                         // 000000000038: 0C000C0A
  v_mac_legacy_f32  v0, s9, v5                          // 00000000003C: 0C000A09
  v_mac_legacy_f32  v0, s8, v4                          // 000000000040: 0C000808
  v_mul_legacy_f32  v2, s15, v7                         // 000000000044: 0E040E0F
  v_mac_legacy_f32  v2, s14, v6                         // 000000000048: 0C040C0E
  v_mac_legacy_f32  v2, s13, v5                         // 00000000004C: 0C040A0D
  v_mac_legacy_f32  v2, s12, v4                         // 000000000050: 0C04080C
  v_mul_legacy_f32  v3, s19, v7                         // 000000000054: 0E060E13
  v_mac_legacy_f32  v3, s18, v6                         // 000000000058: 0C060C12
  v_mac_legacy_f32  v3, s17, v5                         // 00000000005C: 0C060A11
  v_mac_legacy_f32  v3, s16, v4                         // 000000000060: 0C060810
  v_mul_legacy_f32  v11, s7, v7                         // 000000000064: 0E160E07
  v_mac_legacy_f32  v11, s6, v6                         // 000000000068: 0C160C06
  v_mac_legacy_f32  v11, s5, v5                         // 00000000006C: 0C160A05
  v_mad_legacy_f32  v11, v4, s4, v11 clamp              // 000000000070: D280080B 042C0904
  v_mul_legacy_f32  v14, s22, v10                       // 000000000078: 0E1C1416
  v_mac_legacy_f32  v14, s21, v9                        // 00000000007C: 0C1C1215
  v_mac_legacy_f32  v14, s20, v8                        // 000000000080: 0C1C1014
  v_mul_legacy_f32  v15, s26, v10                       // 000000000084: 0E1E141A
  v_mac_legacy_f32  v15, s25, v9                        // 000000000088: 0C1E1219
  v_mac_legacy_f32  v15, s24, v8                        // 00000000008C: 0C1E1018
  v_mul_legacy_f32  v10, s30, v10                       // 000000000090: 0E14141E
  v_mac_legacy_f32  v10, s29, v9                        // 000000000094: 0C14121D
  v_mac_legacy_f32  v10, s28, v8                        // 000000000098: 0C14101C
  v_mul_legacy_f32  v8, v10, v10                        // 00000000009C: 0E10150A
  v_mac_legacy_f32  v8, v15, v15                        // 0000000000A0: 0C101F0F
  v_mac_legacy_f32  v8, v14, v14                        // 0000000000A4: 0C101D0E
  v_rsq_f32     v8, v8                                  // 0000000000A8: 7E105D08
  v_mul_legacy_f32  v9, v14, v8                         // 0000000000AC: 0E12110E
  v_mul_legacy_f32  v14, v15, v8                        // 0000000000B0: 0E1C110F
  v_mul_legacy_f32  v8, v10, v8                         // 0000000000B4: 0E10110A
  s_waitcnt     lgkmcnt(0)                              // 0000000000B8: BF8C007F
  v_mul_legacy_f32  v10, s23, v19                       // 0000000000BC: 0E142617
  v_mul_legacy_f32  v15, s35, v7                        // 0000000000C0: 0E1E0E23
  v_mac_legacy_f32  v15, s34, v6                        // 0000000000C4: 0C1E0C22
  v_mac_legacy_f32  v15, s33, v5                        // 0000000000C8: 0C1E0A21
  v_mac_legacy_f32  v15, s32, v4                        // 0000000000CC: 0C1E0820
  v_mul_legacy_f32  v19, s39, v7                        // 0000000000D0: 0E260E27
  v_mac_legacy_f32  v19, s38, v6                        // 0000000000D4: 0C260C26
  v_mac_legacy_f32  v19, s37, v5                        // 0000000000D8: 0C260A25
  v_mac_legacy_f32  v19, s36, v4                        // 0000000000DC: 0C260824
  v_mul_legacy_f32  v20, s43, v7                        // 0000000000E0: 0E280E2B
  v_mac_legacy_f32  v20, s42, v6                        // 0000000000E4: 0C280C2A
  v_mac_legacy_f32  v20, s41, v5                        // 0000000000E8: 0C280A29
  v_mac_legacy_f32  v20, s40, v4                        // 0000000000EC: 0C280828
  v_mul_legacy_f32  v7, s47, v7                         // 0000000000F0: 0E0E0E2F
  v_mac_legacy_f32  v7, s46, v6                         // 0000000000F4: 0C0E0C2E
  v_mac_legacy_f32  v7, s45, v5                         // 0000000000F8: 0C0E0A2D
  v_mac_legacy_f32  v7, s44, v4                         // 0000000000FC: 0C0E082C
  s_movk_i32    s0, 0x0050                              // 000000000100: B0000050
  s_nop         0x0000                                  // 000000000104: BF800000
  v_mul_lo_i32  v1, v1, s0                              // 000000000108: D2D60001 00000101
  ds_write2_b32  v1, v15, v19 offset0:16 offset1:17     // 000000000110: D8381110 00130F01
  ds_write2_b32  v1, v20, v7 offset0:18 offset1:19      // 000000000118: D8381312 00071401
  ds_write2_b32  v1, v12, v13 offset1:1                 // 000000000120: D8380100 000D0C01
  ds_write2_b32  v1, v0, v2 offset0:4 offset1:5         // 000000000128: D8380504 00020001
  ds_write2_b32  v1, v3, v11 offset0:6 offset1:7        // 000000000130: D8380706 000B0301
  ds_write2_b32  v1, v9, v14 offset0:8 offset1:9        // 000000000138: D8380908 000E0901
  ds_write_b32  v1, v8 offset:40                        // 000000000140: D8340028 00000801
  ds_write2_b32  v1, v16, v17 offset0:12 offset1:13     // 000000000148: D8380D0C 00111001
  ds_write2_b32  v1, v18, v10 offset0:14 offset1:15     // 000000000150: D8380F0E 000A1201
  s_endpgm                                              // 000000000158: BF810000
end


// Shader Statistics:
//  NumActiveWaveFront:         36
//  WorkgroupSize:              64
//  NumVRegs:                   21
//  NumSRegs:                   50
//  NumActiveWaveFrontByVReg:   40
//  NumActiveWaveFrontBySReg:   36
//  NumActiveWaveFrontByLDS:    40
//  CycleSim:                   93
//  CycleSimNWaves:             93
//  Code Size:                  348
//Assembler Counts:
//  num_32bit_ops                     : 64
//  num_64bit_ops                     : 11
//  num_alu                           : 50
//  num_fc                            : 16
//  num_inst_exp                      : 0
//  num_inst_ldsgds                   : 9
//  num_inst_mimg                     : 0
//  num_inst_mtbuf                    : 0
//  num_inst_mubuf                    : 0
//  num_inst_sopp                     : 6
//  num_inst_sopc                     : 0
//  num_inst_sop1                     : 2
//  num_inst_sop2                     : 0
//  num_inst_smrd                     : 0
//  num_inst_sopk                     : 1
//  num_inst_vop1                     : 1
//  num_inst_vop2                     : 47
//  num_inst_vop3                     : 0
//  num_inst_vopc                     : 0
//  num_inst_vintrp                   : 0
//  constant_literal_operands         : 0
//  num_tex                           : 9
//  num_vmem_group                    : 0
//  vmem_grouping_started             : 0
// Shader Statistics:
// m_uNumActiveWaveFront             : 36
// m_uVRegLimit                      : 256
// m_uSRegLimit                      : 512
// m_uNumVRegs                       : 21
// m_uNumSRegs                       : 50
// m_uSCCodeSize                     : 348
// m_uWorkgroupSize                  : 64
// m_uNumActiveWaveFrontByVReg       : 40
// m_uNumActiveWaveFrontBySReg       : 36
// m_uNumActiveWaveFrontByLDS        : 40
// m_uCycleSim1Wave                  : 93
// m_uCycleSimNWaves                 : 93

// Assembler Counts:
// num_32bit_ops                     : 64
// num_64bit_ops                     : 11
// num_alu                           : 50
// num_fc                            : 16
// num_inst_exp                      : 0
// num_inst_ldsgds                   : 9
// num_inst_mimg                     : 0
// num_inst_mtbuf                    : 0
// num_inst_mubuf                    : 0
// num_inst_sopp                     : 6
// num_inst_sopc                     : 0
// num_inst_sop1                     : 2
// num_inst_sop2                     : 0
// num_inst_smrd                     : 0
// num_inst_sopk                     : 1
// num_inst_vop1                     : 1
// num_inst_vop2                     : 47
// num_inst_vop3                     : 0
// num_inst_vopc                     : 0
// num_inst_vintrp                   : 0
// num_inst_smem                     : 7
// constant_literal_operands         : 0
// num_tex                           : 9
// num_vmem_group                    : 0
// vmem_grouping_started             : 0
// m_fFullPrecompilePromise          : 0
// m_fIntegerDivideExpansion         : 0
// m_fIntegerModExpansion            : 0
// m_fDoubleDivideExpansion          : 0
// m_fUsesScratch                    : 0
// m_fPerThreadIndirection           : 0
// m_fUsingTableLoads                : 0
// m_fUsingSHmemLoads                : 1
// fSemanticHashFlagOverrideApplied  : 0
// fPSHasNoUAVWrite                  : 0
// m_fRenderTargetsCanBeCompacted    : 0
// version                           : 3
// fCodePatched                      : 0

// Approximately 0 instruction slots used
#endif

const BYTE BasicEffect_VSBasicPixelLightingTxVc[] =
{
     68,  88,  66,  67, 115, 143, 
    241, 170, 158, 145, 185,  41, 
     85, 234,  13, 116,  82,   8, 
    184,  76,   1,   0,   0,   0, 
     37,  14,   0,   0,   5,   0, 
      0,   0,  52,   0,   0,   0, 
    200,   0,   0,   0, 108,   1, 
      0,   0, 172,  13,   0,   0, 
    188,  13,   0,   0,  73,  83, 
     71,  78, 140,   0,   0,   0, 
      4,   0,   0,   0,   8,   0, 
      0,   0, 104,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      0,   0,   0,   0,  15,  15, 
      0,   0, 116,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   0,   0,   7,   7, 
      0,   0, 123,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      2,   0,   0,   0,   3,   3, 
      0,   0, 132,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      3,   0,   0,   0,  15,  15, 
      0,   0,  83,  86,  95,  80, 
    111, 115, 105, 116, 105, 111, 
    110,   0,  78,  79,  82,  77, 
     65,  76,   0,  84,  69,  88, 
     67,  79,  79,  82,  68,   0, 
     67,  79,  76,  79,  82,   0, 
    171, 171,  79,  83,  71,  78, 
    156,   0,   0,   0,   5,   0, 
      0,   0,   8,   0,   0,   0, 
    128,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      3,   0,   0,   0,   0,   0, 
      0,   0,   3,  12,   0,   0, 
    128,   0,   0,   0,   1,   0, 
      0,   0,   0,   0,   0,   0, 
      3,   0,   0,   0,   1,   0, 
      0,   0,  15,   0,   0,   0, 
    128,   0,   0,   0,   2,   0, 
      0,   0,   0,   0,   0,   0, 
      3,   0,   0,   0,   2,   0, 
      0,   0,   7,   8,   0,   0, 
    137,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      3,   0,   0,   0,   3,   0, 
      0,   0,  15,   0,   0,   0, 
    143,   0,   0,   0,   0,   0, 
      0,   0,   1,   0,   0,   0, 
      3,   0,   0,   0,   4,   0, 
      0,   0,  15,   0,   0,   0, 
     84,  69,  88,  67,  79,  79, 
     82,  68,   0,  67,  79,  76, 
     79,  82,   0,  83,  86,  95, 
     80, 111, 115, 105, 116, 105, 
    111, 110,   0, 171,  83,  72, 
     69,  88,  56,  12,   0,   0, 
     80,   0,   1,   0,  14,   3, 
      0,   0,  53,  16,   0,   0, 
      5,   0,   0,   0, 168,   0, 
      0,   0,  80,   0,   1,   0, 
    163,   0,   0,   0, 106,   8, 
      0,   1,  89,   0,   0,   4, 
     70, 142,  32,   0,   0,   0, 
      0,   0,  26,   0,   0,   0, 
     95,   0,   0,   3, 242,  16, 
     16,   0,   0,   0,   0,   0, 
     95,   0,   0,   3, 114,  16, 
     16,   0,   1,   0,   0,   0, 
     95,   0,   0,   3,  50,  16, 
     16,   0,   2,   0,   0,   0, 
     95,   0,   0,   3, 242,  16, 
     16,   0,   3,   0,   0,   0, 
    101,   0,   0,   3,  50,  32, 
     16,   0,   0,   0,   0,   0, 
    101,   0,   0,   3, 242,  32, 
     16,   0,   1,   0,   0,   0, 
    101,   0,   0,   3, 114,  32, 
     16,   0,   2,   0,   0,   0, 
    101,   0,   0,   3, 242,  32, 
     16,   0,   3,   0,   0,   0, 
    103,   0,   0,   4, 242,  32, 
     16,   0,   4,   0,   0,   0, 
      1,   0,   0,   0, 104,   0, 
      0,   2,   1,   0,   0,   0, 
     54,   0,   0,   5,  50,  32, 
     16,   0,   0,   0,   0,   0, 
     70,  16,  16,   0,   2,   0, 
      0,   0,  17,   0,   0,   8, 
     18,  32,  16,   0,   1,   0, 
      0,   0,  70,  30,  16,   0, 
      0,   0,   0,   0,  70, 142, 
     32,   0,   0,   0,   0,   0, 
     15,   0,   0,   0,  17,   0, 
      0,   8,  34,  32,  16,   0, 
      1,   0,   0,   0,  70,  30, 
     16,   0,   0,   0,   0,   0, 
     70, 142,  32,   0,   0,   0, 
      0,   0,  16,   0,   0,   0, 
     17,   0,   0,   8,  66,  32, 
     16,   0,   1,   0,   0,   0, 
     70,  30,  16,   0,   0,   0, 
      0,   0,  70, 142,  32,   0, 
      0,   0,   0,   0,  17,   0, 
      0,   0,  17,  32,   0,   8, 
    130,  32,  16,   0,   1,   0, 
      0,   0,  70,  30,  16,   0, 
      0,   0,   0,   0,  70, 142, 
     32,   0,   0,   0,   0,   0, 
     14,   0,   0,   0,  16,   0, 
      0,   8,  18,   0,  16,   0, 
      0,   0,   0,   0,  70,  18, 
     16,   0,   1,   0,   0,   0, 
     70, 130,  32,   0,   0,   0, 
      0,   0,  19,   0,   0,   0, 
     16,   0,   0,   8,  34,   0, 
     16,   0,   0,   0,   0,   0, 
     70,  18,  16,   0,   1,   0, 
      0,   0,  70, 130,  32,   0, 
      0,   0,   0,   0,  20,   0, 
      0,   0,  16,   0,   0,   8, 
     66,   0,  16,   0,   0,   0, 
      0,   0,  70,  18,  16,   0, 
      1,   0,   0,   0,  70, 130, 
     32,   0,   0,   0,   0,   0, 
     21,   0,   0,   0,  16,   0, 
      0,   7, 130,   0,  16,   0, 
      0,   0,   0,   0,  70,   2, 
     16,   0,   0,   0,   0,   0, 
     70,   2,  16,   0,   0,   0, 
      0,   0,  68,   0,   0,   5, 
    130,   0,  16,   0,   0,   0, 
      0,   0,  58,   0,  16,   0, 
      0,   0,   0,   0,  56,   0, 
      0,   7, 114,  32,  16,   0, 
      2,   0,   0,   0, 246,  15, 
     16,   0,   0,   0,   0,   0, 
     70,   2,  16,   0,   0,   0, 
      0,   0,  56,   0,   0,   8, 
    130,  32,  16,   0,   3,   0, 
      0,   0,  58,  16,  16,   0, 
      3,   0,   0,   0,  58, 128, 
     32,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,  54,   0, 
      0,   5, 114,  32,  16,   0, 
      3,   0,   0,   0,  70,  18, 
     16,   0,   3,   0,   0,   0, 
     17,   0,   0,   8,  18,  32, 
     16,   0,   4,   0,   0,   0, 
     70,  30,  16,   0,   0,   0, 
      0,   0,  70, 142,  32,   0, 
      0,   0,   0,   0,  22,   0, 
      0,   0,  17,   0,   0,   8, 
     34,  32,  16,   0,   4,   0, 
      0,   0,  70,  30,  16,   0, 
      0,   0,   0,   0,  70, 142, 
     32,   0,   0,   0,   0,   0, 
     23,   0,   0,   0,  17,   0, 
      0,   8,  66,  32,  16,   0, 
      4,   0,   0,   0,  70,  30, 
     16,   0,   0,   0,   0,   0, 
     70, 142,  32,   0,   0,   0, 
      0,   0,  24,   0,   0,   0, 
     17,   0,   0,   8, 130,  32, 
     16,   0,   4,   0,   0,   0, 
     70,  30,  16,   0,   0,   0, 
      0,   0,  70, 142,  32,   0, 
      0,   0,   0,   0,  25,   0, 
      0,   0,  62,   0,   0,   1, 
     53,  16,   0,   0, 197,   0, 
      0,   0,  23,   0,   1,   0, 
     32,  70,  23,   0, 120,   1, 
    237, 152,  79,  79,  19,  65, 
     20, 192, 103, 183, 219, 233, 
    118,  25,  94, 151, 101,  41, 
    255,  74,  41, 138,  88, 255, 
      1, 234, 133,  24,  51,  42, 
    162,  30,  32,  41,   9, 149, 
    112,  88,  67, 160,  45,  80, 
    131,  80, 105,  67,  72,  76, 
    176,  18, 162,  23,  62, 128, 
     26,  99,  98, 226, 135, 240, 
     96, 132, 148, 171, 198, 196, 
     16,  63, 131, 103,  79, 196, 
     68, 241, 189, 118,  55, 105, 
      0, 207,  26, 179, 191, 228, 
     55, 111, 102, 118, 218, 157, 
    121, 179, 167, 119, 187, 149, 
     85, 121, 253,  43, 245, 147, 
     98, 243,  65, 226, 254, 150, 
    202,  88, 144,   6, 136,  70, 
     13,  82, 176, 169, 101, 236, 
     91,  11, 181, 140, 245,  82, 
    163, 160, 184, 150, 166,  46, 
    161,  73,  28,  95, 167, 136, 
    210, 115, 138,  47,  95,  60, 
     28, 254, 244, 113, 117,  56, 
    133, 253,  65,  52, 138, 222, 
    117, 149,  40,  71,  47, 163, 
      2, 245, 222,  89, 143, 247, 
    126, 122,  85,  61,   1, 116, 
      0, 173,  39,  68,  13, 114, 
    228, 127, 102, 168,  57, 158, 
     17, 212,  61, 210, 177, 208, 
    222,  60, 232, 127, 105, 159, 
      4, 157, 247,  95, 131, 114, 
    228, 221,  19,  65, 247,  81, 
     15, 160, 148,  55, 226, 185, 
    123, 104, 111, 201, 158,  59, 
    166,  64, 103, 219,  65, 255, 
    196,   1, 226, 221, 139, 135, 
     55, 166, 200,  89, 106, 144, 
     43, 207,  18,  92, 221,  53, 
    121,  32, 114, 145, 227,  36, 
    199, 228, 113, 188, 108, 142, 
    151, 196, 117,  52, 140,  26, 
    104,   3, 138,  73, 229, 141, 
     40, 110, 144,  71,  80,  19, 
    109,  66,  45, 180,  25, 197, 
     51, 113, 220,  24, 199, 143, 
    135, 227, 247, 202, 219, 208, 
    118, 180,   3, 237,  68,  99, 
    104,  23,  26,  71, 187, 189, 
     61, 212, 224,  74, 237, 132, 
     92, 197,  15,  21, 225,   1, 
     47,   3, 255,  55, 148,   3, 
     76, 115,  21, 202,   5, 141, 
     61, 234, 251,  62,  62,  62, 
     62,  62,  62,  62,  62,  62, 
     62,  62,  62,  62,  62,  62, 
     62, 127,  11, 181, 103, 227, 
      3,  11, 148, 119,  30, 179, 
    173, 237, 180, 178,  81,  25, 
     87,  54,  43,  99, 202, 211, 
    202, 144, 162, 239,  78,  41, 
    230, 110,   1, 231, 185, 205, 
    192, 176,  85,   8,  90,  76, 
      6,  20,  86,   1,  91, 131, 
    176, 165,  74, 205, 100, 178, 
    209, 210, 164, 110, 170, 146, 
     41,  28,  90, 193, 130,  78, 
    176, 161,  27, 162, 208,  12, 
     49,  16, 166,  38, 149,   0, 
    151,  39, 193, 132, 211,  16, 
    135, 115, 144, 132,   1,   0, 
    136,  10,  75, 118,   8,  91, 
    198,  69,  84,  90,  34,  38, 
    213,  32, 151,  39, 132,  41, 
    250,  68,  92, 156,  21,  73, 
    209,  47,  64, 180,  24, 150, 
    108,  55, 108, 217, 101,  68, 
    101, 147,  17, 147, 129, 123, 
    124, 189, 199,  48, 197,  41, 
     35,  46, 206,  24,  73, 113, 
    193,   0,  97, 235, 150, 108, 
    211, 109,  25, 211, 163,  18, 
    244, 242,  23, 173, 103,  72, 
     83,  67,  26,  40,  33,  21, 
     88, 136,   1, 157, 137, 245, 
    113,  72, 232, 166, 232, 213, 
    227,  34, 169,  39, 197, 121, 
     29,  68,  89, 213, 215, 191, 
    171, 198, 250, 103, 157, 237, 
    235,  17,  59,  20,  81, 217, 
    190, 104, 212, 130, 221,  24, 
    195,  70,   3,  12,  96,  84, 
     21,  22, 188, 134, 209, 108, 
    178,   2, 140,  61, 217, 166, 
    122,  29, 213,  96, 107, 213, 
    173,  26, 237,  84, 242,  58, 
     52, 103,  82, 115, 104, 174, 
    218, 215, 106, 245,  49, 143, 
     94,  42, 208,  18, 110, 164, 
     58, 110,  24,  85, 220, 202, 
     97,   7, 170, 185, 213, 181, 
    189, 229,  55,  95,  43, 143, 
    222, 253, 160,  62, 225, 184, 
    191, 185, 234, 198,   4, 234, 
    213,  75, 107, 148, 169,  57, 
    194, 166, 187, 190, 228,  70, 
    218,  43, 213, 168, 192, 171, 
    228,  82, 225,  18, 121, 235, 
     62, 127, 229,  70, 170, 111, 
     53, 160, 135, 247, 241, 222, 
    125,  62, 139, 210,  78,  71, 
    174,  56,  55, 210, 119, 156, 
     98, 105,  58, 155,  91, 117, 
     70, 243, 165, 162,  51, 146, 
     95, 201, 101,  74,  83, 233, 
     81, 167, 184, 146, 113,  38, 
     22, 102, 178, 185, 149, 162, 
    115, 115, 249,  65,  33, 191, 
    152, 203,  58,  83, 179, 203, 
    107, 169, 165, 220, 240,  76, 
     49, 159, 185,  53,  55, 135, 
     75, 167,  39,  39, 170, 163, 
    241, 252,  90, 110, 113,  44, 
     63, 191,  80, 202,  47, 205, 
    167, 215,  38,  51, 253, 133, 
    236,  44, 251,  13, 196, 140, 
    127, 174,  53,  16,   0,   0, 
    210,   0,   0,   0,  23,   0, 
      1,   0,  16, 186,  23,   0, 
    120,   1, 237, 152, 203, 107, 
     19,  65,  28, 199,  39, 155, 
    113, 178, 137, 211, 201,  54, 
    221, 198, 180, 166, 105, 125, 
    213, 214, 103,  43,  85,  84, 
     68, 214,  90,  81, 104, 193, 
    130,  69,  10, 174, 212,  62, 
    162,  70, 212, 134,  38,  72, 
     65, 240, 133, 160, 162, 120, 
     20, 241, 230, 127, 224,  73, 
    196, 131, 150, 244, 224,  85, 
     68,  60, 123, 244, 236,  73, 
    188, 232, 247, 155, 221, 104, 
    137, 122,  86, 100,  63, 228, 
     59, 191, 121, 238, 124, 103, 
    103, 115, 249, 189,  92,  35, 
    234, 120, 159,  71, 250,  25, 
    219, 190, 245,  92, 120,  96, 
      9, 177, 138,  13, 128, 106, 
    157, 178, 203,  82,   8,  63, 
    203,  82, 136,  30,  22,  49, 
      8,  19,  56, 180,  31, 186, 
    139, 182, 135, 216,   7, 113, 
    156,  49, 255, 230, 254, 240, 
    243,  51,  15, 135,  79, 161, 
    190,  27, 226, 242, 201,  80, 
      7, 161,  12,  52,   8,  25, 
    168, 153,  86, 168, 225, 131, 
     91, 173, 132, 237, 157, 208, 
     74, 108,  22, 128, 235,  86, 
     67,  63, 152, 102, 241, 123, 
    198, 161, 240, 104, 191, 133, 
    222, 248, 188,   6,  13, 159, 
     60, 239, 191,   6, 223,  73, 
    227, 158,   8, 239,  99,  37, 
    244,  46,  33, 242, 165, 157, 
    101, 176, 134,  28,  11, 239, 
    149, 203, 121, 182,  37, 232, 
     79, 124,   3, 141, 231,  16, 
    214, 135,  32, 194, 186,  18, 
    199,   7,  84, 236,  78, 143, 
    178, 150,  29,  21,  79,  15, 
     42, 116,  42,  92, 164,  82, 
     80,   2, 194,  69, 169,  36, 
    148, 130, 112,  81,  74,  67, 
     45,  16,  12, 170,  52, 228, 
     64, 120, 233,  10,  31, 135, 
    106, 131,  96,  74, 193, 175, 
    130,  71, 133, 239,  85, 229, 
    160,  14, 168,  19,  90,  11, 
    229, 161,  46, 168,   0, 117, 
    135, 223, 140, 164,  19, 180, 
     89,   0,  21,  11,  78, 170, 
    172, 224, 139,  86, 241,  56, 
    195, 127,  11, 223,  65, 227, 
    255,  64, 130, 183,  17, 192, 
     59, 166,  34,  34,  34,  34, 
     34,  34,  34,  34,  34,  34, 
     34,  34,  34,  34,  34,  34, 
    254,  38, 214, 186,  91, 175, 
     68, 252, 246, 210, 117, 241, 
    224, 245, 100,  82,  45, 151, 
     17, 211,  70, 152, 189,  73, 
    179,  60, 145, 124,  84, 211, 
    241,  27,  75,  70,  11, 221, 
    102,  44,  51, 158, 124,  92, 
    107,  73,   9, 157, 209, 150, 
     94,  99, 164,  25,  75,  62, 
    169, 105,  91, 232, 214, 148, 
    165, 179,  90, 234, 181,  70, 
     25, 199, 182, 116, 123,  74, 
    234,  78, 173, 180, 107,  75, 
    221, 145,  82, 154, 207, 222, 
     96, 178, 102, 135, 155,  55, 
     57,  91, 105, 207,  43, 127, 
     20, 194, 147, 235, 177, 106, 
     51, 246, 218, 229,  22, 204, 
    246,  76,  94, 143, 176,  63, 
    230, 201, 117, 169, 172, 238, 
    197, 158,  91, 177, 231,  30, 
    215,  53, 131, 153, 130, 222, 
    230, 228, 245,  49, 142,  91, 
    158, 236, 177, 179, 122,  19, 
    124, 108, 129, 143, 110, 248, 
    216, 157, 113, 245, 128,  83, 
    208, 166, 203, 152,  49, 206, 
    137, 123, 114,  35, 124, 245, 
    195,  87,   1, 190, 134,  28, 
     87, 167, 187, 113,  10, 142, 
    105,  79, 246, 193,  99,  23, 
     60, 166, 218, 141, 150, 236, 
    107, 241, 164, 101, 223, 120, 
     39, 247, 217,  50, 113,  90, 
     93, 115, 216, 183, 218, 147, 
    169, 132, 109,  92, 214, 225, 
     53, 126, 207, 170, 165,  19, 
    194, 228, 216, 134,  71, 147, 
    176,  76, 158, 117, 250,  97, 
    148, 216, 147,  17, 115, 251, 
     24,  49, 135, 231,  94, 213, 
     43, 204,   0, 219, 142,  39, 
    135,  24,  91,  61, 185, 151, 
     49, 227, 201,   3, 140, 152, 
     47, 196, 205, 215, 245,  52, 
    161,  85, 255, 253, 160, 131, 
    169, 180, 166, 190,  28, 139, 
    166,  62, 135,  69,  83,  95, 
    189,  46, 131,  92,  92, 131, 
    199,  97, 238, 177,  26, 198, 
    141,  80,  18, 138, 137,  32, 
     71, 215,   9, 201,  48, 147, 
    247, 126, 254, 233, 135, 218, 
    213,  23,  95,  89,  39, 111, 
    195,  53, 207, 194, 200, 188, 
    179, 134, 126, 194, 140, 244, 
    175, 124,   9, 231, 127,  10, 
     35, 189,  50,  71, 102, 130, 
    236,  97, 144,  44,   5, 185, 
     48,  63, 238, 132, 145,  57, 
     53, 230, 150, 155, 125,  12, 
    132, 227,  51,  16, 157, 142, 
    236, 247,  15,  77,  28, 245, 
     43, 213, 169, 185, 226,  21, 
    127, 180,  84, 173, 248,  35, 
    165, 133, 226, 108, 117, 114, 
     98, 212, 175,  44, 204, 250, 
     39, 206,  79, 207,  21,  23, 
     42, 254, 225, 249,  75, 229, 
    210, 197, 226, 156,  63,  57, 
     51, 191, 120, 252, 114, 113, 
    120, 186,  82, 154,  61, 114, 
    246,  44, 166,  78, 157,  60, 
     81, 111, 141, 151,  22, 139, 
     23, 199,  74, 231, 206,  87, 
     75, 151, 207,  77,  44, 158, 
    156, 221,  81, 158, 155,  17, 
    223,   1,  29,  55, 152, 239, 
      0,   0,  53,  16,   0,   0, 
    207,   0,   0,   0,  23,   0, 
      1,   0,   0, 122,  23,   0, 
    120,   1, 237, 152, 223,  75, 
     20,  81,  20, 199, 239, 236, 
    142, 215, 217, 217, 227, 217, 
    217, 221, 113,  77,  91,  39, 
     45, 219, 182, 210, 126, 225, 
    131, 244,  84,  86, 244, 160, 
    144, 160, 136,  15,  35, 162, 
    187, 171, 110,  88,  46, 174, 
    132,  20, 148,   5,  17, 132, 
     68, 255,  66, 111,  61, 246, 
     24,   4,  25, 235, 107,  65, 
     68, 136,  47, 253,  15, 209, 
     99,   4, 246,  61, 238, 108, 
     45,  82, 244,  88, 196, 124, 
    224, 123, 206, 189, 119, 238, 
    204, 156, 251, 227, 233, 123, 
    187,  67, 237, 241, 229, 213, 
    167, 147, 146, 211, 187,  61, 
    215,  55,  34,  74, 181,  72, 
    167, 137, 138,  43,  81, 169, 
    108,  70, 162,  82, 125,  18, 
     12,   8, 115, 219, 145, 206, 
     65,  62, 250,  23, 144, 243, 
    144,  60, 151, 252, 238, 237, 
    131, 225, 249, 249, 135, 195, 
    104, 170,   1,  72, 126,  55, 
     29,  72, 230, 198,  33, 121, 
    215, 129, 132, 152, 132,  38, 
    180,   4, 128, 223, 252,  64, 
    126,  43,  58,  13,  53, 211, 
     42,   1, 236, 255, 134, 154, 
    149, 240, 107,  70,  32, 169, 
    255, 119,  72, 109,  66, 227, 
    155, 141,  58,  27, 227, 255, 
     18, 178,  39, 141, 115,  18, 
    228,  60, 154,  97,  40,  10, 
      9, 111, 131,  69,  55, 166, 
     88, 193, 185, 202, 176, 172, 
    237,  13, 244,  59, 118, 129, 
     41, 141,  38,  26, 125, 201, 
     90,  93,  59, 163, 141,  71, 
     61,  58, 178, 229, 232, 104, 
    226, 172, 198, 160, 198, 133, 
    210,  56,  76, 141,  67, 210, 
     22, 132,  13, 213,  54, 132, 
     11, 160,   9, 106, 131,  80, 
    160,  78,  64, 216, 100, 157, 
    132,  82,  80,  26, 194, 154, 
     52,  10, 211, 168,  81, 227, 
      2, 233,   3,  80,  39, 212, 
      5,  29, 132, 178,  80,  55, 
    228,  65, 135, 130, 187, 107, 
     74,  37, 232,  75,   0, 218, 
    168, 175,  84,  71, 234,  55, 
     73,  71,  27,  59, 241, 127, 
     34, 123, 128, 109, 254,  65, 
    125,  55, 234, 231, 221, 184, 
     34,  99,  18,  66,  66,  66, 
     66,  66,  66,  66,  66,  66, 
     66,  66,  66,  66,  66,  66, 
     66, 254,  18, 145, 222,   7, 
    175,  85, 116, 253, 205,  61, 
    181, 177,  57, 100,  68, 182, 
     70, 141, 199, 181,  49,  99, 
    163,  54,  97,  60, 169, 201, 
     88, 244, 126, 188,  54, 101, 
     56,  91, 187, 209, 111, 175, 
    197, 213, 168,  36,  54,  54, 
    227, 172, 216,  38,  69,  49, 
     91, 145, 101,  41,  74, 176, 
    201,  76,  38, 181, 217,  38, 
    145, 101,  82, 154,  53, 167, 
     72,  83, 210, 214, 228,  88, 
    154,  90,  57, 195, 154,  50, 
    212,  98, 103,  40, 110, 173, 
    127,  48,  99, 253, 102, 198, 
    205, 114, 123,  42,  75, 174, 
    147, 165,  46, 215, 227, 206, 
    148,  71,   7,  28, 143,  60, 
    215, 229, 238, 148,  75,  89, 
    199,  37, 187, 221, 225, 196, 
     33, 135, 184, 219,  33, 107, 
    218, 185, 203, 201,  20,  39, 
    146,  89, 182, 147,  14,  75, 
    109,  29,  57, 151, 143, 176, 
    199, 135, 201, 163,  94, 219, 
    163,  30, 203, 163,  99, 156, 
    227,  28, 229, 232, 168, 157, 
    163,  62,  43,  71,  39,  57, 
    207,  39,  40,  79, 199, 237, 
     60, 229, 173,  60, 157, 102, 
    230,  83, 196,  52,  96,  51, 
    245,  91,  76,  99,  74, 189, 
     80, 106, 125, 211,  80, 219, 
     31, 196, 186, 114, 146,  67, 
     59,  70,  34, 173,  82, 105, 
    100, 183,  21,  75,  70, 166, 
     54, 101, 182,  32, 171, 136, 
    210, 173, 200, 209, 184, 178, 
     98, 200,  49,  86, 121,  53, 
    184,  99,  88,  74,  81,  27, 
    250,  78,  82, 113,   2,  57, 
    101,  99, 103, 239, 111, 138, 
    199,  39, 134, 106, 221,   9, 
    171, 211,  41, 198, 208, 190, 
    177,  61, 175, 115, 223, 216, 
     94, 219, 148, 201,  63, 153, 
     10, 188, 195, 193,  32, 139, 
    247,  43, 126, 169,  17, 184, 
    141,  93, 144,  25,  56, 113, 
     31, 151, 159, 109, 215, 238, 
    188, 252,  42, 109, 225, 105, 
    240,  78,  37, 200,  61,  16, 
     65, 127, 226, 101,  48, 255, 
    121, 144, 165,  86, 241, 184, 
    184, 238, 254, 213, 205,  78, 
    176,  19,  60, 127,  31, 100, 
    241, 196, 196, 115, 222,  95, 
    199, 231, 224, 249,  28,  36, 
    149,  94,  62, 239,  95, 156, 
    184, 234,  87,  87, 103, 138, 
    165,  91, 254,  72, 121, 181, 
    234,  95,  46, 175, 148,  10, 
    171,  83,  19,  35, 126, 117, 
    165, 224, 143,  47, 206,  22, 
     75,  43,  85, 255, 210, 242, 
    141,  74, 121, 169,  84, 244, 
    167, 230, 150, 215, 174, 221, 
     44,  13, 207,  86, 203, 133, 
     43, 243, 243, 152,  58,  51, 
     57, 190, 215,  27,  43, 175, 
    149, 150,  70, 203,  11, 139, 
    171, 229, 155,  11,  19, 107, 
    147, 133,  83, 149, 226, 156, 
    250,  14, 114,  68, 136,  60, 
      0,   0,  88,  72,  83,  72, 
      8,   0,   0,   0, 212, 111, 
    161, 214, 194, 123, 184, 250, 
     88,  80,  68,  80,  97,   0, 
      0,   0,  68,  58,  92,  65, 
     84,  71,  92, 115, 116,  95, 
    100, 101, 118,  92,  75, 105, 
    116, 115,  92,  68, 105, 114, 
    101,  99, 116,  88,  84,  75, 
     92, 115, 114,  99,  92,  83, 
    104,  97, 100, 101, 114, 115, 
     92,  67, 111, 109, 112, 105, 
    108, 101, 100,  92,  88,  98, 
    111, 120,  79, 110, 101,  66, 
     97, 115, 105,  99,  69, 102, 
    102, 101,  99, 116,  95,  86, 
     83,  66,  97, 115, 105,  99, 
     80, 105, 120, 101, 108,  76, 
    105, 103, 104, 116, 105, 110, 
    103,  84, 120,  86,  99,  46, 
    112, 100,  98
};
