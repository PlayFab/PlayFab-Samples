#if 0
//
// Generated by Microsoft (R) D3D Shader Disassembler for Durango
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// COLOR                    0   xyzw        3     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xy          0     NONE   float   xy  
// TEXCOORD                 1   xyzw        1     NONE   float   xyzw
// TEXCOORD                 2   xyz         2     NONE   float   xyz 
// COLOR                    0   xyzw        3     NONE   float   xyzw
// SV_Position              0   xyzw        4      POS   float   xyzw
//
vs_5_0
// Opaque Custom Data - XBOX Precompiled Shader Header
// First Precompiled Shader at offset:[168]
// Embedded Data:
//  0x000000a8 - Offset To First Precompiled Shader
//  0x00010050 - Original Shader Descriptor
//  0x000000a3 - Original Shader Size
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[26], immediateIndexed
dcl_input v0.xyzw
dcl_input v1.xyz
dcl_input v2.xy
dcl_input v3.xyzw
dcl_output o0.xy
dcl_output o1.xyzw
dcl_output o2.xyz
dcl_output o3.xyzw
dcl_output_siv o4.xyzw, position
dcl_temps 1
mov o0.xy, v2.xyxx
dp4 o1.x, v0.xyzw, cb0[15].xyzw
dp4 o1.y, v0.xyzw, cb0[16].xyzw
dp4 o1.z, v0.xyzw, cb0[17].xyzw
dp4_sat o1.w, v0.xyzw, cb0[14].xyzw
dp3 r0.x, v1.xyzx, cb0[19].xyzx
dp3 r0.y, v1.xyzx, cb0[20].xyzx
dp3 r0.z, v1.xyzx, cb0[21].xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul o2.xyz, r0.wwww, r0.xyzx
mul o3.w, v3.w, cb0[0].w
mov o3.xyz, v3.xyzx
dp4 o4.x, v0.xyzw, cb0[22].xyzw
dp4 o4.y, v0.xyzw, cb0[23].xyzw
dp4 o4.z, v0.xyzw, cb0[24].xyzw
dp4 o4.w, v0.xyzw, cb0[25].xyzw
ret 
// Opaque Custom Data - XBOX Precompiled Shader Object
// Offset:[168], bundle is:[196] DWORDS.
// Disassembled Precompiled Shader Object:
// Shader Type               : (VS)
// Shader Hw Stage           : (VS)
// PDB Filename              : D:\ATG\st_dev\Kits\DirectXTK\src\Shaders\Compiled\XboxOneNormalMapEffect_VSNormalPixelLightingTxVc.pdb
// Shader Semantic Hash      : 0xfab87bc2d6a16fd4
//
// Shader Data:
; ----------------- VS Data ------------------------
; Input Semantic Mappings
;   [0] generic, usageIdx  0, channelMask 15, v[4:7]
;   [1] generic, usageIdx  1, channelMask  7, v[8:10]
;   [2] generic, usageIdx  2, channelMask  3, v[12:13]
;   [3] generic, usageIdx  3, channelMask 15, v[16:19]
; Output Semantic Mappings
;   [0] generic,  usageIdx 0, paramIdx 0, paramSlot 0
;   [1] generic,  usageIdx 1, paramIdx 1, paramSlot 0
;   [2] generic,  usageIdx 2, paramIdx 2, paramSlot 0
;   [3] generic,  usageIdx 3, paramIdx 3, paramSlot 0

codeLenInByte        = 296 bytes;

; launchModeFlags    = 0x0000000E
srdTableSupport      = TRUE
immediateSupportExt  = TRUE
srdTableSupportExt   = TRUE

userElementCount     = 3;
;  userElements[0]      = PTR_VERTEX_BUFFER_TABLE, Element=1 dwords, s[0x2:3]
;  userElements[1]      = PTR_EXTENDED_USER_DATA, ReferencedExtUserElements=1, s[0x2:3]
;  userElements[2]      = SUB_PTR_FETCH_SHADER, s[0x2:3]
extUserElementCount  = 1;
;  extUserElements 1[0] = IMM_CONST_BUFFER 0, offset 0x0:3 dwords
NumVgprs             = 21;
NumSgprs             = 50;
FloatMode            = 192;
IeeeMode             = 0;
FlatPtr32            = 0;
ScratchSize          = 0 dwords/thread;
LDSByteSize          = 0 bytes/workgroup (compile time only);
ScratchWaveOffsetReg = s65535;
; texSamplerUsage         = 0x00000000
; constBufUsage           = 0x00000001

; SPI_SHADER_PGM_RSRC2_VS = 0x00000008
SSPRV:USER_SGPR             = 4
; PA_CL_VS_OUT_CNTL       = 0x00000000
; SPI_VS_OUT_CONFIG       = 0x00000006
SVOC:VS_EXPORT_COUNT        = 3
SVOC:VS_HALF_PACK           = 0
SVOC:VS_EXPORTS_FOG         = 0
SVOC:VS_OUT_FOG_VEC_ADDR    = 0
; SPI_SHADER_POS_FORMAT     = 0x00000004
SSPF:POS0_EXPORT_FORMAT     = 4
SSPF:POS1_EXPORT_FORMAT     = 0
SSPF:POS2_EXPORT_FORMAT     = 0
SSPF:POS3_EXPORT_FORMAT     = 0
VGT_STRMOUT_CONFIG = 0x0
VGT_STRMOUT_CONFIG:RAST_STREAM = 0
VGT_STRMOUT_CONFIG:STREAMOUT_0_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_1_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_2_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_3_EN = 0
; exportVertexSize          = 4

// Shader Instructions:
shader main
  asic(CI)
  type(VS)
  s_swappc_b64  s[2:3], s[2:3]                          // 000000000000: BE822102
  s_load_dwordx4  s[0:3], s[2:3], 0x00                  // 000000000004: C0800300
  s_waitcnt     lgkmcnt(0)                              // 000000000008: BF8C007F
  s_buffer_load_dwordx4  s[4:7], s[0:3], 0x54           // 00000000000C: C2820154
  s_buffer_load_dwordx4  s[8:11], s[0:3], 0x50          // 000000000010: C2840150
  s_buffer_load_dwordx4  s[12:15], s[0:3], 0x4c         // 000000000014: C286014C
  s_buffer_load_dwordx16  s[16:31], s[0:3], 0x38        // 000000000018: C3080138
  s_buffer_load_dwordx16  s[32:47], s[0:3], 0x58        // 00000000001C: C3100158
  s_waitcnt     vmcnt(0) & lgkmcnt(0)                   // 000000000020: BF8C0070
  v_mul_legacy_f32  v0, s6, v10                         // 000000000024: 0E001406
  v_mul_legacy_f32  v1, s10, v10                        // 000000000028: 0E02140A
  v_mac_f32     v0, s5, v9                              // 00000000002C: 3E001205
  s_buffer_load_dword  s0, s[0:3], 0x03                 // 000000000030: C2000103
  v_mul_legacy_f32  v2, s14, v10                        // 000000000034: 0E04140E
  v_mac_f32     v1, s9, v9                              // 000000000038: 3E021209
  v_mac_f32     v0, s4, v8                              // 00000000003C: 3E001004
  v_mac_f32     v2, s13, v9                             // 000000000040: 3E04120D
  v_mac_f32     v1, s8, v8                              // 000000000044: 3E021008
  v_mul_legacy_f32  v3, v0, v0                          // 000000000048: 0E060100
  v_mul_legacy_f32  v9, s23, v7                         // 00000000004C: 0E120E17
  v_mul_legacy_f32  v10, s27, v7                        // 000000000050: 0E140E1B
  v_mul_legacy_f32  v11, s31, v7                        // 000000000054: 0E160E1F
  v_mul_legacy_f32  v14, s19, v7                        // 000000000058: 0E1C0E13
  v_mac_f32     v2, s12, v8                             // 00000000005C: 3E04100C
  v_mac_f32     v3, v1, v1                              // 000000000060: 3E060301
  v_mul_legacy_f32  v8, s35, v7                         // 000000000064: 0E100E23
  v_mul_legacy_f32  v15, s39, v7                        // 000000000068: 0E1E0E27
  v_mul_legacy_f32  v20, s43, v7                        // 00000000006C: 0E280E2B
  v_mul_legacy_f32  v7, s47, v7                         // 000000000070: 0E0E0E2F
  v_mac_f32     v9, s22, v6                             // 000000000074: 3E120C16
  v_mac_f32     v10, s26, v6                            // 000000000078: 3E140C1A
  v_mac_f32     v11, s30, v6                            // 00000000007C: 3E160C1E
  v_mac_f32     v14, s18, v6                            // 000000000080: 3E1C0C12
  v_mac_f32     v3, v2, v2                              // 000000000084: 3E060502
  v_mac_legacy_f32  v8, s34, v6                         // 000000000088: 0C100C22
  v_mac_legacy_f32  v15, s38, v6                        // 00000000008C: 0C1E0C26
  v_mac_legacy_f32  v20, s42, v6                        // 000000000090: 0C280C2A
  v_mac_legacy_f32  v7, s46, v6                         // 000000000094: 0C0E0C2E
  v_mac_f32     v9, s21, v5                             // 000000000098: 3E120A15
  v_mac_f32     v10, s25, v5                            // 00000000009C: 3E140A19
  v_mac_f32     v11, s29, v5                            // 0000000000A0: 3E160A1D
  v_mac_f32     v14, s17, v5                            // 0000000000A4: 3E1C0A11
  v_rsq_f32     v3, v3                                  // 0000000000A8: 7E065D03
  v_mac_legacy_f32  v8, s33, v5                         // 0000000000AC: 0C100A21
  v_mac_legacy_f32  v15, s37, v5                        // 0000000000B0: 0C1E0A25
  v_mac_legacy_f32  v20, s41, v5                        // 0000000000B4: 0C280A29
  v_mac_legacy_f32  v7, s45, v5                         // 0000000000B8: 0C0E0A2D
  v_mac_f32     v9, s20, v4                             // 0000000000BC: 3E120814
  v_mac_f32     v10, s24, v4                            // 0000000000C0: 3E140818
  v_mac_f32     v11, s28, v4                            // 0000000000C4: 3E16081C
  v_mad_legacy_f32  v14, v4, s16, v14 clamp             // 0000000000C8: D280080E 04382104
  v_mul_legacy_f32  v2, v2, v3                          // 0000000000D0: 0E040702
  v_mul_legacy_f32  v1, v1, v3                          // 0000000000D4: 0E020701
  v_mul_legacy_f32  v0, v0, v3                          // 0000000000D8: 0E000700
  s_waitcnt     lgkmcnt(0)                              // 0000000000DC: BF8C007F
  v_mul_legacy_f32  v3, s0, v19                         // 0000000000E0: 0E062600
  v_mac_legacy_f32  v8, s32, v4                         // 0000000000E4: 0C100820
  v_mac_legacy_f32  v15, s36, v4                        // 0000000000E8: 0C1E0824
  v_mac_legacy_f32  v20, s40, v4                        // 0000000000EC: 0C280828
  v_mac_legacy_f32  v7, s44, v4                         // 0000000000F0: 0C0E082C
  v_mov_b32     v4, 0                                   // 0000000000F4: 7E080280
  v_mov_b32     v5, 1.0                                 // 0000000000F8: 7E0A02F2
  exp           pos0, v8, v15, v20, v7 done             // 0000000000FC: F80008CF 07140F08
  exp           param0, v12, v13, v4, v5                // 000000000104: F800020F 05040D0C
  exp           param1, v9, v10, v11, v14               // 00000000010C: F800021F 0E0B0A09
  exp           param2, v2, v1, v0, v5                  // 000000000114: F800022F 05000102
  exp           param3, v16, v17, v18, v3               // 00000000011C: F800023F 03121110
  s_endpgm                                              // 000000000124: BF810000
end


// Shader Statistics:
//  NumActiveWaveFront:         36
//  WorkgroupSize:              64
//  NumVRegs:                   21
//  NumSRegs:                   50
//  NumActiveWaveFrontByVReg:   40
//  NumActiveWaveFrontBySReg:   36
//  NumActiveWaveFrontByLDS:    40
//  CycleSim:                   85
//  CycleSimNWaves:             85
//  Code Size:                  296
//Assembler Counts:
//  num_32bit_ops                     : 62
//  num_64bit_ops                     : 6
//  num_alu                           : 51
//  num_fc                            : 12
//  num_inst_exp                      : 5
//  num_inst_ldsgds                   : 0
//  num_inst_mimg                     : 0
//  num_inst_mtbuf                    : 0
//  num_inst_mubuf                    : 0
//  num_inst_sopp                     : 4
//  num_inst_sopc                     : 0
//  num_inst_sop1                     : 1
//  num_inst_sop2                     : 0
//  num_inst_smrd                     : 0
//  num_inst_sopk                     : 0
//  num_inst_vop1                     : 3
//  num_inst_vop2                     : 47
//  num_inst_vop3                     : 0
//  num_inst_vopc                     : 0
//  num_inst_vintrp                   : 0
//  constant_literal_operands         : 0
//  num_tex                           : 5
//  num_vmem_group                    : 0
//  vmem_grouping_started             : 0
// Shader Statistics:
// m_uNumActiveWaveFront             : 36
// m_uVRegLimit                      : 256
// m_uSRegLimit                      : 512
// m_uNumVRegs                       : 21
// m_uNumSRegs                       : 50
// m_uSCCodeSize                     : 296
// m_uWorkgroupSize                  : 64
// m_uNumActiveWaveFrontByVReg       : 40
// m_uNumActiveWaveFrontBySReg       : 36
// m_uNumActiveWaveFrontByLDS        : 40
// m_uCycleSim1Wave                  : 85
// m_uCycleSimNWaves                 : 85

// Assembler Counts:
// num_32bit_ops                     : 62
// num_64bit_ops                     : 6
// num_alu                           : 51
// num_fc                            : 12
// num_inst_exp                      : 5
// num_inst_ldsgds                   : 0
// num_inst_mimg                     : 0
// num_inst_mtbuf                    : 0
// num_inst_mubuf                    : 0
// num_inst_sopp                     : 4
// num_inst_sopc                     : 0
// num_inst_sop1                     : 1
// num_inst_sop2                     : 0
// num_inst_smrd                     : 0
// num_inst_sopk                     : 0
// num_inst_vop1                     : 3
// num_inst_vop2                     : 47
// num_inst_vop3                     : 0
// num_inst_vopc                     : 0
// num_inst_vintrp                   : 0
// num_inst_smem                     : 7
// constant_literal_operands         : 0
// num_tex                           : 5
// num_vmem_group                    : 0
// vmem_grouping_started             : 0
// m_fFullPrecompilePromise          : 0
// m_fIntegerDivideExpansion         : 0
// m_fIntegerModExpansion            : 0
// m_fDoubleDivideExpansion          : 0
// m_fUsesScratch                    : 0
// m_fPerThreadIndirection           : 0
// m_fUsingTableLoads                : 0
// m_fUsingSHmemLoads                : 1
// fSemanticHashFlagOverrideApplied  : 0
// fPSHasNoUAVWrite                  : 0
// m_fRenderTargetsCanBeCompacted    : 0
// version                           : 3
// fCodePatched                      : 0

// Opaque Custom Data - XBOX Precompiled Shader Object
// Offset:[366], bundle is:[209] DWORDS.
// Disassembled Precompiled Shader Object:
// Shader Type               : (VS)
// Shader Hw Stage           : (ES)
// PDB Filename              : D:\ATG\st_dev\Kits\DirectXTK\src\Shaders\Compiled\XboxOneNormalMapEffect_VSNormalPixelLightingTxVc.pdb
// Shader Semantic Hash      : 0xfab87bc2d6a16fd4
//
// Shader Data:
; ----------------- VS Data ------------------------
; Input Semantic Mappings
;   [0] generic, usageIdx  0, channelMask 15, v[4:7]
;   [1] generic, usageIdx  1, channelMask  7, v[8:10]
;   [2] generic, usageIdx  2, channelMask  3, v[12:13]
;   [3] generic, usageIdx  3, channelMask 15, v[16:19]
; Output Semantic Mappings
;   [0] position,  usageIdx 4, paramIdx 4, paramSlot 0
;   [1] generic,  usageIdx 0, paramIdx 0, paramSlot 0
;   [2] generic,  usageIdx 1, paramIdx 1, paramSlot 0
;   [3] generic,  usageIdx 2, paramIdx 2, paramSlot 0
;   [4] generic,  usageIdx 3, paramIdx 3, paramSlot 0

codeLenInByte        = 392 bytes;

; launchModeFlags    = 0x0000000E
srdTableSupport      = TRUE
immediateSupportExt  = TRUE
srdTableSupportExt   = TRUE

userElementCount     = 4;
;  userElements[0]      = PTR_VERTEX_BUFFER_TABLE, Element=1 dwords, s[0x2:3]
;  userElements[1]      = PTR_EXTENDED_USER_DATA, ReferencedExtUserElements=1, s[0x2:3]
;  userElements[2]      = PTR_INTERNAL_GLOBAL_TABLE, Element=1 dwords, s[0x2:3]
;  userElements[3]      = SUB_PTR_FETCH_SHADER, s[0x2:3]
extUserElementCount  = 1;
;  extUserElements 1[0] = IMM_CONST_BUFFER 0, offset 0x0:3 dwords
NumVgprs             = 20;
NumSgprs             = 58;
FloatMode            = 192;
IeeeMode             = 0;
FlatPtr32            = 0;
ScratchSize          = 0 dwords/thread;
LDSByteSize          = 0 bytes/workgroup (compile time only);
ScratchWaveOffsetReg = s65535;
; texSamplerUsage         = 0x00000000
; constBufUsage           = 0x00000001

; SPI_SHADER_PGM_RSRC2_VS = 0x00000008
SSPRV:USER_SGPR             = 4
; PA_CL_VS_OUT_CNTL       = 0x00000000
; SPI_VS_OUT_CONFIG       = 0x00000000
SVOC:VS_EXPORT_COUNT        = 0
SVOC:VS_HALF_PACK           = 0
SVOC:VS_EXPORTS_FOG         = 0
SVOC:VS_OUT_FOG_VEC_ADDR    = 0
; SPI_SHADER_POS_FORMAT     = 0x00000004
SSPF:POS0_EXPORT_FORMAT     = 4
SSPF:POS1_EXPORT_FORMAT     = 0
SSPF:POS2_EXPORT_FORMAT     = 0
SSPF:POS3_EXPORT_FORMAT     = 0
VGT_STRMOUT_CONFIG = 0x0
VGT_STRMOUT_CONFIG:RAST_STREAM = 0
VGT_STRMOUT_CONFIG:STREAMOUT_0_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_1_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_2_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_3_EN = 0
; exportVertexSize          = 20
; esGsRingItemSize          = 20

// Shader Instructions:
shader main
  asic(CI)
  type(VS)
  s_swappc_b64  s[2:3], s[2:3]                          // 000000000000: BE822102
  s_load_dwordx4  s[8:11], s[2:3], 0x00                 // 000000000004: C0840300
  s_waitcnt     lgkmcnt(0)                              // 000000000008: BF8C007F
  s_buffer_load_dwordx16  s[12:27], s[8:11], 0x58       // 00000000000C: C3060958
  s_waitcnt     vmcnt(0) & lgkmcnt(0)                   // 000000000010: BF8C0070
  v_mul_legacy_f32  v0, s15, v7                         // 000000000014: 0E000E0F
  s_buffer_load_dwordx16  s[28:43], s[8:11], 0x38       // 000000000018: C30E0938
  s_buffer_load_dwordx4  s[44:47], s[8:11], 0x54        // 00000000001C: C2960954
  s_load_dwordx4  s[0:3], s[2:3], 0x0c                  // 000000000020: C080030C
  v_mac_legacy_f32  v0, s14, v6                         // 000000000024: 0C000C0E
  v_mul_legacy_f32  v1, s19, v7                         // 000000000028: 0E020E13
  s_buffer_load_dwordx4  s[48:51], s[8:11], 0x50        // 00000000002C: C2980950
  v_mac_legacy_f32  v0, s13, v5                         // 000000000030: 0C000A0D
  v_mac_legacy_f32  v1, s18, v6                         // 000000000034: 0C020C12
  v_mul_legacy_f32  v2, s23, v7                         // 000000000038: 0E040E17
  s_buffer_load_dwordx4  s[52:55], s[8:11], 0x4c        // 00000000003C: C29A094C
  v_mac_legacy_f32  v0, s12, v4                         // 000000000040: 0C00080C
  v_mac_legacy_f32  v1, s17, v5                         // 000000000044: 0C020A11
  v_mac_legacy_f32  v2, s22, v6                         // 000000000048: 0C040C16
  v_mul_legacy_f32  v3, s27, v7                         // 00000000004C: 0E060E1B
  v_mac_legacy_f32  v1, s16, v4                         // 000000000050: 0C020810
  v_mac_legacy_f32  v2, s21, v5                         // 000000000054: 0C040A15
  v_mac_legacy_f32  v3, s26, v6                         // 000000000058: 0C060C1A
  v_mac_legacy_f32  v2, s20, v4                         // 00000000005C: 0C040814
  v_mac_legacy_f32  v3, s25, v5                         // 000000000060: 0C060A19
  s_waitcnt     lgkmcnt(0)                              // 000000000064: BF8C007F
  v_mul_legacy_f32  v11, s35, v7                        // 000000000068: 0E160E23
  v_mul_legacy_f32  v14, s46, v10                       // 00000000006C: 0E1C142E
  v_mac_legacy_f32  v3, s24, v4                         // 000000000070: 0C060818
  buffer_store_dword  v0, v0, s[0:3], s4 offset:64 glc slc // 000000000074: E0704040 04400000
  v_mac_legacy_f32  v11, s34, v6                        // 00000000007C: 0C160C22
  v_mul_legacy_f32  v0, s39, v7                         // 000000000080: 0E000E27
  v_mul_legacy_f32  v15, s50, v10                       // 000000000084: 0E1E1432
  v_mac_legacy_f32  v14, s45, v9                        // 000000000088: 0C1C122D
  buffer_store_dword  v1, v0, s[0:3], s4 offset:68 glc slc // 00000000008C: E0704044 04400100
  v_mac_legacy_f32  v11, s33, v5                        // 000000000094: 0C160A21
  v_mac_legacy_f32  v0, s38, v6                         // 000000000098: 0C000C26
  v_mul_legacy_f32  v1, s43, v7                         // 00000000009C: 0E020E2B
  v_mul_legacy_f32  v10, s54, v10                       // 0000000000A0: 0E141436
  v_mac_legacy_f32  v15, s49, v9                        // 0000000000A4: 0C1E1231
  v_mac_legacy_f32  v14, s44, v8                        // 0000000000A8: 0C1C102C
  buffer_store_dword  v2, v0, s[0:3], s4 offset:72 glc slc // 0000000000AC: E0704048 04400200
  v_mac_legacy_f32  v11, s32, v4                        // 0000000000B4: 0C160820
  v_mac_legacy_f32  v0, s37, v5                         // 0000000000B8: 0C000A25
  v_mac_legacy_f32  v1, s42, v6                         // 0000000000BC: 0C020C2A
  v_mul_legacy_f32  v2, s31, v7                         // 0000000000C0: 0E040E1F
  v_mac_legacy_f32  v10, s53, v9                        // 0000000000C4: 0C141235
  v_mac_legacy_f32  v15, s48, v8                        // 0000000000C8: 0C1E1030
  v_mul_legacy_f32  v7, v14, v14                        // 0000000000CC: 0E0E1D0E
  buffer_store_dword  v3, v0, s[0:3], s4 offset:76 glc slc // 0000000000D0: E070404C 04400300
  v_mac_legacy_f32  v0, s36, v4                         // 0000000000D8: 0C000824
  v_mac_legacy_f32  v1, s41, v5                         // 0000000000DC: 0C020A29
  v_mac_legacy_f32  v2, s30, v6                         // 0000000000E0: 0C040C1E
  v_mac_legacy_f32  v10, s52, v8                        // 0000000000E4: 0C141034
  v_mac_legacy_f32  v7, v15, v15                        // 0000000000E8: 0C0E1F0F
  buffer_store_dword  v12, v0, s[0:3], s4 glc slc       // 0000000000EC: E0704000 04400C00
  v_mac_legacy_f32  v1, s40, v4                         // 0000000000F4: 0C020828
  v_mac_legacy_f32  v2, s29, v5                         // 0000000000F8: 0C040A1D
  v_mac_legacy_f32  v7, v10, v10                        // 0000000000FC: 0C0E150A
  buffer_store_dword  v13, v0, s[0:3], s4 offset:4 glc slc // 000000000100: E0704004 04400D00
  v_mad_legacy_f32  v2, v4, s28, v2 clamp               // 000000000108: D2800802 04083904
  v_rsq_f32     v3, v7                                  // 000000000110: 7E065D07
  buffer_store_dword  v11, v0, s[0:3], s4 offset:16 glc slc // 000000000114: E0704010 04400B00
  v_mul_legacy_f32  v4, v10, v3                         // 00000000011C: 0E08070A
  buffer_store_dword  v0, v0, s[0:3], s4 offset:20 glc slc // 000000000120: E0704014 04400000
  s_buffer_load_dword  s5, s[8:11], 0x03                // 000000000128: C2028903
  v_mul_legacy_f32  v0, v15, v3                         // 00000000012C: 0E00070F
  buffer_store_dword  v1, v0, s[0:3], s4 offset:24 glc slc // 000000000130: E0704018 04400100
  v_mul_legacy_f32  v1, v14, v3                         // 000000000138: 0E02070E
  buffer_store_dword  v2, v0, s[0:3], s4 offset:28 glc slc // 00000000013C: E070401C 04400200
  buffer_store_dword  v4, v0, s[0:3], s4 offset:32 glc slc // 000000000144: E0704020 04400400
  buffer_store_dword  v0, v0, s[0:3], s4 offset:36 glc slc // 00000000014C: E0704024 04400000
  buffer_store_dword  v1, v0, s[0:3], s4 offset:40 glc slc // 000000000154: E0704028 04400100
  s_waitcnt     lgkmcnt(0)                              // 00000000015C: BF8C007F
  v_mul_legacy_f32  v0, s5, v19                         // 000000000160: 0E002605
  buffer_store_dword  v16, v0, s[0:3], s4 offset:48 glc slc // 000000000164: E0704030 04401000
  buffer_store_dword  v17, v0, s[0:3], s4 offset:52 glc slc // 00000000016C: E0704034 04401100
  buffer_store_dword  v18, v0, s[0:3], s4 offset:56 glc slc // 000000000174: E0704038 04401200
  buffer_store_dword  v0, v0, s[0:3], s4 offset:60 glc slc // 00000000017C: E070403C 04400000
  s_endpgm                                              // 000000000184: BF810000
end


// Shader Statistics:
//  NumActiveWaveFront:         32
//  WorkgroupSize:              64
//  NumVRegs:                   20
//  NumSRegs:                   58
//  NumActiveWaveFrontByVReg:   40
//  NumActiveWaveFrontBySReg:   32
//  NumActiveWaveFrontByLDS:    40
//  CycleSim:                   88
//  CycleSimNWaves:             88
//  Code Size:                  392
//Assembler Counts:
//  num_32bit_ops                     : 62
//  num_64bit_ops                     : 18
//  num_alu                           : 49
//  num_fc                            : 14
//  num_inst_exp                      : 0
//  num_inst_ldsgds                   : 0
//  num_inst_mimg                     : 0
//  num_inst_mtbuf                    : 0
//  num_inst_mubuf                    : 17
//  num_inst_sopp                     : 5
//  num_inst_sopc                     : 0
//  num_inst_sop1                     : 1
//  num_inst_sop2                     : 0
//  num_inst_smrd                     : 0
//  num_inst_sopk                     : 0
//  num_inst_vop1                     : 1
//  num_inst_vop2                     : 47
//  num_inst_vop3                     : 0
//  num_inst_vopc                     : 0
//  num_inst_vintrp                   : 0
//  constant_literal_operands         : 0
//  num_tex                           : 17
//  num_vmem_group                    : 11
//  vmem_grouping_started             : 0
// Shader Statistics:
// m_uNumActiveWaveFront             : 32
// m_uVRegLimit                      : 256
// m_uSRegLimit                      : 512
// m_uNumVRegs                       : 20
// m_uNumSRegs                       : 58
// m_uSCCodeSize                     : 392
// m_uWorkgroupSize                  : 64
// m_uNumActiveWaveFrontByVReg       : 40
// m_uNumActiveWaveFrontBySReg       : 32
// m_uNumActiveWaveFrontByLDS        : 40
// m_uCycleSim1Wave                  : 88
// m_uCycleSimNWaves                 : 88

// Assembler Counts:
// num_32bit_ops                     : 62
// num_64bit_ops                     : 18
// num_alu                           : 49
// num_fc                            : 14
// num_inst_exp                      : 0
// num_inst_ldsgds                   : 0
// num_inst_mimg                     : 0
// num_inst_mtbuf                    : 0
// num_inst_mubuf                    : 17
// num_inst_sopp                     : 5
// num_inst_sopc                     : 0
// num_inst_sop1                     : 1
// num_inst_sop2                     : 0
// num_inst_smrd                     : 0
// num_inst_sopk                     : 0
// num_inst_vop1                     : 1
// num_inst_vop2                     : 47
// num_inst_vop3                     : 0
// num_inst_vopc                     : 0
// num_inst_vintrp                   : 0
// num_inst_smem                     : 8
// constant_literal_operands         : 0
// num_tex                           : 17
// num_vmem_group                    : 11
// vmem_grouping_started             : 0
// m_fFullPrecompilePromise          : 0
// m_fIntegerDivideExpansion         : 0
// m_fIntegerModExpansion            : 0
// m_fDoubleDivideExpansion          : 0
// m_fUsesScratch                    : 0
// m_fPerThreadIndirection           : 0
// m_fUsingTableLoads                : 0
// m_fUsingSHmemLoads                : 1
// fSemanticHashFlagOverrideApplied  : 0
// fPSHasNoUAVWrite                  : 0
// m_fRenderTargetsCanBeCompacted    : 0
// version                           : 3
// fCodePatched                      : 0

// Opaque Custom Data - XBOX Precompiled Shader Object
// Offset:[577], bundle is:[206] DWORDS.
// Disassembled Precompiled Shader Object:
// Shader Type               : (VS)
// Shader Hw Stage           : (LS)
// PDB Filename              : D:\ATG\st_dev\Kits\DirectXTK\src\Shaders\Compiled\XboxOneNormalMapEffect_VSNormalPixelLightingTxVc.pdb
// Shader Semantic Hash      : 0xfab87bc2d6a16fd4
//
// Shader Data:
; ----------------- VS Data ------------------------
; Input Semantic Mappings
;   [0] generic, usageIdx  0, channelMask 15, v[4:7]
;   [1] generic, usageIdx  1, channelMask  7, v[8:10]
;   [2] generic, usageIdx  2, channelMask  3, v[12:13]
;   [3] generic, usageIdx  3, channelMask 15, v[16:19]
; Output Semantic Mappings
;   [0] position,  usageIdx 4, paramIdx 4, paramSlot 0
;   [1] generic,  usageIdx 0, paramIdx 0, paramSlot 0
;   [2] generic,  usageIdx 1, paramIdx 1, paramSlot 0
;   [3] generic,  usageIdx 2, paramIdx 2, paramSlot 0
;   [4] generic,  usageIdx 3, paramIdx 3, paramSlot 0

codeLenInByte        = 348 bytes;

; launchModeFlags    = 0x0000000E
srdTableSupport      = TRUE
immediateSupportExt  = TRUE
srdTableSupportExt   = TRUE

userElementCount     = 3;
;  userElements[0]      = PTR_VERTEX_BUFFER_TABLE, Element=1 dwords, s[0x2:3]
;  userElements[1]      = PTR_EXTENDED_USER_DATA, ReferencedExtUserElements=1, s[0x2:3]
;  userElements[2]      = SUB_PTR_FETCH_SHADER, s[0x2:3]
extUserElementCount  = 1;
;  extUserElements 1[0] = IMM_CONST_BUFFER 0, offset 0x0:3 dwords
NumVgprs             = 21;
NumSgprs             = 50;
FloatMode            = 192;
IeeeMode             = 0;
FlatPtr32            = 0;
ScratchSize          = 0 dwords/thread;
LDSByteSize          = 0 bytes/workgroup (compile time only);
ScratchWaveOffsetReg = s65535;
; texSamplerUsage         = 0x00000000
; constBufUsage           = 0x00000001

; SPI_SHADER_PGM_RSRC2_VS = 0x00000008
SSPRV:USER_SGPR             = 4
; PA_CL_VS_OUT_CNTL       = 0x00000000
; SPI_VS_OUT_CONFIG       = 0x00000000
SVOC:VS_EXPORT_COUNT        = 0
SVOC:VS_HALF_PACK           = 0
SVOC:VS_EXPORTS_FOG         = 0
SVOC:VS_OUT_FOG_VEC_ADDR    = 0
; SPI_SHADER_POS_FORMAT     = 0x00000004
SSPF:POS0_EXPORT_FORMAT     = 4
SSPF:POS1_EXPORT_FORMAT     = 0
SSPF:POS2_EXPORT_FORMAT     = 0
SSPF:POS3_EXPORT_FORMAT     = 0
VGT_STRMOUT_CONFIG = 0x0
VGT_STRMOUT_CONFIG:RAST_STREAM = 0
VGT_STRMOUT_CONFIG:STREAMOUT_0_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_1_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_2_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_3_EN = 0
; vgprCompCnt               = 1
; exportVertexSize          = 20
; lsStride                  = 80

// Shader Instructions:
shader main
  asic(CI)
  type(VS)
  s_swappc_b64  s[2:3], s[2:3]                          // 000000000000: BE822102
  s_load_dwordx4  s[0:3], s[2:3], 0x00                  // 000000000004: C0800300
  s_waitcnt     lgkmcnt(0)                              // 000000000008: BF8C007F
  s_buffer_load_dwordx16  s[4:19], s[0:3], 0x38         // 00000000000C: C3020138
  s_buffer_load_dwordx4  s[20:23], s[0:3], 0x4c         // 000000000010: C28A014C
  s_buffer_load_dwordx4  s[24:27], s[0:3], 0x50         // 000000000014: C28C0150
  s_buffer_load_dwordx4  s[28:31], s[0:3], 0x54         // 000000000018: C28E0154
  s_waitcnt     lgkmcnt(0)                              // 00000000001C: BF8C007F
  s_buffer_load_dword  s23, s[0:3], 0x03                // 000000000020: C20B8103
  s_buffer_load_dwordx16  s[32:47], s[0:3], 0x58        // 000000000024: C3100158
  s_mov_b32     m0, 0x00010000                          // 000000000028: BEFC03FF 00010000
  s_waitcnt     vmcnt(0)                                // 000000000030: BF8C0F70
  v_mul_legacy_f32  v0, s11, v7                         // 000000000034: 0E000E0B
  v_mac_legacy_f32  v0, s10, v6                         // 000000000038: 0C000C0A
  v_mac_legacy_f32  v0, s9, v5                          // 00000000003C: 0C000A09
  v_mac_legacy_f32  v0, s8, v4                          // 000000000040: 0C000808
  v_mul_legacy_f32  v2, s15, v7                         // 000000000044: 0E040E0F
  v_mac_legacy_f32  v2, s14, v6                         // 000000000048: 0C040C0E
  v_mac_legacy_f32  v2, s13, v5                         // 00000000004C: 0C040A0D
  v_mac_legacy_f32  v2, s12, v4                         // 000000000050: 0C04080C
  v_mul_legacy_f32  v3, s19, v7                         // 000000000054: 0E060E13
  v_mac_legacy_f32  v3, s18, v6                         // 000000000058: 0C060C12
  v_mac_legacy_f32  v3, s17, v5                         // 00000000005C: 0C060A11
  v_mac_legacy_f32  v3, s16, v4                         // 000000000060: 0C060810
  v_mul_legacy_f32  v11, s7, v7                         // 000000000064: 0E160E07
  v_mac_legacy_f32  v11, s6, v6                         // 000000000068: 0C160C06
  v_mac_legacy_f32  v11, s5, v5                         // 00000000006C: 0C160A05
  v_mad_legacy_f32  v11, v4, s4, v11 clamp              // 000000000070: D280080B 042C0904
  v_mul_legacy_f32  v14, s22, v10                       // 000000000078: 0E1C1416
  v_mac_legacy_f32  v14, s21, v9                        // 00000000007C: 0C1C1215
  v_mac_legacy_f32  v14, s20, v8                        // 000000000080: 0C1C1014
  v_mul_legacy_f32  v15, s26, v10                       // 000000000084: 0E1E141A
  v_mac_legacy_f32  v15, s25, v9                        // 000000000088: 0C1E1219
  v_mac_legacy_f32  v15, s24, v8                        // 00000000008C: 0C1E1018
  v_mul_legacy_f32  v10, s30, v10                       // 000000000090: 0E14141E
  v_mac_legacy_f32  v10, s29, v9                        // 000000000094: 0C14121D
  v_mac_legacy_f32  v10, s28, v8                        // 000000000098: 0C14101C
  v_mul_legacy_f32  v8, v10, v10                        // 00000000009C: 0E10150A
  v_mac_legacy_f32  v8, v15, v15                        // 0000000000A0: 0C101F0F
  v_mac_legacy_f32  v8, v14, v14                        // 0000000000A4: 0C101D0E
  v_rsq_f32     v8, v8                                  // 0000000000A8: 7E105D08
  v_mul_legacy_f32  v9, v14, v8                         // 0000000000AC: 0E12110E
  v_mul_legacy_f32  v14, v15, v8                        // 0000000000B0: 0E1C110F
  v_mul_legacy_f32  v8, v10, v8                         // 0000000000B4: 0E10110A
  s_waitcnt     lgkmcnt(0)                              // 0000000000B8: BF8C007F
  v_mul_legacy_f32  v10, s23, v19                       // 0000000000BC: 0E142617
  v_mul_legacy_f32  v15, s35, v7                        // 0000000000C0: 0E1E0E23
  v_mac_legacy_f32  v15, s34, v6                        // 0000000000C4: 0C1E0C22
  v_mac_legacy_f32  v15, s33, v5                        // 0000000000C8: 0C1E0A21
  v_mac_legacy_f32  v15, s32, v4                        // 0000000000CC: 0C1E0820
  v_mul_legacy_f32  v19, s39, v7                        // 0000000000D0: 0E260E27
  v_mac_legacy_f32  v19, s38, v6                        // 0000000000D4: 0C260C26
  v_mac_legacy_f32  v19, s37, v5                        // 0000000000D8: 0C260A25
  v_mac_legacy_f32  v19, s36, v4                        // 0000000000DC: 0C260824
  v_mul_legacy_f32  v20, s43, v7                        // 0000000000E0: 0E280E2B
  v_mac_legacy_f32  v20, s42, v6                        // 0000000000E4: 0C280C2A
  v_mac_legacy_f32  v20, s41, v5                        // 0000000000E8: 0C280A29
  v_mac_legacy_f32  v20, s40, v4                        // 0000000000EC: 0C280828
  v_mul_legacy_f32  v7, s47, v7                         // 0000000000F0: 0E0E0E2F
  v_mac_legacy_f32  v7, s46, v6                         // 0000000000F4: 0C0E0C2E
  v_mac_legacy_f32  v7, s45, v5                         // 0000000000F8: 0C0E0A2D
  v_mac_legacy_f32  v7, s44, v4                         // 0000000000FC: 0C0E082C
  s_movk_i32    s0, 0x0050                              // 000000000100: B0000050
  s_nop         0x0000                                  // 000000000104: BF800000
  v_mul_lo_i32  v1, v1, s0                              // 000000000108: D2D60001 00000101
  ds_write2_b32  v1, v15, v19 offset0:16 offset1:17     // 000000000110: D8381110 00130F01
  ds_write2_b32  v1, v20, v7 offset0:18 offset1:19      // 000000000118: D8381312 00071401
  ds_write2_b32  v1, v12, v13 offset1:1                 // 000000000120: D8380100 000D0C01
  ds_write2_b32  v1, v0, v2 offset0:4 offset1:5         // 000000000128: D8380504 00020001
  ds_write2_b32  v1, v3, v11 offset0:6 offset1:7        // 000000000130: D8380706 000B0301
  ds_write2_b32  v1, v9, v14 offset0:8 offset1:9        // 000000000138: D8380908 000E0901
  ds_write_b32  v1, v8 offset:40                        // 000000000140: D8340028 00000801
  ds_write2_b32  v1, v16, v17 offset0:12 offset1:13     // 000000000148: D8380D0C 00111001
  ds_write2_b32  v1, v18, v10 offset0:14 offset1:15     // 000000000150: D8380F0E 000A1201
  s_endpgm                                              // 000000000158: BF810000
end


// Shader Statistics:
//  NumActiveWaveFront:         36
//  WorkgroupSize:              64
//  NumVRegs:                   21
//  NumSRegs:                   50
//  NumActiveWaveFrontByVReg:   40
//  NumActiveWaveFrontBySReg:   36
//  NumActiveWaveFrontByLDS:    40
//  CycleSim:                   93
//  CycleSimNWaves:             93
//  Code Size:                  348
//Assembler Counts:
//  num_32bit_ops                     : 64
//  num_64bit_ops                     : 11
//  num_alu                           : 50
//  num_fc                            : 16
//  num_inst_exp                      : 0
//  num_inst_ldsgds                   : 9
//  num_inst_mimg                     : 0
//  num_inst_mtbuf                    : 0
//  num_inst_mubuf                    : 0
//  num_inst_sopp                     : 6
//  num_inst_sopc                     : 0
//  num_inst_sop1                     : 2
//  num_inst_sop2                     : 0
//  num_inst_smrd                     : 0
//  num_inst_sopk                     : 1
//  num_inst_vop1                     : 1
//  num_inst_vop2                     : 47
//  num_inst_vop3                     : 0
//  num_inst_vopc                     : 0
//  num_inst_vintrp                   : 0
//  constant_literal_operands         : 0
//  num_tex                           : 9
//  num_vmem_group                    : 0
//  vmem_grouping_started             : 0
// Shader Statistics:
// m_uNumActiveWaveFront             : 36
// m_uVRegLimit                      : 256
// m_uSRegLimit                      : 512
// m_uNumVRegs                       : 21
// m_uNumSRegs                       : 50
// m_uSCCodeSize                     : 348
// m_uWorkgroupSize                  : 64
// m_uNumActiveWaveFrontByVReg       : 40
// m_uNumActiveWaveFrontBySReg       : 36
// m_uNumActiveWaveFrontByLDS        : 40
// m_uCycleSim1Wave                  : 93
// m_uCycleSimNWaves                 : 93

// Assembler Counts:
// num_32bit_ops                     : 64
// num_64bit_ops                     : 11
// num_alu                           : 50
// num_fc                            : 16
// num_inst_exp                      : 0
// num_inst_ldsgds                   : 9
// num_inst_mimg                     : 0
// num_inst_mtbuf                    : 0
// num_inst_mubuf                    : 0
// num_inst_sopp                     : 6
// num_inst_sopc                     : 0
// num_inst_sop1                     : 2
// num_inst_sop2                     : 0
// num_inst_smrd                     : 0
// num_inst_sopk                     : 1
// num_inst_vop1                     : 1
// num_inst_vop2                     : 47
// num_inst_vop3                     : 0
// num_inst_vopc                     : 0
// num_inst_vintrp                   : 0
// num_inst_smem                     : 7
// constant_literal_operands         : 0
// num_tex                           : 9
// num_vmem_group                    : 0
// vmem_grouping_started             : 0
// m_fFullPrecompilePromise          : 0
// m_fIntegerDivideExpansion         : 0
// m_fIntegerModExpansion            : 0
// m_fDoubleDivideExpansion          : 0
// m_fUsesScratch                    : 0
// m_fPerThreadIndirection           : 0
// m_fUsingTableLoads                : 0
// m_fUsingSHmemLoads                : 1
// fSemanticHashFlagOverrideApplied  : 0
// fPSHasNoUAVWrite                  : 0
// m_fRenderTargetsCanBeCompacted    : 0
// version                           : 3
// fCodePatched                      : 0

// Approximately 0 instruction slots used
#endif

const BYTE NormalMapEffect_VSNormalPixelLightingTxVc[] =
{
     68,  88,  66,  67, 133,  33, 
    167,  98, 141, 206,  49, 187, 
     78,  75, 200, 144,  32, 199, 
     13, 173,   1,   0,   0,   0, 
     54,  14,   0,   0,   5,   0, 
      0,   0,  52,   0,   0,   0, 
    200,   0,   0,   0, 108,   1, 
      0,   0, 184,  13,   0,   0, 
    200,  13,   0,   0,  73,  83, 
     71,  78, 140,   0,   0,   0, 
      4,   0,   0,   0,   8,   0, 
      0,   0, 104,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      0,   0,   0,   0,  15,  15, 
      0,   0, 116,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   0,   0,   7,   7, 
      0,   0, 123,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      2,   0,   0,   0,   3,   3, 
      0,   0, 132,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      3,   0,   0,   0,  15,  15, 
      0,   0,  83,  86,  95,  80, 
    111, 115, 105, 116, 105, 111, 
    110,   0,  78,  79,  82,  77, 
     65,  76,   0,  84,  69,  88, 
     67,  79,  79,  82,  68,   0, 
     67,  79,  76,  79,  82,   0, 
    171, 171,  79,  83,  71,  78, 
    156,   0,   0,   0,   5,   0, 
      0,   0,   8,   0,   0,   0, 
    128,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      3,   0,   0,   0,   0,   0, 
      0,   0,   3,  12,   0,   0, 
    128,   0,   0,   0,   1,   0, 
      0,   0,   0,   0,   0,   0, 
      3,   0,   0,   0,   1,   0, 
      0,   0,  15,   0,   0,   0, 
    128,   0,   0,   0,   2,   0, 
      0,   0,   0,   0,   0,   0, 
      3,   0,   0,   0,   2,   0, 
      0,   0,   7,   8,   0,   0, 
    137,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      3,   0,   0,   0,   3,   0, 
      0,   0,  15,   0,   0,   0, 
    143,   0,   0,   0,   0,   0, 
      0,   0,   1,   0,   0,   0, 
      3,   0,   0,   0,   4,   0, 
      0,   0,  15,   0,   0,   0, 
     84,  69,  88,  67,  79,  79, 
     82,  68,   0,  67,  79,  76, 
     79,  82,   0,  83,  86,  95, 
     80, 111, 115, 105, 116, 105, 
    111, 110,   0, 171,  83,  72, 
     69,  88,  68,  12,   0,   0, 
     80,   0,   1,   0,  17,   3, 
      0,   0,  53,  16,   0,   0, 
      5,   0,   0,   0, 168,   0, 
      0,   0,  80,   0,   1,   0, 
    163,   0,   0,   0, 106,   8, 
      0,   1,  89,   0,   0,   4, 
     70, 142,  32,   0,   0,   0, 
      0,   0,  26,   0,   0,   0, 
     95,   0,   0,   3, 242,  16, 
     16,   0,   0,   0,   0,   0, 
     95,   0,   0,   3, 114,  16, 
     16,   0,   1,   0,   0,   0, 
     95,   0,   0,   3,  50,  16, 
     16,   0,   2,   0,   0,   0, 
     95,   0,   0,   3, 242,  16, 
     16,   0,   3,   0,   0,   0, 
    101,   0,   0,   3,  50,  32, 
     16,   0,   0,   0,   0,   0, 
    101,   0,   0,   3, 242,  32, 
     16,   0,   1,   0,   0,   0, 
    101,   0,   0,   3, 114,  32, 
     16,   0,   2,   0,   0,   0, 
    101,   0,   0,   3, 242,  32, 
     16,   0,   3,   0,   0,   0, 
    103,   0,   0,   4, 242,  32, 
     16,   0,   4,   0,   0,   0, 
      1,   0,   0,   0, 104,   0, 
      0,   2,   1,   0,   0,   0, 
     54,   0,   0,   5,  50,  32, 
     16,   0,   0,   0,   0,   0, 
     70,  16,  16,   0,   2,   0, 
      0,   0,  17,   0,   0,   8, 
     18,  32,  16,   0,   1,   0, 
      0,   0,  70,  30,  16,   0, 
      0,   0,   0,   0,  70, 142, 
     32,   0,   0,   0,   0,   0, 
     15,   0,   0,   0,  17,   0, 
      0,   8,  34,  32,  16,   0, 
      1,   0,   0,   0,  70,  30, 
     16,   0,   0,   0,   0,   0, 
     70, 142,  32,   0,   0,   0, 
      0,   0,  16,   0,   0,   0, 
     17,   0,   0,   8,  66,  32, 
     16,   0,   1,   0,   0,   0, 
     70,  30,  16,   0,   0,   0, 
      0,   0,  70, 142,  32,   0, 
      0,   0,   0,   0,  17,   0, 
      0,   0,  17,  32,   0,   8, 
    130,  32,  16,   0,   1,   0, 
      0,   0,  70,  30,  16,   0, 
      0,   0,   0,   0,  70, 142, 
     32,   0,   0,   0,   0,   0, 
     14,   0,   0,   0,  16,   0, 
      0,   8,  18,   0,  16,   0, 
      0,   0,   0,   0,  70,  18, 
     16,   0,   1,   0,   0,   0, 
     70, 130,  32,   0,   0,   0, 
      0,   0,  19,   0,   0,   0, 
     16,   0,   0,   8,  34,   0, 
     16,   0,   0,   0,   0,   0, 
     70,  18,  16,   0,   1,   0, 
      0,   0,  70, 130,  32,   0, 
      0,   0,   0,   0,  20,   0, 
      0,   0,  16,   0,   0,   8, 
     66,   0,  16,   0,   0,   0, 
      0,   0,  70,  18,  16,   0, 
      1,   0,   0,   0,  70, 130, 
     32,   0,   0,   0,   0,   0, 
     21,   0,   0,   0,  16,   0, 
      0,   7, 130,   0,  16,   0, 
      0,   0,   0,   0,  70,   2, 
     16,   0,   0,   0,   0,   0, 
     70,   2,  16,   0,   0,   0, 
      0,   0,  68,   0,   0,   5, 
    130,   0,  16,   0,   0,   0, 
      0,   0,  58,   0,  16,   0, 
      0,   0,   0,   0,  56,   0, 
      0,   7, 114,  32,  16,   0, 
      2,   0,   0,   0, 246,  15, 
     16,   0,   0,   0,   0,   0, 
     70,   2,  16,   0,   0,   0, 
      0,   0,  56,   0,   0,   8, 
    130,  32,  16,   0,   3,   0, 
      0,   0,  58,  16,  16,   0, 
      3,   0,   0,   0,  58, 128, 
     32,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,  54,   0, 
      0,   5, 114,  32,  16,   0, 
      3,   0,   0,   0,  70,  18, 
     16,   0,   3,   0,   0,   0, 
     17,   0,   0,   8,  18,  32, 
     16,   0,   4,   0,   0,   0, 
     70,  30,  16,   0,   0,   0, 
      0,   0,  70, 142,  32,   0, 
      0,   0,   0,   0,  22,   0, 
      0,   0,  17,   0,   0,   8, 
     34,  32,  16,   0,   4,   0, 
      0,   0,  70,  30,  16,   0, 
      0,   0,   0,   0,  70, 142, 
     32,   0,   0,   0,   0,   0, 
     23,   0,   0,   0,  17,   0, 
      0,   8,  66,  32,  16,   0, 
      4,   0,   0,   0,  70,  30, 
     16,   0,   0,   0,   0,   0, 
     70, 142,  32,   0,   0,   0, 
      0,   0,  24,   0,   0,   0, 
     17,   0,   0,   8, 130,  32, 
     16,   0,   4,   0,   0,   0, 
     70,  30,  16,   0,   0,   0, 
      0,   0,  70, 142,  32,   0, 
      0,   0,   0,   0,  25,   0, 
      0,   0,  62,   0,   0,   1, 
     53,  16,   0,   0, 198,   0, 
      0,   0,  23,   0,   1,   0, 
     32,  75,  23,   0, 120,   1, 
    237, 152,  79,  79,  19,  65, 
     20, 192, 103, 183, 219, 233, 
    118,  25,  94, 151, 101,  41, 
    255,  74,  41, 138,  88, 255, 
      1, 234, 133,  24,  51,  42, 
     98,  60, 128,  66,  66,  37, 
     28, 214, 144,  66,  11, 212, 
      0, 173, 109,  67,  72,  76, 
    176,  18, 162,  23,  62,   0, 
     26,  47,  38, 126,   8,  15, 
     70,  72, 185, 106,  76, 140, 
    241,  27, 152, 120, 246,  68, 
    188, 224, 123, 116,  55, 105, 
      0, 207,  26, 179, 191, 228, 
     55, 111, 102, 118, 218, 157, 
    121, 179, 167,  55, 218, 202, 
     14, 217,  94, 204, 124, 167, 
    216, 124, 144, 120, 180, 165, 
     50,  22, 164,   1, 162,  81, 
    131,  20, 108, 106,  25, 251, 
    209,  66,  45,  99, 189, 212, 
     40,  40, 174, 165, 169,  43, 
    104,  18, 199,  55,  41, 162, 
    244, 156, 226, 171, 151, 143, 
    135,  63, 125,  92,  29,  30, 
    199, 254,  32,  26,  69,  31, 
    184,  74, 148, 163,  87,  81, 
    129, 122, 239, 172, 199, 123, 
     63, 189, 170, 158,   0,  58, 
    128, 214,  19, 162,   6,  57, 
    246,  63, 105, 106,  78, 102, 
      4, 117, 143, 116,  34, 180, 
     55,  15, 250,  95, 218,  39, 
     65, 231, 253, 215, 160,  28, 
    121, 247,  68, 208, 125, 212, 
      3,  40, 229, 141, 216, 118, 
     15, 237,  45, 249, 234, 142, 
     41, 208, 217, 118, 209,  63, 
    113, 128, 120, 247, 226, 225, 
    141,  41, 114,  54,  62, 200, 
    149,  23,   9, 174, 238, 153, 
     60,  16, 185, 204, 113, 146, 
     99, 242,  56,  94,  54, 199, 
     75, 226,  58,  26,  70,  13, 
    180,   1, 197, 164, 242,  70, 
     20,  55, 200,  35, 168, 137, 
     54, 161,  22, 218, 140, 226, 
    153,  56, 110, 140, 227, 199, 
    195, 241, 123, 229, 109, 104, 
     59, 218, 129, 118, 162,  49, 
    180,  11, 141, 163, 221, 222, 
     30, 106, 112, 165, 118,  66, 
    174, 226, 135, 138, 240, 128, 
    151, 129, 255,  27, 202,   1, 
    166, 249,  16, 202,   5, 141, 
     61, 234, 251,  62,  62,  62, 
     62,  62,  62,  62,  62,  62, 
     62,  62,  62,  62,  62,  62, 
     62, 127,  11, 181, 103, 227, 
      3,  11,  84, 118, 159, 178, 
    173, 157, 148, 178,  81, 157, 
     80,  54, 171,  99, 202, 243, 
    234, 144, 162, 239,  77,  43, 
    230,  94,   1, 231, 185, 205, 
    192, 176,  85,   8,  90,  76, 
      6,  20,  86,   5,  91, 131, 
    176, 165,  74, 205, 100, 178, 
    209, 210, 164, 110, 170, 146, 
     41,  28,  90, 193, 130,  78, 
    176, 161,  27, 162, 208,  12, 
     49,  16, 166,  38, 149,   0, 
    151, 167, 193, 132, 179,  16, 
    135,  11, 144, 132,   1,   0, 
    136,  10,  75, 118,   8,  91, 
    198,  69,  84,  90,  34,  38, 
    213,  32, 151, 167, 132,  41, 
    250,  68,  92, 156,  23,  73, 
    209,  47,  64, 180,  24, 150, 
    108,  55, 108, 217, 101,  68, 
    101, 147,  17, 147, 129, 135, 
    124, 189, 199,  48, 197,  25, 
     35,  46, 206,  25,  73, 113, 
    201,   0,  97, 235, 150, 108, 
    211, 109,  25, 211, 163,  18, 
    244, 202,  23, 173, 103,  72, 
     83,  67,  26,  40,  33,  21, 
     88, 136,   1, 157, 137, 245, 
    113,  72, 232, 166, 232, 213, 
    227,  34, 169,  39, 197,  69, 
     29,  68,  69, 213, 215, 127, 
    170, 198, 250, 103, 157, 237, 
    235,  17,  59,  20,  81, 217, 
    190, 104, 212, 130, 221,  24, 
    195,  70,   3,  12,  96,  84, 
     21,  22, 188, 129, 209, 108, 
    178,   2, 140,  61, 219, 161, 
    122,  29, 213,  96, 107, 213, 
    173,  26, 237,  84, 242,  58, 
     50, 103,  82, 115, 100, 238, 
    176, 175, 213, 234,  99,  30, 
    189,  84, 160,  37, 220,  72, 
    117, 220,  48, 170, 184, 149, 
    195,  14,  84, 115, 171, 107, 
     95, 243, 111, 190,  85, 159, 
    188, 251,  69, 125, 194, 113, 
    127, 115, 221, 141,   9, 212, 
    171, 151, 214, 168,  80, 115, 
    140,  77, 119, 125, 217, 141, 
    180,  87, 170,  81, 129,  87, 
    201, 165, 194,  37, 242, 214, 
    125, 254, 218, 141,  84, 223, 
    106,  64, 143, 238, 227, 189, 
    251, 124,   1, 165, 157, 142, 
     92, 115, 110, 165, 238,  58, 
    165, 242,  76,  38, 187, 234, 
    140, 230, 202,  37, 103,  36, 
     87, 204, 206, 149, 167,  83, 
    163,  78, 169,  56, 231,  76, 
     46, 166,  51, 217,  98, 201, 
    185, 157,  95,  46, 228, 150, 
    178,  25, 103, 122,  54, 191, 
     54, 190, 146, 189, 159,  47, 
     46, 167, 151, 238, 165,  11, 
    119, 230, 231, 113, 249, 204, 
    212, 100, 109, 102,  34, 183, 
    150,  93,  26, 203,  45,  44, 
    150, 115,  43,  11, 169, 181, 
    169, 185, 254,  66, 102, 150, 
    253,   6,  87, 162, 129,  69, 
     53,  16,   0,   0, 211,   0, 
      0,   0,  23,   0,   1,   0, 
     16, 191,  23,   0, 120,   1, 
    237, 152, 205, 107,  19,  65, 
     24, 198,  39, 155, 113, 178, 
    137, 211, 201,  54, 221, 198, 
    180, 166, 105, 213, 170, 245, 
    187, 149,  42,  90,  68,  86, 
    173,  40,  88, 181, 208,  34, 
      5,  87, 180, 182, 177,  70, 
    170,  13, 109, 144, 130, 224, 
     23, 130, 138, 226,  81,  68, 
    188, 248,  31, 120,  81,  60, 
    217, 146,  30, 188, 138, 136, 
    103, 143, 254,   9, 226,  69, 
    159,  39, 187, 209,  18, 245, 
    172, 200, 254, 200,  51, 239, 
    124, 238,  62, 179,  51, 185, 
    188,  11, 171,  68, 141, 129, 
    103,  47, 243, 140,  45, 223, 
    186,  46,  61, 180, 132,  88, 
    193,   6,  64, 181,  70, 217, 
    101,  41, 132, 159, 101,  41, 
     68,  23, 139,  24, 132,   9, 
     28,  26, 128, 238, 161, 237, 
     33, 246,  64,  28, 103, 204, 
    191, 125, 112, 240, 213, 185, 
     71,   7,  79, 163, 190,  11, 
    226, 242, 177,  80, 251, 161, 
     12, 212,   7,  25, 168, 145, 
    102, 168, 238, 131, 175,  90, 
     14, 219,  59, 160, 229, 216, 
     44,   0, 215, 173, 132, 126, 
     48, 206, 226, 247,  12,  67, 
    225, 214, 126,  11, 189, 241, 
    121, 117, 234,  62, 185, 223, 
    127,  13, 126, 147, 250,  57, 
     17, 158, 199, 114, 232,  93, 
     66, 228,  75,  43, 203,  96, 
     13,  57,  26, 158,  43, 151, 
    115, 111, 139, 208, 159, 248, 
      6, 234, 207,  33, 172, 247, 
     67, 132, 117,  37,  78, 246, 
    170, 216, 221,  46, 101,  45, 
     57,  42, 158, 238,  83, 232, 
     84,  56,  72, 165, 160,   4, 
    132, 131,  82,  73,  40,   5, 
    225, 160, 148, 134, 154,  32, 
     24,  84, 105, 200, 129, 240, 
    209,  21,  46, 135, 106, 129, 
     96,  74, 193, 175, 130,  71, 
    133, 251, 170, 114,  80,  27, 
    212,  14, 173, 134, 112, 115, 
     85,   7,  84, 128,  58, 195, 
     59,  35, 233,   4, 109,  22, 
     64, 197, 130, 157,  42,  43, 
    184, 209,  42,  30, 103, 248, 
    111, 225,  55, 168, 255,  31, 
     72, 240,  53,   2, 120, 198, 
     84,  68,  68,  68,  68,  68, 
     68,  68,  68,  68,  68,  68, 
     68,  68,  68,  68, 196, 223, 
    196,  90, 115, 251, 141, 136, 
    223,  89, 188,  33,  30,  46, 
    140,  37, 213,  82,  25,  49, 
    109, 132, 217, 147,  52,  75, 
    163, 201, 199,  85,  29, 191, 
    185, 104, 180, 208,  45, 198, 
     50, 195, 201,  39, 213, 166, 
    148, 208,  25, 109, 233,  85, 
     70, 154, 161, 228, 211, 170, 
    182, 133, 110,  78,  89,  58, 
    171, 165,  94, 109, 148, 113, 
    108,  75, 183, 166, 164, 110, 
    215,  74, 187, 182, 212, 109, 
     41, 165, 249, 236, 117,  38, 
    107, 182, 187, 121, 147, 179, 
    149, 246, 188, 242,  39,  33, 
     60, 185,  22, 171,  54, 226, 
     93,  59, 221, 130, 217, 150, 
    201, 235,  65, 246, 199,  60, 
    185,  38, 149, 213,  27, 240, 
    206,  45, 120, 231, 110, 215, 
     53, 125, 153, 130, 222, 234, 
    228, 245,  81, 142,  91, 158, 
    236, 178, 179, 122,  61, 124, 
    108, 134, 143,  78, 248, 216, 
    149, 113, 117, 175,  83, 208, 
    166, 195, 152,  33, 206, 137, 
    123, 178,  27, 190,  54, 193, 
     87,   1, 190, 250,  29,  87, 
    167,  59, 177,  11, 142, 105, 
     79, 246, 192,  99,   7,  60, 
    166,  90, 141, 150, 236, 107, 
    242, 164, 101, 223, 124,  47, 
    247, 218,  50, 113,  70,  93, 
    119, 216, 183, 210, 147, 169, 
    132, 109,  92, 214, 225,  53, 
    126, 223, 170, 166,  19, 194, 
    228, 216, 134,  71, 147, 176, 
     76, 158, 117, 250,  97, 148, 
    120,  39,  35, 230, 246,  48, 
     98,  14, 247, 189,  98, 131, 
     48, 189, 108,  59, 158, 236, 
    103, 108, 246, 228,  30, 198, 
    140,  39, 247,  49,  98, 190, 
     16, 183,  22, 106, 105,  66, 
    171, 246, 251,  65,  27,  83, 
    105,  13, 125,  57,  22,  13, 
    125,  14, 139, 134, 190,  90, 
     93,   6, 185, 184,  58,  79, 
    194, 220,  99,  37, 140, 221, 
     80,  18, 138, 137,  32,  71, 
    215,  14, 201,  48, 147, 247, 
     97, 230, 249, 199, 234, 181, 
    215,  95,  89,  39, 239, 194, 
     53,  47, 194, 200, 188, 179, 
    134, 126, 194, 140, 244, 175, 
    124,   9, 231, 127,  14,  35, 
    189,  50,  71, 102, 130, 236, 
     97, 144,  44,   5, 185,  48, 
     63, 238, 132, 145,  57,  53, 
    230, 150,  27, 125, 244, 134, 
    227,  83,  16, 157,  14,  14, 
    248,   7,  70, 143, 248, 115, 
    149, 179, 147, 197, 171, 254, 
    177,  82, 101, 206,  31,  44, 
    205,  22,  39,  42,  99, 163, 
    199, 252, 185, 217,   9, 127, 
    228, 226, 248, 100, 113, 118, 
    206,  63,  52, 115, 185,  92, 
    154,  46,  78, 250,  99, 231, 
    103, 230,  79,  94,  41, 158, 
    152, 153, 189,  60,  62, 125, 
    124, 188, 124, 248, 194,   5, 
     76,  63, 123, 106,  36, 232, 
     25,  46, 205,  23, 167, 135, 
     74,  83,  23,  43, 165,  43, 
     83, 163, 243, 167,  38, 182, 
    151,  39, 207, 139, 239,  96, 
    243, 155,  45,   0,  53,  16, 
      0,   0, 208,   0,   0,   0, 
     23,   0,   1,   0,   0, 127, 
     23,   0, 120,   1, 237, 152, 
    203, 107,  19,  81,  20, 198, 
    239,  36, 211, 219, 201, 228, 
    244, 100, 146,  76,  83,  91, 
    211, 105, 124, 197, 248, 104, 
    125, 224,  66,  92, 105,  85, 
     92,  84, 109, 193,  34,  93, 
     76,  41, 181,  73, 106, 164, 
    218, 208,  86,  41,   8, 218, 
     10,  34,  72,  17, 255,   5, 
    119, 110,   4, 151, 186, 105, 
     37, 221,  42, 136, 136, 116, 
    229, 223, 224,  90, 132, 250, 
    157, 206,  68,  67,  81,  92, 
     42,  50,  63, 248, 206, 185, 
    247, 206, 157, 153, 115,  31, 
    171, 239, 126, 151, 218, 226, 
    197, 231, 219, 175,  37, 103, 
     55,  11,  55,  86,  98,  74, 
    181,  73, 167, 133, 186,  43, 
     81, 169, 124,  78, 162,  82, 
    123,  37,  24,  16, 230, 118, 
     34,  29, 135, 124, 244,  79, 
     35, 151,  32, 121,  46, 249, 
    221, 219,   7, 131, 213, 234, 
    195,  65,  52,  85,  63,  36, 
    191,  27,  15,  37, 115, 147, 
    144, 188, 235,  64,  66,  66, 
     66,  11,  90,   2, 192, 111, 
    126,  32, 191,  21,  29, 129, 
     90, 105, 151,   0, 182, 127, 
     67,  77,  74, 248,  53,  67, 
    144, 212, 255,  59, 164,  54, 
    161, 249, 205, 102, 157, 205, 
    241, 127,   9, 217, 147, 230, 
     57,   9, 114,  30, 173,  48, 
     20, 135, 132, 183, 225, 162, 
    155,  83, 172, 240,  92, 101, 
     88, 214, 246,   6, 250,  29, 
    155, 192, 148,  70,  11, 205, 
    190, 100, 173, 134, 143, 106, 
    227,  81,  65, 199, 214,  29, 
     29,  79,  29, 211,  24, 212, 
    184,  80,  26, 135, 169, 113, 
     72, 218, 130, 176, 161, 218, 
    134, 112,   1,  52,  65,  29, 
     16,  10, 212,  41,   8, 155, 
    172, 211,  80,   6, 202,  66, 
     88, 147,  70,  97,  26,  53, 
    106,  92,  32, 189,   3, 234, 
    134, 122, 160, 157,  80,  30, 
    234, 133,  60, 168,  47, 188, 
    187, 166,  84, 130, 190,   4, 
    160, 141,  96, 165,  58,  22, 
    220,  36,  29, 111, 238, 196, 
    255, 137, 236,   1, 182, 249, 
      7, 193, 110,   4, 231, 221, 
    188,  34,  35,  18,  34,  34, 
     34,  34,  34,  34,  34,  34, 
     34,  34,  34,  34,  34,  34, 
     34,  34, 254,  18, 177,  93, 
     15,  86,  85, 124, 233, 205, 
    125, 181, 178, 118, 210, 136, 
    173,  95,  52,  30,  55,  70, 
    140, 149, 198, 168, 241, 164, 
     33,  99, 241, 229, 100,  99, 
    204, 112, 214,  55, 227, 223, 
     86, 197, 213, 168, 167,  86, 
    214, 146, 172, 216,  38,  69, 
      9,  91, 145, 101,  41,  74, 
    177, 201,  76,  38, 117, 216, 
     38, 145, 101,  82, 150,  53, 
    103,  72,  83, 218, 214, 228, 
     88, 154, 218,  57, 199, 154, 
    114, 212, 102, 231,  40, 105, 
     45, 125,  48,  19, 135, 205, 
    156, 155, 231, 206,  76, 158, 
     92,  39,  79,  61, 174, 199, 
    221,  25, 143, 118,  56,  30, 
    121, 174, 203, 189,  25, 151, 
    242, 142,  75, 118, 167, 195, 
    169,  62, 135, 184, 215,  33, 
    107, 220, 185, 199, 233,  12, 
    167, 210, 121, 182, 211,  14, 
     75, 109,  93,  69, 151, 247, 
    176, 199, 187, 201, 163,  93, 
    182,  71,   5, 203, 163, 253, 
     92, 228,  34,  21, 105, 159, 
     93, 164, 189,  86, 145,  14, 
    113, 137,  15,  82, 137,  14, 
    216,  37,  42,  89,  37,  58, 
    194, 204,   3, 196, 212, 111, 
     51,  29, 182, 152,  70, 148, 
    122, 169, 212, 210, 154, 161, 
     62, 125,  16, 235, 202,  73, 
    159, 220,  48,  82,  89, 149, 
    201,  34, 187, 237,  88,  50, 
     50, 117,  40, 179,  13,  89, 
    197, 148, 110,  71, 142,  39, 
    149, 149,  64,  78, 176,  42, 
    169,  19,  27, 134, 165,  20, 
    117, 160, 239, 164,  21, 167, 
    144,  51,  54, 118, 118, 121, 
     77,  60,  62,  49,  84,   3, 
     39,  44, 160,  91, 140, 161, 
    109,  99,  91,  94, 231, 182, 
    177, 173, 182,  41, 147, 127, 
     50,  22, 122, 135,  39, 194, 
     44, 222, 175, 248, 165,  70, 
    232,  54, 246,  64, 102, 232, 
    196, 125, 156, 125, 246, 169, 
    113, 247, 213,  87, 105,  11, 
     79, 195, 119, 234,  97,  46, 
     64,   4, 253, 137,  87, 225, 
    252, 231,  97, 150,  90, 197, 
    227, 226, 192, 253,  11, 204, 
     78, 176,  17,  62, 127,  31, 
    102, 241, 196, 196, 115, 222, 
     94, 199, 151, 240, 249,  52, 
     36, 149, 158,  59, 229, 159, 
     25, 189, 224, 207,  47,  76, 
    148,  43, 119, 252, 161, 218, 
    194, 188, 127, 174,  54,  87, 
    153,  90,  24,  27,  29, 242, 
    231, 231, 166, 252,  43, 215, 
     39, 203, 149, 185, 121, 255, 
    236, 236, 205, 122, 109, 166, 
     82, 246, 199, 174, 205,  46, 
     14, 223, 170,  92, 158, 157, 
    187,  57,  57, 115, 105, 178, 
    126, 190,  90, 197, 244, 137, 
    171,  87, 130, 145, 145, 218, 
     98, 101, 230,  98, 109, 250, 
    250,  66, 237, 214, 244, 232, 
    226, 213, 169, 129, 122, 249, 
    154, 250,  14,   0, 205, 138, 
    118,   0,  88,  72,  83,  72, 
      8,   0,   0,   0, 212, 111, 
    161, 214, 194, 123, 184, 250, 
     88,  80,  68,  80, 102,   0, 
      0,   0,  68,  58,  92,  65, 
     84,  71,  92, 115, 116,  95, 
    100, 101, 118,  92,  75, 105, 
    116, 115,  92,  68, 105, 114, 
    101,  99, 116,  88,  84,  75, 
     92, 115, 114,  99,  92,  83, 
    104,  97, 100, 101, 114, 115, 
     92,  67, 111, 109, 112, 105, 
    108, 101, 100,  92,  88,  98, 
    111, 120,  79, 110, 101,  78, 
    111, 114, 109,  97, 108,  77, 
     97, 112,  69, 102, 102, 101, 
     99, 116,  95,  86,  83,  78, 
    111, 114, 109,  97, 108,  80, 
    105, 120, 101, 108,  76, 105, 
    103, 104, 116, 105, 110, 103, 
     84, 120,  86,  99,  46, 112, 
    100,  98
};
