#if 0
//
// Generated by Microsoft (R) D3D Shader Disassembler for Durango
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// COLOR                    0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xyz         3     NONE   float   xyz 
// TEXCOORD                 2   xyz         4     NONE   float       
// TEXCOORD                 3   xyz         5     NONE   float   xyz 
// TEXCOORD                 4   xyzw        6     NONE   float       
// TEXCOORD                 5   xyz         7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
// Opaque Custom Data - XBOX Precompiled Shader Header
// First Precompiled Shader at offset:[426]
// Embedded Data:
//  0x000001aa - Offset To First Precompiled Shader
//  0x00000050 - Original Shader Descriptor
//  0x000001a5 - Original Shader Size
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[5], immediateIndexed
dcl_constantbuffer CB1[21], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v2.xy
dcl_input_ps linear v3.xyz
dcl_input_ps linear v5.xyz
dcl_output o0.xyzw
dcl_temps 5
mul r0.xyz, cb0[2].xyzx, cb1[1].xyzx
mul r1.xyz, cb0[2].xyzx, cb1[2].xyzx
dp3 r0.w, v5.xyzx, v5.xyzx
rsq r0.w, r0.w
mad r2.xyz, v5.xyzx, r0.wwww, cb1[10].xyzx
dp3 r1.w, r2.xyzx, r2.xyzx
rsq r1.w, r1.w
mul r2.xyz, r1.wwww, r2.xyzx
dp3 r1.w, v3.xyzx, v3.xyzx
rsq r1.w, r1.w
mul r3.xyz, r1.wwww, v3.xyzx
dp3_sat r1.w, r3.xyzx, r2.xyzx
log r1.w, r1.w
max r2.x, cb0[4].x, l(0.000100)
mul r1.w, r1.w, r2.x
exp r1.w, r1.w
mul r1.w, r1.w, cb1[14].x
mul r1.xyz, r1.wwww, r1.xyzx
mad r2.yzw, v5.xxyz, r0.wwww, cb1[9].xxyz
mad r4.xyz, v5.xyzx, r0.wwww, cb1[11].xyzx
dp3 r0.w, r2.yzwy, r2.yzwy
rsq r0.w, r0.w
mul r2.yzw, r0.wwww, r2.yyzw
dp3_sat r0.w, r3.xyzx, r2.yzwy
log r0.w, r0.w
mul r0.w, r0.w, r2.x
exp r0.w, r0.w
mul r0.w, r0.w, cb1[13].x
mad r0.xyz, r0.xyzx, r0.wwww, r1.xyzx
mul r1.xyz, cb0[2].xyzx, cb1[3].xyzx
dp3 r0.w, r4.xyzx, r4.xyzx
rsq r0.w, r0.w
mul r2.yzw, r0.wwww, r4.xxyz
dp3_sat r0.w, r3.xyzx, r2.yzwy
log r0.w, r0.w
mul r0.w, r0.w, r2.x
exp r0.w, r0.w
mul r0.w, r0.w, cb1[15].x
mad r0.xyz, r1.xyzx, r0.wwww, r0.xyzx
dp3_sat r0.w, cb1[9].xyzx, r3.xyzx
mul r1.xyz, r0.wwww, cb1[1].xyzx
mul r1.xyz, r1.xyzx, v1.xyzx
mad r1.xyz, cb0[0].xyzx, cb1[0].xyzx, r1.xyzx
dp3_sat r0.w, cb1[10].xyzx, r3.xyzx
dp3_sat r1.w, cb1[11].xyzx, r3.xyzx
mul r2.xyz, r1.wwww, cb1[3].xyzx
mul r3.xyz, r0.wwww, cb1[2].xyzx
mad r1.xyz, r3.xyzx, v1.xyzx, r1.xyzx
mad_sat r1.xyz, r2.xyzx, v1.xyzx, r1.xyzx
sample_indexable(texture2d)(float,float,float,float) r2.xyzw, v2.xyxx, t0.xyzw, s0
mad o0.xyz, r1.xyzx, r2.xyzx, r0.xyzx
mul o0.w, r2.w, v1.w
ret 
// Opaque Custom Data - XBOX Precompiled Shader Object
// Offset:[426], bundle is:[307] DWORDS.
// Disassembled Precompiled Shader Object:
// Shader Type               : (PS)
// Shader Hw Stage           : (PS)
// PDB Filename              : D:\ATG\st_dev\Kits\DirectXTK\src\Shaders\Compiled\XboxOneDGSLPhong_mainTx.pdb
// Shader Semantic Hash      : 0xb52b89ae281363f7
//
// Shader Data:
; ----------------- PS Data ------------------------
; Input Semantic Mappings
;   [0] generic,  usageIdx 1, channelMask 15, param0, paramSlot1, DefaultVal={0,0,0,0}
;   [1] generic,  usageIdx 2, channelMask  3, param1, paramSlot2, DefaultVal={0,0,0,0}
;   [2] generic,  usageIdx 3, channelMask  7, param2, paramSlot3, DefaultVal={0,0,0,0}
;   [3] generic,  usageIdx 5, channelMask  7, param3, paramSlot5, DefaultVal={0,0,0,0}

codeLenInByte        = 816 bytes;

; launchModeFlags    = 0x0000000E
srdTableSupport      = TRUE
immediateSupportExt  = TRUE
srdTableSupportExt   = TRUE

userElementCount     = 1;
;  userElements[0]      = PTR_EXTENDED_USER_DATA, ReferencedExtUserElements=1, s[0x0:1]
extUserElementCount  = 4;
;  extUserElements 1[0] = IMM_RESOURCE 0, offset 0x0:7 dwords
;  extUserElements 1[1] = IMM_SAMPLER 0, offset 0x8:11 dwords
;  extUserElements 1[2] = IMM_CONST_BUFFER 0, offset 0xc:15 dwords
;  extUserElements 1[3] = IMM_CONST_BUFFER 1, offset 0x10:19 dwords
NumVgprs             = 29;
NumSgprs             = 44;
FloatMode            = 192;
IeeeMode             = 0;
FlatPtr32            = 0;
ScratchSize          = 0 dwords/thread;
LDSByteSize          = 0 bytes/workgroup (compile time only);
ScratchWaveOffsetReg = s65535;
; texSamplerUsage         = 0x00000001
; constBufUsage           = 0x00000003

; SPI_SHADER_PGM_RSRC2_PS = 0x00000004
SSPRP:SCRATCH_EN            = 0
SSPRP:USER_SGPR             = 2
SSPRP:TRAP_PRESENT          = 0
SSPRP:WAVE_CNT_EN           = 0
SSPRP:EXTRA_LDS_SIZE        = 0
SSPRP:EXCP_EN               = 0
; SPI_SHADER_Z_FORMAT     = 0x00000000
SPZF:Z_EXPORT_FORMAT        = 0; SPI_SHADER_ZERO
; SPI_PS_IN_CONTROL       = 0x00000004
SPIC:NUM_INTERP             = 4
SPIC:PARAM_GEN              = 0
SPIC:FOG_ADDR               = 0
SPIC:BC_OPTIMIZE_DISABLE    = 0
SPIC:PASS_FOG_THROUGH_PS    = 0
; SPI_PS_INPUT_ADDR       = 0x00000002
SPIA:PERSP_CENTER_ENA       = 1
; DB_SHADER_CONTROL       = 0x00000010
DB:Z_ORDER                  = 1
DB:CONSERVATIVE_Z_EXPORT    = 0; EXPORT_ANY_Z
; CB_SHADER_MASK          = 0x0000000F
CB:OUTPUT0_ENABLE           = 15

; export table for mrt0 [patch@(bytes=0x31C, dwords=0xC7)]
// Export Patch Code (FMT_ZERO):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_nop         0x0000                                  // 000000000000: BF800000
  s_nop         0x0000                                  // 000000000004: BF800000
  exp           null, off, off, off, off done vm        // 000000000008: F8001890 00000000
end
// Export Patch Code (FMT_32_R):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_nop         0x0000                                  // 000000000000: BF800000
  s_nop         0x0000                                  // 000000000004: BF800000
  exp           mrt0, v18, off, off, off done vm        // 000000000008: F8001801 00000012
end
// Export Patch Code (FMT_32_GR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_nop         0x0000                                  // 000000000000: BF800000
  s_nop         0x0000                                  // 000000000004: BF800000
  exp           mrt0, v18, v19, off, off done vm        // 000000000008: F8001803 00001312
end
// Export Patch Code (FMT_32_AR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_nop         0x0000                                  // 000000000000: BF800000
  s_nop         0x0000                                  // 000000000004: BF800000
  exp           mrt0, v18, v0, off, off done vm         // 000000000008: F8001803 00000012
end
// Export Patch Code (FMT_FP16_ABGR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  v_cvt_pkrtz_f16_f32  v1, v18, v19                     // 000000000000: 5E022712
  v_cvt_pkrtz_f16_f32  v0, v7, v0                       // 000000000004: 5E000107
  exp           mrt0, v1, v1, v0, v0 done compr vm      // 000000000008: F8001C0F 00000001
end
// Export Patch Code (FMT_UNORM16_ABGR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  v_cvt_pknorm_u16_f32  v1, v18, v19                    // 000000000000: 5C022712
  v_cvt_pknorm_u16_f32  v0, v7, v0                      // 000000000004: 5C000107
  exp           mrt0, v1, v1, v0, v0 done compr vm      // 000000000008: F8001C0F 00000001
end
// Export Patch Code (FMT_SNORM16_ABGR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  v_cvt_pknorm_i16_f32  v1, v18, v19                    // 000000000000: 5A022712
  v_cvt_pknorm_i16_f32  v0, v7, v0                      // 000000000004: 5A000107
  exp           mrt0, v1, v1, v0, v0 done compr vm      // 000000000008: F8001C0F 00000001
end
// Export Patch Code (FMT_UINT16_ABGR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  v_cvt_pk_u16_u32  v1, v18, v19                        // 000000000000: 60022712
  v_cvt_pk_u16_u32  v0, v7, v0                          // 000000000004: 60000107
  exp           mrt0, v1, v1, v0, v0 done compr vm      // 000000000008: F8001C0F 00000001
end
// Export Patch Code (FMT_SINT16_ABGR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  v_cvt_pk_i16_i32  v1, v18, v19                        // 000000000000: 62022712
  v_cvt_pk_i16_i32  v0, v7, v0                          // 000000000004: 62000107
  exp           mrt0, v1, v1, v0, v0 done compr vm      // 000000000008: F8001C0F 00000001
end
// Export Patch Code (FMT_32_ABGR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_nop         0x0000                                  // 000000000000: BF800000
  s_nop         0x0000                                  // 000000000004: BF800000
  exp           mrt0, v18, v19, v7, v0 done vm          // 000000000008: F800180F 00071312
end

// Shader Instructions:
shader main
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_mov_b64     s[40:41], exec                          // 000000000000: BEA8047E
  s_wqm_b64     exec, exec // wrscc                     // 000000000004: BEFE0A7E
  s_load_dwordx8  s[4:11], s[0:1], 0x00                 // 000000000008: C0C20100
  s_load_dwordx4  s[12:15], s[0:1], 0x08                // 00000000000C: C0860108
  s_mov_b32     m0, s2                                  // 000000000010: BEFC0302
  v_interp_p1_f32  v2, v0, attr1.x                      // 000000000014: C8080400
  v_interp_p1_f32  v3, v0, attr1.y                      // 000000000018: C80C0500
  v_interp_p2_f32  v2, v1, attr1.x                      // 00000000001C: C8090401
  v_interp_p2_f32  v3, v1, attr1.y                      // 000000000020: C80D0501
  s_waitcnt     lgkmcnt(0)                              // 000000000024: BF8C007F
  image_sample  v[2:5], v[2:3], s[4:11], s[12:15] dmask:0xf // 000000000028: F0800F00 00610202
  s_load_dwordx8  s[0:7], s[0:1], 0x0c                  // 000000000030: C0C0010C
  v_interp_p1_f32  v6, v0, attr3.z                      // 000000000034: C8180E00
  s_waitcnt     lgkmcnt(0)                              // 000000000038: BF8C007F
  s_buffer_load_dwordx4  s[8:11], s[4:7], 0x28          // 00000000003C: C2840528
  v_interp_p1_f32  v7, v0, attr3.y                      // 000000000040: C81C0D00
  v_interp_p2_f32  v6, v1, attr3.z                      // 000000000044: C8190E01
  s_buffer_load_dwordx4  s[12:15], s[4:7], 0x24         // 000000000048: C2860524
  v_interp_p1_f32  v8, v0, attr3.x                      // 00000000004C: C8200C00
  v_interp_p2_f32  v7, v1, attr3.y                      // 000000000050: C81D0D01
  v_mul_legacy_f32  v9, v6, v6                          // 000000000054: 0E120D06
  s_buffer_load_dwordx4  s[16:19], s[4:7], 0x2c         // 000000000058: C288052C
  v_interp_p2_f32  v8, v1, attr3.x                      // 00000000005C: C8210C01
  v_mac_f32     v9, v7, v7                              // 000000000060: 3E120F07
  v_mac_f32     v9, v8, v8                              // 000000000064: 3E121108
  v_rsq_f32     v9, v9                                  // 000000000068: 7E125D09
  v_interp_p1_f32  v10, v0, attr2.z                     // 00000000006C: C8280A00
  s_waitcnt     lgkmcnt(0)                              // 000000000070: BF8C007F
  v_mad_f32     v11, v6, v9, s10                        // 000000000074: D282000B 002A1306
  v_interp_p1_f32  v12, v0, attr2.y                     // 00000000007C: C8300900
  v_interp_p2_f32  v10, v1, attr2.z                     // 000000000080: C8290A01
  v_mad_f32     v13, v7, v9, s9                         // 000000000084: D282000D 00261307
  v_mul_legacy_f32  v14, v11, v11                       // 00000000008C: 0E1C170B
  v_interp_p1_f32  v15, v0, attr2.x                     // 000000000090: C83C0800
  v_interp_p2_f32  v12, v1, attr2.y                     // 000000000094: C8310901
  v_mul_legacy_f32  v16, v10, v10                       // 000000000098: 0E20150A
  v_mad_f32     v17, v6, v9, s14                        // 00000000009C: D2820011 003A1306
  v_mad_f32     v18, v8, v9, s8                         // 0000000000A4: D2820012 00221308
  v_mac_f32     v14, v13, v13                           // 0000000000AC: 3E1C1B0D
  v_interp_p2_f32  v15, v1, attr2.x                     // 0000000000B0: C83D0801
  v_mac_f32     v16, v12, v12                           // 0000000000B4: 3E20190C
  v_mad_f32     v19, v7, v9, s13                        // 0000000000B8: D2820013 00361307
  v_mad_f32     v6, v6, v9, s18                         // 0000000000C0: D2820006 004A1306
  v_mul_legacy_f32  v20, v17, v17                       // 0000000000C8: 0E282311
  v_mac_f32     v14, v18, v18                           // 0000000000CC: 3E1C2512
  v_mac_f32     v16, v15, v15                           // 0000000000D0: 3E201F0F
  v_mad_f32     v21, v8, v9, s12                        // 0000000000D4: D2820015 00321308
  v_mad_f32     v7, v7, v9, s17                         // 0000000000DC: D2820007 00461307
  v_mac_f32     v20, v19, v19                           // 0000000000E4: 3E282713
  v_mul_legacy_f32  v22, v6, v6                         // 0000000000E8: 0E2C0D06
  s_buffer_load_dword  s11, s[0:3], 0x10                // 0000000000EC: C2058110
  v_rsq_f32     v14, v14                                // 0000000000F0: 7E1C5D0E
  v_rsq_f32     v16, v16                                // 0000000000F4: 7E205D10
  v_mad_f32     v8, v8, v9, s16                         // 0000000000F8: D2820008 00421308
  v_mac_f32     v20, v21, v21                           // 000000000100: 3E282B15
  v_mac_f32     v22, v7, v7                             // 000000000104: 3E2C0F07
  v_mul_legacy_f32  v9, v11, v14                        // 000000000108: 0E121D0B
  v_mul_legacy_f32  v10, v10, v16                       // 00000000010C: 0E14210A
  v_rsq_f32     v11, v20                                // 000000000110: 7E165D14
  v_mac_f32     v22, v8, v8                             // 000000000114: 3E2C1108
  s_buffer_load_dwordx4  s[20:23], s[4:7], 0x04         // 000000000118: C28A0504
  s_buffer_load_dwordx4  s[24:27], s[4:7], 0x08         // 00000000011C: C28C0508
  v_mul_legacy_f32  v13, v13, v14                       // 000000000120: 0E1A1D0D
  v_mul_legacy_f32  v12, v12, v16                       // 000000000124: 0E18210C
  v_mul_legacy_f32  v9, v9, v10                         // 000000000128: 0E121509
  v_mul_legacy_f32  v17, v17, v11                       // 00000000012C: 0E221711
  v_rsq_f32     v20, v22                                // 000000000130: 7E285D16
  s_buffer_load_dwordx4  s[28:31], s[0:3], 0x08         // 000000000134: C28E0108
  s_buffer_load_dwordx4  s[32:35], s[4:7], 0x00         // 000000000138: C2900500
  s_buffer_load_dword  s15, s[4:7], 0x38                // 00000000013C: C2078538
  v_mul_legacy_f32  v14, v18, v14                       // 000000000140: 0E1C1D12
  v_mul_legacy_f32  v15, v15, v16                       // 000000000144: 0E1E210F
  v_mac_f32     v9, v12, v13                            // 000000000148: 3E121B0C
  v_mul_legacy_f32  v13, v19, v11                       // 00000000014C: 0E1A1713
  v_mul_legacy_f32  v16, v10, v17                       // 000000000150: 0E20230A
  v_mul_legacy_f32  v6, v6, v20                         // 000000000154: 0E0C2906
  s_buffer_load_dwordx4  s[36:39], s[4:7], 0x0c         // 000000000158: C292050C
  s_buffer_load_dword  s19, s[4:7], 0x34                // 00000000015C: C2098534
  s_buffer_load_dwordx4  s[0:3], s[0:3], 0x00           // 000000000160: C2800100
  v_mad_legacy_f32  v9, v15, v14, v9 clamp              // 000000000164: D2800809 04261D0F
  v_mov_b32     v14, 0x38d1b717                         // 00000000016C: 7E1C02FF 38D1B717
  v_mul_legacy_f32  v11, v21, v11                       // 000000000174: 0E161715
  v_mac_f32     v16, v12, v13                           // 000000000178: 3E201B0C
  v_mul_legacy_f32  v7, v7, v20                         // 00000000017C: 0E0E2907
  v_mul_legacy_f32  v6, v10, v6                         // 000000000180: 0E0C0D0A
  v_mul_legacy_f32  v13, s14, v10                       // 000000000184: 0E1A140E
  s_waitcnt     lgkmcnt(0)                              // 000000000188: BF8C007F
  s_buffer_load_dword  s3, s[4:7], 0x3c                 // 00000000018C: C201853C
  v_log_f32     v9, v9                                  // 000000000190: 7E124F09
  v_max_legacy_f32  v14, s11, v14                       // 000000000194: 1C1C1C0B
  v_mad_legacy_f32  v16, v15, v11, v16 clamp            // 000000000198: D2800810 0442170F
  v_mul_legacy_f32  v8, v8, v20                         // 0000000001A0: 0E102908
  v_mac_f32     v6, v12, v7                             // 0000000001A4: 3E0C0F0C
  v_mac_f32     v13, s13, v12                           // 0000000001A8: 3E1A180D
  v_mul_legacy_f32  v7, v9, v14                         // 0000000001AC: 0E0E1D09
  v_log_f32     v9, v16                                 // 0000000001B0: 7E124F10
  v_mad_legacy_f32  v6, v15, v8, v6 clamp               // 0000000001B4: D2800806 041A110F
  v_mad_legacy_f32  v13, s12, v15, v13 clamp            // 0000000001BC: D280080D 04361E0C
  v_interp_p1_f32  v8, v0, attr0.x                      // 0000000001C4: C8200000
  v_interp_p1_f32  v11, v0, attr0.y                     // 0000000001C8: C82C0100
  v_interp_p1_f32  v16, v0, attr0.z                     // 0000000001CC: C8400200
  v_mul_legacy_f32  v17, s10, v10                       // 0000000001D0: 0E22140A
  v_mov_b32     v18, s24                                // 0000000001D4: 7E240218
  v_mov_b32     v19, s25                                // 0000000001D8: 7E260219
  v_mov_b32     v20, s26                                // 0000000001DC: 7E28021A
  v_exp_f32     v7, v7                                  // 0000000001E0: 7E0E4B07
  v_mul_legacy_f32  v9, v14, v9                         // 0000000001E4: 0E12130E
  v_log_f32     v6, v6                                  // 0000000001E8: 7E0C4F06
  v_mul_legacy_f32  v21, s20, v13                       // 0000000001EC: 0E2A1A14
  v_mul_legacy_f32  v22, s21, v13                       // 0000000001F0: 0E2C1A15
  v_mul_legacy_f32  v13, s22, v13                       // 0000000001F4: 0E1A1A16
  v_interp_p2_f32  v8, v1, attr0.x                      // 0000000001F8: C8210001
  v_interp_p2_f32  v11, v1, attr0.y                     // 0000000001FC: C82D0101
  v_interp_p2_f32  v16, v1, attr0.z                     // 000000000200: C8410201
  v_mac_f32     v17, s9, v12                            // 000000000204: 3E221809
  v_mul_legacy_f32  v10, s18, v10                       // 000000000208: 0E141412
  v_mov_b32     v23, s20                                // 00000000020C: 7E2E0214
  v_mov_b32     v24, s21                                // 000000000210: 7E300215
  v_mov_b32     v25, s22                                // 000000000214: 7E320216
  v_mul_legacy_f32  v18, s28, v18                       // 000000000218: 0E24241C
  v_mul_legacy_f32  v19, s29, v19                       // 00000000021C: 0E26261D
  v_mul_legacy_f32  v20, s30, v20                       // 000000000220: 0E28281E
  v_mul_legacy_f32  v7, s15, v7                         // 000000000224: 0E0E0E0F
  v_exp_f32     v9, v9                                  // 000000000228: 7E124B09
  v_mul_legacy_f32  v6, v14, v6                         // 00000000022C: 0E0C0D0E
  v_mul_legacy_f32  v14, v21, v8                        // 000000000230: 0E1C1115
  v_mul_legacy_f32  v21, v22, v11                       // 000000000234: 0E2A1716
  v_mul_legacy_f32  v13, v13, v16                       // 000000000238: 0E1A210D
  v_mov_b32     v22, s32                                // 00000000023C: 7E2C0220
  v_mov_b32     v26, s33                                // 000000000240: 7E340221
  v_mov_b32     v27, s34                                // 000000000244: 7E360222
  v_mad_legacy_f32  v17, s8, v15, v17 clamp             // 000000000248: D2800811 04461E08
  v_mac_f32     v10, s17, v12                           // 000000000250: 3E141811
  v_mul_legacy_f32  v12, s28, v23                       // 000000000254: 0E182E1C
  v_mul_legacy_f32  v23, s29, v24                       // 000000000258: 0E2E301D
  v_mul_legacy_f32  v24, s30, v25                       // 00000000025C: 0E30321E
  v_mul_legacy_f32  v18, v18, v7                        // 000000000260: 0E240F12
  v_mul_legacy_f32  v19, v19, v7                        // 000000000264: 0E260F13
  v_mul_legacy_f32  v7, v20, v7                         // 000000000268: 0E0E0F14
  v_mul_legacy_f32  v9, s19, v9                         // 00000000026C: 0E121213
  v_mov_b32     v20, s36                                // 000000000270: 7E280224
  v_mov_b32     v25, s37                                // 000000000274: 7E320225
  v_mov_b32     v28, s38                                // 000000000278: 7E380226
  v_exp_f32     v6, v6                                  // 00000000027C: 7E0C4B06
  v_mac_f32     v14, s0, v22                            // 000000000280: 3E1C2C00
  v_mac_f32     v21, s1, v26                            // 000000000284: 3E2A3401
  v_mac_f32     v13, s2, v27                            // 000000000288: 3E1A3602
  v_mad_legacy_f32  v10, s16, v15, v10 clamp            // 00000000028C: D280080A 042A1E10
  v_mul_legacy_f32  v15, s24, v17                       // 000000000294: 0E1E2218
  v_mul_legacy_f32  v22, s25, v17                       // 000000000298: 0E2C2219
  v_mul_legacy_f32  v17, s26, v17                       // 00000000029C: 0E22221A
  v_mac_f32     v18, v12, v9                            // 0000000002A0: 3E24130C
  v_mac_f32     v19, v23, v9                            // 0000000002A4: 3E261317
  v_mac_f32     v7, v24, v9                             // 0000000002A8: 3E0E1318
  v_mul_legacy_f32  v9, s28, v20                        // 0000000002AC: 0E12281C
  v_mul_legacy_f32  v12, s29, v25                       // 0000000002B0: 0E18321D
  v_mul_legacy_f32  v20, s30, v28                       // 0000000002B4: 0E28381E
  s_waitcnt     lgkmcnt(0)                              // 0000000002B8: BF8C007F
  v_mul_legacy_f32  v6, s3, v6                          // 0000000002BC: 0E0C0C03
  v_mul_legacy_f32  v23, s36, v10                       // 0000000002C0: 0E2E1424
  v_mul_legacy_f32  v24, s37, v10                       // 0000000002C4: 0E301425
  v_mul_legacy_f32  v10, s38, v10                       // 0000000002C8: 0E141426
  v_mac_f32     v14, v15, v8                            // 0000000002CC: 3E1C110F
  v_mac_f32     v21, v22, v11                           // 0000000002D0: 3E2A1716
  v_mac_f32     v13, v17, v16                           // 0000000002D4: 3E1A2111
  v_interp_p1_f32  v0, v0, attr0.w                      // 0000000002D8: C8000300
  v_mac_f32     v18, v9, v6                             // 0000000002DC: 3E240D09
  v_mac_f32     v19, v12, v6                            // 0000000002E0: 3E260D0C
  v_mac_f32     v7, v20, v6                             // 0000000002E4: 3E0E0D14
  v_mad_legacy_f32  v14, v23, v8, v14 clamp             // 0000000002E8: D280080E 043A1117
  v_mad_legacy_f32  v21, v24, v11, v21 clamp            // 0000000002F0: D2800815 04561718
  v_mad_legacy_f32  v13, v10, v16, v13 clamp            // 0000000002F8: D280080D 0436210A
  v_interp_p2_f32  v0, v1, attr0.w                      // 000000000300: C8010301
  s_waitcnt     vmcnt(0)                                // 000000000304: BF8C0F70
  v_mac_f32     v18, v14, v2                            // 000000000308: 3E24050E
  v_mac_f32     v19, v21, v3                            // 00000000030C: 3E260715
  v_mac_f32     v7, v13, v4                             // 000000000310: 3E0E090D
  v_mul_legacy_f32  v0, v5, v0                          // 000000000314: 0E000105
  s_mov_b64     exec, s[40:41]                          // 000000000318: BEFE0428
  v_cvt_pkrtz_f16_f32  v1, v18, v19                     // 00000000031C: 5E022712
  v_cvt_pkrtz_f16_f32  v0, v7, v0                       // 000000000320: 5E000107
  exp           mrt0, v1, v1, v0, v0 done compr vm      // 000000000324: F8001C0F 00000001
  s_endpgm                                              // 00000000032C: BF810000
end


// Shader Statistics:
//  NumActiveWaveFront:         32
//  WorkgroupSize:              64
//  NumVRegs:                   29
//  NumSRegs:                   44
//  NumActiveWaveFrontByVReg:   32
//  NumActiveWaveFrontBySReg:   40
//  NumActiveWaveFrontByLDS:    40
//  CycleSim:                   192
//  CycleSimNWaves:             192
//  Code Size:                  816
//Assembler Counts:
//  num_32bit_ops                     : 163
//  num_64bit_ops                     : 20
//  num_alu                           : 154
//  num_fc                            : 27
//  num_inst_exp                      : 1
//  num_inst_ldsgds                   : 0
//  num_inst_mimg                     : 1
//  num_inst_mtbuf                    : 0
//  num_inst_mubuf                    : 0
//  num_inst_sopp                     : 7
//  num_inst_sopc                     : 0
//  num_inst_sop1                     : 4
//  num_inst_sop2                     : 0
//  num_inst_smrd                     : 0
//  num_inst_sopk                     : 0
//  num_inst_vop1                     : 24
//  num_inst_vop2                     : 88
//  num_inst_vop3                     : 21
//  num_inst_vopc                     : 0
//  num_inst_vintrp                   : 24
//  constant_literal_operands         : 0
//  num_tex                           : 2
//  num_vmem_group                    : 1
//  vmem_grouping_started             : 0
//
//Compilation Notes:
//
//  PS has no UAV writes, consider forcing REZ/LATEZ.
// Shader Statistics:
// m_uNumActiveWaveFront             : 32
// m_uVRegLimit                      : 256
// m_uSRegLimit                      : 512
// m_uNumVRegs                       : 29
// m_uNumSRegs                       : 44
// m_uSCCodeSize                     : 816
// m_uWorkgroupSize                  : 64
// m_uNumActiveWaveFrontByVReg       : 32
// m_uNumActiveWaveFrontBySReg       : 40
// m_uNumActiveWaveFrontByLDS        : 40
// m_uCycleSim1Wave                  : 192
// m_uCycleSimNWaves                 : 192

// Assembler Counts:
// num_32bit_ops                     : 163
// num_64bit_ops                     : 20
// num_alu                           : 154
// num_fc                            : 27
// num_inst_exp                      : 1
// num_inst_ldsgds                   : 0
// num_inst_mimg                     : 1
// num_inst_mtbuf                    : 0
// num_inst_mubuf                    : 0
// num_inst_sopp                     : 7
// num_inst_sopc                     : 0
// num_inst_sop1                     : 4
// num_inst_sop2                     : 0
// num_inst_smrd                     : 0
// num_inst_sopk                     : 0
// num_inst_vop1                     : 24
// num_inst_vop2                     : 88
// num_inst_vop3                     : 21
// num_inst_vopc                     : 0
// num_inst_vintrp                   : 24
// num_inst_smem                     : 16
// constant_literal_operands         : 0
// num_tex                           : 2
// num_vmem_group                    : 1
// vmem_grouping_started             : 0
// m_fFullPrecompilePromise          : 0
// m_fIntegerDivideExpansion         : 0
// m_fIntegerModExpansion            : 0
// m_fDoubleDivideExpansion          : 0
// m_fUsesScratch                    : 0
// m_fPerThreadIndirection           : 0
// m_fUsingTableLoads                : 0
// m_fUsingSHmemLoads                : 1
// fSemanticHashFlagOverrideApplied  : 0
// fPSHasNoUAVWrite                  : 1
// m_fRenderTargetsCanBeCompacted    : 0
// version                           : 3
// fCodePatched                      : 0

// Approximately 0 instruction slots used
#endif

const BYTE DGSLPhong_mainTx[] =
{
     68,  88,  66,  67,  51, 253, 
     38, 123, 173, 173, 120,  84, 
    102, 186,  40, 213,  58, 185, 
    247, 255,   1,   0,   0,   0, 
     61,  13,   0,   0,   5,   0, 
      0,   0,  52,   0,   0,   0, 
     32,   1,   0,   0,  84,   1, 
      0,   0, 216,  12,   0,   0, 
    232,  12,   0,   0,  73,  83, 
     71,  78, 228,   0,   0,   0, 
      8,   0,   0,   0,   8,   0, 
      0,   0, 200,   0,   0,   0, 
      0,   0,   0,   0,   1,   0, 
      0,   0,   3,   0,   0,   0, 
      0,   0,   0,   0,  15,   0, 
      0,   0, 212,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   0,   0,  15,  15, 
      0,   0, 218,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      2,   0,   0,   0,   3,   3, 
      0,   0, 218,   0,   0,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      3,   0,   0,   0,   7,   7, 
      0,   0, 218,   0,   0,   0, 
      2,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      4,   0,   0,   0,   7,   0, 
      0,   0, 218,   0,   0,   0, 
      3,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      5,   0,   0,   0,   7,   7, 
      0,   0, 218,   0,   0,   0, 
      4,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      6,   0,   0,   0,  15,   0, 
      0,   0, 218,   0,   0,   0, 
      5,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      7,   0,   0,   0,   7,   0, 
      0,   0,  83,  86,  95,  80, 
     79,  83,  73,  84,  73,  79, 
     78,   0,  67,  79,  76,  79, 
     82,   0,  84,  69,  88,  67, 
     79,  79,  82,  68,   0, 171, 
     79,  83,  71,  78,  44,   0, 
      0,   0,   1,   0,   0,   0, 
      8,   0,   0,   0,  32,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   3,   0, 
      0,   0,   0,   0,   0,   0, 
     15,   0,   0,   0,  83,  86, 
     95,  84,  97, 114, 103, 101, 
    116,   0, 171, 171,  83,  72, 
     69,  88, 124,  11,   0,   0, 
     80,   0,   0,   0, 223,   2, 
      0,   0,  53,  16,   0,   0, 
      5,   0,   0,   0, 170,   1, 
      0,   0,  80,   0,   0,   0, 
    165,   1,   0,   0, 106,   8, 
      0,   1,  89,   0,   0,   4, 
     70, 142,  32,   0,   0,   0, 
      0,   0,   5,   0,   0,   0, 
     89,   0,   0,   4,  70, 142, 
     32,   0,   1,   0,   0,   0, 
     21,   0,   0,   0,  90,   0, 
      0,   3,   0,  96,  16,   0, 
      0,   0,   0,   0,  88,  24, 
      0,   4,   0, 112,  16,   0, 
      0,   0,   0,   0,  85,  85, 
      0,   0,  98,  16,   0,   3, 
    242,  16,  16,   0,   1,   0, 
      0,   0,  98,  16,   0,   3, 
     50,  16,  16,   0,   2,   0, 
      0,   0,  98,  16,   0,   3, 
    114,  16,  16,   0,   3,   0, 
      0,   0,  98,  16,   0,   3, 
    114,  16,  16,   0,   5,   0, 
      0,   0, 101,   0,   0,   3, 
    242,  32,  16,   0,   0,   0, 
      0,   0, 104,   0,   0,   2, 
      5,   0,   0,   0,  56,   0, 
      0,   9, 114,   0,  16,   0, 
      0,   0,   0,   0,  70, 130, 
     32,   0,   0,   0,   0,   0, 
      2,   0,   0,   0,  70, 130, 
     32,   0,   1,   0,   0,   0, 
      1,   0,   0,   0,  56,   0, 
      0,   9, 114,   0,  16,   0, 
      1,   0,   0,   0,  70, 130, 
     32,   0,   0,   0,   0,   0, 
      2,   0,   0,   0,  70, 130, 
     32,   0,   1,   0,   0,   0, 
      2,   0,   0,   0,  16,   0, 
      0,   7, 130,   0,  16,   0, 
      0,   0,   0,   0,  70,  18, 
     16,   0,   5,   0,   0,   0, 
     70,  18,  16,   0,   5,   0, 
      0,   0,  68,   0,   0,   5, 
    130,   0,  16,   0,   0,   0, 
      0,   0,  58,   0,  16,   0, 
      0,   0,   0,   0,  50,   0, 
      0,  10, 114,   0,  16,   0, 
      2,   0,   0,   0,  70,  18, 
     16,   0,   5,   0,   0,   0, 
    246,  15,  16,   0,   0,   0, 
      0,   0,  70, 130,  32,   0, 
      1,   0,   0,   0,  10,   0, 
      0,   0,  16,   0,   0,   7, 
    130,   0,  16,   0,   1,   0, 
      0,   0,  70,   2,  16,   0, 
      2,   0,   0,   0,  70,   2, 
     16,   0,   2,   0,   0,   0, 
     68,   0,   0,   5, 130,   0, 
     16,   0,   1,   0,   0,   0, 
     58,   0,  16,   0,   1,   0, 
      0,   0,  56,   0,   0,   7, 
    114,   0,  16,   0,   2,   0, 
      0,   0, 246,  15,  16,   0, 
      1,   0,   0,   0,  70,   2, 
     16,   0,   2,   0,   0,   0, 
     16,   0,   0,   7, 130,   0, 
     16,   0,   1,   0,   0,   0, 
     70,  18,  16,   0,   3,   0, 
      0,   0,  70,  18,  16,   0, 
      3,   0,   0,   0,  68,   0, 
      0,   5, 130,   0,  16,   0, 
      1,   0,   0,   0,  58,   0, 
     16,   0,   1,   0,   0,   0, 
     56,   0,   0,   7, 114,   0, 
     16,   0,   3,   0,   0,   0, 
    246,  15,  16,   0,   1,   0, 
      0,   0,  70,  18,  16,   0, 
      3,   0,   0,   0,  16,  32, 
      0,   7, 130,   0,  16,   0, 
      1,   0,   0,   0,  70,   2, 
     16,   0,   3,   0,   0,   0, 
     70,   2,  16,   0,   2,   0, 
      0,   0,  47,   0,   0,   5, 
    130,   0,  16,   0,   1,   0, 
      0,   0,  58,   0,  16,   0, 
      1,   0,   0,   0,  52,   0, 
      0,   8,  18,   0,  16,   0, 
      2,   0,   0,   0,  10, 128, 
     32,   0,   0,   0,   0,   0, 
      4,   0,   0,   0,   1,  64, 
      0,   0,  23, 183, 209,  56, 
     56,   0,   0,   7, 130,   0, 
     16,   0,   1,   0,   0,   0, 
     58,   0,  16,   0,   1,   0, 
      0,   0,  10,   0,  16,   0, 
      2,   0,   0,   0,  25,   0, 
      0,   5, 130,   0,  16,   0, 
      1,   0,   0,   0,  58,   0, 
     16,   0,   1,   0,   0,   0, 
     56,   0,   0,   8, 130,   0, 
     16,   0,   1,   0,   0,   0, 
     58,   0,  16,   0,   1,   0, 
      0,   0,  10, 128,  32,   0, 
      1,   0,   0,   0,  14,   0, 
      0,   0,  56,   0,   0,   7, 
    114,   0,  16,   0,   1,   0, 
      0,   0, 246,  15,  16,   0, 
      1,   0,   0,   0,  70,   2, 
     16,   0,   1,   0,   0,   0, 
     50,   0,   0,  10, 226,   0, 
     16,   0,   2,   0,   0,   0, 
      6,  25,  16,   0,   5,   0, 
      0,   0, 246,  15,  16,   0, 
      0,   0,   0,   0,   6, 137, 
     32,   0,   1,   0,   0,   0, 
      9,   0,   0,   0,  50,   0, 
      0,  10, 114,   0,  16,   0, 
      4,   0,   0,   0,  70,  18, 
     16,   0,   5,   0,   0,   0, 
    246,  15,  16,   0,   0,   0, 
      0,   0,  70, 130,  32,   0, 
      1,   0,   0,   0,  11,   0, 
      0,   0,  16,   0,   0,   7, 
    130,   0,  16,   0,   0,   0, 
      0,   0, 150,   7,  16,   0, 
      2,   0,   0,   0, 150,   7, 
     16,   0,   2,   0,   0,   0, 
     68,   0,   0,   5, 130,   0, 
     16,   0,   0,   0,   0,   0, 
     58,   0,  16,   0,   0,   0, 
      0,   0,  56,   0,   0,   7, 
    226,   0,  16,   0,   2,   0, 
      0,   0, 246,  15,  16,   0, 
      0,   0,   0,   0,  86,  14, 
     16,   0,   2,   0,   0,   0, 
     16,  32,   0,   7, 130,   0, 
     16,   0,   0,   0,   0,   0, 
     70,   2,  16,   0,   3,   0, 
      0,   0, 150,   7,  16,   0, 
      2,   0,   0,   0,  47,   0, 
      0,   5, 130,   0,  16,   0, 
      0,   0,   0,   0,  58,   0, 
     16,   0,   0,   0,   0,   0, 
     56,   0,   0,   7, 130,   0, 
     16,   0,   0,   0,   0,   0, 
     58,   0,  16,   0,   0,   0, 
      0,   0,  10,   0,  16,   0, 
      2,   0,   0,   0,  25,   0, 
      0,   5, 130,   0,  16,   0, 
      0,   0,   0,   0,  58,   0, 
     16,   0,   0,   0,   0,   0, 
     56,   0,   0,   8, 130,   0, 
     16,   0,   0,   0,   0,   0, 
     58,   0,  16,   0,   0,   0, 
      0,   0,  10, 128,  32,   0, 
      1,   0,   0,   0,  13,   0, 
      0,   0,  50,   0,   0,   9, 
    114,   0,  16,   0,   0,   0, 
      0,   0,  70,   2,  16,   0, 
      0,   0,   0,   0, 246,  15, 
     16,   0,   0,   0,   0,   0, 
     70,   2,  16,   0,   1,   0, 
      0,   0,  56,   0,   0,   9, 
    114,   0,  16,   0,   1,   0, 
      0,   0,  70, 130,  32,   0, 
      0,   0,   0,   0,   2,   0, 
      0,   0,  70, 130,  32,   0, 
      1,   0,   0,   0,   3,   0, 
      0,   0,  16,   0,   0,   7, 
    130,   0,  16,   0,   0,   0, 
      0,   0,  70,   2,  16,   0, 
      4,   0,   0,   0,  70,   2, 
     16,   0,   4,   0,   0,   0, 
     68,   0,   0,   5, 130,   0, 
     16,   0,   0,   0,   0,   0, 
     58,   0,  16,   0,   0,   0, 
      0,   0,  56,   0,   0,   7, 
    226,   0,  16,   0,   2,   0, 
      0,   0, 246,  15,  16,   0, 
      0,   0,   0,   0,   6,   9, 
     16,   0,   4,   0,   0,   0, 
     16,  32,   0,   7, 130,   0, 
     16,   0,   0,   0,   0,   0, 
     70,   2,  16,   0,   3,   0, 
      0,   0, 150,   7,  16,   0, 
      2,   0,   0,   0,  47,   0, 
      0,   5, 130,   0,  16,   0, 
      0,   0,   0,   0,  58,   0, 
     16,   0,   0,   0,   0,   0, 
     56,   0,   0,   7, 130,   0, 
     16,   0,   0,   0,   0,   0, 
     58,   0,  16,   0,   0,   0, 
      0,   0,  10,   0,  16,   0, 
      2,   0,   0,   0,  25,   0, 
      0,   5, 130,   0,  16,   0, 
      0,   0,   0,   0,  58,   0, 
     16,   0,   0,   0,   0,   0, 
     56,   0,   0,   8, 130,   0, 
     16,   0,   0,   0,   0,   0, 
     58,   0,  16,   0,   0,   0, 
      0,   0,  10, 128,  32,   0, 
      1,   0,   0,   0,  15,   0, 
      0,   0,  50,   0,   0,   9, 
    114,   0,  16,   0,   0,   0, 
      0,   0,  70,   2,  16,   0, 
      1,   0,   0,   0, 246,  15, 
     16,   0,   0,   0,   0,   0, 
     70,   2,  16,   0,   0,   0, 
      0,   0,  16,  32,   0,   8, 
    130,   0,  16,   0,   0,   0, 
      0,   0,  70, 130,  32,   0, 
      1,   0,   0,   0,   9,   0, 
      0,   0,  70,   2,  16,   0, 
      3,   0,   0,   0,  56,   0, 
      0,   8, 114,   0,  16,   0, 
      1,   0,   0,   0, 246,  15, 
     16,   0,   0,   0,   0,   0, 
     70, 130,  32,   0,   1,   0, 
      0,   0,   1,   0,   0,   0, 
     56,   0,   0,   7, 114,   0, 
     16,   0,   1,   0,   0,   0, 
     70,   2,  16,   0,   1,   0, 
      0,   0,  70,  18,  16,   0, 
      1,   0,   0,   0,  50,   0, 
      0,  11, 114,   0,  16,   0, 
      1,   0,   0,   0,  70, 130, 
     32,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,  70, 130, 
     32,   0,   1,   0,   0,   0, 
      0,   0,   0,   0,  70,   2, 
     16,   0,   1,   0,   0,   0, 
     16,  32,   0,   8, 130,   0, 
     16,   0,   0,   0,   0,   0, 
     70, 130,  32,   0,   1,   0, 
      0,   0,  10,   0,   0,   0, 
     70,   2,  16,   0,   3,   0, 
      0,   0,  16,  32,   0,   8, 
    130,   0,  16,   0,   1,   0, 
      0,   0,  70, 130,  32,   0, 
      1,   0,   0,   0,  11,   0, 
      0,   0,  70,   2,  16,   0, 
      3,   0,   0,   0,  56,   0, 
      0,   8, 114,   0,  16,   0, 
      2,   0,   0,   0, 246,  15, 
     16,   0,   1,   0,   0,   0, 
     70, 130,  32,   0,   1,   0, 
      0,   0,   3,   0,   0,   0, 
     56,   0,   0,   8, 114,   0, 
     16,   0,   3,   0,   0,   0, 
    246,  15,  16,   0,   0,   0, 
      0,   0,  70, 130,  32,   0, 
      1,   0,   0,   0,   2,   0, 
      0,   0,  50,   0,   0,   9, 
    114,   0,  16,   0,   1,   0, 
      0,   0,  70,   2,  16,   0, 
      3,   0,   0,   0,  70,  18, 
     16,   0,   1,   0,   0,   0, 
     70,   2,  16,   0,   1,   0, 
      0,   0,  50,  32,   0,   9, 
    114,   0,  16,   0,   1,   0, 
      0,   0,  70,   2,  16,   0, 
      2,   0,   0,   0,  70,  18, 
     16,   0,   1,   0,   0,   0, 
     70,   2,  16,   0,   1,   0, 
      0,   0,  69,   0,   0, 139, 
    194,   0,   0, 128,  67,  85, 
     21,   0, 242,   0,  16,   0, 
      2,   0,   0,   0,  70,  16, 
     16,   0,   2,   0,   0,   0, 
     70, 126,  16,   0,   0,   0, 
      0,   0,   0,  96,  16,   0, 
      0,   0,   0,   0,  50,   0, 
      0,   9, 114,  32,  16,   0, 
      0,   0,   0,   0,  70,   2, 
     16,   0,   1,   0,   0,   0, 
     70,   2,  16,   0,   2,   0, 
      0,   0,  70,   2,  16,   0, 
      0,   0,   0,   0,  56,   0, 
      0,   7, 130,  32,  16,   0, 
      0,   0,   0,   0,  58,   0, 
     16,   0,   2,   0,   0,   0, 
     58,  16,  16,   0,   1,   0, 
      0,   0,  62,   0,   0,   1, 
     53,  16,   0,   0,  53,   1, 
      0,   0,  23,   0,   1,   0, 
     41, 130,  18,   0, 120,   1, 
    237,  88, 207, 111, 219, 100, 
     24, 126, 237, 216, 137, 157, 
    218, 175,  99,  59, 105,  82, 
    207,   9,  73, 150, 101, 110, 
     23,  74, 168, 166,  82,  85, 
    227, 211, 126,  84, 155,  68, 
     17,  67, 218, 132, 166,  41, 
    221, 143, 174,  21, 171, 196, 
    126, 104, 173, 208, 184, 152, 
    110, 218,  38,  64,  21, 154, 
     16,   7, 180,   3,  23,  56, 
    112,  64, 187, 161, 221, 218, 
    202,  66, 194,  87,  38, 142, 
    252,   9,  28,  56,  32, 177, 
      3, 218, 120, 223, 196,  25, 
    217,  96, 183,  74,  32, 148, 
     71, 122, 190, 215, 207, 231, 
    215,  95,  30, 191, 159, 115, 
    120, 191, 155,  14, 116, 113, 
    223, 222,  88, 227, 184, 242, 
    229, 220, 173, 207, 211,   0, 
     42,  93,  75,  68, 142, 140, 
     47,  76,  30,   1,  90,  54, 
    143,   0,  85,  30,  56,  65, 
      6,  40,  83, 104,  17, 219, 
     41, 128, 131,  20, 249,  94, 
    144,  16, 206, 205,  30, 185, 
    247, 193, 129,  35, 124, 249, 
     10, 145, 115, 183,  19, 126, 
     69, 204,  19, 239,  17, 119, 
     17, 121,  57,  70,  63,  50, 
     50,  60,  16,  20,  30,   6, 
     80,  34, 158,  34,  22, 136, 
     12, 214,  57,  34, 131,  44, 
     61, 179,   6,  44, 243, 240, 
    207, 120,  64, 100,  79,  47, 
      2, 123, 235, 175, 197, 145, 
    125,  50, 248, 125, 255, 109, 
    244, 124, 253,  53,  82, 249, 
    159, 238,  19, 131, 247,  99, 
     16,  72, 236, 101,   3, 196, 
     73, 177, 250, 117, 253,  57, 
    209,  92,  11, 126,  55, 222, 
    159,  23, 225,   9, 129, 247, 
    109,  16, 125, 205, 235, 165, 
     37,  11,  64, 163,  40, 187, 
    221,  77,  73, 167, 246, 118, 
     55,  40, 173, 190, 150, 124, 
     20, 255, 111, 244, 107, 202, 
    145, 191,  69,  46,  45,  85, 
    228,  41, 250, 247, 127, 224, 
      1, 214, 183, 152, 119,  75, 
    240, 136,  85,  95,  75, 164, 
    123, 127, 205, 158,  78, 177, 
    166, 114,  62, 163,  73,  57, 
    123, 229,  51,  25,   9, 206, 
     88,  62,  60, 226, 189,  37, 
    221,  33, 221,  25, 208, 167, 
     73, 159,  30, 208, 231,  72, 
    159,  27, 208, 139, 164,  23, 
    251, 186, 191, 190, 213, 253, 
    189,  76, 119, 175, 105,  50, 
    252,  47, 115, 232, 113, 103, 
     56, 244, 184,  51,  28, 122, 
    220,  25,  14,  61, 238,  12, 
    135,  30, 119, 134,  67, 143, 
     59, 195, 161, 199,  29,  35, 
    132, 202,  55, 155,  97, 246, 
    241,  38,  72, 209, 182,  38, 
    221, 217, 150,  83, 127, 108, 
    130, 162, 197, 160,  26, 177, 
    164, 232, 177, 164, 154, 241, 
    135, 176, 177,   5, 214, 250, 
    175, 178, 124,  30,  12, 105, 
    123,  27, 176, 212, 157,  11, 
    212,  91,  17, 152, 126,  44, 
    225,  88, 220,  80, 239,  68, 
     96,  84,  99, 201,  44, 199, 
    105, 211, 193, 150, 250,  81, 
     36,  25, 181,  56,  99,  57, 
     66, 179,  29, 161,  47,  56, 
     33, 100, 131, 238, 115,  35, 
    112, 243,  97, 218, 157,   0, 
    208, 219, 177, 148,  29, 143, 
     77, 210,  25, 183,   9,  35, 
     69,  31,  65,  59,  16,  75, 
    250, 171, 113, 182,  80,  69, 
    187, 155,  55,  11,  14,  69, 
    205, 173, 131, 185, 203,  23, 
    146, 246, 122, 108, 140,  85, 
    133,  75, 115,  25, 119,  26, 
    210,  20, 211, 238,  27,  96, 
    239,  14, 208, 217, 227,  11, 
    235, 165, 170,  40, 208, 156, 
    230,  78,  81, 239, 199,  57, 
     71, 193, 221,  27, 136, 180, 
    217, 194, 220,  13,  53, 194, 
      5,  63, 204,  45,  84,  67, 
    173, 155, 115,  24,  10, 251, 
      2, 145, 177,  90,  98, 164, 
    236,  96, 182, 150, 199, 252, 
    194, 104, 168, 217,  45, 161, 
    168, 159,  68, 154, 186,  17, 
    153, 101,  15, 141,  90,   9, 
    245, 130, 131, 118, 177, 142, 
    163,  11,  65, 168,  73, 159, 
     70, 160, 222, 141, 102, 110, 
    103,  34, 167, 236, 163,  85, 
    171, 160, 177, 203,  17, 110, 
    209, 195, 236, 238,  42, 166, 
    199,  13,  52, 212, 207, 162, 
    253, 183, 245,   8, 164, 245, 
     72, 215, 214,  31,  90, 229, 
    166, 242,  68, 246, 195, 226, 
    131,  31, 103,  10, 197,  81, 
    202, 175, 138, 204,  56,  98, 
    214,  52,  16, 243,  30, 114, 
     93,  14, 220, 150,  34, 253, 
    184,  19, 142, 248, 190, 159, 
    227, 103, 138, 135,  21, 109, 
     60, 135, 134, 101,   8, 179, 
    228,   9, 189, 140, 152, 163, 
    251, 105, 190, 103, 123, 138, 
     73, 209, 168,  76,  83,  59, 
     80, 141,  65, 106, 197,  32, 
     31, 140, 179, 249,  58, 150, 
    228,  70,  56,  38,  55,  67, 
     79,  14, 194, 204,  60, 134, 
    232,  58, 152,  62, 110, 132, 
    121, 111,   2,  11,  94,  11, 
     71,  61,  15,  37, 168, 197, 
    146, 244, 114,  44, 201, 135, 
     98, 189,  84,  23,  78, 158, 
    222,  93, 158,  12,  11, 114, 
     59,  28, 149, 167,  66, 191, 
    209, 192, 114, 179, 137, 149, 
     32,  64,  11,  17, 245, 121, 
     39,  68, 242,  90, 176, 125, 
     28,  45,  78, 160,  89, 243, 
    176,  42, 183, 194, 154, 188, 
     63, 172, 203, 211, 161,  77, 
     94, 180, 202,  81, 197,  46, 
    229, 133,  63,  89, 194, 114, 
    123,  18,  43,  83, 109, 116, 
    172,   6, 186,  86,  19, 243, 
    180, 136, 235,  56, 216,  32, 
     79, 123, 104, 253, 166,  60, 
     19, 166, 231, 141,  16,  90, 
    180, 167, 251,  39, 132,  60, 
    237, 137,  44, 173, 145, 171, 
     76,  40, 165, 122,   5, 199, 
    234,  45, 244, 234, 117,  52, 
    220, 134,  40, 186,  77,  81, 
    114,  81, 248, 129, 131, 229, 
    169,  18,  86, 102, 130, 110, 
    189,  82, 134, 129, 141, 252, 
     36, 238, 201, 183, 177,  73, 
    254,  45, 219,  23, 228,  77, 
    216,  53,  79,  80,  51,  27, 
    235, 102,  67,  24, 102,  83, 
    228,  77,  20,  72, 107,  23, 
    237,  89, 165,  64, 177,  84, 
    124, 167,  91, 187, 108, 109, 
     90, 145,  82,  82, 124, 213, 
    218, 216,  66, 181,  33,  10, 
    153, 166,  48, 117,  20, 170, 
      4,  24,  40, 143,  55, 169, 
    183, 121, 166,  55,   2, 184, 
    177,  53, 198,  23, 220, 148, 
     61,  15, 173, 151, 209,  71, 
     87,  41,  18, 183, 177,  79, 
    209, 125, 140, 230,  12, 142, 
      9, 100,  78, 164,  57, 238, 
    241, 250,  88,  75, 206,  72, 
    230, 146, 216,  38, 234,  68, 
    169, 219, 161, 247, 207,  86, 
     82, 196, 222, 249, 133,  66, 
    255,   2, 198, 239,  23, 220, 
    224, 254, 199, 251, 190, 227, 
    107, 198, 183, 201, 243,  27, 
     73, 228, 115, 149, 193, 223, 
      6, 248, 154, 135, 191, 225, 
    167,  36, 255, 251,  36, 178, 
     55, 238,  57, 177, 127, 154, 
    195,   7,   1, 132, 223, 146, 
    251, 191,  36, 145, 223, 117, 
    132, 248, 188,  15, 163, 215, 
    136, 194,  91,  68, 118,  58, 
     55, 219,  57, 116, 242,  88, 
    103, 117, 237, 236, 210, 242, 
    251, 157, 249, 149, 181, 213, 
    206, 220, 202, 181, 229,  11, 
    107, 167,  78, 206, 119,  86, 
    175,  93, 232, 156, 184, 120, 
    126, 105, 249, 218, 106, 231, 
    200, 149,  75,  87,  87, 222, 
     91,  94, 234, 156,  90, 188, 
    114, 253, 248, 229, 229, 185, 
     99,  39, 222, 124, 251, 226, 
    149, 203, 239, 158, 189, 116, 
    126, 229, 242, 201, 235, 147, 
     87, 151,  22, 225,  79,  51, 
    231, 100, 238,   0,   0,   0, 
     88,  72,  83,  72,   8,   0, 
      0,   0, 247,  99,  19,  40, 
    174, 137,  43, 181,  88,  80, 
     68,  80,  77,   0,   0,   0, 
     68,  58,  92,  65,  84,  71, 
     92, 115, 116,  95, 100, 101, 
    118,  92,  75, 105, 116, 115, 
     92,  68, 105, 114, 101,  99, 
    116,  88,  84,  75,  92, 115, 
    114,  99,  92,  83, 104,  97, 
    100, 101, 114, 115,  92,  67, 
    111, 109, 112, 105, 108, 101, 
    100,  92,  88,  98, 111, 120, 
     79, 110, 101,  68,  71,  83, 
     76,  80, 104, 111, 110, 103, 
     95, 109,  97, 105, 110,  84, 
    120,  46, 112, 100,  98
};
