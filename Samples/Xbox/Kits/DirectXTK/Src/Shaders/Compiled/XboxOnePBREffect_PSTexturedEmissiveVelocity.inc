#if 0
//
// Generated by Microsoft (R) D3D Shader Disassembler for Durango
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xy          0     NONE   float   xy  
// TEXCOORD                 1   xyzw        1     NONE   float   xyz 
// TEXCOORD                 2   xyz         2     NONE   float   xyz 
// COLOR                    0   xyzw        3     NONE   float       
// SV_Position              0   xyzw        4      POS   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   x           1   TARGET    uint   x   
//
ps_5_0
// Opaque Custom Data - XBOX Precompiled Shader Header
// First Precompiled Shader at offset:[1057]
// Embedded Data:
//  0x00000421 - Offset To First Precompiled Shader
//  0x00000050 - Original Shader Descriptor
//  0x0000041c - Original Shader Size
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[25], dynamicIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texturecube (float,float,float,float) t4
dcl_resource_texturecube (float,float,float,float) t5
dcl_input_ps linear v0.xy
dcl_input_ps linear v1.xyz
dcl_input_ps linear v2.xyz
dcl_input_ps_siv linear noperspective v4.xyz, position
dcl_input_ps linear v5.xyzw
dcl_output o0.xyzw
dcl_output o1.x
dcl_temps 9
add r0.xyz, -v1.xyzx, cb0[0].xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
sample_indexable(texture2d)(float,float,float,float) r1.xy, v0.xyxx, t1.xyzw, s0
mad r1.xy, r1.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r0.w, r1.xyxx, r1.xyxx
add r0.w, -r0.w, l(1.000000)
sqrt r0.w, r0.w
deriv_rtx_coarse r2.xyz, v1.yzxy
deriv_rty_coarse r3.xyz, v1.zxyz
deriv_rtx_coarse r1.zw, v0.xxxy
deriv_rty_coarse r4.xy, v0.xyxx
mul r5.xyz, r2.xyzx, r3.yzxy
mad r5.xyz, r2.zxyz, r3.zxyz, -r5.xyzx
mul r6.xyz, r3.xyzx, r5.zxyz
mad r3.xyz, r3.zxyz, r5.xyzx, -r6.xyzx
mul r6.xyz, r2.xyzx, r5.xyzx
mad r2.xyz, r5.zxyz, r2.yzxy, -r6.xyzx
mul r4.xzw, r2.xxyz, r4.xxxx
mad r4.xzw, r1.zzzz, r3.xxyz, r4.xxzw
dp3 r1.z, r4.xzwx, r4.xzwx
rsq r1.z, r1.z
mul r4.xzw, r1.zzzz, r4.xxzw
mul r2.xyz, r2.xyzx, r4.yyyy
mad r2.xyz, r1.wwww, r3.xyzx, r2.xyzx
dp3 r1.z, r2.xyzx, r2.xyzx
rsq r1.z, r1.z
mul r2.xyz, r1.zzzz, r2.xyzx
mul r1.yzw, r1.yyyy, r2.xxyz
mad r1.xyz, r1.xxxx, r4.xzwx, r1.yzwy
mad r1.xyz, r0.wwww, v2.xyzx, r1.xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r1.xyzx
sample_indexable(texture2d)(float,float,float,float) r2.xyzw, v0.xyxx, t0.xyzw, s0
sample_indexable(texture2d)(float,float,float,float) r3.xyz, v0.xyxx, t2.xyzw, s0
dp3_sat r0.w, r1.xyzx, r0.xyzx
mul r1.w, r3.y, r3.y
mad r4.xyz, r3.zzzz, -r2.xyzx, r2.xyzx
mul r4.xyz, r3.xxxx, r4.xyzx
add r2.xyz, r2.xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
mad r2.xyz, r3.zzzz, r2.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
mul r5.xyz, r3.xxxx, r2.xyzx
add r3.z, r3.y, r3.y
add r0.w, -r0.w, l(1.000000)
mul r3.w, r0.w, r0.w
mul r3.w, r3.w, r3.w
mul r0.w, r0.w, r3.w
mul r3.w, r1.w, r1.w
mad r1.w, r1.w, r1.w, l(-1.000000)
mad r2.xyz, -r2.xyzx, r3.xxxx, l(1.000000, 1.000000, 1.000000, 0.000000)
mul r3.x, r3.w, l(0.250000)
mov r6.xyz, l(0,0,0,0)
mov r4.w, l(0)
loop 
  ige r5.w, r4.w, l(3)
  breakc_nz r5.w
  dp3 r5.w, -cb0[r4.w + 16].xyzx, -cb0[r4.w + 16].xyzx
  rsq r5.w, r5.w
  mul r7.xyz, r5.wwww, -cb0[r4.w + 16].xyzx
  mad r8.xyz, -cb0[r4.w + 16].xyzx, r5.wwww, r0.xyzx
  dp3 r5.w, r8.xyzx, r8.xyzx
  rsq r5.w, r5.w
  mul r8.xyz, r5.wwww, r8.xyzx
  dp3_sat r5.w, r1.xyzx, r7.xyzx
  dp3_sat r6.w, r7.xyzx, r8.xyzx
  dp3_sat r7.x, r1.xyzx, r8.xyzx
  mul r7.y, r6.w, r6.w
  mad r7.z, r7.y, r3.z, l(-0.500000)
  add r7.w, -r5.w, l(1.000000)
  mul r8.x, r7.w, r7.w
  mul r8.x, r8.x, r8.x
  mul r7.w, r7.w, r8.x
  mad r7.w, r7.z, r7.w, l(1.000000)
  mad r7.z, r7.z, r0.w, l(1.000000)
  mul r7.x, r7.x, r7.x
  mad r7.x, r7.x, r1.w, l(1.000000)
  mul r7.xz, r7.xxzx, r7.xxwx
  mul r7.x, r7.x, l(3.141593)
  max r7.x, r7.x, l(0.000001)
  div r7.x, r3.w, r7.x
  add r7.w, -r6.w, l(1.000000)
  mul r8.x, r7.w, r7.w
  mul r8.x, r8.x, r8.x
  mul r7.w, r7.w, r8.x
  mad r8.xyz, r2.xyzx, r7.wwww, r5.xyzx
  mad r6.w, -r6.w, r6.w, l(1.000000)
  mad r6.w, r3.x, r6.w, r7.y
  rcp r6.w, r6.w
  mul r7.xyw, r7.xxxx, r8.xyxz
  mul r7.xyw, r6.wwww, r7.xyxw
  mul r8.xyz, r5.wwww, cb0[r4.w + 19].xyzx
  mad r7.xyz, r4.xyzx, r7.zzzz, r7.xywx
  mad r6.xyz, r8.xyzx, r7.xyzx, r6.xyzx
  iadd r4.w, r4.w, l(1)
endloop 
sample_indexable(texturecube)(float,float,float,float) r2.xyz, r1.xyzx, t5.xyzw, s1
mad r2.xyz, r4.xyzx, r2.xyzx, r6.xyzx
itof r0.w, cb0[23].z
mul r0.w, r0.w, r3.y
dp3 r1.w, -r0.xyzx, r1.xyzx
add r1.w, r1.w, r1.w
mad r0.xyz, r1.xyzx, -r1.wwww, -r0.xyzx
sample_l_indexable(texturecube)(float,float,float,float) r0.xyz, r0.xyzx, t4.xyzw, s1, r0.w
mad r0.xyz, r5.xyzx, r0.xyzx, r2.xyzx
sample_indexable(texture2d)(float,float,float,float) r1.xyz, v0.xyxx, t3.xyzw, s0
add o0.xyz, r0.xyzx, r1.xyzx
mul o0.w, r2.w, cb0[22].w
div r0.xyz, v5.xyzx, v5.wwww
mad r1.xy, r0.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
mul r0.x, r1.x, cb0[23].w
mul r0.y, r1.y, cb0[24].x
add r0.xyz, r0.xyzx, -v4.xyzx
ushr r1.xyz, r0.xyzx, l(31, 31, 31, 0)
mul r0.xyz, r0.xyzx, l(0.000031, 0.000031, 0.007813, 0.000000)
min r0.xyz, |r0.xyzx|, l(0.007809, 0.007809, 0.007809, 0.000000)
f32tof16 r0.xyz, r0.xyzx
iadd r0.xyz, r0.xyzx, l(8, 8, 2, 0)
ushr r0.xyz, r0.xyzx, l(4, 4, 2, 0)
ishl r1.xyz, r1.xyzx, l(9, 9, 11, 0)
or r0.xyz, r0.xyzx, r1.xyzx
ishl r0.yz, r0.yyzy, l(0, 10, 20, 0)
or r0.x, r0.y, r0.x
or o1.x, r0.z, r0.x
ret 
// Opaque Custom Data - XBOX Precompiled Shader Object
// Offset:[1057], bundle is:[623] DWORDS.
// Disassembled Precompiled Shader Object:
// Shader Type               : (PS)
// Shader Hw Stage           : (PS)
// PDB Filename              : D:\ATG\st_dev\Kits\DirectXTK\src\Shaders\Compiled\XboxOnePBREffect_PSTexturedEmissiveVelocity.pdb
// Shader Semantic Hash      : 0x7919a498d5691c1d
//
// Shader Data:
; ----------------- PS Data ------------------------
; Input Semantic Mappings
;   [0] generic,  usageIdx 0, channelMask  3, param0, paramSlot0, DefaultVal={0,0,0,0}
;   [1] generic,  usageIdx 1, channelMask  7, param1, paramSlot1, DefaultVal={0,0,0,0}
;   [2] generic,  usageIdx 2, channelMask  7, param2, paramSlot2, DefaultVal={0,0,0,0}
;   [3] generic,  usageIdx 5, channelMask 15, param3, paramSlot5, DefaultVal={0,0,0,0}

codeLenInByte        = 2572 bytes;

; launchModeFlags    = 0x0000000E
srdTableSupport      = TRUE
immediateSupportExt  = TRUE
srdTableSupportExt   = TRUE

userElementCount     = 1;
;  userElements[0]      = PTR_EXTENDED_USER_DATA, ReferencedExtUserElements=1, s[0x0:1]
extUserElementCount  = 9;
;  extUserElements 1[0] = IMM_RESOURCE 0, offset 0x0:7 dwords
;  extUserElements 1[1] = IMM_RESOURCE 1, offset 0x8:15 dwords
;  extUserElements 1[2] = IMM_RESOURCE 2, offset 0x10:23 dwords
;  extUserElements 1[3] = IMM_RESOURCE 3, offset 0x18:31 dwords
;  extUserElements 1[4] = IMM_RESOURCE 4, offset 0x20:39 dwords
;  extUserElements 1[5] = IMM_RESOURCE 5, offset 0x28:47 dwords
;  extUserElements 1[6] = IMM_SAMPLER 0, offset 0x30:51 dwords
;  extUserElements 1[7] = IMM_SAMPLER 1, offset 0x34:55 dwords
;  extUserElements 1[8] = IMM_CONST_BUFFER 0, offset 0x38:59 dwords
NumVgprs             = 40;
NumSgprs             = 72;
FloatMode            = 192;
IeeeMode             = 0;
FlatPtr32            = 0;
ScratchSize          = 0 dwords/thread;
LDSByteSize          = 0 bytes/workgroup (compile time only);
ScratchWaveOffsetReg = s65535;
; texSamplerUsage         = 0x00000003
; constBufUsage           = 0x00000001

; SPI_SHADER_PGM_RSRC2_PS = 0x00000004
SSPRP:SCRATCH_EN            = 0
SSPRP:USER_SGPR             = 2
SSPRP:TRAP_PRESENT          = 0
SSPRP:WAVE_CNT_EN           = 0
SSPRP:EXTRA_LDS_SIZE        = 0
SSPRP:EXCP_EN               = 0
; SPI_SHADER_Z_FORMAT     = 0x00000000
SPZF:Z_EXPORT_FORMAT        = 0; SPI_SHADER_ZERO
; SPI_PS_IN_CONTROL       = 0x00000004
SPIC:NUM_INTERP             = 4
SPIC:PARAM_GEN              = 0
SPIC:FOG_ADDR               = 0
SPIC:BC_OPTIMIZE_DISABLE    = 0
SPIC:PASS_FOG_THROUGH_PS    = 0
; SPI_PS_INPUT_ADDR       = 0x00000702
SPIA:PERSP_CENTER_ENA       = 1
SPIA:POS_X_FLOAT_ENA        = 1
SPIA:POS_Y_FLOAT_ENA        = 1
SPIA:POS_Z_FLOAT_ENA        = 1
; DB_SHADER_CONTROL       = 0x00000010
DB:Z_ORDER                  = 1
DB:CONSERVATIVE_Z_EXPORT    = 0; EXPORT_ANY_Z
; CB_SHADER_MASK          = 0x000000FF
CB:OUTPUT0_ENABLE           = 15
CB:OUTPUT1_ENABLE           = 15

dx9TexCubeMask           = 0x00000030

; export table for mrt0 [patch@(bytes=0x9F8, dwords=0x27E)]
// Export Patch Code (FMT_ZERO):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_nop         0x0000                                  // 000000000000: BF800000
  s_nop         0x0000                                  // 000000000004: BF800000
  exp           null, off, off, off, off done vm        // 000000000008: F8001890 00000000
end
// Export Patch Code (FMT_32_R):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_nop         0x0000                                  // 000000000000: BF800000
  s_nop         0x0000                                  // 000000000004: BF800000
  exp           mrt0, v1, off, off, off done vm         // 000000000008: F8001801 00000001
end
// Export Patch Code (FMT_32_GR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_nop         0x0000                                  // 000000000000: BF800000
  s_nop         0x0000                                  // 000000000004: BF800000
  exp           mrt0, v1, v2, off, off done vm          // 000000000008: F8001803 00000201
end
// Export Patch Code (FMT_32_AR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_nop         0x0000                                  // 000000000000: BF800000
  s_nop         0x0000                                  // 000000000004: BF800000
  exp           mrt0, v1, v8, off, off done vm          // 000000000008: F8001803 00000801
end
// Export Patch Code (FMT_FP16_ABGR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  v_cvt_pkrtz_f16_f32  v1, v1, v2                       // 000000000000: 5E020501
  v_cvt_pkrtz_f16_f32  v2, v3, v8                       // 000000000004: 5E041103
  exp           mrt0, v1, v1, v2, v2 done compr vm      // 000000000008: F8001C0F 00000201
end
// Export Patch Code (FMT_UNORM16_ABGR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  v_cvt_pknorm_u16_f32  v1, v1, v2                      // 000000000000: 5C020501
  v_cvt_pknorm_u16_f32  v2, v3, v8                      // 000000000004: 5C041103
  exp           mrt0, v1, v1, v2, v2 done compr vm      // 000000000008: F8001C0F 00000201
end
// Export Patch Code (FMT_SNORM16_ABGR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  v_cvt_pknorm_i16_f32  v1, v1, v2                      // 000000000000: 5A020501
  v_cvt_pknorm_i16_f32  v2, v3, v8                      // 000000000004: 5A041103
  exp           mrt0, v1, v1, v2, v2 done compr vm      // 000000000008: F8001C0F 00000201
end
// Export Patch Code (FMT_UINT16_ABGR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  v_cvt_pk_u16_u32  v1, v1, v2                          // 000000000000: 60020501
  v_cvt_pk_u16_u32  v2, v3, v8                          // 000000000004: 60041103
  exp           mrt0, v1, v1, v2, v2 done compr vm      // 000000000008: F8001C0F 00000201
end
// Export Patch Code (FMT_SINT16_ABGR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  v_cvt_pk_i16_i32  v1, v1, v2                          // 000000000000: 62020501
  v_cvt_pk_i16_i32  v2, v3, v8                          // 000000000004: 62041103
  exp           mrt0, v1, v1, v2, v2 done compr vm      // 000000000008: F8001C0F 00000201
end
// Export Patch Code (FMT_32_ABGR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_nop         0x0000                                  // 000000000000: BF800000
  s_nop         0x0000                                  // 000000000004: BF800000
  exp           mrt0, v1, v2, v3, v8 done vm            // 000000000008: F800180F 08030201
end

; export table for mrt1 [patch@(bytes=0x9E8, dwords=0x27A)]
// Export Patch Code (FMT_ZERO):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_nop         0x0000                                  // 000000000000: BF800000
  s_nop         0x0000                                  // 000000000004: BF800000
  s_nop         0x0000                                  // 000000000008: BF800000
  s_nop         0x0000                                  // 00000000000C: BF800000
end
// Export Patch Code (FMT_32_R):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_nop         0x0000                                  // 000000000000: BF800000
  s_nop         0x0000                                  // 000000000004: BF800000
  exp           mrt1, v0, off, off, off vm              // 000000000008: F8001011 00000000
end
// Export Patch Code (FMT_32_GR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_nop         0x0000                                  // 000000000000: BF800000
  s_nop         0x0000                                  // 000000000004: BF800000
  exp           mrt1, v0, off, off, off vm              // 000000000008: F8001011 00000000
end
// Export Patch Code (FMT_32_AR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_nop         0x0000                                  // 000000000000: BF800000
  s_nop         0x0000                                  // 000000000004: BF800000
  exp           mrt1, v0, off, off, off vm              // 000000000008: F8001011 00000000
end
// Export Patch Code (FMT_FP16_ABGR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  v_cvt_pkrtz_f16_f32  v0, v0, v0                       // 000000000000: 5E000100
  s_nop         0x0000                                  // 000000000004: BF800000
  exp           mrt1, v0, v0, off, off compr vm         // 000000000008: F8001413 00000000
end
// Export Patch Code (FMT_UNORM16_ABGR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  v_cvt_pknorm_u16_f32  v0, v0, v0                      // 000000000000: 5C000100
  s_nop         0x0000                                  // 000000000004: BF800000
  exp           mrt1, v0, v0, off, off compr vm         // 000000000008: F8001413 00000000
end
// Export Patch Code (FMT_SNORM16_ABGR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  v_cvt_pknorm_i16_f32  v0, v0, v0                      // 000000000000: 5A000100
  s_nop         0x0000                                  // 000000000004: BF800000
  exp           mrt1, v0, v0, off, off compr vm         // 000000000008: F8001413 00000000
end
// Export Patch Code (FMT_UINT16_ABGR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  v_cvt_pk_u16_u32  v0, v0, v0                          // 000000000000: 60000100
  s_nop         0x0000                                  // 000000000004: BF800000
  exp           mrt1, v0, v0, off, off compr vm         // 000000000008: F8001413 00000000
end
// Export Patch Code (FMT_SINT16_ABGR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  v_cvt_pk_i16_i32  v0, v0, v0                          // 000000000000: 62000100
  s_nop         0x0000                                  // 000000000004: BF800000
  exp           mrt1, v0, v0, off, off compr vm         // 000000000008: F8001413 00000000
end
// Export Patch Code (FMT_32_ABGR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_nop         0x0000                                  // 000000000000: BF800000
  s_nop         0x0000                                  // 000000000004: BF800000
  exp           mrt1, v0, off, off, off vm              // 000000000008: F8001011 00000000
end

// Shader Instructions:
shader main
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_mov_b64     s[68:69], exec                          // 000000000000: BEC4047E
  s_wqm_b64     exec, exec // wrscc                     // 000000000004: BEFE0A7E
  s_load_dwordx4  s[4:7], s[0:1], 0x38                  // 000000000008: C0820138
  s_waitcnt     lgkmcnt(0)                              // 00000000000C: BF8C007F
  s_buffer_load_dwordx4  s[8:11], s[4:7], 0x00          // 000000000010: C2840500
  s_load_dwordx8  s[12:19], s[0:1], 0x08                // 000000000014: C0C60108
  s_load_dwordx4  s[20:23], s[0:1], 0x30                // 000000000018: C08A0130
  s_load_dwordx8  s[24:31], s[0:1], 0x00                // 00000000001C: C0CC0100
  s_load_dwordx8  s[32:39], s[0:1], 0x10                // 000000000020: C0D00110
  s_buffer_load_dwordx4  s[40:43], s[4:7], 0x40         // 000000000024: C2940540
  s_buffer_load_dwordx4  s[44:47], s[4:7], 0x4c         // 000000000028: C296054C
  s_buffer_load_dwordx4  s[48:51], s[4:7], 0x44         // 00000000002C: C2980544
  s_mov_b32     m0, s2                                  // 000000000030: BEFC0302
  v_interp_p1_f32  v5, v0, attr1.x                      // 000000000034: C8140400
  v_interp_p2_f32  v5, v1, attr1.x                      // 000000000038: C8150401
  ds_swizzle_b32  v6, v5 offset:32853                   // 00000000003C: D8D48055 06000005
  ds_swizzle_b32  v7, v5 offset:32768                   // 000000000044: D8D48000 07000005
  ds_swizzle_b32  v8, v5 offset:32938                   // 00000000004C: D8D480AA 08000005
  ds_swizzle_b32  v9, v5 offset:32768                   // 000000000054: D8D48000 09000005
  v_interp_p1_f32  v10, v0, attr1.y                     // 00000000005C: C8280500
  v_interp_p2_f32  v10, v1, attr1.y                     // 000000000060: C8290501
  ds_swizzle_b32  v11, v10 offset:32853                 // 000000000064: D8D48055 0B00000A
  ds_swizzle_b32  v12, v10 offset:32768                 // 00000000006C: D8D48000 0C00000A
  ds_swizzle_b32  v13, v10 offset:32938                 // 000000000074: D8D480AA 0D00000A
  ds_swizzle_b32  v14, v10 offset:32768                 // 00000000007C: D8D48000 0E00000A
  v_interp_p1_f32  v15, v0, attr1.z                     // 000000000084: C83C0600
  v_interp_p2_f32  v15, v1, attr1.z                     // 000000000088: C83D0601
  ds_swizzle_b32  v16, v15 offset:32853                 // 00000000008C: D8D48055 1000000F
  ds_swizzle_b32  v17, v15 offset:32768                 // 000000000094: D8D48000 1100000F
  ds_swizzle_b32  v18, v15 offset:32938                 // 00000000009C: D8D480AA 1200000F
  ds_swizzle_b32  v19, v15 offset:32768                 // 0000000000A4: D8D48000 1300000F
  s_waitcnt     lgkmcnt(0)                              // 0000000000AC: BF8C007F
  v_sub_f32     v5, s8, v5                              // 0000000000B0: 080A0A08
  v_sub_f32     v10, s9, v10                            // 0000000000B4: 08141409
  v_sub_f32     v15, s10, v15                           // 0000000000B8: 081E1E0A
  s_buffer_load_dwordx4  s[8:11], s[4:7], 0x50          // 0000000000BC: C2840550
  v_mul_legacy_f32  v20, v15, v15                       // 0000000000C0: 0E281F0F
  v_mac_f32     v20, v10, v10                           // 0000000000C4: 3E28150A
  v_mac_f32     v20, v5, v5                             // 0000000000C8: 3E280B05
  v_rsq_f32     v20, v20                                // 0000000000CC: 7E285D14
  v_mul_legacy_f32  v5, v5, v20                         // 0000000000D0: 0E0A2905
  v_mul_legacy_f32  v10, v10, v20                       // 0000000000D4: 0E14290A
  v_mul_legacy_f32  v15, v15, v20                       // 0000000000D8: 0E1E290F
  v_interp_p1_f32  v20, v0, attr0.x                     // 0000000000DC: C8500000
  v_interp_p2_f32  v20, v1, attr0.x                     // 0000000000E0: C8510001
  ds_swizzle_b32  v21, v20 offset:32853                 // 0000000000E4: D8D48055 15000014
  ds_swizzle_b32  v22, v20 offset:32768                 // 0000000000EC: D8D48000 16000014
  ds_swizzle_b32  v23, v20 offset:32938                 // 0000000000F4: D8D480AA 17000014
  ds_swizzle_b32  v24, v20 offset:32768                 // 0000000000FC: D8D48000 18000014
  v_interp_p1_f32  v25, v0, attr0.y                     // 000000000104: C8640100
  v_interp_p2_f32  v25, v1, attr0.y                     // 000000000108: C8650101
  ds_swizzle_b32  v26, v25 offset:32853                 // 00000000010C: D8D48055 1A000019
  ds_swizzle_b32  v27, v25 offset:32768                 // 000000000114: D8D48000 1B000019
  ds_swizzle_b32  v28, v25 offset:32938                 // 00000000011C: D8D480AA 1C000019
  ds_swizzle_b32  v29, v25 offset:32768                 // 000000000124: D8D48000 1D000019
  v_sub_f32     v11, v11, v12                           // 00000000012C: 0816190B
  v_sub_f32     v12, v16, v17                           // 000000000130: 08182310
  v_sub_f32     v6, v6, v7                              // 000000000134: 080C0F06
  v_sub_f32     v7, v18, v19                            // 000000000138: 080E2712
  v_sub_f32     v8, v8, v9                              // 00000000013C: 08101308
  v_sub_f32     v9, v13, v14                            // 000000000140: 08121D0D
  s_waitcnt     lgkmcnt(0)                              // 000000000144: BF8C007F
  v_sub_f32     v13, v21, v22                           // 000000000148: 081A2D15
  v_sub_f32     v14, v26, v27                           // 00000000014C: 081C371A
  v_sub_f32     v16, v23, v24                           // 000000000150: 08203117
  v_sub_f32     v17, v28, v29                           // 000000000154: 08223B1C
  v_mul_legacy_f32  v18, v11, v8                        // 000000000158: 0E24110B
  v_mul_legacy_f32  v19, v12, v9                        // 00000000015C: 0E26130C
  v_mul_legacy_f32  v21, v6, v7                         // 000000000160: 0E2A0F06
  v_mad_legacy_f32  v18, v6, v9, -v18                   // 000000000164: D2800012 844A1306
  v_mad_legacy_f32  v19, v11, v7, -v19                  // 00000000016C: D2800013 844E0F0B
  v_mad_legacy_f32  v21, v12, v8, -v21                  // 000000000174: D2800015 8456110C
  v_mul_legacy_f32  v22, v7, v21                        // 00000000017C: 0E2C2B07
  v_mul_legacy_f32  v23, v8, v18                        // 000000000180: 0E2E2508
  v_mul_legacy_f32  v24, v9, v19                        // 000000000184: 0E302709
  v_mad_legacy_f32  v22, v9, v18, -v22                  // 000000000188: D2800016 845A2509
  v_mad_legacy_f32  v23, v7, v19, -v23                  // 000000000190: D2800017 845E2707
  v_mad_legacy_f32  v24, v8, v21, -v24                  // 000000000198: D2800018 84622B08
  v_mul_legacy_f32  v7, v11, v18                        // 0000000001A0: 0E0E250B
  v_mul_legacy_f32  v8, v12, v19                        // 0000000001A4: 0E10270C
  v_mul_legacy_f32  v9, v6, v21                         // 0000000001A8: 0E122B06
  v_mad_legacy_f32  v7, v21, v12, -v7                   // 0000000001AC: D2800007 841E1915
  v_mad_legacy_f32  v8, v18, v6, -v8                    // 0000000001B4: D2800008 84220D12
  v_mad_legacy_f32  v9, v19, v11, -v9                   // 0000000001BC: D2800009 84261713
  v_mul_legacy_f32  v6, v16, v7                         // 0000000001C4: 0E0C0F10
  v_mul_legacy_f32  v11, v16, v8                        // 0000000001C8: 0E161110
  v_mul_legacy_f32  v12, v16, v9                        // 0000000001CC: 0E181310
  v_mac_f32     v6, v13, v22                            // 0000000001D0: 3E0C2D0D
  v_mac_f32     v11, v13, v23                           // 0000000001D4: 3E162F0D
  v_mac_f32     v12, v13, v24                           // 0000000001D8: 3E18310D
  v_mul_legacy_f32  v13, v12, v12                       // 0000000001DC: 0E1A190C
  v_mac_f32     v13, v11, v11                           // 0000000001E0: 3E1A170B
  v_mac_f32     v13, v6, v6                             // 0000000001E4: 3E1A0D06
  v_rsq_f32     v13, v13                                // 0000000001E8: 7E1A5D0D
  v_mul_legacy_f32  v6, v6, v13                         // 0000000001EC: 0E0C1B06
  v_mul_legacy_f32  v11, v11, v13                       // 0000000001F0: 0E161B0B
  v_mul_legacy_f32  v12, v12, v13                       // 0000000001F4: 0E181B0C
  v_mul_legacy_f32  v7, v17, v7                         // 0000000001F8: 0E0E0F11
  v_mul_legacy_f32  v8, v17, v8                         // 0000000001FC: 0E101111
  v_mul_legacy_f32  v9, v17, v9                         // 000000000200: 0E121311
  v_mac_f32     v7, v14, v22                            // 000000000204: 3E0E2D0E
  v_mac_f32     v8, v14, v23                            // 000000000208: 3E102F0E
  v_mac_f32     v9, v14, v24                            // 00000000020C: 3E12310E
  v_mul_legacy_f32  v13, v9, v9                         // 000000000210: 0E1A1309
  v_mac_f32     v13, v8, v8                             // 000000000214: 3E1A1108
  v_mac_f32     v13, v7, v7                             // 000000000218: 3E1A0F07
  v_rsq_f32     v13, v13                                // 00000000021C: 7E1A5D0D
  v_mul_legacy_f32  v7, v7, v13                         // 000000000220: 0E0E1B07
  v_mul_legacy_f32  v8, v8, v13                         // 000000000224: 0E101B08
  v_mul_legacy_f32  v9, v9, v13                         // 000000000228: 0E121B09
  v_interp_p1_f32  v13, v0, attr2.x                     // 00000000022C: C8340800
  v_interp_p2_f32  v13, v1, attr2.x                     // 000000000230: C8350801
  v_interp_p1_f32  v14, v0, attr2.y                     // 000000000234: C8380900
  v_interp_p2_f32  v14, v1, attr2.y                     // 000000000238: C8390901
  v_interp_p1_f32  v16, v0, attr2.z                     // 00000000023C: C8400A00
  v_interp_p2_f32  v16, v1, attr2.z                     // 000000000240: C8410A01
  v_mov_b32     v17, v20                                // 000000000244: 7E220314
  v_mov_b32     v18, v25                                // 000000000248: 7E240319
  image_sample  v[19:22], v[17:18], s[12:19], s[20:23] dmask:0x3 // 00000000024C: F0800300 00A31311
  image_sample  v[21:24], v[17:18], s[24:31], s[20:23] dmask:0xf // 000000000254: F0800F00 00A61511
  image_sample  v[25:28], v[17:18], s[32:39], s[20:23] dmask:0x7 // 00000000025C: F0800700 00A81911
  s_buffer_load_dwordx4  s[12:15], s[4:7], 0x48         // 000000000264: C2860548
  s_buffer_load_dwordx4  s[16:19], s[4:7], 0x54         // 000000000268: C2880554
  s_load_dwordx8  s[24:31], s[0:1], 0x28                // 00000000026C: C0CC0128
  s_load_dwordx4  s[32:35], s[0:1], 0x34                // 000000000270: C0900134
  s_buffer_load_dwordx2  s[2:3], s[4:7], 0x5e           // 000000000274: C241055E
  s_load_dwordx16  s[52:67], s[0:1], 0x18               // 000000000278: C11A0118
  s_waitcnt     vmcnt(2)                                // 00000000027C: BF8C0F72
  v_mad_f32     v19, v19, 2.0, -1.0                     // 000000000280: D2820013 03CDE913
  v_mul_legacy_f32  v28, v19, v19                       // 000000000288: 0E382713
  v_mad_f32     v20, v20, 2.0, -1.0                     // 00000000028C: D2820014 03CDE914
  v_mac_f32     v28, v20, v20                           // 000000000294: 3E382914
  v_mul_legacy_f32  v7, v20, v7                         // 000000000298: 0E0E0F14
  v_mul_legacy_f32  v8, v20, v8                         // 00000000029C: 0E101114
  v_mul_legacy_f32  v9, v20, v9                         // 0000000002A0: 0E121314
  v_mac_f32     v7, v19, v6                             // 0000000002A4: 3E0E0D13
  v_mac_f32     v8, v19, v11                            // 0000000002A8: 3E101713
  v_mac_f32     v9, v19, v12                            // 0000000002AC: 3E121913
  v_sub_f32     v6, 1.0, v28                            // 0000000002B0: 080C38F2
  v_sqrt_f32    v6, v6                                  // 0000000002B4: 7E0C6706
  v_mac_f32     v7, v6, v13                             // 0000000002B8: 3E0E1B06
  v_mac_f32     v8, v6, v14                             // 0000000002BC: 3E101D06
  v_mac_f32     v9, v6, v16                             // 0000000002C0: 3E122106
  v_mul_legacy_f32  v6, v9, v9                          // 0000000002C4: 0E0C1309
  v_mac_f32     v6, v8, v8                              // 0000000002C8: 3E0C1108
  v_mac_f32     v6, v7, v7                              // 0000000002CC: 3E0C0F07
  v_rsq_f32     v6, v6                                  // 0000000002D0: 7E0C5D06
  v_mul_legacy_f32  v7, v7, v6                          // 0000000002D4: 0E0E0D07
  v_mul_legacy_f32  v8, v8, v6                          // 0000000002D8: 0E100D08
  v_mul_legacy_f32  v6, v9, v6                          // 0000000002DC: 0E0C0D09
  v_mul_legacy_f32  v9, v15, v6                         // 0000000002E0: 0E120D0F
  v_mac_f32     v9, v8, v10                             // 0000000002E4: 3E121508
  v_mad_legacy_f32  v9, v7, v5, v9 clamp                // 0000000002E8: D2800809 04260B07
  s_waitcnt     vmcnt(0)                                // 0000000002F0: BF8C0F70
  v_mul_legacy_f32  v11, v26, v26                       // 0000000002F4: 0E16351A
  v_mad_legacy_f32  v12, v27, -v21, v21                 // 0000000002F8: D280000C 44562B1B
  v_mad_legacy_f32  v13, v27, -v22, v22                 // 000000000300: D280000D 445A2D1B
  v_mad_legacy_f32  v14, v27, -v23, v23                 // 000000000308: D280000E 445E2F1B
  v_mul_legacy_f32  v12, v25, v12                       // 000000000310: 0E181919
  v_mul_legacy_f32  v13, v25, v13                       // 000000000314: 0E1A1B19
  v_mul_legacy_f32  v14, v25, v14                       // 000000000318: 0E1C1D19
  s_mov_b32     s0, 0xbd23d70a                          // 00000000031C: BE8003FF BD23D70A
  v_add_f32     v16, s0, v21                            // 000000000324: 06202A00
  v_madak_f32   v16, v27, v16, 0x3d23d70a               // 000000000328: 4220211B 3D23D70A
  v_add_f32     v19, s0, v22                            // 000000000330: 06262C00
  v_madak_f32   v19, v27, v19, 0x3d23d70a               // 000000000334: 4226271B 3D23D70A
  v_add_f32     v20, s0, v23                            // 00000000033C: 06282E00
  v_madak_f32   v20, v27, v20, 0x3d23d70a               // 000000000340: 4228291B 3D23D70A
  v_mul_legacy_f32  v21, v25, v16                       // 000000000348: 0E2A2119
  v_mul_legacy_f32  v22, v25, v19                       // 00000000034C: 0E2C2719
  v_mul_legacy_f32  v23, v25, v20                       // 000000000350: 0E2E2919
  v_sub_f32     v27, 1.0, v9                            // 000000000354: 083612F2
  v_mad_legacy_f32  v27, -v9, v27, v27                  // 000000000358: D280001B 246E3709
  v_mul_legacy_f32  v27, v27, v27                       // 000000000360: 0E36371B
  v_mad_legacy_f32  v27, -v9, v27, v27                  // 000000000364: D280001B 246E3709
  v_mul_legacy_f32  v9, v11, v11                        // 00000000036C: 0E12170B
  v_mul_legacy_f32  v28, s42, s42                       // 000000000370: D20E001C 0000542A
  v_mad_f32     v28, s41, s41, v28                      // 000000000378: D282001C 04705229
  v_mad_f32     v28, s40, s40, v28                      // 000000000380: D282001C 04705028
  v_rsq_f32     v28, v28                                // 000000000388: 7E385D1C
  v_mul_legacy_f32  v29, -s40, v28                      // 00000000038C: D20E001D 20023828
  v_mul_legacy_f32  v30, -s41, v28                      // 000000000394: D20E001E 20023829
  v_mul_legacy_f32  v31, -s42, v28                      // 00000000039C: D20E001F 2002382A
  v_mad_legacy_f32  v32, -s40, v28, v5                  // 0000000003A4: D2800020 24163828
  v_mad_legacy_f32  v33, -s41, v28, v10                 // 0000000003AC: D2800021 242A3829
  v_mad_legacy_f32  v28, -s42, v28, v15                 // 0000000003B4: D280001C 243E382A
  v_mul_legacy_f32  v34, v28, v28                       // 0000000003BC: 0E44391C
  v_mac_f32     v34, v33, v33                           // 0000000003C0: 3E444321
  v_mac_f32     v34, v32, v32                           // 0000000003C4: 3E444120
  v_rsq_f32     v34, v34                                // 0000000003C8: 7E445D22
  v_mul_legacy_f32  v32, v32, v34                       // 0000000003CC: 0E404520
  v_mul_legacy_f32  v33, v33, v34                       // 0000000003D0: 0E424521
  v_mul_legacy_f32  v28, v28, v34                       // 0000000003D4: 0E38451C
  v_mul_legacy_f32  v34, v6, v31                        // 0000000003D8: 0E443F06
  v_mac_f32     v34, v8, v30                            // 0000000003DC: 3E443D08
  v_mad_legacy_f32  v34, v7, v29, v34 clamp             // 0000000003E0: D2800822 048A3B07
  v_mul_legacy_f32  v31, v31, v28                       // 0000000003E8: 0E3E391F
  v_mac_f32     v31, v30, v33                           // 0000000003EC: 3E3E431E
  v_mad_legacy_f32  v31, v29, v32, v31 clamp            // 0000000003F0: D280081F 047E411D
  v_mul_legacy_f32  v28, v6, v28                        // 0000000003F8: 0E383906
  v_mac_f32     v28, v8, v33                            // 0000000003FC: 3E384308
  v_mad_legacy_f32  v28, v7, v32, v28 clamp             // 000000000400: D280081C 04724107
  v_mul_legacy_f32  v29, v31, v31                       // 000000000408: 0E3A3F1F
  v_max_f32     v30, v26, v26 mul:2                     // 00000000040C: D220001E 0802351A
  v_mad_f32     v32, v29, v30, -0.5                     // 000000000414: D2820020 03C63D1D
  v_sub_f32     v33, 1.0, v34                           // 00000000041C: 084244F2
  v_mad_legacy_f32  v33, -v34, v33, v33                 // 000000000420: D2800021 24864322
  v_mul_legacy_f32  v33, v33, v33                       // 000000000428: 0E424321
  v_mad_legacy_f32  v33, -v34, v33, v33                 // 00000000042C: D2800021 24864322
  v_mad_f32     v33, v32, v33, 1.0                      // 000000000434: D2820021 03CA4320
  v_mad_f32     v32, v32, v27, 1.0                      // 00000000043C: D2820020 03CA3720
  v_mul_legacy_f32  v28, v28, v28                       // 000000000444: 0E38391C
  v_mad_f32     v11, v11, v11, -1.0                     // 000000000448: D282000B 03CE170B
  v_mad_f32     v28, v28, v11, 1.0                      // 000000000450: D282001C 03CA171C
  v_mul_legacy_f32  v28, v28, v28                       // 000000000458: 0E38391C
  v_mul_legacy_f32  v32, v33, v32                       // 00000000045C: 0E404121
  s_mov_b32     s0, 0x40490fdb                          // 000000000460: BE8003FF 40490FDB
  v_mul_legacy_f32  v28, s0, v28                        // 000000000468: 0E383800
  s_mov_b32     s1, 0x358637bd                          // 00000000046C: BE8103FF 358637BD
  v_max_legacy_f32  v28, s1, v28                        // 000000000474: 1C383801
  v_rcp_f32     v28, v28                                // 000000000478: 7E38551C
  v_mul_f32     v28, v9, v28                            // 00000000047C: 10383909
  v_sub_f32     v33, 1.0, v31                           // 000000000480: 08423EF2
  v_mad_legacy_f32  v33, -v31, v33, v33                 // 000000000484: D2800021 2486431F
  v_mul_legacy_f32  v33, v33, v33                       // 00000000048C: 0E424321
  v_mad_legacy_f32  v33, -v31, v33, v33                 // 000000000490: D2800021 2486431F
  v_mad_legacy_f32  v16, -v25, v16, 1.0                 // 000000000498: D2800010 23CA2119
  v_mad_f32     v35, v16, v33, v21                      // 0000000004A0: D2820023 04564310
  v_mad_legacy_f32  v19, -v25, v19, 1.0                 // 0000000004A8: D2800013 23CA2719
  v_mad_f32     v36, v19, v33, v22                      // 0000000004B0: D2820024 045A4313
  v_mad_legacy_f32  v20, -v25, v20, 1.0                 // 0000000004B8: D2800014 23CA2919
  v_mad_f32     v25, v20, v33, v23                      // 0000000004C0: D2820019 045E4314
  v_mul_legacy_f32  v33, 0x3e800000, v9                 // 0000000004C8: 0E4212FF 3E800000
  v_mad_legacy_f32  v31, -v31, v31, 1.0                 // 0000000004D0: D280001F 23CA3F1F
  v_mac_f32     v29, v33, v31                           // 0000000004D8: 3E3A3F21
  v_mul_legacy_f32  v31, v28, v35                       // 0000000004DC: 0E3E471C
  v_mul_legacy_f32  v35, v28, v36                       // 0000000004E0: 0E46491C
  v_mul_legacy_f32  v25, v28, v25                       // 0000000004E4: 0E32331C
  v_rcp_f32     v28, v29                                // 0000000004E8: 7E38551D
  v_mul_legacy_f32  v29, v28, v31                       // 0000000004EC: 0E3A3F1C
  v_mul_legacy_f32  v31, v28, v35                       // 0000000004F0: 0E3E471C
  v_mul_legacy_f32  v25, v28, v25                       // 0000000004F4: 0E32331C
  v_mul_legacy_f32  v28, s44, v34                       // 0000000004F8: 0E38442C
  v_mul_legacy_f32  v35, s45, v34                       // 0000000004FC: 0E46442D
  v_mul_legacy_f32  v34, s46, v34                       // 000000000500: 0E44442E
  v_mac_f32     v29, v12, v32                           // 000000000504: 3E3A410C
  v_mac_f32     v31, v13, v32                           // 000000000508: 3E3E410D
  v_mac_f32     v25, v14, v32                           // 00000000050C: 3E32410E
  v_mul_legacy_f32  v28, v28, v29                       // 000000000510: 0E383B1C
  v_mul_legacy_f32  v29, v35, v31                       // 000000000514: 0E3A3F23
  v_mul_legacy_f32  v25, v34, v25                       // 000000000518: 0E323322
  v_mul_legacy_f32  v31, s50, s50                       // 00000000051C: D20E001F 00006432
  v_mad_f32     v31, s49, s49, v31                      // 000000000524: D282001F 047C6231
  v_mad_f32     v31, s48, s48, v31                      // 00000000052C: D282001F 047C6030
  v_rsq_f32     v31, v31                                // 000000000534: 7E3E5D1F
  v_mul_legacy_f32  v32, -s48, v31                      // 000000000538: D20E0020 20023E30
  v_mul_legacy_f32  v34, -s49, v31                      // 000000000540: D20E0022 20023E31
  v_mul_legacy_f32  v35, -s50, v31                      // 000000000548: D20E0023 20023E32
  v_mad_legacy_f32  v36, -s48, v31, v5                  // 000000000550: D2800024 24163E30
  v_mad_legacy_f32  v37, -s49, v31, v10                 // 000000000558: D2800025 242A3E31
  v_mad_legacy_f32  v31, -s50, v31, v15                 // 000000000560: D280001F 243E3E32
  v_mul_legacy_f32  v38, v31, v31                       // 000000000568: 0E4C3F1F
  v_mac_f32     v38, v37, v37                           // 00000000056C: 3E4C4B25
  v_mac_f32     v38, v36, v36                           // 000000000570: 3E4C4924
  v_rsq_f32     v38, v38                                // 000000000574: 7E4C5D26
  v_mul_legacy_f32  v36, v36, v38                       // 000000000578: 0E484D24
  v_mul_legacy_f32  v37, v37, v38                       // 00000000057C: 0E4A4D25
  v_mul_legacy_f32  v31, v31, v38                       // 000000000580: 0E3E4D1F
  v_mul_legacy_f32  v38, v6, v35                        // 000000000584: 0E4C4706
  v_mac_f32     v38, v8, v34                            // 000000000588: 3E4C4508
  v_mad_legacy_f32  v38, v7, v32, v38 clamp             // 00000000058C: D2800826 049A4107
  v_mul_legacy_f32  v35, v35, v31                       // 000000000594: 0E463F23
  v_mac_f32     v35, v34, v37                           // 000000000598: 3E464B22
  v_mad_legacy_f32  v35, v32, v36, v35 clamp            // 00000000059C: D2800823 048E4920
  v_mul_legacy_f32  v31, v6, v31                        // 0000000005A4: 0E3E3F06
  v_mac_f32     v31, v8, v37                            // 0000000005A8: 3E3E4B08
  v_mad_legacy_f32  v31, v7, v36, v31 clamp             // 0000000005AC: D280081F 047E4907
  v_mul_legacy_f32  v32, v35, v35                       // 0000000005B4: 0E404723
  v_mad_f32     v34, v32, v30, -0.5                     // 0000000005B8: D2820022 03C63D20
  v_sub_f32     v36, 1.0, v38                           // 0000000005C0: 08484CF2
  v_mad_legacy_f32  v36, -v38, v36, v36                 // 0000000005C4: D2800024 24924926
  v_mul_legacy_f32  v36, v36, v36                       // 0000000005CC: 0E484924
  v_mad_legacy_f32  v36, -v38, v36, v36                 // 0000000005D0: D2800024 24924926
  v_mad_f32     v36, v34, v36, 1.0                      // 0000000005D8: D2820024 03CA4922
  v_mad_f32     v34, v34, v27, 1.0                      // 0000000005E0: D2820022 03CA3722
  v_mul_legacy_f32  v31, v31, v31                       // 0000000005E8: 0E3E3F1F
  v_mad_f32     v31, v31, v11, 1.0                      // 0000000005EC: D282001F 03CA171F
  v_mul_legacy_f32  v31, v31, v31                       // 0000000005F4: 0E3E3F1F
  v_mul_legacy_f32  v34, v36, v34                       // 0000000005F8: 0E444524
  v_mul_legacy_f32  v31, s0, v31                        // 0000000005FC: 0E3E3E00
  v_max_legacy_f32  v31, s1, v31                        // 000000000600: 1C3E3E01
  v_rcp_f32     v31, v31                                // 000000000604: 7E3E551F
  v_mul_f32     v31, v9, v31                            // 000000000608: 103E3F09
  v_sub_f32     v36, 1.0, v35                           // 00000000060C: 084846F2
  v_mad_legacy_f32  v36, -v35, v36, v36                 // 000000000610: D2800024 24924923
  v_mul_legacy_f32  v36, v36, v36                       // 000000000618: 0E484924
  v_mad_legacy_f32  v36, -v35, v36, v36                 // 00000000061C: D2800024 24924923
  v_mad_f32     v37, v16, v36, v21                      // 000000000624: D2820025 04564910
  v_mad_f32     v39, v19, v36, v22                      // 00000000062C: D2820027 045A4913
  v_mad_f32     v36, v20, v36, v23                      // 000000000634: D2820024 045E4914
  v_mad_legacy_f32  v35, -v35, v35, 1.0                 // 00000000063C: D2800023 23CA4723
  v_mac_f32     v32, v33, v35                           // 000000000644: 3E404721
  v_mul_legacy_f32  v35, v31, v37                       // 000000000648: 0E464B1F
  v_mul_legacy_f32  v37, v31, v39                       // 00000000064C: 0E4A4F1F
  v_mul_legacy_f32  v31, v31, v36                       // 000000000650: 0E3E491F
  v_rcp_f32     v32, v32                                // 000000000654: 7E405520
  v_mul_legacy_f32  v35, v32, v35                       // 000000000658: 0E464720
  v_mul_legacy_f32  v36, v32, v37                       // 00000000065C: 0E484B20
  v_mul_legacy_f32  v31, v32, v31                       // 000000000660: 0E3E3F20
  v_mul_legacy_f32  v32, s8, v38                        // 000000000664: 0E404C08
  v_mul_legacy_f32  v37, s9, v38                        // 000000000668: 0E4A4C09
  v_mul_legacy_f32  v38, s10, v38                       // 00000000066C: 0E4C4C0A
  v_mac_f32     v35, v12, v34                           // 000000000670: 3E46450C
  v_mac_f32     v36, v13, v34                           // 000000000674: 3E48450D
  v_mac_f32     v31, v14, v34                           // 000000000678: 3E3E450E
  v_mac_f32     v28, v32, v35                           // 00000000067C: 3E384720
  v_mac_f32     v29, v37, v36                           // 000000000680: 3E3A4925
  v_mac_f32     v25, v38, v31                           // 000000000684: 3E323F26
  s_buffer_load_dword  s8, s[4:7], 0x5b                 // 000000000688: C204055B
  s_buffer_load_dword  s4, s[4:7], 0x60                 // 00000000068C: C2020560
  s_waitcnt     lgkmcnt(0)                              // 000000000690: BF8C007F
  v_mul_legacy_f32  v31, s14, s14                       // 000000000694: D20E001F 00001C0E
  v_mad_f32     v31, s13, s13, v31                      // 00000000069C: D282001F 047C1A0D
  v_mad_f32     v31, s12, s12, v31                      // 0000000006A4: D282001F 047C180C
  v_rsq_f32     v31, v31                                // 0000000006AC: 7E3E5D1F
  v_mul_legacy_f32  v32, -s12, v31                      // 0000000006B0: D20E0020 20023E0C
  v_mul_legacy_f32  v34, -s13, v31                      // 0000000006B8: D20E0022 20023E0D
  v_mul_legacy_f32  v35, -s14, v31                      // 0000000006C0: D20E0023 20023E0E
  v_mad_legacy_f32  v36, -s12, v31, v5                  // 0000000006C8: D2800024 24163E0C
  v_mad_legacy_f32  v37, -s13, v31, v10                 // 0000000006D0: D2800025 242A3E0D
  v_mad_legacy_f32  v31, -s14, v31, v15                 // 0000000006D8: D280001F 243E3E0E
  v_mul_legacy_f32  v38, v31, v31                       // 0000000006E0: 0E4C3F1F
  v_mac_f32     v38, v37, v37                           // 0000000006E4: 3E4C4B25
  v_mac_f32     v38, v36, v36                           // 0000000006E8: 3E4C4924
  v_rsq_f32     v38, v38                                // 0000000006EC: 7E4C5D26
  v_mul_legacy_f32  v36, v36, v38                       // 0000000006F0: 0E484D24
  v_mul_legacy_f32  v37, v37, v38                       // 0000000006F4: 0E4A4D25
  v_mul_legacy_f32  v31, v31, v38                       // 0000000006F8: 0E3E4D1F
  v_mul_legacy_f32  v38, v6, v35                        // 0000000006FC: 0E4C4706
  v_mac_f32     v38, v8, v34                            // 000000000700: 3E4C4508
  v_mad_legacy_f32  v38, v7, v32, v38 clamp             // 000000000704: D2800826 049A4107
  v_mul_legacy_f32  v35, v35, v31                       // 00000000070C: 0E463F23
  v_mac_f32     v35, v34, v37                           // 000000000710: 3E464B22
  v_mad_legacy_f32  v35, v32, v36, v35 clamp            // 000000000714: D2800823 048E4920
  v_mul_legacy_f32  v31, v6, v31                        // 00000000071C: 0E3E3F06
  v_mac_f32     v31, v8, v37                            // 000000000720: 3E3E4B08
  v_mad_legacy_f32  v31, v7, v36, v31 clamp             // 000000000724: D280081F 047E4907
  v_mul_legacy_f32  v32, v35, v35                       // 00000000072C: 0E404723
  v_mad_f32     v30, v32, v30, -0.5                     // 000000000730: D282001E 03C63D20
  v_sub_f32     v34, 1.0, v38                           // 000000000738: 08444CF2
  v_mad_legacy_f32  v34, -v38, v34, v34                 // 00000000073C: D2800022 248A4526
  v_mul_legacy_f32  v34, v34, v34                       // 000000000744: 0E444522
  v_mad_legacy_f32  v34, -v38, v34, v34                 // 000000000748: D2800022 248A4526
  v_mad_f32     v34, v30, v34, 1.0                      // 000000000750: D2820022 03CA451E
  v_mad_f32     v27, v30, v27, 1.0                      // 000000000758: D282001B 03CA371E
  v_mul_legacy_f32  v30, v31, v31                       // 000000000760: 0E3C3F1F
  v_mad_f32     v11, v30, v11, 1.0                      // 000000000764: D282000B 03CA171E
  v_mul_legacy_f32  v11, v11, v11                       // 00000000076C: 0E16170B
  v_mul_legacy_f32  v27, v34, v27                       // 000000000770: 0E363722
  v_mul_legacy_f32  v11, s0, v11                        // 000000000774: 0E161600
  v_max_legacy_f32  v11, s1, v11                        // 000000000778: 1C161601
  v_rcp_f32     v11, v11                                // 00000000077C: 7E16550B
  v_mul_f32     v9, v9, v11                             // 000000000780: 10121709
  v_sub_f32     v11, 1.0, v35                           // 000000000784: 081646F2
  v_mad_legacy_f32  v11, -v35, v11, v11                 // 000000000788: D280000B 242E1723
  v_mul_legacy_f32  v11, v11, v11                       // 000000000790: 0E16170B
  v_mad_legacy_f32  v11, -v35, v11, v11                 // 000000000794: D280000B 242E1723
  v_mad_f32     v16, v16, v11, v21                      // 00000000079C: D2820010 04561710
  v_mad_f32     v19, v19, v11, v22                      // 0000000007A4: D2820013 045A1713
  v_mad_f32     v11, v20, v11, v23                      // 0000000007AC: D282000B 045E1714
  v_mad_legacy_f32  v20, -v35, v35, 1.0                 // 0000000007B4: D2800014 23CA4723
  v_mac_f32     v32, v33, v20                           // 0000000007BC: 3E402921
  v_mul_legacy_f32  v16, v9, v16                        // 0000000007C0: 0E202109
  v_mul_legacy_f32  v19, v9, v19                        // 0000000007C4: 0E262709
  v_mul_legacy_f32  v9, v9, v11                         // 0000000007C8: 0E121709
  v_rcp_f32     v11, v32                                // 0000000007CC: 7E165520
  v_mul_legacy_f32  v16, v11, v16                       // 0000000007D0: 0E20210B
  v_mul_legacy_f32  v19, v11, v19                       // 0000000007D4: 0E26270B
  v_mul_legacy_f32  v9, v11, v9                         // 0000000007D8: 0E12130B
  v_mul_legacy_f32  v11, s16, v38                       // 0000000007DC: 0E164C10
  v_mul_legacy_f32  v20, s17, v38                       // 0000000007E0: 0E284C11
  v_mul_legacy_f32  v30, s18, v38                       // 0000000007E4: 0E3C4C12
  v_mac_f32     v16, v12, v27                           // 0000000007E8: 3E20370C
  v_mac_f32     v19, v13, v27                           // 0000000007EC: 3E26370D
  v_mac_f32     v9, v14, v27                            // 0000000007F0: 3E12370E
  v_mac_f32     v28, v11, v16                           // 0000000007F4: 3E38210B
  v_mac_f32     v29, v20, v19                           // 0000000007F8: 3E3A2714
  v_mac_f32     v25, v30, v9                            // 0000000007FC: 3E32131E
  v_cubetc_f32  v9, v7, v8, v6                          // 000000000800: D28C0009 041A1107
  v_cubesc_f32  v11, v7, v8, v6                         // 000000000808: D28A000B 041A1107
  v_cubema_f32  v16, v7, v8, v6                         // 000000000810: D28E0010 041A1107
  v_cubeid_f32  v32, v7, v8, v6                         // 000000000818: D2880020 041A1107
  v_rcp_f32     v16, abs(v16)                           // 000000000820: D3540110 00000110
  v_madak_f32   v31, v9, v16, 0x3fc00000                // 000000000828: 423E2109 3FC00000
  v_madak_f32   v30, v11, v16, 0x3fc00000               // 000000000830: 423C210B 3FC00000
  v_cvt_f32_i32  v16, s2                                // 000000000838: 7E200A02
  v_mul_legacy_f32  v36, v26, v16                       // 00000000083C: 0E48211A
  v_mul_legacy_f32  v20, -v15, v6                       // 000000000840: D20E0014 20020D0F
  v_mad_legacy_f32  v20, -v10, v8, v20                  // 000000000848: D2800014 2452110A
  v_mad_legacy_f32  v20, -v5, v7, v20 mul:2             // 000000000850: D2800014 2C520F05
  v_mad_legacy_f32  v5, v7, -v20, -v5                   // 000000000858: D2800005 C4162907
  v_mad_legacy_f32  v10, v8, -v20, -v10                 // 000000000860: D280000A C42A2908
  v_mad_legacy_f32  v15, v6, -v20, -v15                 // 000000000868: D280000F C43E2906
  v_cubetc_f32  v6, v5, v10, v15                        // 000000000870: D28C0006 043E1505
  v_cubesc_f32  v7, v5, v10, v15                        // 000000000878: D28A0007 043E1505
  v_cubema_f32  v8, v5, v10, v15                        // 000000000880: D28E0008 043E1505
  v_cubeid_f32  v35, v5, v10, v15                       // 000000000888: D2880023 043E1505
  v_rcp_f32     v8, abs(v8)                             // 000000000890: D3540108 00000108
  v_madak_f32   v34, v6, v8, 0x3fc00000                 // 000000000898: 42441106 3FC00000
  v_madak_f32   v33, v7, v8, 0x3fc00000                 // 0000000008A0: 42421107 3FC00000
  v_mul_legacy_f32  v8, s8, v24                         // 0000000008A8: 0E103008
  v_interp_p1_f32  v10, v0, attr3.x                     // 0000000008AC: C8280C00
  v_interp_p2_f32  v10, v1, attr3.x                     // 0000000008B0: C8290C01
  v_interp_p1_f32  v15, v0, attr3.y                     // 0000000008B4: C83C0D00
  v_interp_p2_f32  v15, v1, attr3.y                     // 0000000008B8: C83D0D01
  v_interp_p1_f32  v20, v0, attr3.z                     // 0000000008BC: C8500E00
  v_interp_p2_f32  v20, v1, attr3.z                     // 0000000008C0: C8510E01
  v_interp_p1_f32  v0, v0, attr3.w                      // 0000000008C4: C8000F00
  v_interp_p2_f32  v0, v1, attr3.w                      // 0000000008C8: C8010F01
  v_rcp_f32     v0, v0                                  // 0000000008CC: 7E005500
  v_mul_f32     v1, v10, v0                             // 0000000008D0: 1002010A
  v_mul_f32     v10, v15, v0                            // 0000000008D4: 1014010F
  v_mad_f32     v1, v1, 0.5, 0.5                        // 0000000008D8: D2820001 03C1E101
  v_mad_legacy_f32  v2, s3, v1, -v2                     // 0000000008E0: D2800002 840A0203
  v_mul_legacy_f32  v1, 0x38000000, v2                  // 0000000008E8: 0E0204FF 38000000
  s_mov_b32     s0, 0x3bffe000                          // 0000000008F0: BE8003FF 3BFFE000
  v_min_legacy_f32  v1, abs(v1), s0                     // 0000000008F8: D21A0101 00000101
  v_cvt_pkrtz_f16_f32  v1, v1, 0                        // 000000000900: D25E0001 00010101
  v_add_i32     v1, vcc, 8, v1                          // 000000000908: 4A020288
  v_lshrrev_b32  v1, 4, v1                              // 00000000090C: 2C020284
  v_lshrrev_b32  v2, 31, v2                             // 000000000910: 2C04049F
  v_lshlrev_b32  v2, 9, v2                              // 000000000914: 34040489
  v_or_b32      v1, v1, v2                              // 000000000918: 38020501
  v_mad_f32     v2, v10, -0.5, 0.5                      // 00000000091C: D2820002 03C1E30A
  v_mad_legacy_f32  v3, v2, s4, -v3                     // 000000000924: D2800003 840C0902
  v_mul_legacy_f32  v2, 0x38000000, v3                  // 00000000092C: 0E0406FF 38000000
  v_min_legacy_f32  v2, abs(v2), s0                     // 000000000934: D21A0102 00000102
  v_cvt_pkrtz_f16_f32  v2, v2, 0                        // 00000000093C: D25E0002 00010102
  v_add_i32     v2, vcc, 8, v2                          // 000000000944: 4A040488
  v_lshrrev_b32  v2, 4, v2                              // 000000000948: 2C040484
  v_lshrrev_b32  v3, 31, v3                             // 00000000094C: 2C06069F
  v_lshlrev_b32  v3, 9, v3                              // 000000000950: 34060689
  v_or_b32      v2, v2, v3                              // 000000000954: 38040702
  v_mad_f32     v4, v20, v0, -v4                        // 000000000958: D2820004 84120114
  v_mul_legacy_f32  v0, 0x3c000000, v4                  // 000000000960: 0E0008FF 3C000000
  v_min_legacy_f32  v0, abs(v0), s0                     // 000000000968: D21A0100 00000100
  v_cvt_pkrtz_f16_f32  v0, v0, 0                        // 000000000970: D25E0000 00010100
  v_add_i32     v0, vcc, 2, v0                          // 000000000978: 4A000082
  v_lshrrev_b32  v0, 2, v0                              // 00000000097C: 2C000082
  v_lshrrev_b32  v3, 31, v4                             // 000000000980: 2C06089F
  v_lshlrev_b32  v3, 11, v3                             // 000000000984: 3406068B
  v_or_b32      v0, v0, v3                              // 000000000988: 38000700
  v_lshlrev_b32  v2, 10, v2                             // 00000000098C: 3404048A
  v_or_b32      v1, v1, v2                              // 000000000990: 38020501
  v_lshlrev_b32  v0, 20, v0                             // 000000000994: 34000094
  v_or_b32      v0, v0, v1                              // 000000000998: 38000300
  image_sample  v[1:4], v[30:31], s[24:31], s[32:35] dmask:0x7 // 00000000099C: F0800700 0106011E
  image_sample_l  v[4:7], v[33:34], s[60:67], s[32:35] dmask:0x7 // 0000000009A4: F0900700 010F0421
  image_sample  v[9:12], v[17:18], s[52:59], s[20:23] dmask:0x7 // 0000000009AC: F0800700 00AD0911
  s_waitcnt     vmcnt(2)                                // 0000000009B4: BF8C0F72
  v_mac_f32     v28, v12, v1                            // 0000000009B8: 3E38030C
  v_mac_f32     v29, v13, v2                            // 0000000009BC: 3E3A050D
  v_mac_f32     v25, v14, v3                            // 0000000009C0: 3E32070E
  s_waitcnt     vmcnt(1)                                // 0000000009C4: BF8C0F71
  v_mac_f32     v28, v21, v4                            // 0000000009C8: 3E380915
  v_mac_f32     v29, v22, v5                            // 0000000009CC: 3E3A0B16
  v_mac_f32     v25, v23, v6                            // 0000000009D0: 3E320D17
  s_waitcnt     vmcnt(0)                                // 0000000009D4: BF8C0F70
  v_add_f32     v1, v28, v9                             // 0000000009D8: 0602131C
  v_add_f32     v2, v29, v10                            // 0000000009DC: 0604151D
  v_add_f32     v3, v25, v11                            // 0000000009E0: 06061719
  s_mov_b64     exec, s[68:69]                          // 0000000009E4: BEFE0444
  v_cvt_pkrtz_f16_f32  v0, v0, v0                       // 0000000009E8: 5E000100
  s_nop         0x0000                                  // 0000000009EC: BF800000
  exp           mrt1, v0, v0, off, off compr vm         // 0000000009F0: F8001413 00000000
  v_cvt_pkrtz_f16_f32  v1, v1, v2                       // 0000000009F8: 5E020501
  v_cvt_pkrtz_f16_f32  v2, v3, v8                       // 0000000009FC: 5E041103
  exp           mrt0, v1, v1, v2, v2 done compr vm      // 000000000A00: F8001C0F 00000201
  s_endpgm                                              // 000000000A08: BF810000
end


// Shader Statistics:
//  NumActiveWaveFront:         24
//  WorkgroupSize:              64
//  NumVRegs:                   40
//  NumSRegs:                   72
//  NumActiveWaveFrontByVReg:   24
//  NumActiveWaveFrontBySReg:   28
//  NumActiveWaveFrontByLDS:    40
//  CycleSim:                   481
//  CycleSimNWaves:             481
//  Code Size:                  2572
//Assembler Counts:
//  num_32bit_ops                     : 329
//  num_64bit_ops                     : 149
//  num_alu                           : 414
//  num_fc                            : 36
//  num_inst_exp                      : 2
//  num_inst_ldsgds                   : 20
//  num_inst_mimg                     : 6
//  num_inst_mtbuf                    : 0
//  num_inst_mubuf                    : 0
//  num_inst_sopp                     : 10
//  num_inst_sopc                     : 0
//  num_inst_sop1                     : 8
//  num_inst_sop2                     : 0
//  num_inst_smrd                     : 0
//  num_inst_sopk                     : 0
//  num_inst_vop1                     : 21
//  num_inst_vop2                     : 248
//  num_inst_vop3                     : 88
//  num_inst_vopc                     : 0
//  num_inst_vintrp                   : 24
//  constant_literal_operands         : 0
//  num_tex                           : 28
//  num_vmem_group                    : 2
//  vmem_grouping_started             : 0
//
//Compilation Notes:
//
//  PS has no UAV writes, consider forcing REZ/LATEZ.
// Shader Statistics:
// m_uNumActiveWaveFront             : 24
// m_uVRegLimit                      : 47
// m_uSRegLimit                      : 100
// m_uNumVRegs                       : 40
// m_uNumSRegs                       : 72
// m_uSCCodeSize                     : 2572
// m_uWorkgroupSize                  : 64
// m_uNumActiveWaveFrontByVReg       : 24
// m_uNumActiveWaveFrontBySReg       : 28
// m_uNumActiveWaveFrontByLDS        : 40
// m_uCycleSim1Wave                  : 481
// m_uCycleSimNWaves                 : 481

// Assembler Counts:
// num_32bit_ops                     : 329
// num_64bit_ops                     : 149
// num_alu                           : 414
// num_fc                            : 36
// num_inst_exp                      : 2
// num_inst_ldsgds                   : 20
// num_inst_mimg                     : 6
// num_inst_mtbuf                    : 0
// num_inst_mubuf                    : 0
// num_inst_sopp                     : 10
// num_inst_sopc                     : 0
// num_inst_sop1                     : 8
// num_inst_sop2                     : 0
// num_inst_smrd                     : 0
// num_inst_sopk                     : 0
// num_inst_vop1                     : 21
// num_inst_vop2                     : 248
// num_inst_vop3                     : 88
// num_inst_vopc                     : 0
// num_inst_vintrp                   : 24
// num_inst_smem                     : 18
// constant_literal_operands         : 0
// num_tex                           : 28
// num_vmem_group                    : 2
// vmem_grouping_started             : 0
// m_fFullPrecompilePromise          : 0
// m_fIntegerDivideExpansion         : 0
// m_fIntegerModExpansion            : 0
// m_fDoubleDivideExpansion          : 0
// m_fUsesScratch                    : 0
// m_fPerThreadIndirection           : 0
// m_fUsingTableLoads                : 0
// m_fUsingSHmemLoads                : 1
// fSemanticHashFlagOverrideApplied  : 0
// fPSHasNoUAVWrite                  : 1
// m_fRenderTargetsCanBeCompacted    : 0
// version                           : 3
// fCodePatched                      : 0

// Approximately 0 instruction slots used
#endif

const BYTE PBREffect_PSTexturedEmissiveVelocity[] =
{
     68,  88,  66,  67,  85,  21, 
    222, 252, 175,  73, 225, 102, 
     21, 107, 251, 107, 114,  10, 
     50, 155,   1,   0,   0,   0, 
      5,  28,   0,   0,   5,   0, 
      0,   0,  52,   0,   0,   0, 
    240,   0,   0,   0,  60,   1, 
      0,   0, 140,  27,   0,   0, 
    156,  27,   0,   0,  73,  83, 
     71,  78, 180,   0,   0,   0, 
      6,   0,   0,   0,   8,   0, 
      0,   0, 152,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      0,   0,   0,   0,   3,   3, 
      0,   0, 152,   0,   0,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   0,   0,  15,   7, 
      0,   0, 152,   0,   0,   0, 
      2,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      2,   0,   0,   0,   7,   7, 
      0,   0, 161,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      3,   0,   0,   0,  15,   0, 
      0,   0, 167,   0,   0,   0, 
      0,   0,   0,   0,   1,   0, 
      0,   0,   3,   0,   0,   0, 
      4,   0,   0,   0,  15,   7, 
      0,   0, 152,   0,   0,   0, 
      4,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      5,   0,   0,   0,  15,  15, 
      0,   0,  84,  69,  88,  67, 
     79,  79,  82,  68,   0,  67, 
     79,  76,  79,  82,   0,  83, 
     86,  95,  80, 111, 115, 105, 
    116, 105, 111, 110,   0, 171, 
     79,  83,  71,  78,  68,   0, 
      0,   0,   2,   0,   0,   0, 
      8,   0,   0,   0,  56,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   3,   0, 
      0,   0,   0,   0,   0,   0, 
     15,   0,   0,   0,  56,   0, 
      0,   0,   1,   0,   0,   0, 
      0,   0,   0,   0,   1,   0, 
      0,   0,   1,   0,   0,   0, 
      1,  14,   0,   0,  83,  86, 
     95,  84,  97, 114, 103, 101, 
    116,   0, 171, 171,  83,  72, 
     69,  88,  72,  26,   0,   0, 
     80,   0,   0,   0, 146,   6, 
      0,   0,  53,  16,   0,   0, 
      5,   0,   0,   0,  33,   4, 
      0,   0,  80,   0,   0,   0, 
     28,   4,   0,   0, 106,   8, 
      0,   1,  89,   8,   0,   4, 
     70, 142,  32,   0,   0,   0, 
      0,   0,  25,   0,   0,   0, 
     90,   0,   0,   3,   0,  96, 
     16,   0,   0,   0,   0,   0, 
     90,   0,   0,   3,   0,  96, 
     16,   0,   1,   0,   0,   0, 
     88,  24,   0,   4,   0, 112, 
     16,   0,   0,   0,   0,   0, 
     85,  85,   0,   0,  88,  24, 
      0,   4,   0, 112,  16,   0, 
      1,   0,   0,   0,  85,  85, 
      0,   0,  88,  24,   0,   4, 
      0, 112,  16,   0,   2,   0, 
      0,   0,  85,  85,   0,   0, 
     88,  24,   0,   4,   0, 112, 
     16,   0,   3,   0,   0,   0, 
     85,  85,   0,   0,  88,  48, 
      0,   4,   0, 112,  16,   0, 
      4,   0,   0,   0,  85,  85, 
      0,   0,  88,  48,   0,   4, 
      0, 112,  16,   0,   5,   0, 
      0,   0,  85,  85,   0,   0, 
     98,  16,   0,   3,  50,  16, 
     16,   0,   0,   0,   0,   0, 
     98,  16,   0,   3, 114,  16, 
     16,   0,   1,   0,   0,   0, 
     98,  16,   0,   3, 114,  16, 
     16,   0,   2,   0,   0,   0, 
    100,  32,   0,   4, 114,  16, 
     16,   0,   4,   0,   0,   0, 
      1,   0,   0,   0,  98,  16, 
      0,   3, 242,  16,  16,   0, 
      5,   0,   0,   0, 101,   0, 
      0,   3, 242,  32,  16,   0, 
      0,   0,   0,   0, 101,   0, 
      0,   3,  18,  32,  16,   0, 
      1,   0,   0,   0, 104,   0, 
      0,   2,   9,   0,   0,   0, 
      0,   0,   0,   9, 114,   0, 
     16,   0,   0,   0,   0,   0, 
     70,  18,  16, 128,  65,   0, 
      0,   0,   1,   0,   0,   0, 
     70, 130,  32,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
     16,   0,   0,   7, 130,   0, 
     16,   0,   0,   0,   0,   0, 
     70,   2,  16,   0,   0,   0, 
      0,   0,  70,   2,  16,   0, 
      0,   0,   0,   0,  68,   0, 
      0,   5, 130,   0,  16,   0, 
      0,   0,   0,   0,  58,   0, 
     16,   0,   0,   0,   0,   0, 
     56,   0,   0,   7, 114,   0, 
     16,   0,   0,   0,   0,   0, 
    246,  15,  16,   0,   0,   0, 
      0,   0,  70,   2,  16,   0, 
      0,   0,   0,   0,  69,   0, 
      0, 139, 194,   0,   0, 128, 
     67,  85,  21,   0,  50,   0, 
     16,   0,   1,   0,   0,   0, 
     70,  16,  16,   0,   0,   0, 
      0,   0,  70, 126,  16,   0, 
      1,   0,   0,   0,   0,  96, 
     16,   0,   0,   0,   0,   0, 
     50,   0,   0,  15,  50,   0, 
     16,   0,   1,   0,   0,   0, 
     70,   0,  16,   0,   1,   0, 
      0,   0,   2,  64,   0,   0, 
      0,   0,   0,  64,   0,   0, 
      0,  64,   0,   0,   0,   0, 
      0,   0,   0,   0,   2,  64, 
      0,   0,   0,   0, 128, 191, 
      0,   0, 128, 191,   0,   0, 
      0,   0,   0,   0,   0,   0, 
     15,   0,   0,   7, 130,   0, 
     16,   0,   0,   0,   0,   0, 
     70,   0,  16,   0,   1,   0, 
      0,   0,  70,   0,  16,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   8, 130,   0,  16,   0, 
      0,   0,   0,   0,  58,   0, 
     16, 128,  65,   0,   0,   0, 
      0,   0,   0,   0,   1,  64, 
      0,   0,   0,   0, 128,  63, 
     75,   0,   0,   5, 130,   0, 
     16,   0,   0,   0,   0,   0, 
     58,   0,  16,   0,   0,   0, 
      0,   0, 122,   0,   0,   5, 
    114,   0,  16,   0,   2,   0, 
      0,   0, 150,  20,  16,   0, 
      1,   0,   0,   0, 124,   0, 
      0,   5, 114,   0,  16,   0, 
      3,   0,   0,   0,  38,  25, 
     16,   0,   1,   0,   0,   0, 
    122,   0,   0,   5, 194,   0, 
     16,   0,   1,   0,   0,   0, 
      6,  20,  16,   0,   0,   0, 
      0,   0, 124,   0,   0,   5, 
     50,   0,  16,   0,   4,   0, 
      0,   0,  70,  16,  16,   0, 
      0,   0,   0,   0,  56,   0, 
      0,   7, 114,   0,  16,   0, 
      5,   0,   0,   0,  70,   2, 
     16,   0,   2,   0,   0,   0, 
    150,   4,  16,   0,   3,   0, 
      0,   0,  50,   0,   0,  10, 
    114,   0,  16,   0,   5,   0, 
      0,   0,  38,   9,  16,   0, 
      2,   0,   0,   0,  38,   9, 
     16,   0,   3,   0,   0,   0, 
     70,   2,  16, 128,  65,   0, 
      0,   0,   5,   0,   0,   0, 
     56,   0,   0,   7, 114,   0, 
     16,   0,   6,   0,   0,   0, 
     70,   2,  16,   0,   3,   0, 
      0,   0,  38,   9,  16,   0, 
      5,   0,   0,   0,  50,   0, 
      0,  10, 114,   0,  16,   0, 
      3,   0,   0,   0,  38,   9, 
     16,   0,   3,   0,   0,   0, 
     70,   2,  16,   0,   5,   0, 
      0,   0,  70,   2,  16, 128, 
     65,   0,   0,   0,   6,   0, 
      0,   0,  56,   0,   0,   7, 
    114,   0,  16,   0,   6,   0, 
      0,   0,  70,   2,  16,   0, 
      2,   0,   0,   0,  70,   2, 
     16,   0,   5,   0,   0,   0, 
     50,   0,   0,  10, 114,   0, 
     16,   0,   2,   0,   0,   0, 
     38,   9,  16,   0,   5,   0, 
      0,   0, 150,   4,  16,   0, 
      2,   0,   0,   0,  70,   2, 
     16, 128,  65,   0,   0,   0, 
      6,   0,   0,   0,  56,   0, 
      0,   7, 210,   0,  16,   0, 
      4,   0,   0,   0,   6,   9, 
     16,   0,   2,   0,   0,   0, 
      6,   0,  16,   0,   4,   0, 
      0,   0,  50,   0,   0,   9, 
    210,   0,  16,   0,   4,   0, 
      0,   0, 166,  10,  16,   0, 
      1,   0,   0,   0,   6,   9, 
     16,   0,   3,   0,   0,   0, 
      6,  14,  16,   0,   4,   0, 
      0,   0,  16,   0,   0,   7, 
     66,   0,  16,   0,   1,   0, 
      0,   0, 134,   3,  16,   0, 
      4,   0,   0,   0, 134,   3, 
     16,   0,   4,   0,   0,   0, 
     68,   0,   0,   5,  66,   0, 
     16,   0,   1,   0,   0,   0, 
     42,   0,  16,   0,   1,   0, 
      0,   0,  56,   0,   0,   7, 
    210,   0,  16,   0,   4,   0, 
      0,   0, 166,  10,  16,   0, 
      1,   0,   0,   0,   6,  14, 
     16,   0,   4,   0,   0,   0, 
     56,   0,   0,   7, 114,   0, 
     16,   0,   2,   0,   0,   0, 
     70,   2,  16,   0,   2,   0, 
      0,   0,  86,   5,  16,   0, 
      4,   0,   0,   0,  50,   0, 
      0,   9, 114,   0,  16,   0, 
      2,   0,   0,   0, 246,  15, 
     16,   0,   1,   0,   0,   0, 
     70,   2,  16,   0,   3,   0, 
      0,   0,  70,   2,  16,   0, 
      2,   0,   0,   0,  16,   0, 
      0,   7,  66,   0,  16,   0, 
      1,   0,   0,   0,  70,   2, 
     16,   0,   2,   0,   0,   0, 
     70,   2,  16,   0,   2,   0, 
      0,   0,  68,   0,   0,   5, 
     66,   0,  16,   0,   1,   0, 
      0,   0,  42,   0,  16,   0, 
      1,   0,   0,   0,  56,   0, 
      0,   7, 114,   0,  16,   0, 
      2,   0,   0,   0, 166,  10, 
     16,   0,   1,   0,   0,   0, 
     70,   2,  16,   0,   2,   0, 
      0,   0,  56,   0,   0,   7, 
    226,   0,  16,   0,   1,   0, 
      0,   0,  86,   5,  16,   0, 
      1,   0,   0,   0,   6,   9, 
     16,   0,   2,   0,   0,   0, 
     50,   0,   0,   9, 114,   0, 
     16,   0,   1,   0,   0,   0, 
      6,   0,  16,   0,   1,   0, 
      0,   0, 134,   3,  16,   0, 
      4,   0,   0,   0, 150,   7, 
     16,   0,   1,   0,   0,   0, 
     50,   0,   0,   9, 114,   0, 
     16,   0,   1,   0,   0,   0, 
    246,  15,  16,   0,   0,   0, 
      0,   0,  70,  18,  16,   0, 
      2,   0,   0,   0,  70,   2, 
     16,   0,   1,   0,   0,   0, 
     16,   0,   0,   7, 130,   0, 
     16,   0,   0,   0,   0,   0, 
     70,   2,  16,   0,   1,   0, 
      0,   0,  70,   2,  16,   0, 
      1,   0,   0,   0,  68,   0, 
      0,   5, 130,   0,  16,   0, 
      0,   0,   0,   0,  58,   0, 
     16,   0,   0,   0,   0,   0, 
     56,   0,   0,   7, 114,   0, 
     16,   0,   1,   0,   0,   0, 
    246,  15,  16,   0,   0,   0, 
      0,   0,  70,   2,  16,   0, 
      1,   0,   0,   0,  69,   0, 
      0, 139, 194,   0,   0, 128, 
     67,  85,  21,   0, 242,   0, 
     16,   0,   2,   0,   0,   0, 
     70,  16,  16,   0,   0,   0, 
      0,   0,  70, 126,  16,   0, 
      0,   0,   0,   0,   0,  96, 
     16,   0,   0,   0,   0,   0, 
     69,   0,   0, 139, 194,   0, 
      0, 128,  67,  85,  21,   0, 
    114,   0,  16,   0,   3,   0, 
      0,   0,  70,  16,  16,   0, 
      0,   0,   0,   0,  70, 126, 
     16,   0,   2,   0,   0,   0, 
      0,  96,  16,   0,   0,   0, 
      0,   0,  16,  32,   0,   7, 
    130,   0,  16,   0,   0,   0, 
      0,   0,  70,   2,  16,   0, 
      1,   0,   0,   0,  70,   2, 
     16,   0,   0,   0,   0,   0, 
     56,   0,   0,   7, 130,   0, 
     16,   0,   1,   0,   0,   0, 
     26,   0,  16,   0,   3,   0, 
      0,   0,  26,   0,  16,   0, 
      3,   0,   0,   0,  50,   0, 
      0,  10, 114,   0,  16,   0, 
      4,   0,   0,   0, 166,  10, 
     16,   0,   3,   0,   0,   0, 
     70,   2,  16, 128,  65,   0, 
      0,   0,   2,   0,   0,   0, 
     70,   2,  16,   0,   2,   0, 
      0,   0,  56,   0,   0,   7, 
    114,   0,  16,   0,   4,   0, 
      0,   0,   6,   0,  16,   0, 
      3,   0,   0,   0,  70,   2, 
     16,   0,   4,   0,   0,   0, 
      0,   0,   0,  10, 114,   0, 
     16,   0,   2,   0,   0,   0, 
     70,   2,  16,   0,   2,   0, 
      0,   0,   2,  64,   0,   0, 
     10, 215,  35, 189,  10, 215, 
     35, 189,  10, 215,  35, 189, 
      0,   0,   0,   0,  50,   0, 
      0,  12, 114,   0,  16,   0, 
      2,   0,   0,   0, 166,  10, 
     16,   0,   3,   0,   0,   0, 
     70,   2,  16,   0,   2,   0, 
      0,   0,   2,  64,   0,   0, 
     10, 215,  35,  61,  10, 215, 
     35,  61,  10, 215,  35,  61, 
      0,   0,   0,   0,  56,   0, 
      0,   7, 114,   0,  16,   0, 
      5,   0,   0,   0,   6,   0, 
     16,   0,   3,   0,   0,   0, 
     70,   2,  16,   0,   2,   0, 
      0,   0,   0,   0,   0,   7, 
     66,   0,  16,   0,   3,   0, 
      0,   0,  26,   0,  16,   0, 
      3,   0,   0,   0,  26,   0, 
     16,   0,   3,   0,   0,   0, 
      0,   0,   0,   8, 130,   0, 
     16,   0,   0,   0,   0,   0, 
     58,   0,  16, 128,  65,   0, 
      0,   0,   0,   0,   0,   0, 
      1,  64,   0,   0,   0,   0, 
    128,  63,  56,   0,   0,   7, 
    130,   0,  16,   0,   3,   0, 
      0,   0,  58,   0,  16,   0, 
      0,   0,   0,   0,  58,   0, 
     16,   0,   0,   0,   0,   0, 
     56,   0,   0,   7, 130,   0, 
     16,   0,   3,   0,   0,   0, 
     58,   0,  16,   0,   3,   0, 
      0,   0,  58,   0,  16,   0, 
      3,   0,   0,   0,  56,   0, 
      0,   7, 130,   0,  16,   0, 
      0,   0,   0,   0,  58,   0, 
     16,   0,   0,   0,   0,   0, 
     58,   0,  16,   0,   3,   0, 
      0,   0,  56,   0,   0,   7, 
    130,   0,  16,   0,   3,   0, 
      0,   0,  58,   0,  16,   0, 
      1,   0,   0,   0,  58,   0, 
     16,   0,   1,   0,   0,   0, 
     50,   0,   0,   9, 130,   0, 
     16,   0,   1,   0,   0,   0, 
     58,   0,  16,   0,   1,   0, 
      0,   0,  58,   0,  16,   0, 
      1,   0,   0,   0,   1,  64, 
      0,   0,   0,   0, 128, 191, 
     50,   0,   0,  13, 114,   0, 
     16,   0,   2,   0,   0,   0, 
     70,   2,  16, 128,  65,   0, 
      0,   0,   2,   0,   0,   0, 
      6,   0,  16,   0,   3,   0, 
      0,   0,   2,  64,   0,   0, 
      0,   0, 128,  63,   0,   0, 
    128,  63,   0,   0, 128,  63, 
      0,   0,   0,   0,  56,   0, 
      0,   7,  18,   0,  16,   0, 
      3,   0,   0,   0,  58,   0, 
     16,   0,   3,   0,   0,   0, 
      1,  64,   0,   0,   0,   0, 
    128,  62,  54,   0,   0,   8, 
    114,   0,  16,   0,   6,   0, 
      0,   0,   2,  64,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,  54,   0, 
      0,   5, 130,   0,  16,   0, 
      4,   0,   0,   0,   1,  64, 
      0,   0,   0,   0,   0,   0, 
     48,   0,   0,   1,  33,   0, 
      0,   7, 130,   0,  16,   0, 
      5,   0,   0,   0,  58,   0, 
     16,   0,   4,   0,   0,   0, 
      1,  64,   0,   0,   3,   0, 
      0,   0,   3,   0,   4,   3, 
     58,   0,  16,   0,   5,   0, 
      0,   0,  16,   0,   0,  15, 
    130,   0,  16,   0,   5,   0, 
      0,   0,  70, 130,  32, 134, 
     65,   0,   0,   0,   0,   0, 
      0,   0,  16,   0,   0,   0, 
     58,   0,  16,   0,   4,   0, 
      0,   0,  70, 130,  32, 134, 
     65,   0,   0,   0,   0,   0, 
      0,   0,  16,   0,   0,   0, 
     58,   0,  16,   0,   4,   0, 
      0,   0,  68,   0,   0,   5, 
    130,   0,  16,   0,   5,   0, 
      0,   0,  58,   0,  16,   0, 
      5,   0,   0,   0,  56,   0, 
      0,  11, 114,   0,  16,   0, 
      7,   0,   0,   0, 246,  15, 
     16,   0,   5,   0,   0,   0, 
     70, 130,  32, 134,  65,   0, 
      0,   0,   0,   0,   0,   0, 
     16,   0,   0,   0,  58,   0, 
     16,   0,   4,   0,   0,   0, 
     50,   0,   0,  13, 114,   0, 
     16,   0,   8,   0,   0,   0, 
     70, 130,  32, 134,  65,   0, 
      0,   0,   0,   0,   0,   0, 
     16,   0,   0,   0,  58,   0, 
     16,   0,   4,   0,   0,   0, 
    246,  15,  16,   0,   5,   0, 
      0,   0,  70,   2,  16,   0, 
      0,   0,   0,   0,  16,   0, 
      0,   7, 130,   0,  16,   0, 
      5,   0,   0,   0,  70,   2, 
     16,   0,   8,   0,   0,   0, 
     70,   2,  16,   0,   8,   0, 
      0,   0,  68,   0,   0,   5, 
    130,   0,  16,   0,   5,   0, 
      0,   0,  58,   0,  16,   0, 
      5,   0,   0,   0,  56,   0, 
      0,   7, 114,   0,  16,   0, 
      8,   0,   0,   0, 246,  15, 
     16,   0,   5,   0,   0,   0, 
     70,   2,  16,   0,   8,   0, 
      0,   0,  16,  32,   0,   7, 
    130,   0,  16,   0,   5,   0, 
      0,   0,  70,   2,  16,   0, 
      1,   0,   0,   0,  70,   2, 
     16,   0,   7,   0,   0,   0, 
     16,  32,   0,   7, 130,   0, 
     16,   0,   6,   0,   0,   0, 
     70,   2,  16,   0,   7,   0, 
      0,   0,  70,   2,  16,   0, 
      8,   0,   0,   0,  16,  32, 
      0,   7,  18,   0,  16,   0, 
      7,   0,   0,   0,  70,   2, 
     16,   0,   1,   0,   0,   0, 
     70,   2,  16,   0,   8,   0, 
      0,   0,  56,   0,   0,   7, 
     34,   0,  16,   0,   7,   0, 
      0,   0,  58,   0,  16,   0, 
      6,   0,   0,   0,  58,   0, 
     16,   0,   6,   0,   0,   0, 
     50,   0,   0,   9,  66,   0, 
     16,   0,   7,   0,   0,   0, 
     26,   0,  16,   0,   7,   0, 
      0,   0,  42,   0,  16,   0, 
      3,   0,   0,   0,   1,  64, 
      0,   0,   0,   0,   0, 191, 
      0,   0,   0,   8, 130,   0, 
     16,   0,   7,   0,   0,   0, 
     58,   0,  16, 128,  65,   0, 
      0,   0,   5,   0,   0,   0, 
      1,  64,   0,   0,   0,   0, 
    128,  63,  56,   0,   0,   7, 
     18,   0,  16,   0,   8,   0, 
      0,   0,  58,   0,  16,   0, 
      7,   0,   0,   0,  58,   0, 
     16,   0,   7,   0,   0,   0, 
     56,   0,   0,   7,  18,   0, 
     16,   0,   8,   0,   0,   0, 
     10,   0,  16,   0,   8,   0, 
      0,   0,  10,   0,  16,   0, 
      8,   0,   0,   0,  56,   0, 
      0,   7, 130,   0,  16,   0, 
      7,   0,   0,   0,  58,   0, 
     16,   0,   7,   0,   0,   0, 
     10,   0,  16,   0,   8,   0, 
      0,   0,  50,   0,   0,   9, 
    130,   0,  16,   0,   7,   0, 
      0,   0,  42,   0,  16,   0, 
      7,   0,   0,   0,  58,   0, 
     16,   0,   7,   0,   0,   0, 
      1,  64,   0,   0,   0,   0, 
    128,  63,  50,   0,   0,   9, 
     66,   0,  16,   0,   7,   0, 
      0,   0,  42,   0,  16,   0, 
      7,   0,   0,   0,  58,   0, 
     16,   0,   0,   0,   0,   0, 
      1,  64,   0,   0,   0,   0, 
    128,  63,  56,   0,   0,   7, 
     18,   0,  16,   0,   7,   0, 
      0,   0,  10,   0,  16,   0, 
      7,   0,   0,   0,  10,   0, 
     16,   0,   7,   0,   0,   0, 
     50,   0,   0,   9,  18,   0, 
     16,   0,   7,   0,   0,   0, 
     10,   0,  16,   0,   7,   0, 
      0,   0,  58,   0,  16,   0, 
      1,   0,   0,   0,   1,  64, 
      0,   0,   0,   0, 128,  63, 
     56,   0,   0,   7,  82,   0, 
     16,   0,   7,   0,   0,   0, 
      6,   2,  16,   0,   7,   0, 
      0,   0,   6,   3,  16,   0, 
      7,   0,   0,   0,  56,   0, 
      0,   7,  18,   0,  16,   0, 
      7,   0,   0,   0,  10,   0, 
     16,   0,   7,   0,   0,   0, 
      1,  64,   0,   0, 219,  15, 
     73,  64,  52,   0,   0,   7, 
     18,   0,  16,   0,   7,   0, 
      0,   0,  10,   0,  16,   0, 
      7,   0,   0,   0,   1,  64, 
      0,   0, 189,  55, 134,  53, 
     14,   0,   0,   7,  18,   0, 
     16,   0,   7,   0,   0,   0, 
     58,   0,  16,   0,   3,   0, 
      0,   0,  10,   0,  16,   0, 
      7,   0,   0,   0,   0,   0, 
      0,   8, 130,   0,  16,   0, 
      7,   0,   0,   0,  58,   0, 
     16, 128,  65,   0,   0,   0, 
      6,   0,   0,   0,   1,  64, 
      0,   0,   0,   0, 128,  63, 
     56,   0,   0,   7,  18,   0, 
     16,   0,   8,   0,   0,   0, 
     58,   0,  16,   0,   7,   0, 
      0,   0,  58,   0,  16,   0, 
      7,   0,   0,   0,  56,   0, 
      0,   7,  18,   0,  16,   0, 
      8,   0,   0,   0,  10,   0, 
     16,   0,   8,   0,   0,   0, 
     10,   0,  16,   0,   8,   0, 
      0,   0,  56,   0,   0,   7, 
    130,   0,  16,   0,   7,   0, 
      0,   0,  58,   0,  16,   0, 
      7,   0,   0,   0,  10,   0, 
     16,   0,   8,   0,   0,   0, 
     50,   0,   0,   9, 114,   0, 
     16,   0,   8,   0,   0,   0, 
     70,   2,  16,   0,   2,   0, 
      0,   0, 246,  15,  16,   0, 
      7,   0,   0,   0,  70,   2, 
     16,   0,   5,   0,   0,   0, 
     50,   0,   0,  10, 130,   0, 
     16,   0,   6,   0,   0,   0, 
     58,   0,  16, 128,  65,   0, 
      0,   0,   6,   0,   0,   0, 
     58,   0,  16,   0,   6,   0, 
      0,   0,   1,  64,   0,   0, 
      0,   0, 128,  63,  50,   0, 
      0,   9, 130,   0,  16,   0, 
      6,   0,   0,   0,  10,   0, 
     16,   0,   3,   0,   0,   0, 
     58,   0,  16,   0,   6,   0, 
      0,   0,  26,   0,  16,   0, 
      7,   0,   0,   0, 129,   0, 
      0,   5, 130,   0,  16,   0, 
      6,   0,   0,   0,  58,   0, 
     16,   0,   6,   0,   0,   0, 
     56,   0,   0,   7, 178,   0, 
     16,   0,   7,   0,   0,   0, 
      6,   0,  16,   0,   7,   0, 
      0,   0,  70,   8,  16,   0, 
      8,   0,   0,   0,  56,   0, 
      0,   7, 178,   0,  16,   0, 
      7,   0,   0,   0, 246,  15, 
     16,   0,   6,   0,   0,   0, 
     70,  12,  16,   0,   7,   0, 
      0,   0,  56,   0,   0,  10, 
    114,   0,  16,   0,   8,   0, 
      0,   0, 246,  15,  16,   0, 
      5,   0,   0,   0,  70, 130, 
     32,   6,   0,   0,   0,   0, 
     19,   0,   0,   0,  58,   0, 
     16,   0,   4,   0,   0,   0, 
     50,   0,   0,   9, 114,   0, 
     16,   0,   7,   0,   0,   0, 
     70,   2,  16,   0,   4,   0, 
      0,   0, 166,  10,  16,   0, 
      7,   0,   0,   0,  70,   3, 
     16,   0,   7,   0,   0,   0, 
     50,   0,   0,   9, 114,   0, 
     16,   0,   6,   0,   0,   0, 
     70,   2,  16,   0,   8,   0, 
      0,   0,  70,   2,  16,   0, 
      7,   0,   0,   0,  70,   2, 
     16,   0,   6,   0,   0,   0, 
     30,   0,   0,   7, 130,   0, 
     16,   0,   4,   0,   0,   0, 
     58,   0,  16,   0,   4,   0, 
      0,   0,   1,  64,   0,   0, 
      1,   0,   0,   0,  22,   0, 
      0,   1,  69,   0,   0, 139, 
    130,   1,   0, 128,  67,  85, 
     21,   0, 114,   0,  16,   0, 
      2,   0,   0,   0,  70,   2, 
     16,   0,   1,   0,   0,   0, 
     70, 126,  16,   0,   5,   0, 
      0,   0,   0,  96,  16,   0, 
      1,   0,   0,   0,  50,   0, 
      0,   9, 114,   0,  16,   0, 
      2,   0,   0,   0,  70,   2, 
     16,   0,   4,   0,   0,   0, 
     70,   2,  16,   0,   2,   0, 
      0,   0,  70,   2,  16,   0, 
      6,   0,   0,   0,  43,   0, 
      0,   6, 130,   0,  16,   0, 
      0,   0,   0,   0,  42, 128, 
     32,   0,   0,   0,   0,   0, 
     23,   0,   0,   0,  56,   0, 
      0,   7, 130,   0,  16,   0, 
      0,   0,   0,   0,  58,   0, 
     16,   0,   0,   0,   0,   0, 
     26,   0,  16,   0,   3,   0, 
      0,   0,  16,   0,   0,   8, 
    130,   0,  16,   0,   1,   0, 
      0,   0,  70,   2,  16, 128, 
     65,   0,   0,   0,   0,   0, 
      0,   0,  70,   2,  16,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   7, 130,   0,  16,   0, 
      1,   0,   0,   0,  58,   0, 
     16,   0,   1,   0,   0,   0, 
     58,   0,  16,   0,   1,   0, 
      0,   0,  50,   0,   0,  11, 
    114,   0,  16,   0,   0,   0, 
      0,   0,  70,   2,  16,   0, 
      1,   0,   0,   0, 246,  15, 
     16, 128,  65,   0,   0,   0, 
      1,   0,   0,   0,  70,   2, 
     16, 128,  65,   0,   0,   0, 
      0,   0,   0,   0,  72,   0, 
      0, 141, 130,   1,   0, 128, 
     67,  85,  21,   0, 114,   0, 
     16,   0,   0,   0,   0,   0, 
     70,   2,  16,   0,   0,   0, 
      0,   0,  70, 126,  16,   0, 
      4,   0,   0,   0,   0,  96, 
     16,   0,   1,   0,   0,   0, 
     58,   0,  16,   0,   0,   0, 
      0,   0,  50,   0,   0,   9, 
    114,   0,  16,   0,   0,   0, 
      0,   0,  70,   2,  16,   0, 
      5,   0,   0,   0,  70,   2, 
     16,   0,   0,   0,   0,   0, 
     70,   2,  16,   0,   2,   0, 
      0,   0,  69,   0,   0, 139, 
    194,   0,   0, 128,  67,  85, 
     21,   0, 114,   0,  16,   0, 
      1,   0,   0,   0,  70,  16, 
     16,   0,   0,   0,   0,   0, 
     70, 126,  16,   0,   3,   0, 
      0,   0,   0,  96,  16,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   7, 114,  32,  16,   0, 
      0,   0,   0,   0,  70,   2, 
     16,   0,   0,   0,   0,   0, 
     70,   2,  16,   0,   1,   0, 
      0,   0,  56,   0,   0,   8, 
    130,  32,  16,   0,   0,   0, 
      0,   0,  58,   0,  16,   0, 
      2,   0,   0,   0,  58, 128, 
     32,   0,   0,   0,   0,   0, 
     22,   0,   0,   0,  14,   0, 
      0,   7, 114,   0,  16,   0, 
      0,   0,   0,   0,  70,  18, 
     16,   0,   5,   0,   0,   0, 
    246,  31,  16,   0,   5,   0, 
      0,   0,  50,   0,   0,  15, 
     50,   0,  16,   0,   1,   0, 
      0,   0,  70,   0,  16,   0, 
      0,   0,   0,   0,   2,  64, 
      0,   0,   0,   0,   0,  63, 
      0,   0,   0, 191,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      2,  64,   0,   0,   0,   0, 
      0,  63,   0,   0,   0,  63, 
      0,   0,   0,   0,   0,   0, 
      0,   0,  56,   0,   0,   8, 
     18,   0,  16,   0,   0,   0, 
      0,   0,  10,   0,  16,   0, 
      1,   0,   0,   0,  58, 128, 
     32,   0,   0,   0,   0,   0, 
     23,   0,   0,   0,  56,   0, 
      0,   8,  34,   0,  16,   0, 
      0,   0,   0,   0,  26,   0, 
     16,   0,   1,   0,   0,   0, 
     10, 128,  32,   0,   0,   0, 
      0,   0,  24,   0,   0,   0, 
      0,   0,   0,   8, 114,   0, 
     16,   0,   0,   0,   0,   0, 
     70,   2,  16,   0,   0,   0, 
      0,   0,  70,  18,  16, 128, 
     65,   0,   0,   0,   4,   0, 
      0,   0,  85,   0,   0,  10, 
    114,   0,  16,   0,   1,   0, 
      0,   0,  70,   2,  16,   0, 
      0,   0,   0,   0,   2,  64, 
      0,   0,  31,   0,   0,   0, 
     31,   0,   0,   0,  31,   0, 
      0,   0,   0,   0,   0,   0, 
     56,   0,   0,  10, 114,   0, 
     16,   0,   0,   0,   0,   0, 
     70,   2,  16,   0,   0,   0, 
      0,   0,   2,  64,   0,   0, 
      0,   0,   0,  56,   0,   0, 
      0,  56,   0,   0,   0,  60, 
      0,   0,   0,   0,  51,   0, 
      0,  11, 114,   0,  16,   0, 
      0,   0,   0,   0,  70,   2, 
     16, 128, 129,   0,   0,   0, 
      0,   0,   0,   0,   2,  64, 
      0,   0,   0, 224, 255,  59, 
      0, 224, 255,  59,   0, 224, 
    255,  59,   0,   0,   0,   0, 
    130,   0,   0,   5, 114,   0, 
     16,   0,   0,   0,   0,   0, 
     70,   2,  16,   0,   0,   0, 
      0,   0,  30,   0,   0,  10, 
    114,   0,  16,   0,   0,   0, 
      0,   0,  70,   2,  16,   0, 
      0,   0,   0,   0,   2,  64, 
      0,   0,   8,   0,   0,   0, 
      8,   0,   0,   0,   2,   0, 
      0,   0,   0,   0,   0,   0, 
     85,   0,   0,  10, 114,   0, 
     16,   0,   0,   0,   0,   0, 
     70,   2,  16,   0,   0,   0, 
      0,   0,   2,  64,   0,   0, 
      4,   0,   0,   0,   4,   0, 
      0,   0,   2,   0,   0,   0, 
      0,   0,   0,   0,  41,   0, 
      0,  10, 114,   0,  16,   0, 
      1,   0,   0,   0,  70,   2, 
     16,   0,   1,   0,   0,   0, 
      2,  64,   0,   0,   9,   0, 
      0,   0,   9,   0,   0,   0, 
     11,   0,   0,   0,   0,   0, 
      0,   0,  60,   0,   0,   7, 
    114,   0,  16,   0,   0,   0, 
      0,   0,  70,   2,  16,   0, 
      0,   0,   0,   0,  70,   2, 
     16,   0,   1,   0,   0,   0, 
     41,   0,   0,  10,  98,   0, 
     16,   0,   0,   0,   0,   0, 
     86,   6,  16,   0,   0,   0, 
      0,   0,   2,  64,   0,   0, 
      0,   0,   0,   0,  10,   0, 
      0,   0,  20,   0,   0,   0, 
      0,   0,   0,   0,  60,   0, 
      0,   7,  18,   0,  16,   0, 
      0,   0,   0,   0,  26,   0, 
     16,   0,   0,   0,   0,   0, 
     10,   0,  16,   0,   0,   0, 
      0,   0,  60,   0,   0,   7, 
     18,  32,  16,   0,   1,   0, 
      0,   0,  42,   0,  16,   0, 
      0,   0,   0,   0,  10,   0, 
     16,   0,   0,   0,   0,   0, 
     62,   0,   0,   1,  53,  16, 
      0,   0, 113,   2,   0,   0, 
     23,   0,   1,   0,  41, 218, 
     26,   0, 120,   1, 237,  89, 
    107, 104,  28, 215,  21, 190, 
     51,  59,  59,  59, 187,  59, 
    115, 119, 246, 161,  93, 237, 
     67, 218, 217, 135, 164,  93, 
     89, 182, 101, 213, 142, 198, 
    178, 125, 181, 146,  86, 143, 
    181,  54, 141, 227, 216,  38, 
    168, 146, 226,  42,  82,  90, 
     65,  30, 174, 236, 134, 164, 
    148, 173,  99, 150, 144,  56, 
     38, 132, 146, 134, 208,  31, 
     53, 180, 110,   9, 133, 254, 
     47, 133, 216, 138,  48,  97, 
     17, 125, 177, 109, 105, 105, 
    161,  36,  20,  10, 253,  81, 
      8, 254, 149,  31,  37, 234, 
    119, 102, 119,  85, 217, 109, 
    250, 203, 165, 109, 240, 129, 
     51, 223,  57, 119, 238,  61, 
    231, 187, 231,  94, 205, 204, 
     94, 253,  62, 193,  28, 137, 
    214, 254, 252,  22, 225,  95, 
     79, 252, 226, 251,  23,  76, 
    198, 220, 176,  37,  40,  33, 
    201, 219,   6,  93,  25, 123, 
    186, 155, 174, 140,  17,  28, 
    132, 174,  66,  11, 208,  57, 
    168, 238,  99, 172,   4, 164, 
    123,  41,  40, 181, 179, 146, 
    187, 204,  76, 181,  76, 177, 
    198, 161, 251, 161,  31, 194, 
     33, 173,  64, 191,   5, 255, 
     59, 192,  60,  80, 134,  70, 
    160,  42, 180,  35,   8, 233, 
    136,  70, 151,  61, 210,   5, 
    253,  24, 250,  56, 148, 132, 
    114, 134, 160,  36, 148, 155, 
     98, 237, 202,  26,  93, 254, 
    181, 252,  17, 185,  29, 158, 
    159,  34, 196, 141, 248,  16, 
     47, 138,  73,  60,  73, 104, 
    190, 255, 109,   1,  53,  72, 
    171,  90,  46,  40, 249, 157, 
    117,  34, 161, 245, 216,  43, 
     28, 218,  26, 195, 216, 141, 
     24,  93,  25, 243, 210,   5, 
    242, 227, 182,  79, 181, 160, 
    185, 109,  66,  63,  77, 118, 
     32, 199, 201, 216,  35,  29, 
     95, 129, 170,  14,  27, 160, 
    132, 160,  88,  56,  85,  30, 
     96,  12, 123,  74, 117,  99, 
      7, 252, 187,  98, 127,  70, 
    132, 106,  64,  66,  40, 123, 
    156, 169, 179,  29, 104,  71, 
     58, 247, 107, 206,  38, 189, 
    124, 139, 244, 141, 110, 103, 
     59,  67,  90, 190,   4, 191, 
    181,  86,  45, 223,  69, 254, 
    158, 254, 142, 143, 218,  74, 
    110, 121, 217,  21,  84, 150, 
      3, 169, 214, 125, 248, 139, 
    240,  23, 247, 248,  11, 240, 
     23, 246, 248, 231, 225, 159, 
    223, 227, 175, 192,  95, 233, 
    248, 157, 248,   1,  39, 159, 
     75, 251, 218, 158, 182, 123, 
     53, 104, 222, 205, 249,  83, 
    125, 137,  45, 147,  31, 142, 
    236, 250, 139, 247, 248,  11, 
    247, 248, 231, 239, 241,  87, 
    238, 242,  97, 147, 118, 226, 
    211, 126,   4, 212, 254, 151, 
    245,   1, 199, 251, 163,  15, 
     56, 222,  31, 125, 192, 241, 
    254, 232,   3, 142, 247,  71, 
     31, 112, 188,  63, 250, 128, 
    227, 253, 209, 255,   7, 142, 
    195, 116,  81, 110, 223, 172, 
    249,  62, 185, 105,  75,  87, 
     54, 191, 193, 174, 221,  98, 
    238, 250, 150,  38, 189, 191, 
     57,  44,  93, 221, 100, 210, 
     79,  55,  77, 233, 151, 155, 
     37, 247, 155,  91,  85, 247, 
     91,  91, 101, 247, 219,  91, 
    178, 235, 111,  55, 153,  18, 
    105,  72,  74,  87, 227, 236, 
    229,  95, 255,  14, 191, 239, 
     84, 214,  66, 207,  15,  91, 
    168, 181, 125,  47, 115,  23, 
     26, 146, 187, 232, 244, 195, 
     79,   9,  63, 181,   3, 117, 
    234,   7,  52, 218,  62, 103, 
    234, 241, 134, 164, 158, 112, 
    250,   5, 232, 115, 183, 133, 
     65, 234,   7,  12, 181, 253, 
     48, 241, 211, 124,  62, 205, 
     27, 137, 104, 190, 222,  94, 
    237,  20, 184,   6, 210,   5, 
    238, 235,  42,   8, 183, 191, 
     32,  34,  75, 133, 154, 187, 
    232, 227, 190,  98, 132,   7, 
    138, 189, 248, 185, 114, 170, 
     33, 177,  71, 157, 184, 248, 
    253, 213,  69, 113, 128,  81, 
    138,  11, 140, 181, 253, 110, 
     38, 173,  54,  36, 105, 205, 
    233,  23, 103,  44,  65, 237, 
    192,  36, 245,   3, 166, 218, 
    126, 143,  63,  30, 213, 204, 
     92, 183, 166,   6, 116,  45, 
     52, 192,  53,  45, 108, 106, 
     70,  79,  72,  35,  94,  93, 
    251,  19,  90,  98,  52, 165, 
    197,  14,  89,  90, 234,  88, 
     86, 243,   7, 243,  92,  15, 
    247, 115,  53,  48, 200,  49, 
    129, 166,  26,  62,  89,  15, 
      3, 253, 129, 207, 215,  65, 
    164, 169,   7, 207, 213,  61, 
    251, 134, 184, 214, 119, 128, 
    123,   7, 134, 121,  20, 109, 
    222, 190, 133,  58,  72,  53, 
     61,   3, 203, 245, 110, 160, 
    182, 111, 165, 238, 239, 227, 
     92,  31,  48, 185, 186,  47, 
    196,  61, 104, 235, 138, 247, 
    214,  81, 224, 102, 200, 200, 
    214, 189, 192, 112, 172, 191, 
    110,   6, 116, 110,   6, 163, 
    220,  12, 119, 115,  99, 191, 
     46, 140, 131,  81,  97,  28, 
    234,  22, 122,  60, 193, 253, 
    177, 132,  80, 141, 132,  48, 
    150,  18,  53,  53, 169, 115, 
    127,  50, 202, 245, 100,  55, 
     15,   6,  56,  15,   6,  77, 
     30,  12, 135,  56, 223, 207, 
      5,  63, 104,  10, 126,  40, 
     36, 188, 225,   4, 215, 130, 
      9, 225,   9, 180, 198, 120, 
    146, 156, 107,  73, 147, 123, 
    147,  33, 206, 180, 195,  13, 
     73,  59, 210,  96,  94, 187, 
     33, 121, 143,  54, 152, 175, 
    212, 144, 124,  19, 141, 136, 
     43,  91, 139, 187, 242,  53, 
    230, 186, 252,  81,  48, 252, 
     61, 198,   2, 192, 174,  31, 
     96,  71,   0, 227, 239, 176, 
     57, 247, 203,  91, 103, 220, 
    175, 108,  21, 176, 159,  14, 
     75, 111, 108,  46, 187,  39, 
    182, 186, 165, 196, 123,  27, 
    129, 107, 183, 194, 236,  74, 
     51, 252, 151, 159, 185, 194, 
      3,  54, 143, 192, 142, 192, 
    142,  20, 109,  17,   1, 191, 
      8, 248,  69, 192,  47, 108, 
    112,  17, 142, 153,  34,  28, 
     15, 137,  59, 182, 174, 169, 
     95, 210,  49,  23,  46, 212, 
     30,  83, 168,  25, 226, 172, 
    131, 179,  14, 206, 186,  80, 
    151, 244, 154, 199,   0, 103, 
      3, 156,  13, 157,   7, 140, 
     16, 215, 186, 208,  71,  67, 
     93, 253, 253, 202,   5, 228, 
     76,  28,  65,  13,  80, 187, 
    228, 190, 115, 101, 108, 194, 
    102, 114, 255,  66, 153,  19, 
     30,  92,  46, 199, 227, 221, 
     60, 158,  76, 240, 120,  79, 
    138, 239, 184,  46, 223, 244, 
    253,  54, 247,  46,  27, 180, 
    212, 100, 198, 154, 132, 125, 
    130,  13, 245, 171, 201, 129, 
    254, 150, 125, 160, 160,  38, 
    139,   5, 199, 142, 103,   6, 
    121, 124,  96, 136, 199, 139, 
      7, 248, 157, 208,  67,  90, 
     18, 241, 188, 163, 207, 230, 
    147, 163,  15, 241, 142, 237, 
    143, 133, 120, 138, 241, 230, 
    224,  25, 218,  84,  87, 154, 
    197, 211,  23,  20, 194, 194, 
     41, 224, 146,  93, 235, 193, 
    189, 130,  45,  91, 189, 192, 
     34,  48,  13,  28,   4,  90, 
     24,  95, 176, 163, 249,  12, 
    176, 104,  15, 230, 177,  33, 
    209,  46, 242, 169, 163, 101, 
    158, 153,  42,  11, 107, 162, 
     44, 178,  75, 229, 154,  53, 
     93, 226, 153, 233,  73, 158, 
    154, 182, 185,  58,  94, 230, 
    218,   9, 180, 211, 188, 143, 
     93,  85, 210,  71,   5, 239, 
    157,  18,  34,  13, 191, 103, 
    162, 166, 168,  71, 109, 174, 
     77, 217,  34,  69, 247,  39, 
     54, 148, 244, 248,  24, 239, 
    101,  86,  51, 113,  68, 214, 
     44, 112, 234,  57, 241, 190, 
    235,  78, 121,  82, 163, 156, 
    217, 169, 151, 243, 153, 169, 
     73, 190, 107, 227, 190,  53, 
    181, 237, 162, 126, 214, 232, 
    182,  43, 133,  88, 126, 216, 
    254, 216, 207,  93,  52, 159, 
     84, 172, 213, 150, 153,  40, 
     57,  53, 252,  67, 160,  82, 
     98, 182,  13, 251, 165, 155, 
    239, 142, 190, 124,  68, 178, 
    237,  84, 234, 172,  93, 243, 
     30, 181, 205,  59, 162, 149, 
     35, 189,  39,   7, 217, 120, 
      8,  52, 227, 153, 237,  92, 
     14, 241, 204, 169, 115,  10, 
    253, 237, 196,   7, 182, 115, 
    121, 248, 225, 169,   5,  37, 
     66, 126, 113,  59,  23, 135, 
     31, 153,  90,  86, 118,  66, 
    147, 248, 123, 191,  44, 210, 
    104,  79, 143, 111, 231,  50, 
    227,  99,  34,  53,  43, 120, 
    170,  50, 195,  83, 159,  27, 
    225,  61, 200, 151, 194,  28, 
    157,  54, 248,  67, 101, 155, 
    239,  47, 207, 240,   3, 229, 
     50, 215,  39, 198, 132,  49, 
     33,   4, 159,  24,  17, 169, 
     99,  54, 207, 161,  95,  22, 
    125, 168, 254,  35, 171, 140, 
    165, 145, 227, 208, 202, 215, 
     21, 194, 225, 243, 192,  37, 
     81, 179, 112, 111,  88, 200, 
     86,  22, 120,   8, 152,   3, 
    142,   0, 243, 200,  63,  44, 
    162, 249,  62, 224,  33,  49, 
    152,  39,  62,  35,  66, 228, 
    211, 227,  85, 222,  55,  95, 
     21, 249,  74,  85, 244,  47, 
     85, 107, 249, 135, 231, 120, 
    223, 195,  39, 121, 250,  97, 
    193, 213, 217,  42, 215, 166, 
    209, 238, 172, 197, 183, 149, 
    220, 248,  12, 207, 206, 207, 
    136,  28, 124, 171, 242, 186, 
    162, 142,  11, 174, 205, 183, 
    214, 206,  83, 169,  41, 185, 
    217,  18, 207, 130, 139,  69, 
    107,  84, 157, 211,  40, 103, 
    127, 229, 155, 249, 124, 101, 
    142, 239, 218, 184, 159, 173, 
    108, 187, 168,  95,  22, 107, 
    148,  70,  12, 226, 159, 198, 
    218, 144, 157, 159, 198, 150, 
    199, 148,  37,  33,  82, 233, 
    179, 162, 230,  29,  23, 230, 
    157, 153,  86, 172, 220, 158, 
     88, 100, 247,  97, 156,  89, 
     57, 167,  12,   0, 195, 149, 
      5, 133,  98,  71,  42, 203, 
     74, 142, 238, 207, 162, 214, 
    179,  37, 145, 158, 159, 225, 
    233,  71,  48, 159, 138, 224, 
    214, 217,  82, 205, 154, 157, 
    225, 214, 252,  28, 183, 144, 
     75, 171, 150, 184, 183, 122, 
    146, 251, 170,  85, 174,  79, 
    207,   8,  99, 122,  78, 240, 
    105,  33, 172,  89,  91, 244, 
     85, 198,  68, 255, 248, 136, 
    248, 130,  91, 217,  58, 239, 
    150, 183, 232,  89,  74, 117, 
    199,  31, 138,  83, 119,  35, 
    209, 170, 187, 222, 253, 143, 
    186, 235, 168,  51, 213, 221, 
      0,  82, 221,  57, 144, 184, 
    234, 237, 186,  27, 237, 186, 
    243, 255,  64, 221, 123, 193, 
    165,  85, 247, 178, 150,  69, 
    142, 254, 233, 171, 249,  44, 
    106, 185, 107, 227, 126, 239, 
    244, 182,  43,  73, 232, 212, 
    253, 184, 243, 183, 209, 139, 
    186, 251,  99,  81, 158, 197, 
    243, 128,  69, 163,  92, 138, 
     70,  83, 254, 179, 209, 154, 
     55,  22,  66, 221, 163,  26, 
     94, 142, 205,  92, 236,   0, 
    158,  17,  81, 244, 111, 217, 
     38, 198, 153,  49, 218, 251, 
    168, 123, 108,  65, 161,  56, 
    145, 216, 178, 179, 247, 157, 
    186,  23,  75, 194, 155, 177, 
    240, 254, 232, 231, 136, 131, 
    186,  71, 107, 126, 248, 126, 
    248, 126,  60,  55, 205, 106, 
    148,   7, 171,   5,  30, 170, 
     30, 231, 250, 168,  37, 140, 
    209, 126, 193,  71,  67, 194, 
    159, 193, 243, 117,  96,  76, 
    244, 134,  71, 132, 151,  93, 
    107, 122, 130,   9, 196, 190, 
    234, 160, 201,  94, 119, 208, 
     98, 175, 180, 124, 233, 204, 
    175,  76,   9,  47, 243, 140, 
    152, 100, 108, 115, 220, 159, 
     57, 238, 160, 236, 179, 106, 
    137, 204,  28, 158, 217, 188, 
     25,  48, 100, 139,  56, 249, 
    130, 167, 243, 132, 238, 192, 
    233,  33,  55, 208,  83, 140, 
    222, 246,   1, 181, 226, 224, 
    237,   0,  80,  45, 138, 219, 
     42, 242, 185, 187, 132, 226, 
     65,  62,  66,  13, 249,   8, 
    115, 200, 231, 248, 200, 167, 
     33, 159,  26,  44,  59, 121, 
     60, 193,  73,   7, 181,  97, 
    147,  51,  29, 223,  19, 122, 
    177, 193,  12, 124,  47,  24, 
     39,  26, 140, 227, 253, 206, 
     31, 109, 176,   0, 107,  72, 
      1, 169, 193, 206, 178, 154, 
     79, 146, 205, 128,  20,   1, 
    229,  43,  77, 233, 195, 247, 
     92,  50, 242, 186, 100,  95, 
    125,  71, 145, 241, 124,  96, 
     54,  61, 143, 216,   7,  59, 
    199,  36,  41, 209, 148, 144, 
     71,  98, 203,  64, 137, 189, 
     34, 203,  39, 235, 178,  60, 
    116,  93,  81, 134,  94,  85, 
    148, 195, 146,  91, 182, 101, 
    196, 240, 253, 233,  61, 151, 
     11,  49, 100, 175,  94, 223, 
     81,  21,  39, 134, 140, 177, 
     50, 198, 202,  24,  43, 211, 
     88,  69,  57,  89, 199, 184, 
    235, 170,  58, 244, 170, 170, 
     30, 150,  61, 138, 173,  96, 
    108,  68,  10, 213, 119,  52, 
    231, 216, 244,  56, 195,  24, 
     36, 131,  44,   3, 193, 142, 
    177, 147, 208, 161, 235, 154, 
     58, 244,  26, 198,  48,  15, 
    179, 175, 182, 243, 190, 201, 
    216,  97, 230,  98,  54, 189, 
     63, 123,  37,  85,  98, 158, 
     55,  62, 202,  40,   1,  32, 
    222, 167, 222,  31, 177,  13, 
    188, 195, 116, 151,  45,  12, 
    247, 152, 224, 158,  17, 241, 
     21, 248,  93,  94,  91,  68, 
    253,  99,  34, 102, 140,   8, 
    122, 199, 165, 194, 178, 218, 
    211, 165, 168, 241, 152, 170, 
    150, 149,  79, 110, 210,  68, 
    233, 204, 171, 115,   6, 134, 
     60, 119, 157, 251,  49, 246, 
    210, 173,  56, 241, 115, 236, 
    123, 132,  22, 100, 175, 144, 
    139,  54,  13, 176,  43,  52, 
     14, 109, 116,  86, 185,  43, 
    116, 140, 139, 182, 110, 192, 
    174, 208, 225,  37, 218,  44, 
    192, 174, 224,  99, 145, 218, 
    246,  30, 237,  58,  25,  21, 
    137, 209,  55, 106,  71,  80, 
     54, 167, 237,  48, 160,  35, 
     14,  93, 180, 217, 132, 109, 
    121, 167, 157,  16,  31,  81, 
    142, 208, 153,  59, 157,  83, 
     75,  14,  33, 198, 240,  45, 
      7,  26, 173, 115, 239, 158, 
    212, 250, 111, 222, 190,  17, 
    127, 145, 108, 146,  15, 218, 
     99,  54, 219,  72,  60, 117, 
     40, 201,  65, 164,  91, 101, 
     55, 200, 252,  39, 209,  40, 
     40, 228, 227, 246,  56, 170, 
      3,  77, 149, 183, 255,   3, 
    114, 153, 118,   1, 164, 208, 
    238, 103, 181, 145, 106, 232, 
    135, 118, 120, 124, 183, 221, 
     94, 106, 227,  10, 148, 152, 
    150, 199,  22,  39, 206, 204, 
     46,  94, 188, 244, 196, 234, 
    218, 243, 139, 243, 235, 151, 
     46,  46, 150, 215,  55, 214, 
    158, 188, 244, 248, 153, 249, 
    197, 139,  27,  79,  46,  62, 
    246, 229,  47, 174, 174, 109, 
     92,  92, 156, 122, 238, 153, 
     11, 235,  79, 175, 173,  46, 
     62, 190, 242, 220,  11, 143, 
     60, 187, 118, 106, 242, 244, 
    244,  83,  79, 161, 227,  19, 
    167,  30,  59, 179, 246, 194, 
    165, 175, 110, 172, 173,  78, 
     63, 179, 126, 241, 226, 250, 
    243, 107, 231, 214, 158, 126, 
    238, 201, 245,  75,  47,  30, 
    184, 176,  74, 121,  90, 242, 
    147, 118, 102, 218,  38,  84, 
     47,  42, 122, 235, 215, 140, 
     83, 235, 118,  21,  32, 102, 
    201, 115, 215, 106, 127, 166, 
    132, 177, 191,   3, 220,  28, 
     52, 108,  88,  72,  83,  72, 
      8,   0,   0,   0,  29,  28, 
    105, 213, 152, 164,  25, 121, 
     88,  80,  68,  80,  97,   0, 
      0,   0,  68,  58,  92,  65, 
     84,  71,  92, 115, 116,  95, 
    100, 101, 118,  92,  75, 105, 
    116, 115,  92,  68, 105, 114, 
    101,  99, 116,  88,  84,  75, 
     92, 115, 114,  99,  92,  83, 
    104,  97, 100, 101, 114, 115, 
     92,  67, 111, 109, 112, 105, 
    108, 101, 100,  92,  88,  98, 
    111, 120,  79, 110, 101,  80, 
     66,  82,  69, 102, 102, 101, 
     99, 116,  95,  80,  83,  84, 
    101, 120, 116, 117, 114, 101, 
    100,  69, 109, 105, 115, 115, 
    105, 118, 101,  86, 101, 108, 
    111,  99, 105, 116, 121,  46, 
    112, 100,  98
};
