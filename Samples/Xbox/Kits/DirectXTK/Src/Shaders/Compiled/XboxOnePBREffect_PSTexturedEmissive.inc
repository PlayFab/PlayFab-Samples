#if 0
//
// Generated by Microsoft (R) D3D Shader Disassembler for Durango
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xy          0     NONE   float   xy  
// TEXCOORD                 1   xyzw        1     NONE   float   xyz 
// TEXCOORD                 2   xyz         2     NONE   float   xyz 
// COLOR                    0   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
// Opaque Custom Data - XBOX Precompiled Shader Header
// First Precompiled Shader at offset:[904]
// Embedded Data:
//  0x00000388 - Offset To First Precompiled Shader
//  0x00000050 - Original Shader Descriptor
//  0x00000383 - Original Shader Size
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[25], dynamicIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texturecube (float,float,float,float) t4
dcl_resource_texturecube (float,float,float,float) t5
dcl_input_ps linear v0.xy
dcl_input_ps linear v1.xyz
dcl_input_ps linear v2.xyz
dcl_output o0.xyzw
dcl_temps 9
add r0.xyz, -v1.xyzx, cb0[0].xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
sample_indexable(texture2d)(float,float,float,float) r1.xy, v0.xyxx, t1.xyzw, s0
mad r1.xy, r1.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r0.w, r1.xyxx, r1.xyxx
add r0.w, -r0.w, l(1.000000)
sqrt r0.w, r0.w
deriv_rtx_coarse r2.xyz, v1.yzxy
deriv_rty_coarse r3.xyz, v1.zxyz
deriv_rtx_coarse r1.zw, v0.xxxy
deriv_rty_coarse r4.xy, v0.xyxx
mul r5.xyz, r2.xyzx, r3.yzxy
mad r5.xyz, r2.zxyz, r3.zxyz, -r5.xyzx
mul r6.xyz, r3.xyzx, r5.zxyz
mad r3.xyz, r3.zxyz, r5.xyzx, -r6.xyzx
mul r6.xyz, r2.xyzx, r5.xyzx
mad r2.xyz, r5.zxyz, r2.yzxy, -r6.xyzx
mul r4.xzw, r2.xxyz, r4.xxxx
mad r4.xzw, r1.zzzz, r3.xxyz, r4.xxzw
dp3 r1.z, r4.xzwx, r4.xzwx
rsq r1.z, r1.z
mul r4.xzw, r1.zzzz, r4.xxzw
mul r2.xyz, r2.xyzx, r4.yyyy
mad r2.xyz, r1.wwww, r3.xyzx, r2.xyzx
dp3 r1.z, r2.xyzx, r2.xyzx
rsq r1.z, r1.z
mul r2.xyz, r1.zzzz, r2.xyzx
mul r1.yzw, r1.yyyy, r2.xxyz
mad r1.xyz, r1.xxxx, r4.xzwx, r1.yzwy
mad r1.xyz, r0.wwww, v2.xyzx, r1.xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r1.xyzx
sample_indexable(texture2d)(float,float,float,float) r2.xyzw, v0.xyxx, t0.xyzw, s0
sample_indexable(texture2d)(float,float,float,float) r3.xyz, v0.xyxx, t2.xyzw, s0
dp3_sat r0.w, r1.xyzx, r0.xyzx
mul r1.w, r3.y, r3.y
mad r4.xyz, r3.zzzz, -r2.xyzx, r2.xyzx
mul r4.xyz, r3.xxxx, r4.xyzx
add r2.xyz, r2.xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
mad r2.xyz, r3.zzzz, r2.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
mul r5.xyz, r3.xxxx, r2.xyzx
add r3.z, r3.y, r3.y
add r0.w, -r0.w, l(1.000000)
mul r3.w, r0.w, r0.w
mul r3.w, r3.w, r3.w
mul r0.w, r0.w, r3.w
mul r3.w, r1.w, r1.w
mad r1.w, r1.w, r1.w, l(-1.000000)
mad r2.xyz, -r2.xyzx, r3.xxxx, l(1.000000, 1.000000, 1.000000, 0.000000)
mul r3.x, r3.w, l(0.250000)
mov r6.xyz, l(0,0,0,0)
mov r4.w, l(0)
loop 
  ige r5.w, r4.w, l(3)
  breakc_nz r5.w
  dp3 r5.w, -cb0[r4.w + 16].xyzx, -cb0[r4.w + 16].xyzx
  rsq r5.w, r5.w
  mul r7.xyz, r5.wwww, -cb0[r4.w + 16].xyzx
  mad r8.xyz, -cb0[r4.w + 16].xyzx, r5.wwww, r0.xyzx
  dp3 r5.w, r8.xyzx, r8.xyzx
  rsq r5.w, r5.w
  mul r8.xyz, r5.wwww, r8.xyzx
  dp3_sat r5.w, r1.xyzx, r7.xyzx
  dp3_sat r6.w, r7.xyzx, r8.xyzx
  dp3_sat r7.x, r1.xyzx, r8.xyzx
  mul r7.y, r6.w, r6.w
  mad r7.z, r7.y, r3.z, l(-0.500000)
  add r7.w, -r5.w, l(1.000000)
  mul r8.x, r7.w, r7.w
  mul r8.x, r8.x, r8.x
  mul r7.w, r7.w, r8.x
  mad r7.w, r7.z, r7.w, l(1.000000)
  mad r7.z, r7.z, r0.w, l(1.000000)
  mul r7.x, r7.x, r7.x
  mad r7.x, r7.x, r1.w, l(1.000000)
  mul r7.xz, r7.xxzx, r7.xxwx
  mul r7.x, r7.x, l(3.141593)
  max r7.x, r7.x, l(0.000001)
  div r7.x, r3.w, r7.x
  add r7.w, -r6.w, l(1.000000)
  mul r8.x, r7.w, r7.w
  mul r8.x, r8.x, r8.x
  mul r7.w, r7.w, r8.x
  mad r8.xyz, r2.xyzx, r7.wwww, r5.xyzx
  mad r6.w, -r6.w, r6.w, l(1.000000)
  mad r6.w, r3.x, r6.w, r7.y
  rcp r6.w, r6.w
  mul r7.xyw, r7.xxxx, r8.xyxz
  mul r7.xyw, r6.wwww, r7.xyxw
  mul r8.xyz, r5.wwww, cb0[r4.w + 19].xyzx
  mad r7.xyz, r4.xyzx, r7.zzzz, r7.xywx
  mad r6.xyz, r8.xyzx, r7.xyzx, r6.xyzx
  iadd r4.w, r4.w, l(1)
endloop 
sample_indexable(texturecube)(float,float,float,float) r2.xyz, r1.xyzx, t5.xyzw, s1
mad r2.xyz, r4.xyzx, r2.xyzx, r6.xyzx
itof r0.w, cb0[23].z
mul r0.w, r0.w, r3.y
dp3 r1.w, -r0.xyzx, r1.xyzx
add r1.w, r1.w, r1.w
mad r0.xyz, r1.xyzx, -r1.wwww, -r0.xyzx
sample_l_indexable(texturecube)(float,float,float,float) r0.xyz, r0.xyzx, t4.xyzw, s1, r0.w
mad r0.xyz, r5.xyzx, r0.xyzx, r2.xyzx
sample_indexable(texture2d)(float,float,float,float) r1.xyz, v0.xyxx, t3.xyzw, s0
add o0.xyz, r0.xyzx, r1.xyzx
mul o0.w, r2.w, cb0[22].w
ret 
// Opaque Custom Data - XBOX Precompiled Shader Object
// Offset:[904], bundle is:[588] DWORDS.
// Disassembled Precompiled Shader Object:
// Shader Type               : (PS)
// Shader Hw Stage           : (PS)
// PDB Filename              : D:\ATG\st_dev\Kits\DirectXTK\src\Shaders\Compiled\XboxOnePBREffect_PSTexturedEmissive.pdb
// Shader Semantic Hash      : 0x6c0d073f36d01076
//
// Shader Data:
; ----------------- PS Data ------------------------
; Input Semantic Mappings
;   [0] generic,  usageIdx 0, channelMask  3, param0, paramSlot0, DefaultVal={0,0,0,0}
;   [1] generic,  usageIdx 1, channelMask  7, param1, paramSlot1, DefaultVal={0,0,0,0}
;   [2] generic,  usageIdx 2, channelMask  7, param2, paramSlot2, DefaultVal={0,0,0,0}

codeLenInByte        = 2352 bytes;

; launchModeFlags    = 0x0000000E
srdTableSupport      = TRUE
immediateSupportExt  = TRUE
srdTableSupportExt   = TRUE

userElementCount     = 1;
;  userElements[0]      = PTR_EXTENDED_USER_DATA, ReferencedExtUserElements=1, s[0x0:1]
extUserElementCount  = 9;
;  extUserElements 1[0] = IMM_RESOURCE 0, offset 0x0:7 dwords
;  extUserElements 1[1] = IMM_RESOURCE 1, offset 0x8:15 dwords
;  extUserElements 1[2] = IMM_RESOURCE 2, offset 0x10:23 dwords
;  extUserElements 1[3] = IMM_RESOURCE 3, offset 0x18:31 dwords
;  extUserElements 1[4] = IMM_RESOURCE 4, offset 0x20:39 dwords
;  extUserElements 1[5] = IMM_RESOURCE 5, offset 0x28:47 dwords
;  extUserElements 1[6] = IMM_SAMPLER 0, offset 0x30:51 dwords
;  extUserElements 1[7] = IMM_SAMPLER 1, offset 0x34:55 dwords
;  extUserElements 1[8] = IMM_CONST_BUFFER 0, offset 0x38:59 dwords
NumVgprs             = 45;
NumSgprs             = 44;
FloatMode            = 192;
IeeeMode             = 0;
FlatPtr32            = 0;
ScratchSize          = 0 dwords/thread;
LDSByteSize          = 0 bytes/workgroup (compile time only);
ScratchWaveOffsetReg = s65535;
; texSamplerUsage         = 0x00000003
; constBufUsage           = 0x00000001

; SPI_SHADER_PGM_RSRC2_PS = 0x00000004
SSPRP:SCRATCH_EN            = 0
SSPRP:USER_SGPR             = 2
SSPRP:TRAP_PRESENT          = 0
SSPRP:WAVE_CNT_EN           = 0
SSPRP:EXTRA_LDS_SIZE        = 0
SSPRP:EXCP_EN               = 0
; SPI_SHADER_Z_FORMAT     = 0x00000000
SPZF:Z_EXPORT_FORMAT        = 0; SPI_SHADER_ZERO
; SPI_PS_IN_CONTROL       = 0x00000003
SPIC:NUM_INTERP             = 3
SPIC:PARAM_GEN              = 0
SPIC:FOG_ADDR               = 0
SPIC:BC_OPTIMIZE_DISABLE    = 0
SPIC:PASS_FOG_THROUGH_PS    = 0
; SPI_PS_INPUT_ADDR       = 0x00000002
SPIA:PERSP_CENTER_ENA       = 1
; DB_SHADER_CONTROL       = 0x00000010
DB:Z_ORDER                  = 1
DB:CONSERVATIVE_Z_EXPORT    = 0; EXPORT_ANY_Z
; CB_SHADER_MASK          = 0x0000000F
CB:OUTPUT0_ENABLE           = 15

dx9TexCubeMask           = 0x00000030

; export table for mrt0 [patch@(bytes=0x91C, dwords=0x247)]
// Export Patch Code (FMT_ZERO):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_nop         0x0000                                  // 000000000000: BF800000
  s_nop         0x0000                                  // 000000000004: BF800000
  exp           null, off, off, off, off done vm        // 000000000008: F8001890 00000000
end
// Export Patch Code (FMT_32_R):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_nop         0x0000                                  // 000000000000: BF800000
  s_nop         0x0000                                  // 000000000004: BF800000
  exp           mrt0, v1, off, off, off done vm         // 000000000008: F8001801 00000001
end
// Export Patch Code (FMT_32_GR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_nop         0x0000                                  // 000000000000: BF800000
  s_nop         0x0000                                  // 000000000004: BF800000
  exp           mrt0, v1, v2, off, off done vm          // 000000000008: F8001803 00000201
end
// Export Patch Code (FMT_32_AR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_nop         0x0000                                  // 000000000000: BF800000
  s_nop         0x0000                                  // 000000000004: BF800000
  exp           mrt0, v1, v3, off, off done vm          // 000000000008: F8001803 00000301
end
// Export Patch Code (FMT_FP16_ABGR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  v_cvt_pkrtz_f16_f32  v1, v1, v2                       // 000000000000: 5E020501
  v_cvt_pkrtz_f16_f32  v0, v0, v3                       // 000000000004: 5E000700
  exp           mrt0, v1, v1, v0, v0 done compr vm      // 000000000008: F8001C0F 00000001
end
// Export Patch Code (FMT_UNORM16_ABGR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  v_cvt_pknorm_u16_f32  v1, v1, v2                      // 000000000000: 5C020501
  v_cvt_pknorm_u16_f32  v0, v0, v3                      // 000000000004: 5C000700
  exp           mrt0, v1, v1, v0, v0 done compr vm      // 000000000008: F8001C0F 00000001
end
// Export Patch Code (FMT_SNORM16_ABGR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  v_cvt_pknorm_i16_f32  v1, v1, v2                      // 000000000000: 5A020501
  v_cvt_pknorm_i16_f32  v0, v0, v3                      // 000000000004: 5A000700
  exp           mrt0, v1, v1, v0, v0 done compr vm      // 000000000008: F8001C0F 00000001
end
// Export Patch Code (FMT_UINT16_ABGR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  v_cvt_pk_u16_u32  v1, v1, v2                          // 000000000000: 60020501
  v_cvt_pk_u16_u32  v0, v0, v3                          // 000000000004: 60000700
  exp           mrt0, v1, v1, v0, v0 done compr vm      // 000000000008: F8001C0F 00000001
end
// Export Patch Code (FMT_SINT16_ABGR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  v_cvt_pk_i16_i32  v1, v1, v2                          // 000000000000: 62020501
  v_cvt_pk_i16_i32  v0, v0, v3                          // 000000000004: 62000700
  exp           mrt0, v1, v1, v0, v0 done compr vm      // 000000000008: F8001C0F 00000001
end
// Export Patch Code (FMT_32_ABGR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_nop         0x0000                                  // 000000000000: BF800000
  s_nop         0x0000                                  // 000000000004: BF800000
  exp           mrt0, v1, v2, v0, v3 done vm            // 000000000008: F800180F 03000201
end

// Shader Instructions:
shader main
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_mov_b64     s[40:41], exec                          // 000000000000: BEA8047E
  s_wqm_b64     exec, exec // wrscc                     // 000000000004: BEFE0A7E
  s_load_dwordx8  s[4:11], s[0:1], 0x08                 // 000000000008: C0C20108
  s_load_dwordx4  s[12:15], s[0:1], 0x30                // 00000000000C: C0860130
  s_mov_b32     m0, s2                                  // 000000000010: BEFC0302
  v_interp_p1_f32  v4, v0, attr0.x                      // 000000000014: C8100000
  v_interp_p1_f32  v5, v0, attr0.y                      // 000000000018: C8140100
  v_interp_p2_f32  v4, v1, attr0.x                      // 00000000001C: C8110001
  v_interp_p2_f32  v5, v1, attr0.y                      // 000000000020: C8150101
  s_waitcnt     lgkmcnt(0)                              // 000000000024: BF8C007F
  image_sample  v[6:9], v[4:5], s[4:11], s[12:15] dmask:0x3 // 000000000028: F0800300 00610604
  s_load_dwordx8  s[4:11], s[0:1], 0x10                 // 000000000030: C0C20110
  s_waitcnt     lgkmcnt(0)                              // 000000000034: BF8C007F
  image_sample  v[8:11], v[4:5], s[4:11], s[12:15] dmask:0x7 // 000000000038: F0800700 00610804
  v_interp_p1_f32  v11, v0, attr1.x                     // 000000000040: C82C0400
  v_interp_p1_f32  v12, v0, attr1.z                     // 000000000044: C8300600
  v_interp_p2_f32  v11, v1, attr1.x                     // 000000000048: C82D0401
  v_interp_p1_f32  v13, v0, attr1.y                     // 00000000004C: C8340500
  v_interp_p2_f32  v12, v1, attr1.z                     // 000000000050: C8310601
  v_interp_p2_f32  v13, v1, attr1.y                     // 000000000054: C8350501
  ds_swizzle_b32  v14, v11 offset:32853                 // 000000000058: D8D48055 0E00000B
  ds_swizzle_b32  v15, v11 offset:32768                 // 000000000060: D8D48000 0F00000B
  ds_swizzle_b32  v16, v12 offset:32938                 // 000000000068: D8D480AA 1000000C
  ds_swizzle_b32  v17, v12 offset:32768                 // 000000000070: D8D48000 1100000C
  ds_swizzle_b32  v18, v12 offset:32853                 // 000000000078: D8D48055 1200000C
  ds_swizzle_b32  v19, v12 offset:32768                 // 000000000080: D8D48000 1300000C
  s_waitcnt     lgkmcnt(4)                              // 000000000088: BF8C047F
  v_sub_f32     v14, v14, v15                           // 00000000008C: 081C1F0E
  s_waitcnt     lgkmcnt(2)                              // 000000000090: BF8C027F
  v_sub_f32     v15, v16, v17                           // 000000000094: 081E2310
  ds_swizzle_b32  v16, v11 offset:32938                 // 000000000098: D8D480AA 1000000B
  ds_swizzle_b32  v17, v11 offset:32768                 // 0000000000A0: D8D48000 1100000B
  ds_swizzle_b32  v20, v13 offset:32938                 // 0000000000A8: D8D480AA 1400000D
  ds_swizzle_b32  v21, v13 offset:32768                 // 0000000000B0: D8D48000 1500000D
  ds_swizzle_b32  v22, v13 offset:32853                 // 0000000000B8: D8D48055 1600000D
  ds_swizzle_b32  v23, v13 offset:32768                 // 0000000000C0: D8D48000 1700000D
  s_waitcnt     lgkmcnt(6)                              // 0000000000C8: BF8C067F
  v_sub_f32     v18, v18, v19                           // 0000000000CC: 08242712
  s_waitcnt     lgkmcnt(4)                              // 0000000000D0: BF8C047F
  v_sub_f32     v16, v16, v17                           // 0000000000D4: 08202310
  s_waitcnt     lgkmcnt(2)                              // 0000000000D8: BF8C027F
  v_sub_f32     v17, v20, v21                           // 0000000000DC: 08222B14
  v_mul_legacy_f32  v19, v14, v15                       // 0000000000E0: 0E261F0E
  s_waitcnt     lgkmcnt(0)                              // 0000000000E4: BF8C007F
  v_sub_f32     v20, v22, v23                           // 0000000000E8: 08282F16
  v_mul_legacy_f32  v21, v18, v17                       // 0000000000EC: 0E2A2312
  v_mad_legacy_f32  v19, v18, v16, -v19                 // 0000000000F0: D2800013 844E2112
  ds_swizzle_b32  v22, v5 offset:32938                  // 0000000000F8: D8D480AA 16000005
  ds_swizzle_b32  v23, v5 offset:32768                  // 000000000100: D8D48000 17000005
  v_mul_legacy_f32  v24, v20, v16                       // 000000000108: 0E302114
  v_mad_legacy_f32  v21, v20, v15, -v21                 // 00000000010C: D2800015 84561F14
  v_mul_legacy_f32  v25, v14, v19                       // 000000000114: 0E32270E
  s_load_dwordx4  s[4:7], s[0:1], 0x38                  // 000000000118: C0820138
  ds_swizzle_b32  v26, v5 offset:32853                  // 00000000011C: D8D48055 1A000005
  ds_swizzle_b32  v3, v5 offset:32768                   // 000000000124: D8D48000 03000005
  ds_swizzle_b32  v27, v4 offset:32938                  // 00000000012C: D8D480AA 1B000004
  ds_swizzle_b32  v28, v4 offset:32768                  // 000000000134: D8D48000 1C000004
  s_waitcnt     lgkmcnt(0)                              // 00000000013C: BF8C007F
  v_sub_f32     v22, v22, v23                           // 000000000140: 082C2F16
  v_mad_legacy_f32  v24, v14, v17, -v24                 // 000000000144: D2800018 8462230E
  v_mul_legacy_f32  v23, v17, v21                       // 00000000014C: 0E2E2B11
  v_mul_legacy_f32  v29, v18, v21                       // 000000000150: 0E3A2B12
  v_mad_legacy_f32  v25, v21, v20, -v25                 // 000000000154: D2800019 84662915
  ds_swizzle_b32  v30, v4 offset:32853                  // 00000000015C: D8D48055 1E000004
  ds_swizzle_b32  v2, v4 offset:32768                   // 000000000164: D8D48000 02000004
  v_sub_f32     v3, v26, v3                             // 00000000016C: 0806071A
  v_sub_f32     v26, v27, v28                           // 000000000170: 0834391B
  v_mul_legacy_f32  v27, v16, v24                       // 000000000174: 0E363110
  v_mad_legacy_f32  v23, v16, v19, -v23                 // 000000000178: D2800017 845E2710
  v_mul_legacy_f32  v16, v20, v24                       // 000000000180: 0E203114
  v_mad_legacy_f32  v29, v24, v14, -v29                 // 000000000184: D280001D 84761D18
  v_mul_legacy_f32  v14, v22, v25                       // 00000000018C: 0E1C3316
  s_waitcnt     lgkmcnt(0)                              // 000000000190: BF8C007F
  v_sub_f32     v2, v30, v2                             // 000000000194: 0804051E
  v_mul_legacy_f32  v20, v15, v19                       // 000000000198: 0E28270F
  v_mad_legacy_f32  v27, v15, v21, -v27                 // 00000000019C: D280001B 846E2B0F
  v_mad_legacy_f32  v16, v19, v18, -v16                 // 0000000001A4: D2800010 84422513
  v_mul_legacy_f32  v15, v26, v25                       // 0000000001AC: 0E1E331A
  v_mul_legacy_f32  v18, v22, v29                       // 0000000001B0: 0E243B16
  v_mac_f32     v14, v3, v23                            // 0000000001B4: 3E1C2F03
  v_mad_legacy_f32  v20, v17, v24, -v20                 // 0000000001B8: D2800014 84523111
  v_mul_legacy_f32  v17, v26, v29                       // 0000000001C0: 0E223B1A
  v_mac_f32     v15, v2, v23                            // 0000000001C4: 3E1E2F02
  v_mul_legacy_f32  v19, v22, v16                       // 0000000001C8: 0E262116
  v_mac_f32     v18, v3, v27                            // 0000000001CC: 3E243703
  v_mul_legacy_f32  v21, v14, v14                       // 0000000001D0: 0E2A1D0E
  v_mul_legacy_f32  v16, v26, v16                       // 0000000001D4: 0E20211A
  v_mac_f32     v17, v2, v27                            // 0000000001D8: 3E223702
  v_mul_legacy_f32  v22, v15, v15                       // 0000000001DC: 0E2C1F0F
  v_mac_f32     v19, v3, v20                            // 0000000001E0: 3E262903
  v_mac_f32     v21, v18, v18                           // 0000000001E4: 3E2A2512
  s_buffer_load_dwordx4  s[8:11], s[4:7], 0x00          // 0000000001E8: C2840500
  s_waitcnt     vmcnt(1)                                // 0000000001EC: BF8C0F71
  v_mad_f32     v3, v6, 2.0, -1.0                       // 0000000001F0: D2820003 03CDE906
  v_mac_f32     v16, v2, v20                            // 0000000001F8: 3E202902
  v_mac_f32     v22, v17, v17                           // 0000000001FC: 3E2C2311
  v_mac_f32     v21, v19, v19                           // 000000000200: 3E2A2713
  v_mad_f32     v2, v7, 2.0, -1.0                       // 000000000204: D2820002 03CDE907
  v_mul_legacy_f32  v6, v3, v3                          // 00000000020C: 0E0C0703
  v_mac_f32     v22, v16, v16                           // 000000000210: 3E2C2110
  v_rsq_f32     v7, v21                                 // 000000000214: 7E0E5D15
  v_mac_f32     v6, v2, v2                              // 000000000218: 3E0C0502
  v_rsq_f32     v20, v22                                // 00000000021C: 7E285D16
  v_mul_legacy_f32  v14, v14, v7                        // 000000000220: 0E1C0F0E
  s_load_dwordx8  s[16:23], s[0:1], 0x00                // 000000000224: C0C80100
  v_sub_f32     v6, 1.0, v6                             // 000000000228: 080C0CF2
  v_mul_legacy_f32  v15, v15, v20                       // 00000000022C: 0E1E290F
  v_mul_legacy_f32  v18, v18, v7                        // 000000000230: 0E240F12
  v_mul_legacy_f32  v14, v2, v14                        // 000000000234: 0E1C1D02
  v_interp_p1_f32  v21, v0, attr2.z                     // 000000000238: C8540A00
  v_sqrt_f32    v6, v6                                  // 00000000023C: 7E0C6706
  v_mul_legacy_f32  v17, v17, v20                       // 000000000240: 0E222911
  v_mul_legacy_f32  v7, v19, v7                         // 000000000244: 0E0E0F13
  v_mul_legacy_f32  v18, v2, v18                        // 000000000248: 0E242502
  v_mac_f32     v14, v3, v15                            // 00000000024C: 3E1C1F03
  v_interp_p1_f32  v15, v0, attr2.y                     // 000000000250: C83C0900
  v_interp_p2_f32  v21, v1, attr2.z                     // 000000000254: C8550A01
  s_waitcnt     lgkmcnt(0)                              // 000000000258: BF8C007F
  v_sub_f32     v12, s10, v12                           // 00000000025C: 0818180A
  v_mul_legacy_f32  v16, v16, v20                       // 000000000260: 0E202910
  v_mul_legacy_f32  v2, v2, v7                          // 000000000264: 0E040F02
  v_mac_f32     v18, v3, v17                            // 000000000268: 3E242303
  v_interp_p1_f32  v0, v0, attr2.x                      // 00000000026C: C8000800
  v_interp_p2_f32  v15, v1, attr2.y                     // 000000000270: C83D0901
  v_mac_f32     v14, v6, v21                            // 000000000274: 3E1C2B06
  v_sub_f32     v7, s9, v13                             // 000000000278: 080E1A09
  v_mul_legacy_f32  v13, v12, v12                       // 00000000027C: 0E1A190C
  v_mac_f32     v2, v3, v16                             // 000000000280: 3E042103
  v_interp_p2_f32  v0, v1, attr2.x                      // 000000000284: C8010801
  v_mac_f32     v18, v6, v15                            // 000000000288: 3E241F06
  v_mul_legacy_f32  v1, v14, v14                        // 00000000028C: 0E021D0E
  v_sub_f32     v3, s8, v11                             // 000000000290: 08061608
  v_mac_f32     v13, v7, v7                             // 000000000294: 3E1A0F07
  v_mac_f32     v2, v6, v0                              // 000000000298: 3E040106
  v_mac_f32     v1, v18, v18                            // 00000000029C: 3E022512
  image_sample  v[19:22], v[4:5], s[16:23], s[12:15] dmask:0xf // 0000000002A0: F0800F00 00641304
  v_mac_f32     v13, v3, v3                             // 0000000002A8: 3E1A0703
  v_mac_f32     v1, v2, v2                              // 0000000002AC: 3E020502
  v_rsq_f32     v0, v13                                 // 0000000002B0: 7E005D0D
  v_rsq_f32     v1, v1                                  // 0000000002B4: 7E025D01
  v_mul_legacy_f32  v6, v12, v0                         // 0000000002B8: 0E0C010C
  v_mul_legacy_f32  v11, v14, v1                        // 0000000002BC: 0E16030E
  s_buffer_load_dword  s2, s[4:7], 0x5e                 // 0000000002C0: C201055E
  v_mul_legacy_f32  v7, v7, v0                          // 0000000002C4: 0E0E0107
  v_mul_legacy_f32  v12, v18, v1                        // 0000000002C8: 0E180312
  v_mul_legacy_f32  v13, -v6, v11                       // 0000000002CC: D20E000D 20021706
  v_mul_legacy_f32  v0, v3, v0                          // 0000000002D4: 0E000103
  v_mul_legacy_f32  v1, v2, v1                          // 0000000002D8: 0E020302
  v_mad_legacy_f32  v13, -v7, v12, v13                  // 0000000002DC: D280000D 24361907
  s_load_dwordx8  s[16:23], s[0:1], 0x28                // 0000000002E4: C0C80128
  s_load_dwordx4  s[8:11], s[0:1], 0x34                 // 0000000002E8: C0840134
  v_mad_legacy_f32  v13, -v0, v1, v13 mul:2             // 0000000002EC: D280000D 2C360300
  s_load_dwordx16  s[24:39], s[0:1], 0x18               // 0000000002F4: C10C0118
  v_cubema_f32  v2, v1, v12, v11                        // 0000000002F8: D28E0002 042E1901
  v_mad_legacy_f32  v3, v1, -v13, -v0                   // 000000000300: D2800003 C4021B01
  v_mad_legacy_f32  v14, v12, -v13, -v7                 // 000000000308: D280000E C41E1B0C
  v_mad_legacy_f32  v13, v11, -v13, -v6                 // 000000000310: D280000D C41A1B0B
  v_cubetc_f32  v15, v1, v12, v11                       // 000000000318: D28C000F 042E1901
  v_cubesc_f32  v16, v1, v12, v11                       // 000000000320: D28A0010 042E1901
  v_rcp_f32     v2, abs(v2)                             // 000000000328: D3540102 00000102
  v_cubema_f32  v17, v3, v14, v13                       // 000000000330: D28E0011 04361D03
  v_cubeid_f32  v27, v1, v12, v11                       // 000000000338: D288001B 042E1901
  v_madak_f32   v26, v15, v2, 0x3fc00000                // 000000000340: 4234050F 3FC00000
  v_madak_f32   v25, v16, v2, 0x3fc00000                // 000000000348: 42320510 3FC00000
  s_waitcnt     lgkmcnt(0)                              // 000000000350: BF8C007F
  v_cvt_f32_i32  v16, s2                                // 000000000354: 7E200A02
  v_cubetc_f32  v23, v3, v14, v13                       // 000000000358: D28C0017 04361D03
  v_cubesc_f32  v24, v3, v14, v13                       // 000000000360: D28A0018 04361D03
  v_rcp_f32     v17, abs(v17)                           // 000000000368: D3540111 00000111
  s_waitcnt     vmcnt(1)                                // 000000000370: BF8C0F71
  v_mul_legacy_f32  v16, v9, v16                        // 000000000374: 0E202109
  v_cubeid_f32  v15, v3, v14, v13                       // 000000000378: D288000F 04361D03
  v_madak_f32   v14, v23, v17, 0x3fc00000               // 000000000380: 421C2317 3FC00000
  v_madak_f32   v13, v24, v17, 0x3fc00000               // 000000000388: 421A2318 3FC00000
  image_sample  v[23:26], v[25:26], s[16:23], s[8:11] dmask:0x7 // 000000000390: F0800700 00441719
  image_sample_l  v[13:16], v[13:14], s[32:39], s[8:11] dmask:0x7 // 000000000398: F0900700 00480D0D
  image_sample  v[2:5], v[4:5], s[24:31], s[12:15] dmask:0x7 // 0000000003A0: F0800700 00660204
  s_buffer_load_dwordx4  s[0:3], s[4:7], 0x40           // 0000000003A8: C2800540
  s_buffer_load_dwordx4  s[8:11], s[4:7], 0x44          // 0000000003AC: C2840544
  s_buffer_load_dwordx4  s[12:15], s[4:7], 0x48         // 0000000003B0: C2860548
  s_waitcnt     lgkmcnt(0)                              // 0000000003B4: BF8C007F
  v_mul_legacy_f32  v5, s2, s2                          // 0000000003B8: D20E0005 00000402
  v_mad_f32     v5, s1, s1, v5                          // 0000000003C0: D2820005 04140201
  v_mul_legacy_f32  v16, s10, s10                       // 0000000003C8: D20E0010 0000140A
  v_mad_f32     v5, s0, s0, v5                          // 0000000003D0: D2820005 04140000
  v_mad_f32     v16, s9, s9, v16                        // 0000000003D8: D2820010 04401209
  v_mul_legacy_f32  v17, s14, s14                       // 0000000003E0: D20E0011 00001C0E
  v_rsq_f32     v5, v5                                  // 0000000003E8: 7E0A5D05
  v_mad_f32     v16, s8, s8, v16                        // 0000000003EC: D2820010 04401008
  v_mad_f32     v17, s13, s13, v17                      // 0000000003F4: D2820011 04441A0D
  v_mad_legacy_f32  v18, -s2, v5, v6                    // 0000000003FC: D2800012 241A0A02
  v_rsq_f32     v16, v16                                // 000000000404: 7E205D10
  v_mad_f32     v17, s12, s12, v17                      // 000000000408: D2820011 0444180C
  v_mad_legacy_f32  v26, -s1, v5, v7                    // 000000000410: D280001A 241E0A01
  v_mul_legacy_f32  v27, v18, v18                       // 000000000418: 0E362512
  v_mad_legacy_f32  v28, -s10, v16, v6                  // 00000000041C: D280001C 241A200A
  v_rsq_f32     v17, v17                                // 000000000424: 7E225D11
  v_mad_legacy_f32  v29, -s0, v5, v0                    // 000000000428: D280001D 24020A00
  v_mac_f32     v27, v26, v26                           // 000000000430: 3E36351A
  v_mad_legacy_f32  v30, -s9, v16, v7                   // 000000000434: D280001E 241E2009
  v_mul_legacy_f32  v31, v28, v28                       // 00000000043C: 0E3E391C
  v_mad_legacy_f32  v32, -s14, v17, v6                  // 000000000440: D2800020 241A220E
  v_mac_f32     v27, v29, v29                           // 000000000448: 3E363B1D
  v_mad_legacy_f32  v33, -s8, v16, v0                   // 00000000044C: D2800021 24022008
  v_mac_f32     v31, v30, v30                           // 000000000454: 3E3E3D1E
  v_mad_legacy_f32  v34, -s13, v17, v7                  // 000000000458: D2800022 241E220D
  v_mul_legacy_f32  v35, v32, v32                       // 000000000460: 0E464120
  v_rsq_f32     v27, v27                                // 000000000464: 7E365D1B
  v_mac_f32     v31, v33, v33                           // 000000000468: 3E3E4321
  v_mad_legacy_f32  v36, -s12, v17, v0                  // 00000000046C: D2800024 2402220C
  v_mac_f32     v35, v34, v34                           // 000000000474: 3E464522
  v_mul_legacy_f32  v18, v18, v27                       // 000000000478: 0E243712
  v_rsq_f32     v31, v31                                // 00000000047C: 7E3E5D1F
  v_mac_f32     v35, v36, v36                           // 000000000480: 3E464924
  v_mul_legacy_f32  v26, v26, v27                       // 000000000484: 0E34371A
  v_mul_legacy_f32  v37, v11, v18                       // 000000000488: 0E4A250B
  v_mul_legacy_f32  v28, v28, v31                       // 00000000048C: 0E383F1C
  v_rsq_f32     v35, v35                                // 000000000490: 7E465D23
  v_mul_legacy_f32  v38, -s2, v5                        // 000000000494: D20E0026 20020A02
  v_mul_legacy_f32  v27, v29, v27                       // 00000000049C: 0E36371D
  v_mac_f32     v37, v12, v26                           // 0000000004A0: 3E4A350C
  v_mul_legacy_f32  v29, v30, v31                       // 0000000004A4: 0E3A3F1E
  v_mul_legacy_f32  v30, v11, v28                       // 0000000004A8: 0E3C390B
  v_mul_legacy_f32  v32, v32, v35                       // 0000000004AC: 0E404720
  v_mul_legacy_f32  v39, v9, v9                         // 0000000004B0: 0E4E1309
  v_mul_legacy_f32  v40, -s1, v5                        // 0000000004B4: D20E0028 20020A01
  v_mul_legacy_f32  v18, v38, v18                       // 0000000004BC: 0E242526
  v_mad_legacy_f32  v37, v1, v27, v37 clamp             // 0000000004C0: D2800825 04963701
  v_mul_legacy_f32  v41, -s10, v16                      // 0000000004C8: D20E0029 2002200A
  v_mul_legacy_f32  v31, v33, v31                       // 0000000004D0: 0E3E3F21
  v_mac_f32     v30, v12, v29                           // 0000000004D4: 3E3C3B0C
  v_mul_legacy_f32  v33, v34, v35                       // 0000000004D8: 0E424722
  v_mul_legacy_f32  v34, v11, v32                       // 0000000004DC: 0E44410B
  v_mul_legacy_f32  v6, v6, v11                         // 0000000004E0: 0E0C1706
  v_mad_f32     v42, v39, v39, -1.0                     // 0000000004E4: D282002A 03CE4F27
  v_mul_legacy_f32  v5, -s0, v5                         // 0000000004EC: D20E0005 20020A00
  v_mul_legacy_f32  v38, v11, v38                       // 0000000004F4: 0E4C4D0B
  v_mac_f32     v18, v40, v26                           // 0000000004F8: 3E243528
  v_mul_legacy_f32  v26, v37, v37                       // 0000000004FC: 0E344B25
  v_mul_legacy_f32  v37, -s9, v16                       // 000000000500: D20E0025 20022009
  v_mul_legacy_f32  v28, v41, v28                       // 000000000508: 0E383929
  v_mad_legacy_f32  v30, v1, v31, v30 clamp             // 00000000050C: D280081E 047A3F01
  v_mul_legacy_f32  v43, -s14, v17                      // 000000000514: D20E002B 2002220E
  v_mul_legacy_f32  v35, v36, v35                       // 00000000051C: 0E464724
  v_mac_f32     v34, v12, v33                           // 000000000520: 3E44430C
  v_mac_f32     v6, v12, v7                             // 000000000524: 3E0C0F0C
  v_mac_f32     v38, v12, v40                           // 000000000528: 3E4C510C
  v_mad_legacy_f32  v18, v5, v27, v18 clamp             // 00000000052C: D2800812 044A3705
  v_mad_f32     v7, v26, v42, 1.0                       // 000000000534: D2820007 03CA551A
  v_mul_legacy_f32  v16, -s8, v16                       // 00000000053C: D20E0010 20022008
  v_mul_legacy_f32  v26, v11, v41                       // 000000000544: 0E34530B
  v_mac_f32     v28, v37, v29                           // 000000000548: 3E383B25
  v_mul_legacy_f32  v27, v30, v30                       // 00000000054C: 0E363D1E
  v_mul_legacy_f32  v29, -s13, v17                      // 000000000550: D20E001D 2002220D
  v_mul_legacy_f32  v30, v43, v32                       // 000000000558: 0E3C412B
  v_mad_legacy_f32  v34, v1, v35, v34 clamp             // 00000000055C: D2800822 048A4701
  v_mad_legacy_f32  v6, v1, v0, v6 clamp                // 000000000564: D2800806 041A0101
  s_mov_b32     s0, 0xbd23d70a                          // 00000000056C: BE8003FF BD23D70A
  v_mad_legacy_f32  v38, v1, v5, v38 clamp              // 000000000574: D2800826 049A0B01
  v_mul_legacy_f32  v0, v7, v7                          // 00000000057C: 0E000F07
  s_mov_b32     s1, 0x40490fdb                          // 000000000580: BE8103FF 40490FDB
  v_sub_f32     v5, 1.0, v18                            // 000000000588: 080A24F2
  v_mac_f32     v26, v12, v37                           // 00000000058C: 3E344B0C
  v_mad_legacy_f32  v28, v16, v31, v28 clamp            // 000000000590: D280081C 04723F10
  v_mad_f32     v7, v27, v42, 1.0                       // 000000000598: D2820007 03CA551B
  v_mul_legacy_f32  v17, -s12, v17                      // 0000000005A0: D20E0011 2002220C
  v_mul_legacy_f32  v11, v11, v43                       // 0000000005A8: 0E16570B
  v_mac_f32     v30, v29, v33                           // 0000000005AC: 3E3C431D
  v_mul_legacy_f32  v27, v34, v34                       // 0000000005B0: 0E364522
  s_waitcnt     vmcnt(3)                                // 0000000005B4: BF8C0F73
  v_add_f32     v31, s0, v19                            // 0000000005B8: 063E2600
  v_add_f32     v32, s0, v20                            // 0000000005BC: 06402800
  v_add_f32     v33, s0, v21                            // 0000000005C0: 06422A00
  v_sub_f32     v34, 1.0, v6                            // 0000000005C4: 08440CF2
  v_sub_f32     v36, 1.0, v38                           // 0000000005C8: 08484CF2
  v_mul_legacy_f32  v0, s1, v0                          // 0000000005CC: 0E000001
  s_mov_b32     s0, 0x358637bd                          // 0000000005D0: BE8003FF 358637BD
  v_mad_legacy_f32  v5, -v18, v5, v5                    // 0000000005D8: D2800005 24160B12
  v_mad_legacy_f32  v26, v1, v16, v26 clamp             // 0000000005E0: D280081A 046A2101
  v_mul_legacy_f32  v7, v7, v7                          // 0000000005E8: 0E0E0F07
  v_sub_f32     v16, 1.0, v28                           // 0000000005EC: 082038F2
  v_mac_f32     v11, v12, v29                           // 0000000005F0: 3E163B0C
  v_mad_legacy_f32  v30, v17, v35, v30 clamp            // 0000000005F4: D280081E 047A4711
  v_mad_f32     v12, v27, v42, 1.0                      // 0000000005FC: D282000C 03CA551B
  s_buffer_load_dwordx4  s[8:11], s[4:7], 0x4c          // 000000000604: C284054C
  v_madak_f32   v27, v10, v31, 0x3d23d70a               // 000000000608: 42363F0A 3D23D70A
  v_madak_f32   v29, v10, v32, 0x3d23d70a               // 000000000610: 423A410A 3D23D70A
  v_madak_f32   v31, v10, v33, 0x3d23d70a               // 000000000618: 423E430A 3D23D70A
  v_mad_legacy_f32  v34, -v6, v34, v34                  // 000000000620: D2800022 248A4506
  v_mul_legacy_f32  v32, v39, v39                       // 000000000628: 0E404F27
  v_mad_legacy_f32  v36, -v38, v36, v36                 // 00000000062C: D2800024 24924926
  v_max_legacy_f32  v0, s0, v0                          // 000000000634: 1C000000
  v_mul_legacy_f32  v5, v5, v5                          // 000000000638: 0E0A0B05
  v_sub_f32     v33, 1.0, v26                           // 00000000063C: 084234F2
  v_mul_legacy_f32  v7, s1, v7                          // 000000000640: 0E0E0E01
  v_mad_legacy_f32  v16, -v28, v16, v16                 // 000000000644: D2800010 2442211C
  v_mad_legacy_f32  v11, v1, v17, v11 clamp             // 00000000064C: D280080B 042E2301
  v_mul_legacy_f32  v1, v12, v12                        // 000000000654: 0E02190C
  v_sub_f32     v12, 1.0, v30                           // 000000000658: 08183CF2
  s_buffer_load_dwordx4  s[12:15], s[4:7], 0x50         // 00000000065C: C2860550
  v_mul_legacy_f32  v17, v8, v27                        // 000000000660: 0E223708
  v_mul_legacy_f32  v35, v8, v29                        // 000000000664: 0E463B08
  v_mul_legacy_f32  v37, v8, v31                        // 000000000668: 0E4A3F08
  v_max_f32     v9, v9, v9 mul:2                        // 00000000066C: D2200009 08021309
  v_mul_legacy_f32  v34, v34, v34                       // 000000000674: 0E444522
  v_mad_legacy_f32  v27, -v8, v27, 1.0                  // 000000000678: D280001B 23CA3708
  v_mad_legacy_f32  v29, -v8, v29, 1.0                  // 000000000680: D280001D 23CA3B08
  v_mad_legacy_f32  v31, -v8, v31, 1.0                  // 000000000688: D280001F 23CA3F08
  v_mul_legacy_f32  v39, 0x3e800000, v32                // 000000000690: 0E4E40FF 3E800000
  v_mul_legacy_f32  v40, v18, v18                       // 000000000698: 0E502512
  v_mul_legacy_f32  v36, v36, v36                       // 00000000069C: 0E484924
  v_rcp_f32     v0, v0                                  // 0000000006A0: 7E005500
  v_mad_legacy_f32  v5, -v18, v5, v5                    // 0000000006A4: D2800005 24160B12
  v_mad_legacy_f32  v18, -v18, v18, 1.0                 // 0000000006AC: D2800012 23CA2512
  v_mad_legacy_f32  v33, -v26, v33, v33                 // 0000000006B4: D2800021 2486431A
  v_max_legacy_f32  v7, s0, v7                          // 0000000006BC: 1C0E0E00
  v_mul_legacy_f32  v16, v16, v16                       // 0000000006C0: 0E202110
  v_sub_f32     v41, 1.0, v11                           // 0000000006C4: 085216F2
  v_mul_legacy_f32  v1, s1, v1                          // 0000000006C8: 0E020201
  v_mad_legacy_f32  v12, -v30, v12, v12                 // 0000000006CC: D280000C 2432191E
  s_buffer_load_dwordx4  s[16:19], s[4:7], 0x54         // 0000000006D4: C2880554
  v_mad_legacy_f32  v34, -v6, v34, v34                  // 0000000006D8: D2800022 248A4506
  v_mad_f32     v6, v40, v9, -0.5                       // 0000000006E0: D2820006 03C61328
  v_mad_legacy_f32  v36, -v38, v36, v36                 // 0000000006E8: D2800024 24924926
  v_mul_f32     v0, v32, v0                             // 0000000006F0: 10000120
  v_mad_f32     v42, v27, v5, v17                       // 0000000006F4: D282002A 04460B1B
  v_mad_f32     v43, v29, v5, v35                       // 0000000006FC: D282002B 048E0B1D
  v_mad_f32     v5, v31, v5, v37                        // 000000000704: D2820005 04960B1F
  v_mac_f32     v40, v39, v18                           // 00000000070C: 3E502527
  v_mul_legacy_f32  v18, v28, v28                       // 000000000710: 0E24391C
  v_mul_legacy_f32  v33, v33, v33                       // 000000000714: 0E424321
  v_rcp_f32     v7, v7                                  // 000000000718: 7E0E5507
  v_mad_legacy_f32  v16, -v28, v16, v16                 // 00000000071C: D2800010 2442211C
  v_mad_legacy_f32  v28, -v28, v28, 1.0                 // 000000000724: D280001C 23CA391C
  v_mad_legacy_f32  v41, -v11, v41, v41                 // 00000000072C: D2800029 24A6530B
  v_max_legacy_f32  v1, s0, v1                          // 000000000734: 1C020200
  v_mul_legacy_f32  v12, v12, v12                       // 000000000738: 0E18190C
  v_mad_legacy_f32  v19, v10, -v19, v19                 // 00000000073C: D2800013 444E270A
  v_mad_legacy_f32  v20, v10, -v20, v20                 // 000000000744: D2800014 4452290A
  v_mad_legacy_f32  v21, v10, -v21, v21                 // 00000000074C: D2800015 44562B0A
  v_mad_f32     v10, v6, v36, 1.0                       // 000000000754: D282000A 03CA4906
  v_mad_f32     v6, v6, v34, 1.0                        // 00000000075C: D2820006 03CA4506
  v_rcp_f32     v36, v40                                // 000000000764: 7E485528
  v_mul_legacy_f32  v40, v0, v42                        // 000000000768: 0E505500
  v_mul_legacy_f32  v42, v0, v43                        // 00000000076C: 0E545700
  v_mul_legacy_f32  v0, v0, v5                          // 000000000770: 0E000B00
  v_mad_f32     v5, v18, v9, -0.5                       // 000000000774: D2820005 03C61312
  v_mad_legacy_f32  v33, -v26, v33, v33                 // 00000000077C: D2800021 2486431A
  v_mul_f32     v7, v32, v7                             // 000000000784: 100E0F20
  v_mad_f32     v43, v27, v16, v17                      // 000000000788: D282002B 0446211B
  v_mad_f32     v44, v29, v16, v35                      // 000000000790: D282002C 048E211D
  v_mad_f32     v16, v31, v16, v37                      // 000000000798: D2820010 0496211F
  v_mac_f32     v18, v39, v28                           // 0000000007A0: 3E243927
  v_mul_legacy_f32  v28, v30, v30                       // 0000000007A4: 0E383D1E
  v_mul_legacy_f32  v41, v41, v41                       // 0000000007A8: 0E525329
  v_rcp_f32     v1, v1                                  // 0000000007AC: 7E025501
  v_mad_legacy_f32  v12, -v30, v12, v12                 // 0000000007B0: D280000C 2432191E
  v_mad_legacy_f32  v30, -v30, v30, 1.0                 // 0000000007B8: D280001E 23CA3D1E
  v_mul_legacy_f32  v19, v8, v19                        // 0000000007C0: 0E262708
  v_mul_legacy_f32  v20, v8, v20                        // 0000000007C4: 0E282908
  v_mul_legacy_f32  v8, v8, v21                         // 0000000007C8: 0E102B08
  v_mul_legacy_f32  v6, v10, v6                         // 0000000007CC: 0E0C0D0A
  v_mul_legacy_f32  v10, v36, v40                       // 0000000007D0: 0E145124
  v_mul_legacy_f32  v21, v36, v42                       // 0000000007D4: 0E2A5524
  v_mul_legacy_f32  v0, v36, v0                         // 0000000007D8: 0E000124
  v_mad_f32     v33, v5, v33, 1.0                       // 0000000007DC: D2820021 03CA4305
  v_mad_f32     v5, v5, v34, 1.0                        // 0000000007E4: D2820005 03CA4505
  v_rcp_f32     v18, v18                                // 0000000007EC: 7E245512
  v_mul_legacy_f32  v36, v7, v43                        // 0000000007F0: 0E485707
  v_mul_legacy_f32  v40, v7, v44                        // 0000000007F4: 0E505907
  v_mul_legacy_f32  v7, v7, v16                         // 0000000007F8: 0E0E2107
  v_mad_f32     v9, v28, v9, -0.5                       // 0000000007FC: D2820009 03C6131C
  v_mad_legacy_f32  v41, -v11, v41, v41                 // 000000000804: D2800029 24A6530B
  v_mul_f32     v1, v32, v1                             // 00000000080C: 10020320
  v_mad_f32     v16, v27, v12, v17                      // 000000000810: D2820010 0446191B
  v_mad_f32     v27, v29, v12, v35                      // 000000000818: D282001B 048E191D
  v_mad_f32     v12, v31, v12, v37                      // 000000000820: D282000C 0496191F
  v_mac_f32     v28, v39, v30                           // 000000000828: 3E383D27
  s_waitcnt     lgkmcnt(0)                              // 00000000082C: BF8C007F
  v_mul_legacy_f32  v29, s8, v38                        // 000000000830: 0E3A4C08
  v_mul_legacy_f32  v30, s9, v38                        // 000000000834: 0E3C4C09
  v_mul_legacy_f32  v31, s10, v38                       // 000000000838: 0E3E4C0A
  v_mac_f32     v10, v19, v6                            // 00000000083C: 3E140D13
  v_mac_f32     v21, v20, v6                            // 000000000840: 3E2A0D14
  v_mac_f32     v0, v8, v6                              // 000000000844: 3E000D08
  v_mul_legacy_f32  v5, v33, v5                         // 000000000848: 0E0A0B21
  v_mul_legacy_f32  v6, v18, v36                        // 00000000084C: 0E0C4912
  v_mul_legacy_f32  v32, v18, v40                       // 000000000850: 0E405112
  v_mul_legacy_f32  v7, v18, v7                         // 000000000854: 0E0E0F12
  v_mad_f32     v18, v9, v41, 1.0                       // 000000000858: D2820012 03CA5309
  v_mad_f32     v9, v9, v34, 1.0                        // 000000000860: D2820009 03CA4509
  v_rcp_f32     v28, v28                                // 000000000868: 7E38551C
  v_mul_legacy_f32  v16, v1, v16                        // 00000000086C: 0E202101
  v_mul_legacy_f32  v27, v1, v27                        // 000000000870: 0E363701
  v_mul_legacy_f32  v1, v1, v12                         // 000000000874: 0E021901
  s_buffer_load_dword  s0, s[4:7], 0x5b                 // 000000000878: C200055B
  v_mul_legacy_f32  v10, v29, v10                       // 00000000087C: 0E14151D
  v_mul_legacy_f32  v12, v30, v21                       // 000000000880: 0E182B1E
  v_mul_legacy_f32  v0, v31, v0                         // 000000000884: 0E00011F
  v_mul_legacy_f32  v21, s12, v26                       // 000000000888: 0E2A340C
  v_mul_legacy_f32  v29, s13, v26                       // 00000000088C: 0E3A340D
  v_mul_legacy_f32  v26, s14, v26                       // 000000000890: 0E34340E
  v_mac_f32     v6, v19, v5                             // 000000000894: 3E0C0B13
  v_mac_f32     v32, v20, v5                            // 000000000898: 3E400B14
  v_mac_f32     v7, v8, v5                              // 00000000089C: 3E0E0B08
  v_mul_legacy_f32  v5, v18, v9                         // 0000000008A0: 0E0A1312
  v_mul_legacy_f32  v9, v28, v16                        // 0000000008A4: 0E12211C
  v_mul_legacy_f32  v16, v28, v27                       // 0000000008A8: 0E20371C
  v_mul_legacy_f32  v1, v28, v1                         // 0000000008AC: 0E02031C
  v_mac_f32     v10, v21, v6                            // 0000000008B0: 3E140D15
  v_mac_f32     v12, v29, v32                           // 0000000008B4: 3E18411D
  v_mac_f32     v0, v26, v7                             // 0000000008B8: 3E000F1A
  v_mul_legacy_f32  v6, s16, v11                        // 0000000008BC: 0E0C1610
  v_mul_legacy_f32  v7, s17, v11                        // 0000000008C0: 0E0E1611
  v_mul_legacy_f32  v11, s18, v11                       // 0000000008C4: 0E161612
  v_mac_f32     v9, v19, v5                             // 0000000008C8: 3E120B13
  v_mac_f32     v16, v20, v5                            // 0000000008CC: 3E200B14
  v_mac_f32     v1, v8, v5                              // 0000000008D0: 3E020B08
  v_mac_f32     v10, v6, v9                             // 0000000008D4: 3E141306
  v_mac_f32     v12, v7, v16                            // 0000000008D8: 3E182107
  v_mac_f32     v0, v11, v1                             // 0000000008DC: 3E00030B
  s_waitcnt     vmcnt(2)                                // 0000000008E0: BF8C0F72
  v_mac_f32     v10, v19, v23                           // 0000000008E4: 3E142F13
  v_mac_f32     v12, v20, v24                           // 0000000008E8: 3E183114
  v_mac_f32     v0, v8, v25                             // 0000000008EC: 3E003308
  s_waitcnt     vmcnt(1)                                // 0000000008F0: BF8C0F71
  v_mac_f32     v10, v17, v13                           // 0000000008F4: 3E141B11
  v_mac_f32     v12, v35, v14                           // 0000000008F8: 3E181D23
  v_mac_f32     v0, v37, v15                            // 0000000008FC: 3E001F25
  s_waitcnt     vmcnt(0)                                // 000000000900: BF8C0F70
  v_add_f32     v1, v10, v2                             // 000000000904: 0602050A
  v_add_f32     v2, v12, v3                             // 000000000908: 0604070C
  v_add_f32     v0, v0, v4                              // 00000000090C: 06000900
  s_waitcnt     lgkmcnt(0)                              // 000000000910: BF8C007F
  v_mul_legacy_f32  v3, s0, v22                         // 000000000914: 0E062C00
  s_mov_b64     exec, s[40:41]                          // 000000000918: BEFE0428
  v_cvt_pkrtz_f16_f32  v1, v1, v2                       // 00000000091C: 5E020501
  v_cvt_pkrtz_f16_f32  v0, v0, v3                       // 000000000920: 5E000700
  exp           mrt0, v1, v1, v0, v0 done compr vm      // 000000000924: F8001C0F 00000001
  s_endpgm                                              // 00000000092C: BF810000
end


// Shader Statistics:
//  NumActiveWaveFront:         20
//  WorkgroupSize:              64
//  NumVRegs:                   45
//  NumSRegs:                   44
//  NumActiveWaveFrontByVReg:   20
//  NumActiveWaveFrontBySReg:   40
//  NumActiveWaveFrontByLDS:    40
//  CycleSim:                   427
//  CycleSimNWaves:             427
//  Code Size:                  2352
//Assembler Counts:
//  num_32bit_ops                     : 303
//  num_64bit_ops                     : 137
//  num_alu                           : 367
//  num_fc                            : 46
//  num_inst_exp                      : 1
//  num_inst_ldsgds                   : 20
//  num_inst_mimg                     : 6
//  num_inst_mtbuf                    : 0
//  num_inst_mubuf                    : 0
//  num_inst_sopp                     : 22
//  num_inst_sopc                     : 0
//  num_inst_sop1                     : 7
//  num_inst_sop2                     : 0
//  num_inst_smrd                     : 0
//  num_inst_sopk                     : 0
//  num_inst_vop1                     : 18
//  num_inst_vop2                     : 223
//  num_inst_vop3                     : 87
//  num_inst_vopc                     : 0
//  num_inst_vintrp                   : 16
//  constant_literal_operands         : 0
//  num_tex                           : 27
//  num_vmem_group                    : 4
//  vmem_grouping_started             : 0
//
//Compilation Notes:
//
//  PS has no UAV writes, consider forcing REZ/LATEZ.
// Shader Statistics:
// m_uNumActiveWaveFront             : 20
// m_uVRegLimit                      : 256
// m_uSRegLimit                      : 512
// m_uNumVRegs                       : 45
// m_uNumSRegs                       : 44
// m_uSCCodeSize                     : 2352
// m_uWorkgroupSize                  : 64
// m_uNumActiveWaveFrontByVReg       : 20
// m_uNumActiveWaveFrontBySReg       : 40
// m_uNumActiveWaveFrontByLDS        : 40
// m_uCycleSim1Wave                  : 427
// m_uCycleSimNWaves                 : 427

// Assembler Counts:
// num_32bit_ops                     : 303
// num_64bit_ops                     : 137
// num_alu                           : 367
// num_fc                            : 46
// num_inst_exp                      : 1
// num_inst_ldsgds                   : 20
// num_inst_mimg                     : 6
// num_inst_mtbuf                    : 0
// num_inst_mubuf                    : 0
// num_inst_sopp                     : 22
// num_inst_sopc                     : 0
// num_inst_sop1                     : 7
// num_inst_sop2                     : 0
// num_inst_smrd                     : 0
// num_inst_sopk                     : 0
// num_inst_vop1                     : 18
// num_inst_vop2                     : 223
// num_inst_vop3                     : 87
// num_inst_vopc                     : 0
// num_inst_vintrp                   : 16
// num_inst_smem                     : 17
// constant_literal_operands         : 0
// num_tex                           : 27
// num_vmem_group                    : 4
// vmem_grouping_started             : 0
// m_fFullPrecompilePromise          : 0
// m_fIntegerDivideExpansion         : 0
// m_fIntegerModExpansion            : 0
// m_fDoubleDivideExpansion          : 0
// m_fUsesScratch                    : 0
// m_fPerThreadIndirection           : 0
// m_fUsingTableLoads                : 0
// m_fUsingSHmemLoads                : 1
// fSemanticHashFlagOverrideApplied  : 0
// fPSHasNoUAVWrite                  : 1
// m_fRenderTargetsCanBeCompacted    : 0
// version                           : 3
// fCodePatched                      : 0

// Approximately 0 instruction slots used
#endif

const BYTE PBREffect_PSTexturedEmissive[] =
{
     68,  88,  66,  67, 134,  21, 
    126, 116, 239,   0,  84, 168, 
     10, 239, 100, 170,   4,  72, 
     71, 229,   1,   0,   0,   0, 
    185,  24,   0,   0,   5,   0, 
      0,   0,  52,   0,   0,   0, 
    180,   0,   0,   0, 232,   0, 
      0,   0,  72,  24,   0,   0, 
     88,  24,   0,   0,  73,  83, 
     71,  78, 120,   0,   0,   0, 
      4,   0,   0,   0,   8,   0, 
      0,   0, 104,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      0,   0,   0,   0,   3,   3, 
      0,   0, 104,   0,   0,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   0,   0,  15,   7, 
      0,   0, 104,   0,   0,   0, 
      2,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      2,   0,   0,   0,   7,   7, 
      0,   0, 113,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      3,   0,   0,   0,  15,   0, 
      0,   0,  84,  69,  88,  67, 
     79,  79,  82,  68,   0,  67, 
     79,  76,  79,  82,   0, 171, 
     79,  83,  71,  78,  44,   0, 
      0,   0,   1,   0,   0,   0, 
      8,   0,   0,   0,  32,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   3,   0, 
      0,   0,   0,   0,   0,   0, 
     15,   0,   0,   0,  83,  86, 
     95,  84,  97, 114, 103, 101, 
    116,   0, 171, 171,  83,  72, 
     69,  88,  88,  23,   0,   0, 
     80,   0,   0,   0, 214,   5, 
      0,   0,  53,  16,   0,   0, 
      5,   0,   0,   0, 136,   3, 
      0,   0,  80,   0,   0,   0, 
    131,   3,   0,   0, 106,   8, 
      0,   1,  89,   8,   0,   4, 
     70, 142,  32,   0,   0,   0, 
      0,   0,  25,   0,   0,   0, 
     90,   0,   0,   3,   0,  96, 
     16,   0,   0,   0,   0,   0, 
     90,   0,   0,   3,   0,  96, 
     16,   0,   1,   0,   0,   0, 
     88,  24,   0,   4,   0, 112, 
     16,   0,   0,   0,   0,   0, 
     85,  85,   0,   0,  88,  24, 
      0,   4,   0, 112,  16,   0, 
      1,   0,   0,   0,  85,  85, 
      0,   0,  88,  24,   0,   4, 
      0, 112,  16,   0,   2,   0, 
      0,   0,  85,  85,   0,   0, 
     88,  24,   0,   4,   0, 112, 
     16,   0,   3,   0,   0,   0, 
     85,  85,   0,   0,  88,  48, 
      0,   4,   0, 112,  16,   0, 
      4,   0,   0,   0,  85,  85, 
      0,   0,  88,  48,   0,   4, 
      0, 112,  16,   0,   5,   0, 
      0,   0,  85,  85,   0,   0, 
     98,  16,   0,   3,  50,  16, 
     16,   0,   0,   0,   0,   0, 
     98,  16,   0,   3, 114,  16, 
     16,   0,   1,   0,   0,   0, 
     98,  16,   0,   3, 114,  16, 
     16,   0,   2,   0,   0,   0, 
    101,   0,   0,   3, 242,  32, 
     16,   0,   0,   0,   0,   0, 
    104,   0,   0,   2,   9,   0, 
      0,   0,   0,   0,   0,   9, 
    114,   0,  16,   0,   0,   0, 
      0,   0,  70,  18,  16, 128, 
     65,   0,   0,   0,   1,   0, 
      0,   0,  70, 130,  32,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,  16,   0,   0,   7, 
    130,   0,  16,   0,   0,   0, 
      0,   0,  70,   2,  16,   0, 
      0,   0,   0,   0,  70,   2, 
     16,   0,   0,   0,   0,   0, 
     68,   0,   0,   5, 130,   0, 
     16,   0,   0,   0,   0,   0, 
     58,   0,  16,   0,   0,   0, 
      0,   0,  56,   0,   0,   7, 
    114,   0,  16,   0,   0,   0, 
      0,   0, 246,  15,  16,   0, 
      0,   0,   0,   0,  70,   2, 
     16,   0,   0,   0,   0,   0, 
     69,   0,   0, 139, 194,   0, 
      0, 128,  67,  85,  21,   0, 
     50,   0,  16,   0,   1,   0, 
      0,   0,  70,  16,  16,   0, 
      0,   0,   0,   0,  70, 126, 
     16,   0,   1,   0,   0,   0, 
      0,  96,  16,   0,   0,   0, 
      0,   0,  50,   0,   0,  15, 
     50,   0,  16,   0,   1,   0, 
      0,   0,  70,   0,  16,   0, 
      1,   0,   0,   0,   2,  64, 
      0,   0,   0,   0,   0,  64, 
      0,   0,   0,  64,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      2,  64,   0,   0,   0,   0, 
    128, 191,   0,   0, 128, 191, 
      0,   0,   0,   0,   0,   0, 
      0,   0,  15,   0,   0,   7, 
    130,   0,  16,   0,   0,   0, 
      0,   0,  70,   0,  16,   0, 
      1,   0,   0,   0,  70,   0, 
     16,   0,   1,   0,   0,   0, 
      0,   0,   0,   8, 130,   0, 
     16,   0,   0,   0,   0,   0, 
     58,   0,  16, 128,  65,   0, 
      0,   0,   0,   0,   0,   0, 
      1,  64,   0,   0,   0,   0, 
    128,  63,  75,   0,   0,   5, 
    130,   0,  16,   0,   0,   0, 
      0,   0,  58,   0,  16,   0, 
      0,   0,   0,   0, 122,   0, 
      0,   5, 114,   0,  16,   0, 
      2,   0,   0,   0, 150,  20, 
     16,   0,   1,   0,   0,   0, 
    124,   0,   0,   5, 114,   0, 
     16,   0,   3,   0,   0,   0, 
     38,  25,  16,   0,   1,   0, 
      0,   0, 122,   0,   0,   5, 
    194,   0,  16,   0,   1,   0, 
      0,   0,   6,  20,  16,   0, 
      0,   0,   0,   0, 124,   0, 
      0,   5,  50,   0,  16,   0, 
      4,   0,   0,   0,  70,  16, 
     16,   0,   0,   0,   0,   0, 
     56,   0,   0,   7, 114,   0, 
     16,   0,   5,   0,   0,   0, 
     70,   2,  16,   0,   2,   0, 
      0,   0, 150,   4,  16,   0, 
      3,   0,   0,   0,  50,   0, 
      0,  10, 114,   0,  16,   0, 
      5,   0,   0,   0,  38,   9, 
     16,   0,   2,   0,   0,   0, 
     38,   9,  16,   0,   3,   0, 
      0,   0,  70,   2,  16, 128, 
     65,   0,   0,   0,   5,   0, 
      0,   0,  56,   0,   0,   7, 
    114,   0,  16,   0,   6,   0, 
      0,   0,  70,   2,  16,   0, 
      3,   0,   0,   0,  38,   9, 
     16,   0,   5,   0,   0,   0, 
     50,   0,   0,  10, 114,   0, 
     16,   0,   3,   0,   0,   0, 
     38,   9,  16,   0,   3,   0, 
      0,   0,  70,   2,  16,   0, 
      5,   0,   0,   0,  70,   2, 
     16, 128,  65,   0,   0,   0, 
      6,   0,   0,   0,  56,   0, 
      0,   7, 114,   0,  16,   0, 
      6,   0,   0,   0,  70,   2, 
     16,   0,   2,   0,   0,   0, 
     70,   2,  16,   0,   5,   0, 
      0,   0,  50,   0,   0,  10, 
    114,   0,  16,   0,   2,   0, 
      0,   0,  38,   9,  16,   0, 
      5,   0,   0,   0, 150,   4, 
     16,   0,   2,   0,   0,   0, 
     70,   2,  16, 128,  65,   0, 
      0,   0,   6,   0,   0,   0, 
     56,   0,   0,   7, 210,   0, 
     16,   0,   4,   0,   0,   0, 
      6,   9,  16,   0,   2,   0, 
      0,   0,   6,   0,  16,   0, 
      4,   0,   0,   0,  50,   0, 
      0,   9, 210,   0,  16,   0, 
      4,   0,   0,   0, 166,  10, 
     16,   0,   1,   0,   0,   0, 
      6,   9,  16,   0,   3,   0, 
      0,   0,   6,  14,  16,   0, 
      4,   0,   0,   0,  16,   0, 
      0,   7,  66,   0,  16,   0, 
      1,   0,   0,   0, 134,   3, 
     16,   0,   4,   0,   0,   0, 
    134,   3,  16,   0,   4,   0, 
      0,   0,  68,   0,   0,   5, 
     66,   0,  16,   0,   1,   0, 
      0,   0,  42,   0,  16,   0, 
      1,   0,   0,   0,  56,   0, 
      0,   7, 210,   0,  16,   0, 
      4,   0,   0,   0, 166,  10, 
     16,   0,   1,   0,   0,   0, 
      6,  14,  16,   0,   4,   0, 
      0,   0,  56,   0,   0,   7, 
    114,   0,  16,   0,   2,   0, 
      0,   0,  70,   2,  16,   0, 
      2,   0,   0,   0,  86,   5, 
     16,   0,   4,   0,   0,   0, 
     50,   0,   0,   9, 114,   0, 
     16,   0,   2,   0,   0,   0, 
    246,  15,  16,   0,   1,   0, 
      0,   0,  70,   2,  16,   0, 
      3,   0,   0,   0,  70,   2, 
     16,   0,   2,   0,   0,   0, 
     16,   0,   0,   7,  66,   0, 
     16,   0,   1,   0,   0,   0, 
     70,   2,  16,   0,   2,   0, 
      0,   0,  70,   2,  16,   0, 
      2,   0,   0,   0,  68,   0, 
      0,   5,  66,   0,  16,   0, 
      1,   0,   0,   0,  42,   0, 
     16,   0,   1,   0,   0,   0, 
     56,   0,   0,   7, 114,   0, 
     16,   0,   2,   0,   0,   0, 
    166,  10,  16,   0,   1,   0, 
      0,   0,  70,   2,  16,   0, 
      2,   0,   0,   0,  56,   0, 
      0,   7, 226,   0,  16,   0, 
      1,   0,   0,   0,  86,   5, 
     16,   0,   1,   0,   0,   0, 
      6,   9,  16,   0,   2,   0, 
      0,   0,  50,   0,   0,   9, 
    114,   0,  16,   0,   1,   0, 
      0,   0,   6,   0,  16,   0, 
      1,   0,   0,   0, 134,   3, 
     16,   0,   4,   0,   0,   0, 
    150,   7,  16,   0,   1,   0, 
      0,   0,  50,   0,   0,   9, 
    114,   0,  16,   0,   1,   0, 
      0,   0, 246,  15,  16,   0, 
      0,   0,   0,   0,  70,  18, 
     16,   0,   2,   0,   0,   0, 
     70,   2,  16,   0,   1,   0, 
      0,   0,  16,   0,   0,   7, 
    130,   0,  16,   0,   0,   0, 
      0,   0,  70,   2,  16,   0, 
      1,   0,   0,   0,  70,   2, 
     16,   0,   1,   0,   0,   0, 
     68,   0,   0,   5, 130,   0, 
     16,   0,   0,   0,   0,   0, 
     58,   0,  16,   0,   0,   0, 
      0,   0,  56,   0,   0,   7, 
    114,   0,  16,   0,   1,   0, 
      0,   0, 246,  15,  16,   0, 
      0,   0,   0,   0,  70,   2, 
     16,   0,   1,   0,   0,   0, 
     69,   0,   0, 139, 194,   0, 
      0, 128,  67,  85,  21,   0, 
    242,   0,  16,   0,   2,   0, 
      0,   0,  70,  16,  16,   0, 
      0,   0,   0,   0,  70, 126, 
     16,   0,   0,   0,   0,   0, 
      0,  96,  16,   0,   0,   0, 
      0,   0,  69,   0,   0, 139, 
    194,   0,   0, 128,  67,  85, 
     21,   0, 114,   0,  16,   0, 
      3,   0,   0,   0,  70,  16, 
     16,   0,   0,   0,   0,   0, 
     70, 126,  16,   0,   2,   0, 
      0,   0,   0,  96,  16,   0, 
      0,   0,   0,   0,  16,  32, 
      0,   7, 130,   0,  16,   0, 
      0,   0,   0,   0,  70,   2, 
     16,   0,   1,   0,   0,   0, 
     70,   2,  16,   0,   0,   0, 
      0,   0,  56,   0,   0,   7, 
    130,   0,  16,   0,   1,   0, 
      0,   0,  26,   0,  16,   0, 
      3,   0,   0,   0,  26,   0, 
     16,   0,   3,   0,   0,   0, 
     50,   0,   0,  10, 114,   0, 
     16,   0,   4,   0,   0,   0, 
    166,  10,  16,   0,   3,   0, 
      0,   0,  70,   2,  16, 128, 
     65,   0,   0,   0,   2,   0, 
      0,   0,  70,   2,  16,   0, 
      2,   0,   0,   0,  56,   0, 
      0,   7, 114,   0,  16,   0, 
      4,   0,   0,   0,   6,   0, 
     16,   0,   3,   0,   0,   0, 
     70,   2,  16,   0,   4,   0, 
      0,   0,   0,   0,   0,  10, 
    114,   0,  16,   0,   2,   0, 
      0,   0,  70,   2,  16,   0, 
      2,   0,   0,   0,   2,  64, 
      0,   0,  10, 215,  35, 189, 
     10, 215,  35, 189,  10, 215, 
     35, 189,   0,   0,   0,   0, 
     50,   0,   0,  12, 114,   0, 
     16,   0,   2,   0,   0,   0, 
    166,  10,  16,   0,   3,   0, 
      0,   0,  70,   2,  16,   0, 
      2,   0,   0,   0,   2,  64, 
      0,   0,  10, 215,  35,  61, 
     10, 215,  35,  61,  10, 215, 
     35,  61,   0,   0,   0,   0, 
     56,   0,   0,   7, 114,   0, 
     16,   0,   5,   0,   0,   0, 
      6,   0,  16,   0,   3,   0, 
      0,   0,  70,   2,  16,   0, 
      2,   0,   0,   0,   0,   0, 
      0,   7,  66,   0,  16,   0, 
      3,   0,   0,   0,  26,   0, 
     16,   0,   3,   0,   0,   0, 
     26,   0,  16,   0,   3,   0, 
      0,   0,   0,   0,   0,   8, 
    130,   0,  16,   0,   0,   0, 
      0,   0,  58,   0,  16, 128, 
     65,   0,   0,   0,   0,   0, 
      0,   0,   1,  64,   0,   0, 
      0,   0, 128,  63,  56,   0, 
      0,   7, 130,   0,  16,   0, 
      3,   0,   0,   0,  58,   0, 
     16,   0,   0,   0,   0,   0, 
     58,   0,  16,   0,   0,   0, 
      0,   0,  56,   0,   0,   7, 
    130,   0,  16,   0,   3,   0, 
      0,   0,  58,   0,  16,   0, 
      3,   0,   0,   0,  58,   0, 
     16,   0,   3,   0,   0,   0, 
     56,   0,   0,   7, 130,   0, 
     16,   0,   0,   0,   0,   0, 
     58,   0,  16,   0,   0,   0, 
      0,   0,  58,   0,  16,   0, 
      3,   0,   0,   0,  56,   0, 
      0,   7, 130,   0,  16,   0, 
      3,   0,   0,   0,  58,   0, 
     16,   0,   1,   0,   0,   0, 
     58,   0,  16,   0,   1,   0, 
      0,   0,  50,   0,   0,   9, 
    130,   0,  16,   0,   1,   0, 
      0,   0,  58,   0,  16,   0, 
      1,   0,   0,   0,  58,   0, 
     16,   0,   1,   0,   0,   0, 
      1,  64,   0,   0,   0,   0, 
    128, 191,  50,   0,   0,  13, 
    114,   0,  16,   0,   2,   0, 
      0,   0,  70,   2,  16, 128, 
     65,   0,   0,   0,   2,   0, 
      0,   0,   6,   0,  16,   0, 
      3,   0,   0,   0,   2,  64, 
      0,   0,   0,   0, 128,  63, 
      0,   0, 128,  63,   0,   0, 
    128,  63,   0,   0,   0,   0, 
     56,   0,   0,   7,  18,   0, 
     16,   0,   3,   0,   0,   0, 
     58,   0,  16,   0,   3,   0, 
      0,   0,   1,  64,   0,   0, 
      0,   0, 128,  62,  54,   0, 
      0,   8, 114,   0,  16,   0, 
      6,   0,   0,   0,   2,  64, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
     54,   0,   0,   5, 130,   0, 
     16,   0,   4,   0,   0,   0, 
      1,  64,   0,   0,   0,   0, 
      0,   0,  48,   0,   0,   1, 
     33,   0,   0,   7, 130,   0, 
     16,   0,   5,   0,   0,   0, 
     58,   0,  16,   0,   4,   0, 
      0,   0,   1,  64,   0,   0, 
      3,   0,   0,   0,   3,   0, 
      4,   3,  58,   0,  16,   0, 
      5,   0,   0,   0,  16,   0, 
      0,  15, 130,   0,  16,   0, 
      5,   0,   0,   0,  70, 130, 
     32, 134,  65,   0,   0,   0, 
      0,   0,   0,   0,  16,   0, 
      0,   0,  58,   0,  16,   0, 
      4,   0,   0,   0,  70, 130, 
     32, 134,  65,   0,   0,   0, 
      0,   0,   0,   0,  16,   0, 
      0,   0,  58,   0,  16,   0, 
      4,   0,   0,   0,  68,   0, 
      0,   5, 130,   0,  16,   0, 
      5,   0,   0,   0,  58,   0, 
     16,   0,   5,   0,   0,   0, 
     56,   0,   0,  11, 114,   0, 
     16,   0,   7,   0,   0,   0, 
    246,  15,  16,   0,   5,   0, 
      0,   0,  70, 130,  32, 134, 
     65,   0,   0,   0,   0,   0, 
      0,   0,  16,   0,   0,   0, 
     58,   0,  16,   0,   4,   0, 
      0,   0,  50,   0,   0,  13, 
    114,   0,  16,   0,   8,   0, 
      0,   0,  70, 130,  32, 134, 
     65,   0,   0,   0,   0,   0, 
      0,   0,  16,   0,   0,   0, 
     58,   0,  16,   0,   4,   0, 
      0,   0, 246,  15,  16,   0, 
      5,   0,   0,   0,  70,   2, 
     16,   0,   0,   0,   0,   0, 
     16,   0,   0,   7, 130,   0, 
     16,   0,   5,   0,   0,   0, 
     70,   2,  16,   0,   8,   0, 
      0,   0,  70,   2,  16,   0, 
      8,   0,   0,   0,  68,   0, 
      0,   5, 130,   0,  16,   0, 
      5,   0,   0,   0,  58,   0, 
     16,   0,   5,   0,   0,   0, 
     56,   0,   0,   7, 114,   0, 
     16,   0,   8,   0,   0,   0, 
    246,  15,  16,   0,   5,   0, 
      0,   0,  70,   2,  16,   0, 
      8,   0,   0,   0,  16,  32, 
      0,   7, 130,   0,  16,   0, 
      5,   0,   0,   0,  70,   2, 
     16,   0,   1,   0,   0,   0, 
     70,   2,  16,   0,   7,   0, 
      0,   0,  16,  32,   0,   7, 
    130,   0,  16,   0,   6,   0, 
      0,   0,  70,   2,  16,   0, 
      7,   0,   0,   0,  70,   2, 
     16,   0,   8,   0,   0,   0, 
     16,  32,   0,   7,  18,   0, 
     16,   0,   7,   0,   0,   0, 
     70,   2,  16,   0,   1,   0, 
      0,   0,  70,   2,  16,   0, 
      8,   0,   0,   0,  56,   0, 
      0,   7,  34,   0,  16,   0, 
      7,   0,   0,   0,  58,   0, 
     16,   0,   6,   0,   0,   0, 
     58,   0,  16,   0,   6,   0, 
      0,   0,  50,   0,   0,   9, 
     66,   0,  16,   0,   7,   0, 
      0,   0,  26,   0,  16,   0, 
      7,   0,   0,   0,  42,   0, 
     16,   0,   3,   0,   0,   0, 
      1,  64,   0,   0,   0,   0, 
      0, 191,   0,   0,   0,   8, 
    130,   0,  16,   0,   7,   0, 
      0,   0,  58,   0,  16, 128, 
     65,   0,   0,   0,   5,   0, 
      0,   0,   1,  64,   0,   0, 
      0,   0, 128,  63,  56,   0, 
      0,   7,  18,   0,  16,   0, 
      8,   0,   0,   0,  58,   0, 
     16,   0,   7,   0,   0,   0, 
     58,   0,  16,   0,   7,   0, 
      0,   0,  56,   0,   0,   7, 
     18,   0,  16,   0,   8,   0, 
      0,   0,  10,   0,  16,   0, 
      8,   0,   0,   0,  10,   0, 
     16,   0,   8,   0,   0,   0, 
     56,   0,   0,   7, 130,   0, 
     16,   0,   7,   0,   0,   0, 
     58,   0,  16,   0,   7,   0, 
      0,   0,  10,   0,  16,   0, 
      8,   0,   0,   0,  50,   0, 
      0,   9, 130,   0,  16,   0, 
      7,   0,   0,   0,  42,   0, 
     16,   0,   7,   0,   0,   0, 
     58,   0,  16,   0,   7,   0, 
      0,   0,   1,  64,   0,   0, 
      0,   0, 128,  63,  50,   0, 
      0,   9,  66,   0,  16,   0, 
      7,   0,   0,   0,  42,   0, 
     16,   0,   7,   0,   0,   0, 
     58,   0,  16,   0,   0,   0, 
      0,   0,   1,  64,   0,   0, 
      0,   0, 128,  63,  56,   0, 
      0,   7,  18,   0,  16,   0, 
      7,   0,   0,   0,  10,   0, 
     16,   0,   7,   0,   0,   0, 
     10,   0,  16,   0,   7,   0, 
      0,   0,  50,   0,   0,   9, 
     18,   0,  16,   0,   7,   0, 
      0,   0,  10,   0,  16,   0, 
      7,   0,   0,   0,  58,   0, 
     16,   0,   1,   0,   0,   0, 
      1,  64,   0,   0,   0,   0, 
    128,  63,  56,   0,   0,   7, 
     82,   0,  16,   0,   7,   0, 
      0,   0,   6,   2,  16,   0, 
      7,   0,   0,   0,   6,   3, 
     16,   0,   7,   0,   0,   0, 
     56,   0,   0,   7,  18,   0, 
     16,   0,   7,   0,   0,   0, 
     10,   0,  16,   0,   7,   0, 
      0,   0,   1,  64,   0,   0, 
    219,  15,  73,  64,  52,   0, 
      0,   7,  18,   0,  16,   0, 
      7,   0,   0,   0,  10,   0, 
     16,   0,   7,   0,   0,   0, 
      1,  64,   0,   0, 189,  55, 
    134,  53,  14,   0,   0,   7, 
     18,   0,  16,   0,   7,   0, 
      0,   0,  58,   0,  16,   0, 
      3,   0,   0,   0,  10,   0, 
     16,   0,   7,   0,   0,   0, 
      0,   0,   0,   8, 130,   0, 
     16,   0,   7,   0,   0,   0, 
     58,   0,  16, 128,  65,   0, 
      0,   0,   6,   0,   0,   0, 
      1,  64,   0,   0,   0,   0, 
    128,  63,  56,   0,   0,   7, 
     18,   0,  16,   0,   8,   0, 
      0,   0,  58,   0,  16,   0, 
      7,   0,   0,   0,  58,   0, 
     16,   0,   7,   0,   0,   0, 
     56,   0,   0,   7,  18,   0, 
     16,   0,   8,   0,   0,   0, 
     10,   0,  16,   0,   8,   0, 
      0,   0,  10,   0,  16,   0, 
      8,   0,   0,   0,  56,   0, 
      0,   7, 130,   0,  16,   0, 
      7,   0,   0,   0,  58,   0, 
     16,   0,   7,   0,   0,   0, 
     10,   0,  16,   0,   8,   0, 
      0,   0,  50,   0,   0,   9, 
    114,   0,  16,   0,   8,   0, 
      0,   0,  70,   2,  16,   0, 
      2,   0,   0,   0, 246,  15, 
     16,   0,   7,   0,   0,   0, 
     70,   2,  16,   0,   5,   0, 
      0,   0,  50,   0,   0,  10, 
    130,   0,  16,   0,   6,   0, 
      0,   0,  58,   0,  16, 128, 
     65,   0,   0,   0,   6,   0, 
      0,   0,  58,   0,  16,   0, 
      6,   0,   0,   0,   1,  64, 
      0,   0,   0,   0, 128,  63, 
     50,   0,   0,   9, 130,   0, 
     16,   0,   6,   0,   0,   0, 
     10,   0,  16,   0,   3,   0, 
      0,   0,  58,   0,  16,   0, 
      6,   0,   0,   0,  26,   0, 
     16,   0,   7,   0,   0,   0, 
    129,   0,   0,   5, 130,   0, 
     16,   0,   6,   0,   0,   0, 
     58,   0,  16,   0,   6,   0, 
      0,   0,  56,   0,   0,   7, 
    178,   0,  16,   0,   7,   0, 
      0,   0,   6,   0,  16,   0, 
      7,   0,   0,   0,  70,   8, 
     16,   0,   8,   0,   0,   0, 
     56,   0,   0,   7, 178,   0, 
     16,   0,   7,   0,   0,   0, 
    246,  15,  16,   0,   6,   0, 
      0,   0,  70,  12,  16,   0, 
      7,   0,   0,   0,  56,   0, 
      0,  10, 114,   0,  16,   0, 
      8,   0,   0,   0, 246,  15, 
     16,   0,   5,   0,   0,   0, 
     70, 130,  32,   6,   0,   0, 
      0,   0,  19,   0,   0,   0, 
     58,   0,  16,   0,   4,   0, 
      0,   0,  50,   0,   0,   9, 
    114,   0,  16,   0,   7,   0, 
      0,   0,  70,   2,  16,   0, 
      4,   0,   0,   0, 166,  10, 
     16,   0,   7,   0,   0,   0, 
     70,   3,  16,   0,   7,   0, 
      0,   0,  50,   0,   0,   9, 
    114,   0,  16,   0,   6,   0, 
      0,   0,  70,   2,  16,   0, 
      8,   0,   0,   0,  70,   2, 
     16,   0,   7,   0,   0,   0, 
     70,   2,  16,   0,   6,   0, 
      0,   0,  30,   0,   0,   7, 
    130,   0,  16,   0,   4,   0, 
      0,   0,  58,   0,  16,   0, 
      4,   0,   0,   0,   1,  64, 
      0,   0,   1,   0,   0,   0, 
     22,   0,   0,   1,  69,   0, 
      0, 139, 130,   1,   0, 128, 
     67,  85,  21,   0, 114,   0, 
     16,   0,   2,   0,   0,   0, 
     70,   2,  16,   0,   1,   0, 
      0,   0,  70, 126,  16,   0, 
      5,   0,   0,   0,   0,  96, 
     16,   0,   1,   0,   0,   0, 
     50,   0,   0,   9, 114,   0, 
     16,   0,   2,   0,   0,   0, 
     70,   2,  16,   0,   4,   0, 
      0,   0,  70,   2,  16,   0, 
      2,   0,   0,   0,  70,   2, 
     16,   0,   6,   0,   0,   0, 
     43,   0,   0,   6, 130,   0, 
     16,   0,   0,   0,   0,   0, 
     42, 128,  32,   0,   0,   0, 
      0,   0,  23,   0,   0,   0, 
     56,   0,   0,   7, 130,   0, 
     16,   0,   0,   0,   0,   0, 
     58,   0,  16,   0,   0,   0, 
      0,   0,  26,   0,  16,   0, 
      3,   0,   0,   0,  16,   0, 
      0,   8, 130,   0,  16,   0, 
      1,   0,   0,   0,  70,   2, 
     16, 128,  65,   0,   0,   0, 
      0,   0,   0,   0,  70,   2, 
     16,   0,   1,   0,   0,   0, 
      0,   0,   0,   7, 130,   0, 
     16,   0,   1,   0,   0,   0, 
     58,   0,  16,   0,   1,   0, 
      0,   0,  58,   0,  16,   0, 
      1,   0,   0,   0,  50,   0, 
      0,  11, 114,   0,  16,   0, 
      0,   0,   0,   0,  70,   2, 
     16,   0,   1,   0,   0,   0, 
    246,  15,  16, 128,  65,   0, 
      0,   0,   1,   0,   0,   0, 
     70,   2,  16, 128,  65,   0, 
      0,   0,   0,   0,   0,   0, 
     72,   0,   0, 141, 130,   1, 
      0, 128,  67,  85,  21,   0, 
    114,   0,  16,   0,   0,   0, 
      0,   0,  70,   2,  16,   0, 
      0,   0,   0,   0,  70, 126, 
     16,   0,   4,   0,   0,   0, 
      0,  96,  16,   0,   1,   0, 
      0,   0,  58,   0,  16,   0, 
      0,   0,   0,   0,  50,   0, 
      0,   9, 114,   0,  16,   0, 
      0,   0,   0,   0,  70,   2, 
     16,   0,   5,   0,   0,   0, 
     70,   2,  16,   0,   0,   0, 
      0,   0,  70,   2,  16,   0, 
      2,   0,   0,   0,  69,   0, 
      0, 139, 194,   0,   0, 128, 
     67,  85,  21,   0, 114,   0, 
     16,   0,   1,   0,   0,   0, 
     70,  16,  16,   0,   0,   0, 
      0,   0,  70, 126,  16,   0, 
      3,   0,   0,   0,   0,  96, 
     16,   0,   0,   0,   0,   0, 
      0,   0,   0,   7, 114,  32, 
     16,   0,   0,   0,   0,   0, 
     70,   2,  16,   0,   0,   0, 
      0,   0,  70,   2,  16,   0, 
      1,   0,   0,   0,  56,   0, 
      0,   8, 130,  32,  16,   0, 
      0,   0,   0,   0,  58,   0, 
     16,   0,   2,   0,   0,   0, 
     58, 128,  32,   0,   0,   0, 
      0,   0,  22,   0,   0,   0, 
     62,   0,   0,   1,  53,  16, 
      0,   0,  78,   2,   0,   0, 
     23,   0,   1,   0,  41, 230, 
     24,   0, 120,   1, 237,  88, 
     91, 111,  27, 199,  21, 158, 
    189, 112, 185,  36, 151, 135, 
     87,  81, 188, 115,  73, 174, 
    238, 138, 111, 161,  41, 201, 
    146,  71, 178,  68,  73, 190, 
    168, 142,  98,  75, 113, 154, 
     74,  78, 226,  72, 110,  93, 
    228,  86, 203,  53, 130,  60, 
    208, 138,  32,  24,  73,  96, 
     24,  65,  31, 130, 162, 207, 
     69,  17, 180, 127,  32,  47, 
    145,  92,  33,  40,   8, 181, 
     41,  10, 182,  64, 139, 182, 
     64, 209, 162,  40, 208, 183, 
     64,  79, 125,  40, 226, 126, 
    103,  69,   6, 106, 210, 188, 
      9, 104, 129, 234,   0, 103, 
    207, 156,  51, 115, 230, 124, 
     51, 115, 102, 118, 119, 254, 
    150,  20,  46,  77, 173, 124, 
    248,  54, 203, 231,  55, 126, 
    254, 123, 139, 132, 240, 160, 
    172, 128,  89,  50, 125,  63, 
    200,  79,  33, 222, 235, 228, 
    167,  16, 113, 126, 112,   3, 
     85, 136,  39,  32,   6, 193, 
     39, 124,  66,  76,  64, 114, 
     93, 111, 139, 133, 253, 231, 
    169,  79,   6, 255,  50, 197, 
    197,  46, 240,  41, 240,  79, 
    224, 199, 124,  28, 252,  14, 
    244, 215,  32, 143,  65,  66, 
    184, 190,   6, 184,  77,   9, 
    126, 128, 188, 252,  56,  64, 
     81, 240, 159, 192, 215, 192, 
     76,  97, 112,   4, 204, 148, 
      1, 235, 224, 207, 105, 149, 
     31, 255, 153,  62,  68,  80, 
    198, 255,  85, 196, 216,  24, 
     15, 227,  66, 209, 197, 201, 
    196, 227, 253, 111,  19, 227, 
    105, 207, 150,   6, 102, 189, 
    189,  78,  76, 188,  30,   7, 
      9, 203, 218, 242,  17, 162, 
    209, 154, 216, 118, 147,  63, 
    182, 244, 246,  90,  62,   2, 
    127,  21,  61,   6, 141, 113, 
    225,   0, 181, 117, 198,  97, 
    184,  79,  72,   5, 201,  98, 
     66, 170,  61, 251,  11, 244, 
    127,  66, 237, 220, 227,  89, 
    192, 246, 112, 135,  30,   2, 
    183, 169,  93,  63, 203, 149, 
     98, 125, 155, 249, 189, 164, 
    248,   7, 107, 109,  93, 129, 
    190, 191,  86, 251, 186, 198, 
    250, 129, 246, 174, 142,   0, 
    138,  71, 189, 142, 205, 113, 
     61, 148, 133, 142,  90, 232, 
     75, 208, 151,  14, 232, 207, 
     65, 127, 238, 128, 254,   2, 
    244,  23,  14, 232,  55, 160, 
    223, 104, 235, 237, 254,  67, 
    251, 241,  52,  94, 107,  24, 
    235, 255, 203, 124, 132, 241, 
    112, 248,   8, 227, 225, 240, 
     17, 198, 195, 225,  35, 140, 
    135, 195,  71,  24,  15, 135, 
    143,  48,  30,  14,  31,  97, 
     60,  28,  62, 193,  15, 253, 
    131, 173, 186, 255, 179,  45, 
     83, 217, 121, 116,  66, 185, 
    255,  72, 213, 254, 185, 133, 
     47, 206, 134,  80, 226,  13, 
     69,  68,  26, 138, 210, 209, 
    184,  39,  30, 108,  11, 109, 
    253,  83, 221, 120,  81, 132, 
    209, 206, 213, 189, 208, 205, 
     23, 241,  49,  58, 216,  16, 
    198, 137, 134, 162,  63, 209, 
     16, 158,  74,  67,  49,  78, 
     54,  20, 207, 233, 198, 226, 
    250, 111, 126,  23, 224,  95, 
    134, 125,  25, 250,  49, 164, 
    197, 159, 178, 251,  50, 194, 
    245, 144, 209, 150,  30, 187, 
    167,  63, 216, 166,  66, 214, 
    188, 167,  62, 216,  14, 151, 
    243,  38, 183, 135, 159, 219, 
     30,  50, 194,  58, 126,  77, 
    226, 172,  67, 118, 176,  63, 
    100, 162, 165, 119, 222,  51, 
     30, 108,  71, 123,  28, 147, 
    251,   9, 151, 109, 183, 159, 
    248,  64, 201, 164,  66,  55, 
     49, 222, 196, 241,  94,  51, 
     90, 238, 167, 152,  88, 111, 
     70, 139, 151,  55, 185,  63, 
    252, 155, 186, 254, 144, 157, 
    241, 226,   9, 234,  64,  93, 
    188, 240, 204,  38, 245, 156, 
    162,  97, 101, 227,  17, 199, 
     64,  93, 186, 213,  70,  99, 
     31, 124, 123, 103,  88, 135, 
    204, 238, 247,  59, 104,  38, 
    225,  71, 229,  27, 155, 145, 
    129,  99,  20,  29,  56,  67, 
     41, 232,  29, 125,  55,  55, 
    217,  31, 237, 242, 173, 246, 
    106, 218, 107, 152, 153, 145, 
    138,  25,  62,  89, 165,  78, 
    180,   9, 247,  92, 223, 140, 
    159, 180,  41, 135, 114,  50, 
    119, 119,  51, 241, 100, 214, 
    197, 154, 247, 232, 102, 168, 
    167, 151,  16, 168,  25,  26, 
    120, 117,  19, 147, 208, 140, 
    117,  77, 110, 166, 159, 204, 
     83,  98, 212,  33, 237, 120, 
     86,  98,  34, 154, 145, 147, 
     87,  54, 211, 163,  37,  82, 
    143, 231, 101, 162, 216,  77, 
    218, 144,  35,  41, 215,  79, 
    233, 162,  77, 234,  80,  73, 
    134,  10, 131, 164, 245, 117, 
    203, 104,  87, 191,  20, 158, 
    205, 157, 239, 132,  30, 108, 
    107,  98, 163, 105, 252, 253, 
     19,  77, 237, 179, 101, 164, 
     60,  40,  99,  61, 253,  82, 
    133, 205,  11, 155, 230, 181, 
     40,  92,  28, 148,  29, 203, 
     84,  87,  61, 150,  76,  44, 
    247, 214,  41, 148,  37, 161, 
     52,  30, 237,  89, 150,  25, 
    234, 203,  83,  52, 228, 144, 
    154, 131, 205, 191, 208,  48, 
    190, 105, 213,  35, 125,  37, 
    138, 133, 136, 212,  46, 224, 
     42, 100, 165, 240, 141,  53, 
     20, 255, 162, 155,  51, 254, 
    100, 210,  12, 247,   1,  75, 
     72,  39, 173, 236,  72, 252, 
    203,  53,  20, 223, 217, 134, 
     49, 144, 149, 190,  52, 153, 
     86,  42,  77,  90,  81, 151, 
    138, 169,  52, 140,   2,  99, 
     87, 201,  76,  24, 166,  55, 
    148, 150, 134, 162,   3, 183, 
     42,  69,   8, 121,  22,  91, 
     17, 154,  55,  45,  85, 143, 
     42, 131, 203, 162, 174,  44, 
    171, 117,  75, 177, 136, 180, 
      4,  93, 247,  40,  59,  94, 
    133,  40, 170,  37,  41,  40, 
    168, 105, 116, 170, 182, 166, 
      8,  82,  53,  21, 250, 122, 
    211, 155, 170,  58, 189, 192, 
     95,  81,  54,  31, 177,  46, 
    180, 234,  96,  82, 177, 126, 
    170, 138, 135,  77,  37, 117, 
     76, 215,  96,  83,  50, 234, 
    199,  72, 212, 166, 149, 201, 
    127, 204, 109,   2, 153, 244, 
    199,  33, 241, 192, 173,  15, 
    139, 119,  93, 169,  42,  11, 
    191,  86, 241, 131,  19, 129, 
    159, 150, 171, 234,  25, 241, 
    182, 107,  15, 121,  42, 147, 
    248, 219,  29,  15, 123,  78, 
    185, 146, 199, 173, 250, 237, 
    122,  39, 252, 185,  93,  18, 
    254,  44,  35, 240, 143, 192, 
    159, 215, 192, 135, 245,   9, 
    193, 159, 237, 157, 229, 172, 
    235, 151,  44, 167,  93, 201, 
    251,  42, 213,  89,  19, 194, 
    251, 222, 167, 193, 224, 121, 
     72, 140,  95, 189,  41,  38, 
     60, 235,  59,  53, 172, 225, 
    121, 207, 253,  29, 142, 225, 
    193,  88,  85,  36, 149,   7, 
    107, 167, 168, 113, 224, 164, 
    166,  63, 190, 175,  99, 155, 
     64, 223, 104, 250, 162,  19, 
    122,   4, 118, 202, 194, 190, 
    236, 175, 179, 205,  12, 179, 
    109, 163,  25,  76, 215, 116, 
    108, 190, 166, 234,  79,  59, 
    225, 101, 187, 206,  54,  43, 
     89, 211, 145, 236,  77, 197, 
    159, 119, 162,  93,  85, 184, 
    173,  55, 253, 118, 218, 137, 
     44, 151, 234, 156, 163, 194, 
    175,  58, 233, 211,  85, 137, 
    132, 110, 250, 236, 188, 147, 
     29, 145, 100, 163,  76, 165, 
    180, 147,  27, 173, 202,  34, 
    202, 166, 173,  58, 249, 179, 
     82, 150,  80,  14, 150, 242, 
    142, 125, 110, 134,  50, 203, 
    213, 122, 113,  74,  74,   7, 
     54, 171, 164,  58, 165, 233, 
     25,  25,  29, 114, 168, 176, 
     44, 235, 206, 133,  25, 153, 
     30, 170,  80, 160, 235,  34, 
    101, 199, 135, 169, 188,  60, 
     83, 239,   6, 102, 213, 175, 
    218, 185, 161,  42,  89, 167, 
     47, 202, 252, 248,  25,  10, 
    140, 140, 145,  61,  59,  65, 
    190, 216, 101, 234,  69, 189, 
    130, 250, 110, 228,  92, 151, 
      9, 188,  67, 239, 235, 125, 
    176, 249, 109, 213,  46, 142, 
     75, 178,  70, 199, 100, 105, 
    118, 146,   2, 231, 106, 100, 
    116,  90, 212, 143, 177, 245, 
     60, 245,  75, 141, 231,  12, 
     99, 176,   3,  95, 155, 163, 
    222, 211, 142, 236, 186,  84, 
    161,  46, 216, 124, 240, 235, 
     27,  25, 166,  60, 247,  53, 
    254, 166,  62,   0,  27, 149, 
     84, 219, 153, 157,  33, 107, 
    170,  38, 173, 144,  37, 173, 
    167, 231, 100,  20, 245, 158, 
    161, 139, 186,  23, 253, 165, 
     23, 119,  53, 158, 115, 140, 
    215,  14,  92,  69,  63, 163, 
    195,  50, 127, 182, 138, 189, 
     76,  24, 183, 106,  15, 156, 
     27, 163,  18, 247,  55, 251, 
    174, 110, 176,  84, 210, 250, 
     99, 109, 125, 203, 255, 219, 
    242,  71, 221, 172,   7, 126, 
    160, 123,  67, 130,  30, 107, 
    111, 109, 253,  33, 116,  97, 
     98, 207, 241, 155, 214, 165, 
    138, 204, 162,  46,  60, 126, 
    219, 141, 145,  65,  12,  94, 
     63, 204, 153,  29, 184, 150, 
    160, 220,  20, 198,  53,  93, 
    165,  53, 228, 144, 232, 150, 
    134, 232, 157,  48,  68, 255, 
    164, 177, 103, 213, 204, 189, 
    185, 243,  38, 210,  11, 253, 
    173, 111, 125,  52, 116, 255, 
    180,   7, 115,  29,  13,  36, 
    156,  52, 199,  42, 126,  27, 
    177, 136, 246, 134, 109, 211, 
     26,  77,  72,  30, 103, 100, 
    246,  77, 221, 106, 197, 152, 
     67,  94, 249, 199, 171, 147, 
    192, 118, 214, 127, 238, 204, 
    190, 156, 146, 174, 228, 117, 
     52, 166, 223, 117, 122, 158, 
    154,  32,  94, 191, 238,  11, 
    223, 115, 240, 218, 200, 122, 
      2, 126, 218, 171,  76, 154, 
    216, 122, 196, 231,  83, 182, 
     56, 233,   4,  56,  86, 249, 
    152, 110, 165,  84, 218,  27, 
     75, 154, 243, 200,  85, 115, 
    168,  68, 230, 232,  12, 153, 
    227,  23, 201,  39, 236, 166, 
     47, 166, 154, 165, 233, 154, 
    123, 182, 153,  67, 187, 101, 
    206,  43, 115, 116, 183,  92, 
     96,  57, 190,  91, 126,  60, 
    113, 153, 132,  88, 199, 222, 
    159,  39, 231, 194, 121,  18, 
    139, 162, 222,  30,  11, 231, 
    107, 180, 107, 183, 204, 121, 
    150, 158, 186, 239,   8, 162, 
    108,  24, 123, 105,  47, 113, 
    197,  84,  84, 149,  44, 216, 
    243, 169,  83, 206, 130, 231, 
    237, 157,  54, 110,   3,  99, 
    236, 141, 253,  76, 107,  99, 
    183,  21,  17, 230, 124, 200, 
      4, 102, 176, 206,  27, 205, 
     92, 224, 161, 206, 123, 166, 
     16, 120,  95, 239, 233, 154, 
    151, 217,  17, 135, 138,  83, 
    147, 228,  93,  36, 236, 151, 
    253, 113, 241,  62, 200, 142, 
    236, 150, 251,  32,   3,  87, 
    127, 228,   8,  85, 205,  90, 
    169, 164, 251,  46, 241, 247, 
     92, 174, 241,  89, 236, 239, 
    187,  82, 227, 247, 135, 127, 
    224, 153, 154,  31, 253,  25, 
     23, 118,  53, 142, 109,  76, 
    239, 106, 189, 139, 231, 235, 
     98, 113, 158, 196, 181,   5, 
     18,   1,  65,  28,  47,  10, 
     76, 237, 113, 216,  33,  10, 
     51, 150,  76, 113,  70,  31, 
    132, 204,  21,  31, 186, 251, 
    183,  80,   4, 166,  17,   7, 
    121,  53,  76, 125,  87, 175, 
    144, 178, 136, 115,  15,  62, 
     60,  70, 222, 131, 249, 179, 
    187, 101, 179, 167, 155, 204, 
    190,  94,  50,   7, 194, 228, 
     15,  90, 228,  60,  29,  39, 
    103, 177, 159,  28, 156, 129, 
     69, 244, 225, 153, 218,  69, 
    222,  67,   2,  71, 116, 209, 
    169, 123, 175, 157,  39, 239, 
    215, 231, 201,  91,  36, 172, 
    199,  70,  51,  11,  28, 237, 
    113, 217, 154,  26, 230, 184, 
    153, 212,  12, 206,  55, 224, 
     72,  61, 116, 115, 164, 144, 
      2, 142, 179, 195, 146, 207, 
     29, 115, 238,  12, 249, 230, 
    198, 200,  63,  39,  41,  22, 
    140, 203, 120, 176,  95, 154, 
     65,  33, 139, 200, 135, 232, 
      5, 139, 162,  79,  79, 224, 
     29, 129, 243,  24, 126, 190, 
    171, 187,  26, 199, 240,  33, 
    118, 118, 113, 184, 174,  96, 
    173,  20, 236, 105,   5, 249, 
    241,  13, 143, 216, 201, 117, 
    196,  41,  63, 144, 164,   2, 
    176,  90, 149, 126,  10,  86, 
    206,  16,  85,  42,  20,  11, 
     88,  50,  30, 152, 144, 102, 
    128, 100,  52, 230, 167, 108, 
     49,  74, 217,  33, 155, 178, 
     56, 211,  59,  16,  51, 119, 
     46,  41, 211,  33,  33, 195, 
      9, 139,  34,   9, 196,  74, 
     36, 224,  19, 133, 143,  13, 
     31,  85,  26, 177, 184, 244, 
     22, 147,  50, 160,   9, 121, 
     27, 123,  37, 118,  28,  56, 
     79,  38, 165, 249, 164, 144, 
    124, 254,  70,  50, 113,  89, 
    206,  37, 101,  87,  65, 200, 
    215, 161, 251,  61, 170,  97, 
    121, 117,  67, 248, 132, 193, 
     99,  20, 131,   6, 245, 234, 
    159, 109,  41,  95, 184,  27, 
     19, 226, 173, 237,  20,  23, 
    220, 123, 180,  47,  16, 239, 
    190, 131, 196,  42, 108,  38, 
    196, 231, 196, 126, 176, 253, 
    219,  85,  38,  95, 242, 193, 
    214, 186,  70, 223,  39, 156, 
    235, 108, 179,  33,  62,  39, 
    124, 128, 176, 205, 189,  19, 
    111, 145,  27,  81,  87,   4, 
    127, 199, 181,  73,  97,  35, 
    108,  21, 136,  54, 185, 112, 
     97,  27, 102, 217, 162,  95, 
    180, 238, 225,  63, 104,  73, 
    222, 212, 124, 151, 171, 184, 
    128, 132,  72, 129, 245, 214, 
    221, 240, 221, 240, 175, 170, 
    227, 222, 224, 203,  92, 102, 
    194,  75, 205, 165, 191, 182, 
    124,  25,  39, 190, 225,  14, 
    208,  15, 249, 241,  37,  26, 
    108, 249, 101,  91, 146, 231, 
    129, 135,  74, 238, 224,  64, 
    124, 193,  12, 154, 107, 213, 
    215,  90, 146, 231,  16, 223, 
    128,  95, 194, 177, 210, 170, 
    127,  14, 204,  72, 107, 103, 
    150, 206,  45, 204,  46, 173, 
    221, 121, 126, 101, 245, 238, 
    210, 165,  91, 119, 214, 150, 
    106, 183, 110, 175, 190, 116, 
    231, 217, 133,  75,  75, 107, 
    183,  95,  90, 186, 250, 173, 
     23,  87,  86, 111, 175,  45, 
     77, 189, 246, 202, 235, 183, 
     94,  94,  93,  89, 122, 246, 
    198, 107, 111,  60, 245, 234, 
    234, 252, 228, 149, 233, 155, 
     55, 209, 240, 249, 249, 171, 
     11, 171, 111, 220, 249, 238, 
    237, 213, 149, 233,  87, 110, 
    173, 173, 221, 186, 187, 122, 
    236, 245, 149,  27, 226,  95, 
     62,  47, 215,  15,   0,   0, 
     88,  72,  83,  72,   8,   0, 
      0,   0, 118,  16, 208,  54, 
     63,   7,  13, 108,  88,  80, 
     68,  80,  89,   0,   0,   0, 
     68,  58,  92,  65,  84,  71, 
     92, 115, 116,  95, 100, 101, 
    118,  92,  75, 105, 116, 115, 
     92,  68, 105, 114, 101,  99, 
    116,  88,  84,  75,  92, 115, 
    114,  99,  92,  83, 104,  97, 
    100, 101, 114, 115,  92,  67, 
    111, 109, 112, 105, 108, 101, 
    100,  92,  88,  98, 111, 120, 
     79, 110, 101,  80,  66,  82, 
     69, 102, 102, 101,  99, 116, 
     95,  80,  83,  84, 101, 120, 
    116, 117, 114, 101, 100,  69, 
    109, 105, 115, 115, 105, 118, 
    101,  46, 112, 100,  98
};
