#if 0
//
// Generated by Microsoft (R) D3D Shader Disassembler for Durango
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xy          2     NONE   float   xy  
// COLOR                    0   xyzw        3     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// COLOR                    0   xyzw        0     NONE   float   xyzw
// COLOR                    1   xyzw        1     NONE   float   xyzw
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1     zw        2     NONE   float     zw
// SV_Position              0   xyzw        3      POS   float   xyzw
//
vs_5_0
// Opaque Custom Data - XBOX Precompiled Shader Header
// First Precompiled Shader at offset:[107]
// Embedded Data:
//  0x0000006b - Offset To First Precompiled Shader
//  0x00010050 - Original Shader Descriptor
//  0x00000066 - Original Shader Size
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[7], immediateIndexed
dcl_input v0.xyzw
dcl_input v1.xy
dcl_input v2.xy
dcl_input v3.xyzw
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.xy
dcl_output o2.zw
dcl_output_siv o3.xyzw, position
mul o0.xyzw, v3.xyzw, cb0[0].xyzw
dp4_sat o1.w, v0.xyzw, cb0[2].xyzw
mov o1.xyz, l(0,0,0,0)
mov o2.xy, v1.xyxx
mov o2.zw, v2.xxxy
dp4 o3.x, v0.xyzw, cb0[3].xyzw
dp4 o3.y, v0.xyzw, cb0[4].xyzw
dp4 o3.z, v0.xyzw, cb0[5].xyzw
dp4 o3.w, v0.xyzw, cb0[6].xyzw
ret 
// Opaque Custom Data - XBOX Precompiled Shader Object
// Offset:[107], bundle is:[163] DWORDS.
// Disassembled Precompiled Shader Object:
// Shader Type               : (VS)
// Shader Hw Stage           : (VS)
// PDB Filename              : D:\ATG\st_dev\Kits\DirectXTK\src\Shaders\Compiled\XboxOneDualTextureEffect_VSDualTextureVc.pdb
// Shader Semantic Hash      : 0xaed42ef964973273
//
// Shader Data:
; ----------------- VS Data ------------------------
; Input Semantic Mappings
;   [0] generic, usageIdx  0, channelMask 15, v[4:7]
;   [1] generic, usageIdx  1, channelMask  3, v[8:9]
;   [2] generic, usageIdx  2, channelMask  3, v[12:13]
;   [3] generic, usageIdx  3, channelMask 15, v[16:19]
; Output Semantic Mappings
;   [0] generic,  usageIdx 0, paramIdx 0, paramSlot 0
;   [1] generic,  usageIdx 1, paramIdx 1, paramSlot 0
;   [2] generic,  usageIdx 2, paramIdx 2, paramSlot 0

codeLenInByte        = 168 bytes;

; launchModeFlags    = 0x0000000E
srdTableSupport      = TRUE
immediateSupportExt  = TRUE
srdTableSupportExt   = TRUE

userElementCount     = 3;
;  userElements[0]      = PTR_VERTEX_BUFFER_TABLE, Element=1 dwords, s[0x2:3]
;  userElements[1]      = PTR_EXTENDED_USER_DATA, ReferencedExtUserElements=1, s[0x2:3]
;  userElements[2]      = SUB_PTR_FETCH_SHADER, s[0x2:3]
extUserElementCount  = 1;
;  extUserElements 1[0] = IMM_CONST_BUFFER 0, offset 0x0:3 dwords
NumVgprs             = 20;
NumSgprs             = 26;
FloatMode            = 192;
IeeeMode             = 0;
FlatPtr32            = 0;
ScratchSize          = 0 dwords/thread;
LDSByteSize          = 0 bytes/workgroup (compile time only);
ScratchWaveOffsetReg = s65535;
; texSamplerUsage         = 0x00000000
; constBufUsage           = 0x00000001

; SPI_SHADER_PGM_RSRC2_VS = 0x00000008
SSPRV:USER_SGPR             = 4
; PA_CL_VS_OUT_CNTL       = 0x00000000
; SPI_VS_OUT_CONFIG       = 0x00000004
SVOC:VS_EXPORT_COUNT        = 2
SVOC:VS_HALF_PACK           = 0
SVOC:VS_EXPORTS_FOG         = 0
SVOC:VS_OUT_FOG_VEC_ADDR    = 0
; SPI_SHADER_POS_FORMAT     = 0x00000004
SSPF:POS0_EXPORT_FORMAT     = 4
SSPF:POS1_EXPORT_FORMAT     = 0
SSPF:POS2_EXPORT_FORMAT     = 0
SSPF:POS3_EXPORT_FORMAT     = 0
VGT_STRMOUT_CONFIG = 0x0
VGT_STRMOUT_CONFIG:RAST_STREAM = 0
VGT_STRMOUT_CONFIG:STREAMOUT_0_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_1_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_2_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_3_EN = 0
; exportVertexSize          = 4

// Shader Instructions:
shader main
  asic(CI)
  type(VS)
  s_swappc_b64  s[2:3], s[2:3]                          // 000000000000: BE822102
  s_load_dwordx4  s[0:3], s[2:3], 0x00                  // 000000000004: C0800300
  s_waitcnt     lgkmcnt(0)                              // 000000000008: BF8C007F
  s_buffer_load_dwordx16  s[4:19], s[0:3], 0x08         // 00000000000C: C3020108
  s_buffer_load_dwordx4  s[20:23], s[0:3], 0x18         // 000000000010: C28A0118
  s_buffer_load_dwordx4  s[0:3], s[0:3], 0x00           // 000000000014: C2800100
  s_waitcnt     vmcnt(0) & lgkmcnt(0)                   // 000000000018: BF8C0070
  v_mul_legacy_f32  v0, s7, v7                          // 00000000001C: 0E000E07
  v_mul_legacy_f32  v1, s11, v7                         // 000000000020: 0E020E0B
  v_mul_legacy_f32  v2, s15, v7                         // 000000000024: 0E040E0F
  v_mul_legacy_f32  v3, s19, v7                         // 000000000028: 0E060E13
  v_mul_legacy_f32  v7, s23, v7                         // 00000000002C: 0E0E0E17
  v_mac_f32     v0, s6, v6                              // 000000000030: 3E000C06
  v_mac_legacy_f32  v1, s10, v6                         // 000000000034: 0C020C0A
  v_mac_legacy_f32  v2, s14, v6                         // 000000000038: 0C040C0E
  v_mac_legacy_f32  v3, s18, v6                         // 00000000003C: 0C060C12
  v_mac_legacy_f32  v7, s22, v6                         // 000000000040: 0C0E0C16
  v_mac_f32     v0, s5, v5                              // 000000000044: 3E000A05
  v_mac_legacy_f32  v1, s9, v5                          // 000000000048: 0C020A09
  v_mac_legacy_f32  v2, s13, v5                         // 00000000004C: 0C040A0D
  v_mac_legacy_f32  v3, s17, v5                         // 000000000050: 0C060A11
  v_mac_legacy_f32  v7, s21, v5                         // 000000000054: 0C0E0A15
  v_mul_legacy_f32  v5, s0, v16                         // 000000000058: 0E0A2000
  v_mul_legacy_f32  v6, s1, v17                         // 00000000005C: 0E0C2201
  v_mul_legacy_f32  v10, s2, v18                        // 000000000060: 0E142402
  v_mul_legacy_f32  v11, s3, v19                        // 000000000064: 0E162603
  v_mad_legacy_f32  v0, v4, s4, v0 clamp                // 000000000068: D2800800 04000904
  v_mac_legacy_f32  v1, s8, v4                          // 000000000070: 0C020808
  v_mac_legacy_f32  v2, s12, v4                         // 000000000074: 0C04080C
  v_mac_legacy_f32  v3, s16, v4                         // 000000000078: 0C060810
  v_mac_legacy_f32  v7, s20, v4                         // 00000000007C: 0C0E0814
  v_mov_b32     v4, 0                                   // 000000000080: 7E080280
  exp           pos0, v1, v2, v3, v7 done               // 000000000084: F80008CF 07030201
  exp           param0, v5, v6, v10, v11                // 00000000008C: F800020F 0B0A0605
  exp           param1, v4, v4, v4, v0                  // 000000000094: F800021F 00040404
  exp           param2, v8, v9, v12, v13                // 00000000009C: F800022F 0D0C0908
  s_endpgm                                              // 0000000000A4: BF810000
end


// Shader Statistics:
//  NumActiveWaveFront:         40
//  WorkgroupSize:              64
//  NumVRegs:                   20
//  NumSRegs:                   26
//  NumActiveWaveFrontByVReg:   40
//  NumActiveWaveFrontBySReg:   40
//  NumActiveWaveFrontByLDS:    40
//  CycleSim:                   83
//  CycleSimNWaves:             83
//  Code Size:                  168
//Assembler Counts:
//  num_32bit_ops                     : 32
//  num_64bit_ops                     : 5
//  num_alu                           : 25
//  num_fc                            : 8
//  num_inst_exp                      : 4
//  num_inst_ldsgds                   : 0
//  num_inst_mimg                     : 0
//  num_inst_mtbuf                    : 0
//  num_inst_mubuf                    : 0
//  num_inst_sopp                     : 3
//  num_inst_sopc                     : 0
//  num_inst_sop1                     : 1
//  num_inst_sop2                     : 0
//  num_inst_smrd                     : 0
//  num_inst_sopk                     : 0
//  num_inst_vop1                     : 1
//  num_inst_vop2                     : 23
//  num_inst_vop3                     : 0
//  num_inst_vopc                     : 0
//  num_inst_vintrp                   : 0
//  constant_literal_operands         : 0
//  num_tex                           : 4
//  num_vmem_group                    : 0
//  vmem_grouping_started             : 0
// Shader Statistics:
// m_uNumActiveWaveFront             : 40
// m_uVRegLimit                      : 256
// m_uSRegLimit                      : 512
// m_uNumVRegs                       : 20
// m_uNumSRegs                       : 26
// m_uSCCodeSize                     : 168
// m_uWorkgroupSize                  : 64
// m_uNumActiveWaveFrontByVReg       : 40
// m_uNumActiveWaveFrontBySReg       : 40
// m_uNumActiveWaveFrontByLDS        : 40
// m_uCycleSim1Wave                  : 83
// m_uCycleSimNWaves                 : 83

// Assembler Counts:
// num_32bit_ops                     : 32
// num_64bit_ops                     : 5
// num_alu                           : 25
// num_fc                            : 8
// num_inst_exp                      : 4
// num_inst_ldsgds                   : 0
// num_inst_mimg                     : 0
// num_inst_mtbuf                    : 0
// num_inst_mubuf                    : 0
// num_inst_sopp                     : 3
// num_inst_sopc                     : 0
// num_inst_sop1                     : 1
// num_inst_sop2                     : 0
// num_inst_smrd                     : 0
// num_inst_sopk                     : 0
// num_inst_vop1                     : 1
// num_inst_vop2                     : 23
// num_inst_vop3                     : 0
// num_inst_vopc                     : 0
// num_inst_vintrp                   : 0
// num_inst_smem                     : 4
// constant_literal_operands         : 0
// num_tex                           : 4
// num_vmem_group                    : 0
// vmem_grouping_started             : 0
// m_fFullPrecompilePromise          : 0
// m_fIntegerDivideExpansion         : 0
// m_fIntegerModExpansion            : 0
// m_fDoubleDivideExpansion          : 0
// m_fUsesScratch                    : 0
// m_fPerThreadIndirection           : 0
// m_fUsingTableLoads                : 0
// m_fUsingSHmemLoads                : 1
// fSemanticHashFlagOverrideApplied  : 0
// fPSHasNoUAVWrite                  : 0
// m_fRenderTargetsCanBeCompacted    : 0
// version                           : 3
// fCodePatched                      : 0

// Opaque Custom Data - XBOX Precompiled Shader Object
// Offset:[272], bundle is:[178] DWORDS.
// Disassembled Precompiled Shader Object:
// Shader Type               : (VS)
// Shader Hw Stage           : (ES)
// PDB Filename              : D:\ATG\st_dev\Kits\DirectXTK\src\Shaders\Compiled\XboxOneDualTextureEffect_VSDualTextureVc.pdb
// Shader Semantic Hash      : 0xaed42ef964973273
//
// Shader Data:
; ----------------- VS Data ------------------------
; Input Semantic Mappings
;   [0] generic, usageIdx  0, channelMask 15, v[4:7]
;   [1] generic, usageIdx  1, channelMask  3, v[8:9]
;   [2] generic, usageIdx  2, channelMask  3, v[12:13]
;   [3] generic, usageIdx  3, channelMask 15, v[16:19]
; Output Semantic Mappings
;   [0] position,  usageIdx 3, paramIdx 3, paramSlot 0
;   [1] generic,  usageIdx 0, paramIdx 0, paramSlot 0
;   [2] generic,  usageIdx 1, paramIdx 1, paramSlot 0
;   [3] generic,  usageIdx 2, paramIdx 2, paramSlot 0

codeLenInByte        = 276 bytes;

; launchModeFlags    = 0x0000000E
srdTableSupport      = TRUE
immediateSupportExt  = TRUE
srdTableSupportExt   = TRUE

userElementCount     = 4;
;  userElements[0]      = PTR_VERTEX_BUFFER_TABLE, Element=1 dwords, s[0x2:3]
;  userElements[1]      = PTR_EXTENDED_USER_DATA, ReferencedExtUserElements=1, s[0x2:3]
;  userElements[2]      = PTR_INTERNAL_GLOBAL_TABLE, Element=1 dwords, s[0x2:3]
;  userElements[3]      = SUB_PTR_FETCH_SHADER, s[0x2:3]
extUserElementCount  = 1;
;  extUserElements 1[0] = IMM_CONST_BUFFER 0, offset 0x0:3 dwords
NumVgprs             = 20;
NumSgprs             = 34;
FloatMode            = 192;
IeeeMode             = 0;
FlatPtr32            = 0;
ScratchSize          = 0 dwords/thread;
LDSByteSize          = 0 bytes/workgroup (compile time only);
ScratchWaveOffsetReg = s65535;
; texSamplerUsage         = 0x00000000
; constBufUsage           = 0x00000001

; SPI_SHADER_PGM_RSRC2_VS = 0x00000008
SSPRV:USER_SGPR             = 4
; PA_CL_VS_OUT_CNTL       = 0x00000000
; SPI_VS_OUT_CONFIG       = 0x00000000
SVOC:VS_EXPORT_COUNT        = 0
SVOC:VS_HALF_PACK           = 0
SVOC:VS_EXPORTS_FOG         = 0
SVOC:VS_OUT_FOG_VEC_ADDR    = 0
; SPI_SHADER_POS_FORMAT     = 0x00000004
SSPF:POS0_EXPORT_FORMAT     = 4
SSPF:POS1_EXPORT_FORMAT     = 0
SSPF:POS2_EXPORT_FORMAT     = 0
SSPF:POS3_EXPORT_FORMAT     = 0
VGT_STRMOUT_CONFIG = 0x0
VGT_STRMOUT_CONFIG:RAST_STREAM = 0
VGT_STRMOUT_CONFIG:STREAMOUT_0_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_1_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_2_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_3_EN = 0
; exportVertexSize          = 16
; esGsRingItemSize          = 16

// Shader Instructions:
shader main
  asic(CI)
  type(VS)
  s_swappc_b64  s[2:3], s[2:3]                          // 000000000000: BE822102
  s_load_dwordx4  s[8:11], s[2:3], 0x00                 // 000000000004: C0840300
  s_waitcnt     lgkmcnt(0)                              // 000000000008: BF8C007F
  s_buffer_load_dwordx16  s[12:27], s[8:11], 0x08       // 00000000000C: C3060908
  s_buffer_load_dwordx4  s[28:31], s[8:11], 0x18        // 000000000010: C28E0918
  s_waitcnt     vmcnt(0) & lgkmcnt(0)                   // 000000000014: BF8C0070
  v_mul_legacy_f32  v0, s19, v7                         // 000000000018: 0E000E13
  s_load_dwordx4  s[0:3], s[2:3], 0x0c                  // 00000000001C: C080030C
  v_mac_legacy_f32  v0, s18, v6                         // 000000000020: 0C000C12
  v_mul_legacy_f32  v1, s23, v7                         // 000000000024: 0E020E17
  s_buffer_load_dwordx4  s[8:11], s[8:11], 0x00         // 000000000028: C2840900
  v_mac_legacy_f32  v0, s17, v5                         // 00000000002C: 0C000A11
  v_mac_legacy_f32  v1, s22, v6                         // 000000000030: 0C020C16
  v_mul_legacy_f32  v2, s27, v7                         // 000000000034: 0E040E1B
  v_mac_legacy_f32  v0, s16, v4                         // 000000000038: 0C000810
  v_mac_legacy_f32  v1, s21, v5                         // 00000000003C: 0C020A15
  v_mac_legacy_f32  v2, s26, v6                         // 000000000040: 0C040C1A
  v_mul_legacy_f32  v3, s31, v7                         // 000000000044: 0E060E1F
  v_mac_legacy_f32  v1, s20, v4                         // 000000000048: 0C020814
  v_mac_legacy_f32  v2, s25, v5                         // 00000000004C: 0C040A19
  v_mac_legacy_f32  v3, s30, v6                         // 000000000050: 0C060C1E
  v_mac_legacy_f32  v2, s24, v4                         // 000000000054: 0C040818
  v_mac_legacy_f32  v3, s29, v5                         // 000000000058: 0C060A1D
  v_mac_legacy_f32  v3, s28, v4                         // 00000000005C: 0C06081C
  s_waitcnt     lgkmcnt(0)                              // 000000000060: BF8C007F
  buffer_store_dword  v0, v0, s[0:3], s4 offset:48 glc slc // 000000000064: E0704030 04400000
  v_mul_legacy_f32  v0, s8, v16                         // 00000000006C: 0E002008
  buffer_store_dword  v1, v0, s[0:3], s4 offset:52 glc slc // 000000000070: E0704034 04400100
  v_mul_legacy_f32  v1, s9, v17                         // 000000000078: 0E022209
  buffer_store_dword  v2, v0, s[0:3], s4 offset:56 glc slc // 00000000007C: E0704038 04400200
  v_mul_legacy_f32  v2, s10, v18                        // 000000000084: 0E04240A
  buffer_store_dword  v3, v0, s[0:3], s4 offset:60 glc slc // 000000000088: E070403C 04400300
  v_mul_legacy_f32  v3, s11, v19                        // 000000000090: 0E06260B
  buffer_store_dword  v0, v0, s[0:3], s4 glc slc        // 000000000094: E0704000 04400000
  v_mul_legacy_f32  v0, s15, v7                         // 00000000009C: 0E000E0F
  buffer_store_dword  v1, v0, s[0:3], s4 offset:4 glc slc // 0000000000A0: E0704004 04400100
  v_mov_b32     v1, 0                                   // 0000000000A8: 7E020280
  v_mac_legacy_f32  v0, s14, v6                         // 0000000000AC: 0C000C0E
  buffer_store_dword  v2, v0, s[0:3], s4 offset:8 glc slc // 0000000000B0: E0704008 04400200
  v_mac_legacy_f32  v0, s13, v5                         // 0000000000B8: 0C000A0D
  s_nop         0x0000                                  // 0000000000BC: BF800000
  buffer_store_dword  v3, v0, s[0:3], s4 offset:12 glc slc // 0000000000C0: E070400C 04400300
  v_mad_legacy_f32  v0, v4, s12, v0 clamp               // 0000000000C8: D2800800 04001904
  buffer_store_dword  v1, v0, s[0:3], s4 offset:16 glc slc // 0000000000D0: E0704010 04400100
  buffer_store_dword  v1, v0, s[0:3], s4 offset:20 glc slc // 0000000000D8: E0704014 04400100
  buffer_store_dword  v1, v0, s[0:3], s4 offset:24 glc slc // 0000000000E0: E0704018 04400100
  buffer_store_dword  v0, v0, s[0:3], s4 offset:28 glc slc // 0000000000E8: E070401C 04400000
  buffer_store_dword  v8, v0, s[0:3], s4 offset:32 glc slc // 0000000000F0: E0704020 04400800
  buffer_store_dword  v9, v0, s[0:3], s4 offset:36 glc slc // 0000000000F8: E0704024 04400900
  buffer_store_dword  v12, v0, s[0:3], s4 offset:40 glc slc // 000000000100: E0704028 04400C00
  buffer_store_dword  v13, v0, s[0:3], s4 offset:44 glc slc // 000000000108: E070402C 04400D00
  s_endpgm                                              // 000000000110: BF810000
end


// Shader Statistics:
//  NumActiveWaveFront:         40
//  WorkgroupSize:              64
//  NumVRegs:                   20
//  NumSRegs:                   34
//  NumActiveWaveFrontByVReg:   40
//  NumActiveWaveFrontBySReg:   40
//  NumActiveWaveFrontByLDS:    40
//  CycleSim:                   84
//  CycleSimNWaves:             84
//  Code Size:                  276
//Assembler Counts:
//  num_32bit_ops                     : 35
//  num_64bit_ops                     : 17
//  num_alu                           : 25
//  num_fc                            : 11
//  num_inst_exp                      : 0
//  num_inst_ldsgds                   : 0
//  num_inst_mimg                     : 0
//  num_inst_mtbuf                    : 0
//  num_inst_mubuf                    : 16
//  num_inst_sopp                     : 5
//  num_inst_sopc                     : 0
//  num_inst_sop1                     : 1
//  num_inst_sop2                     : 0
//  num_inst_smrd                     : 0
//  num_inst_sopk                     : 0
//  num_inst_vop1                     : 1
//  num_inst_vop2                     : 23
//  num_inst_vop3                     : 0
//  num_inst_vopc                     : 0
//  num_inst_vintrp                   : 0
//  constant_literal_operands         : 0
//  num_tex                           : 16
//  num_vmem_group                    : 9
//  vmem_grouping_started             : 0
// Shader Statistics:
// m_uNumActiveWaveFront             : 40
// m_uVRegLimit                      : 256
// m_uSRegLimit                      : 512
// m_uNumVRegs                       : 20
// m_uNumSRegs                       : 34
// m_uSCCodeSize                     : 276
// m_uWorkgroupSize                  : 64
// m_uNumActiveWaveFrontByVReg       : 40
// m_uNumActiveWaveFrontBySReg       : 40
// m_uNumActiveWaveFrontByLDS        : 40
// m_uCycleSim1Wave                  : 84
// m_uCycleSimNWaves                 : 84

// Assembler Counts:
// num_32bit_ops                     : 35
// num_64bit_ops                     : 17
// num_alu                           : 25
// num_fc                            : 11
// num_inst_exp                      : 0
// num_inst_ldsgds                   : 0
// num_inst_mimg                     : 0
// num_inst_mtbuf                    : 0
// num_inst_mubuf                    : 16
// num_inst_sopp                     : 5
// num_inst_sopc                     : 0
// num_inst_sop1                     : 1
// num_inst_sop2                     : 0
// num_inst_smrd                     : 0
// num_inst_sopk                     : 0
// num_inst_vop1                     : 1
// num_inst_vop2                     : 23
// num_inst_vop3                     : 0
// num_inst_vopc                     : 0
// num_inst_vintrp                   : 0
// num_inst_smem                     : 5
// constant_literal_operands         : 0
// num_tex                           : 16
// num_vmem_group                    : 9
// vmem_grouping_started             : 0
// m_fFullPrecompilePromise          : 0
// m_fIntegerDivideExpansion         : 0
// m_fIntegerModExpansion            : 0
// m_fDoubleDivideExpansion          : 0
// m_fUsesScratch                    : 0
// m_fPerThreadIndirection           : 0
// m_fUsingTableLoads                : 0
// m_fUsingSHmemLoads                : 1
// fSemanticHashFlagOverrideApplied  : 0
// fPSHasNoUAVWrite                  : 0
// m_fRenderTargetsCanBeCompacted    : 0
// version                           : 3
// fCodePatched                      : 0

// Opaque Custom Data - XBOX Precompiled Shader Object
// Offset:[452], bundle is:[172] DWORDS.
// Disassembled Precompiled Shader Object:
// Shader Type               : (VS)
// Shader Hw Stage           : (LS)
// PDB Filename              : D:\ATG\st_dev\Kits\DirectXTK\src\Shaders\Compiled\XboxOneDualTextureEffect_VSDualTextureVc.pdb
// Shader Semantic Hash      : 0xaed42ef964973273
//
// Shader Data:
; ----------------- VS Data ------------------------
; Input Semantic Mappings
;   [0] generic, usageIdx  0, channelMask 15, v[4:7]
;   [1] generic, usageIdx  1, channelMask  3, v[8:9]
;   [2] generic, usageIdx  2, channelMask  3, v[12:13]
;   [3] generic, usageIdx  3, channelMask 15, v[16:19]
; Output Semantic Mappings
;   [0] position,  usageIdx 3, paramIdx 3, paramSlot 0
;   [1] generic,  usageIdx 0, paramIdx 0, paramSlot 0
;   [2] generic,  usageIdx 1, paramIdx 1, paramSlot 0
;   [3] generic,  usageIdx 2, paramIdx 2, paramSlot 0

codeLenInByte        = 212 bytes;

; launchModeFlags    = 0x0000000E
srdTableSupport      = TRUE
immediateSupportExt  = TRUE
srdTableSupportExt   = TRUE

userElementCount     = 3;
;  userElements[0]      = PTR_VERTEX_BUFFER_TABLE, Element=1 dwords, s[0x2:3]
;  userElements[1]      = PTR_EXTENDED_USER_DATA, ReferencedExtUserElements=1, s[0x2:3]
;  userElements[2]      = SUB_PTR_FETCH_SHADER, s[0x2:3]
extUserElementCount  = 1;
;  extUserElements 1[0] = IMM_CONST_BUFFER 0, offset 0x0:3 dwords
NumVgprs             = 20;
NumSgprs             = 26;
FloatMode            = 192;
IeeeMode             = 0;
FlatPtr32            = 0;
ScratchSize          = 0 dwords/thread;
LDSByteSize          = 0 bytes/workgroup (compile time only);
ScratchWaveOffsetReg = s65535;
; texSamplerUsage         = 0x00000000
; constBufUsage           = 0x00000001

; SPI_SHADER_PGM_RSRC2_VS = 0x00000008
SSPRV:USER_SGPR             = 4
; PA_CL_VS_OUT_CNTL       = 0x00000000
; SPI_VS_OUT_CONFIG       = 0x00000000
SVOC:VS_EXPORT_COUNT        = 0
SVOC:VS_HALF_PACK           = 0
SVOC:VS_EXPORTS_FOG         = 0
SVOC:VS_OUT_FOG_VEC_ADDR    = 0
; SPI_SHADER_POS_FORMAT     = 0x00000004
SSPF:POS0_EXPORT_FORMAT     = 4
SSPF:POS1_EXPORT_FORMAT     = 0
SSPF:POS2_EXPORT_FORMAT     = 0
SSPF:POS3_EXPORT_FORMAT     = 0
VGT_STRMOUT_CONFIG = 0x0
VGT_STRMOUT_CONFIG:RAST_STREAM = 0
VGT_STRMOUT_CONFIG:STREAMOUT_0_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_1_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_2_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_3_EN = 0
; vgprCompCnt               = 1
; exportVertexSize          = 16
; lsStride                  = 64

// Shader Instructions:
shader main
  asic(CI)
  type(VS)
  s_swappc_b64  s[2:3], s[2:3]                          // 000000000000: BE822102
  s_load_dwordx4  s[0:3], s[2:3], 0x00                  // 000000000004: C0800300
  s_waitcnt     lgkmcnt(0)                              // 000000000008: BF8C007F
  s_buffer_load_dwordx4  s[4:7], s[0:3], 0x00           // 00000000000C: C2820100
  s_buffer_load_dwordx16  s[8:23], s[0:3], 0x08         // 000000000010: C3040108
  s_buffer_load_dwordx4  s[0:3], s[0:3], 0x18           // 000000000014: C2800118
  s_mov_b32     m0, 0x00010000                          // 000000000018: BEFC03FF 00010000
  s_waitcnt     vmcnt(0) & lgkmcnt(0)                   // 000000000020: BF8C0070
  v_mul_legacy_f32  v0, s4, v16                         // 000000000024: 0E002004
  v_mul_legacy_f32  v2, s5, v17                         // 000000000028: 0E042205
  v_mul_legacy_f32  v3, s6, v18                         // 00000000002C: 0E062406
  v_mul_legacy_f32  v10, s7, v19                        // 000000000030: 0E142607
  v_mul_legacy_f32  v11, s11, v7                        // 000000000034: 0E160E0B
  v_mac_legacy_f32  v11, s10, v6                        // 000000000038: 0C160C0A
  v_mac_legacy_f32  v11, s9, v5                         // 00000000003C: 0C160A09
  v_mad_legacy_f32  v11, v4, s8, v11 clamp              // 000000000040: D280080B 042C1104
  v_mul_legacy_f32  v14, s15, v7                        // 000000000048: 0E1C0E0F
  v_mac_legacy_f32  v14, s14, v6                        // 00000000004C: 0C1C0C0E
  v_mac_legacy_f32  v14, s13, v5                        // 000000000050: 0C1C0A0D
  v_mac_legacy_f32  v14, s12, v4                        // 000000000054: 0C1C080C
  v_mul_legacy_f32  v15, s19, v7                        // 000000000058: 0E1E0E13
  v_mac_legacy_f32  v15, s18, v6                        // 00000000005C: 0C1E0C12
  v_mac_legacy_f32  v15, s17, v5                        // 000000000060: 0C1E0A11
  v_mac_legacy_f32  v15, s16, v4                        // 000000000064: 0C1E0810
  v_mul_legacy_f32  v16, s23, v7                        // 000000000068: 0E200E17
  v_mac_legacy_f32  v16, s22, v6                        // 00000000006C: 0C200C16
  v_mac_legacy_f32  v16, s21, v5                        // 000000000070: 0C200A15
  v_mac_legacy_f32  v16, s20, v4                        // 000000000074: 0C200814
  v_mul_legacy_f32  v7, s3, v7                          // 000000000078: 0E0E0E03
  v_mac_legacy_f32  v7, s2, v6                          // 00000000007C: 0C0E0C02
  v_mac_legacy_f32  v7, s1, v5                          // 000000000080: 0C0E0A01
  v_mac_legacy_f32  v7, s0, v4                          // 000000000084: 0C0E0800
  v_lshlrev_b32  v1, 6, v1                              // 000000000088: 34020286
  ds_write2_b32  v1, v14, v15 offset0:12 offset1:13     // 00000000008C: D8380D0C 000F0E01
  ds_write2_b32  v1, v16, v7 offset0:14 offset1:15      // 000000000094: D8380F0E 00071001
  ds_write2_b32  v1, v0, v2 offset1:1                   // 00000000009C: D8380100 00020001
  ds_write2_b32  v1, v3, v10 offset0:2 offset1:3        // 0000000000A4: D8380302 000A0301
  v_mov_b32     v0, 0                                   // 0000000000AC: 7E000280
  ds_write2_b32  v1, v0, v0 offset0:4 offset1:5         // 0000000000B0: D8380504 00000001
  ds_write2_b32  v1, v0, v11 offset0:6 offset1:7        // 0000000000B8: D8380706 000B0001
  ds_write2_b32  v1, v8, v9 offset0:8 offset1:9         // 0000000000C0: D8380908 00090801
  ds_write2_b32  v1, v12, v13 offset0:10 offset1:11     // 0000000000C8: D8380B0A 000D0C01
  s_endpgm                                              // 0000000000D0: BF810000
end


// Shader Statistics:
//  NumActiveWaveFront:         40
//  WorkgroupSize:              64
//  NumVRegs:                   20
//  NumSRegs:                   26
//  NumActiveWaveFrontByVReg:   40
//  NumActiveWaveFrontBySReg:   40
//  NumActiveWaveFrontByLDS:    40
//  CycleSim:                   88
//  CycleSimNWaves:             88
//  Code Size:                  212
//Assembler Counts:
//  num_32bit_ops                     : 34
//  num_64bit_ops                     : 9
//  num_alu                           : 26
//  num_fc                            : 9
//  num_inst_exp                      : 0
//  num_inst_ldsgds                   : 8
//  num_inst_mimg                     : 0
//  num_inst_mtbuf                    : 0
//  num_inst_mubuf                    : 0
//  num_inst_sopp                     : 3
//  num_inst_sopc                     : 0
//  num_inst_sop1                     : 2
//  num_inst_sop2                     : 0
//  num_inst_smrd                     : 0
//  num_inst_sopk                     : 0
//  num_inst_vop1                     : 1
//  num_inst_vop2                     : 24
//  num_inst_vop3                     : 0
//  num_inst_vopc                     : 0
//  num_inst_vintrp                   : 0
//  constant_literal_operands         : 0
//  num_tex                           : 8
//  num_vmem_group                    : 0
//  vmem_grouping_started             : 0
// Shader Statistics:
// m_uNumActiveWaveFront             : 40
// m_uVRegLimit                      : 256
// m_uSRegLimit                      : 512
// m_uNumVRegs                       : 20
// m_uNumSRegs                       : 26
// m_uSCCodeSize                     : 212
// m_uWorkgroupSize                  : 64
// m_uNumActiveWaveFrontByVReg       : 40
// m_uNumActiveWaveFrontBySReg       : 40
// m_uNumActiveWaveFrontByLDS        : 40
// m_uCycleSim1Wave                  : 88
// m_uCycleSimNWaves                 : 88

// Assembler Counts:
// num_32bit_ops                     : 34
// num_64bit_ops                     : 9
// num_alu                           : 26
// num_fc                            : 9
// num_inst_exp                      : 0
// num_inst_ldsgds                   : 8
// num_inst_mimg                     : 0
// num_inst_mtbuf                    : 0
// num_inst_mubuf                    : 0
// num_inst_sopp                     : 3
// num_inst_sopc                     : 0
// num_inst_sop1                     : 2
// num_inst_sop2                     : 0
// num_inst_smrd                     : 0
// num_inst_sopk                     : 0
// num_inst_vop1                     : 1
// num_inst_vop2                     : 24
// num_inst_vop3                     : 0
// num_inst_vopc                     : 0
// num_inst_vintrp                   : 0
// num_inst_smem                     : 4
// constant_literal_operands         : 0
// num_tex                           : 8
// num_vmem_group                    : 0
// vmem_grouping_started             : 0
// m_fFullPrecompilePromise          : 0
// m_fIntegerDivideExpansion         : 0
// m_fIntegerModExpansion            : 0
// m_fDoubleDivideExpansion          : 0
// m_fUsesScratch                    : 0
// m_fPerThreadIndirection           : 0
// m_fUsingTableLoads                : 0
// m_fUsingSHmemLoads                : 1
// fSemanticHashFlagOverrideApplied  : 0
// fPSHasNoUAVWrite                  : 0
// m_fRenderTargetsCanBeCompacted    : 0
// version                           : 3
// fCodePatched                      : 0

// Approximately 0 instruction slots used
#endif

const BYTE DualTextureEffect_VSDualTextureVc[] =
{
     68,  88,  66,  67, 109, 194, 
    241, 242, 104,  50, 136,  98, 
    159, 197,  32, 101, 193,  14, 
     17, 117,   1,   0,   0,   0, 
    170,  11,   0,   0,   5,   0, 
      0,   0,  52,   0,   0,   0, 
    192,   0,   0,   0, 100,   1, 
      0,   0,  52,  11,   0,   0, 
     68,  11,   0,   0,  73,  83, 
     71,  78, 132,   0,   0,   0, 
      4,   0,   0,   0,   8,   0, 
      0,   0, 104,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      0,   0,   0,   0,  15,  15, 
      0,   0, 116,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   0,   0,   3,   3, 
      0,   0, 116,   0,   0,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      2,   0,   0,   0,   3,   3, 
      0,   0, 125,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      3,   0,   0,   0,  15,  15, 
      0,   0,  83,  86,  95,  80, 
    111, 115, 105, 116, 105, 111, 
    110,   0,  84,  69,  88,  67, 
     79,  79,  82,  68,   0,  67, 
     79,  76,  79,  82,   0, 171, 
     79,  83,  71,  78, 156,   0, 
      0,   0,   5,   0,   0,   0, 
      8,   0,   0,   0, 128,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   3,   0, 
      0,   0,   0,   0,   0,   0, 
     15,   0,   0,   0, 128,   0, 
      0,   0,   1,   0,   0,   0, 
      0,   0,   0,   0,   3,   0, 
      0,   0,   1,   0,   0,   0, 
     15,   0,   0,   0, 134,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   3,   0, 
      0,   0,   2,   0,   0,   0, 
      3,  12,   0,   0, 134,   0, 
      0,   0,   1,   0,   0,   0, 
      0,   0,   0,   0,   3,   0, 
      0,   0,   2,   0,   0,   0, 
     12,   3,   0,   0, 143,   0, 
      0,   0,   0,   0,   0,   0, 
      1,   0,   0,   0,   3,   0, 
      0,   0,   3,   0,   0,   0, 
     15,   0,   0,   0,  67,  79, 
     76,  79,  82,   0,  84,  69, 
     88,  67,  79,  79,  82,  68, 
      0,  83,  86,  95,  80, 111, 
    115, 105, 116, 105, 111, 110, 
      0, 171,  83,  72,  69,  88, 
    200,   9,   0,   0,  80,   0, 
      1,   0, 114,   2,   0,   0, 
     53,  16,   0,   0,   5,   0, 
      0,   0, 107,   0,   0,   0, 
     80,   0,   1,   0, 102,   0, 
      0,   0, 106,   8,   0,   1, 
     89,   0,   0,   4,  70, 142, 
     32,   0,   0,   0,   0,   0, 
      7,   0,   0,   0,  95,   0, 
      0,   3, 242,  16,  16,   0, 
      0,   0,   0,   0,  95,   0, 
      0,   3,  50,  16,  16,   0, 
      1,   0,   0,   0,  95,   0, 
      0,   3,  50,  16,  16,   0, 
      2,   0,   0,   0,  95,   0, 
      0,   3, 242,  16,  16,   0, 
      3,   0,   0,   0, 101,   0, 
      0,   3, 242,  32,  16,   0, 
      0,   0,   0,   0, 101,   0, 
      0,   3, 242,  32,  16,   0, 
      1,   0,   0,   0, 101,   0, 
      0,   3,  50,  32,  16,   0, 
      2,   0,   0,   0, 101,   0, 
      0,   3, 194,  32,  16,   0, 
      2,   0,   0,   0, 103,   0, 
      0,   4, 242,  32,  16,   0, 
      3,   0,   0,   0,   1,   0, 
      0,   0,  56,   0,   0,   8, 
    242,  32,  16,   0,   0,   0, 
      0,   0,  70,  30,  16,   0, 
      3,   0,   0,   0,  70, 142, 
     32,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,  17,  32, 
      0,   8, 130,  32,  16,   0, 
      1,   0,   0,   0,  70,  30, 
     16,   0,   0,   0,   0,   0, 
     70, 142,  32,   0,   0,   0, 
      0,   0,   2,   0,   0,   0, 
     54,   0,   0,   8, 114,  32, 
     16,   0,   1,   0,   0,   0, 
      2,  64,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,  54,   0,   0,   5, 
     50,  32,  16,   0,   2,   0, 
      0,   0,  70,  16,  16,   0, 
      1,   0,   0,   0,  54,   0, 
      0,   5, 194,  32,  16,   0, 
      2,   0,   0,   0,   6,  20, 
     16,   0,   2,   0,   0,   0, 
     17,   0,   0,   8,  18,  32, 
     16,   0,   3,   0,   0,   0, 
     70,  30,  16,   0,   0,   0, 
      0,   0,  70, 142,  32,   0, 
      0,   0,   0,   0,   3,   0, 
      0,   0,  17,   0,   0,   8, 
     34,  32,  16,   0,   3,   0, 
      0,   0,  70,  30,  16,   0, 
      0,   0,   0,   0,  70, 142, 
     32,   0,   0,   0,   0,   0, 
      4,   0,   0,   0,  17,   0, 
      0,   8,  66,  32,  16,   0, 
      3,   0,   0,   0,  70,  30, 
     16,   0,   0,   0,   0,   0, 
     70, 142,  32,   0,   0,   0, 
      0,   0,   5,   0,   0,   0, 
     17,   0,   0,   8, 130,  32, 
     16,   0,   3,   0,   0,   0, 
     70,  30,  16,   0,   0,   0, 
      0,   0,  70, 142,  32,   0, 
      0,   0,   0,   0,   6,   0, 
      0,   0,  62,   0,   0,   1, 
     53,  16,   0,   0, 165,   0, 
      0,   0,  23,   0,   1,   0, 
     32, 195,  22,   0, 120,   1, 
    237, 152, 191,  79,  20,  65, 
     20, 199, 223, 206,  13, 239, 
    246, 246, 134, 185, 227,  55, 
     40,  10,  26,  52,  22,   6, 
    127, 148, 198,  16,  81, 140, 
      5,   5,   5,  23,  98, 177, 
      9,   1, 110,   9,  36,  40, 
    151, 187, 195,  80, 233, 169, 
    157,  49, 182, 254, 168,  45, 
    172,  44, 172, 141,  16, 104, 
     53,  38, 134, 146,  63, 130, 
    194,   2,  19,  19, 253, 190, 
    101,  87,  47, 135, 212, 154, 
     56, 159, 236, 103, 126, 237, 
    206, 238, 219, 153, 169, 222, 
    118,  47, 197, 236, 238, 236, 
    141,  75, 189,  55, 240, 236, 
    221,  11, 143, 168,  77,  58, 
     64,  75,   1,  42, 221,  82, 
     18,  45, 245,  72,  73, 116, 
     78,  10,  60,  71, 138,  72, 
    110,  29, 131, 111, 224,  53, 
     40, 247,  82,  63, 125, 252, 
     62, 254, 234, 101, 230, 250, 
    121, 180, 251, 161,  60,  59, 
    157,  56,  12, 229,  59,   3, 
    208, 135, 233, 183, 154, 201, 
     72,   1, 228,  83, 205,  72, 
    191,  15,  54, 147, 206,  63, 
    244, 158,  57,  41, 254, 204, 
     25,  40,  49,  29, 133, 196, 
    150,  34, 239, 149,  56,   5, 
    249, 223, 127,  13,  89, 147, 
    116, 159,   4, 217, 143, 102, 
     44,  76, 215, 179,  63, 217, 
     71, 153,  35, 148, 146, 190, 
     76, 151, 127, 219, 132,  71, 
    241,   3, 180, 174, 113, 218, 
    151, 154, 105, 234,  34, 123, 
    143, 139, 172, 182, 139, 156, 
     41,  92,  98,  12,  50,  54, 
    154,  25, 102,  33,  22, 145, 
    115,  48, 128, 121, 104,  96, 
     59,  68, 128,  92, 128,  69, 
    216,   1,  59,  97,  23,  68, 
     80, 140, 248,  24, 103, 149, 
    177, 233, 140, 131, 196, 216, 
     24,  70, 160, 124,  28,  14, 
    194,  19, 240,  36,  28,  58, 
    248,  71, 124,  42, 134, 189, 
    131,  63, 100, 133, 131, 250, 
     31,  33, 107, 144, 158,  85, 
    217,  19,  49, 165, 185, 237, 
    112,  56,  28,  14, 135, 195, 
    225, 112,  56,  28,  14, 135, 
    195, 241, 183,  80, 167,  30, 
    125, 160,  76,  99, 243,   1, 
     61, 221, 240,  61, 181, 221, 
    239,  61, 217,  34, 175, 177, 
     85,  65,  63, 107, 201, 230, 
    173, 178,   5, 171, 109, 151, 
    101, 219, 103, 173, 101,  67, 
     99, 129,  81, 198,  26, 109, 
     58,  13, 155,  94, 180, 218, 
      2,  26, 203,   5, 202, 180, 
      7, 218, 116,   4, 108, 122, 
      2, 107, 104,  56, 176, 222, 
    105,  99, 213,  72, 183, 205, 
    156, 237, 181, 228,  55, 190, 
    232,  28, 105, 223,  87, 198, 
    248, 218,  20, 125,  54, 221, 
    190,  53,  13, 229, 223, 255, 
    236, 211, 190, 167,  50, 217, 
    130, 162, 253,  54,  14, 242, 
     67, 168, 181, 214, 116,   1, 
    181, 159,  51, 237,  68,  15, 
     55, 226, 180, 153, 138, 175, 
     95,  12,  72, 202, 169, 101, 
    172,  40,  69, 203,  88, 220, 
    214,   7, 249, 169, 148, 215, 
    241,  11, 137,  26,  73,  61, 
      2, 115, 208, 139,  51,  58, 
     68,  89, 168, 147, 236,  86, 
    237, 242, 243, 242, 183, 209, 
    157, 183, 210,  22, 118, 147, 
     57, 239, 147,  90, 242, 171, 
      6, 254, 166,  33, 197,  33, 
    116, 146,   3, 254, 154, 204, 
    147,  88,  37,  71, 100, 211, 
     44, 176,  36,  14, 193,  72, 
    242, 220,  96,  82,  75, 126, 
     41,  15,  91, 227, 184, 154, 
    220, 159, 133,  18, 233, 196, 
    149, 112, 188, 116,  43, 172, 
    213, 103, 203, 209, 189, 112, 
    114, 185,  94,  11,  39, 150, 
    171, 209,  66, 253, 118, 105, 
     50, 172,  85,  23, 194, 233, 
    165, 185, 114,  84, 173, 133, 
     55,  86, 239,  84, 150,  87, 
    162, 114, 120, 123, 126, 117, 
    125, 234, 110,  52, 177,  54, 
    183,  82, 138, 214, 235, 107, 
    213, 232, 230, 226,  34,  38, 
    204, 206,  76,  55, 141, 205, 
     44, 140,  86, 202, 243, 244, 
     19, 252, 184, 102, 182,   0, 
     53,  16,   0,   0, 180,   0, 
      0,   0,  23,   0,   1,   0, 
     16,  67,  23,   0, 120,   1, 
    237, 152, 191,  79, 147,  65, 
     24, 199, 175, 111, 207, 227, 
    109,  57,  94,  10,  20, 104, 
    249,  45,  54, 134, 193,  16, 
     52,  12, 198,  48, 188,  66, 
    141,   3,   3,   3,  13,  97, 
    120,  19,   2, 109, 137,  36, 
     40, 181,  45, 134,  73, 139, 
    118,  52, 172,  58,  56,  58, 
     59,  56,  27,  33, 176, 234, 
     98, 248,   3, 220, 116,  50, 
    174,  78, 250, 253, 182, 247, 
     54,  77, 197,  89,  99, 238, 
    147, 126, 239, 121, 238, 238, 
    185, 235, 243, 222, 221, 244, 
     44,  13, 139,   6,  95,  14, 
    191,  61, 164, 253, 158,  62, 
    122, 251,  50,  34, 196,  37, 
    118, 128, 195,   6, 148, 146, 
    108, 133, 248,  58, 200,  86, 
    136,  25,  54, 136,  99,   0, 
    167, 166, 161,  36, 250,  62, 
     44, 231,  66, 125, 252,  48, 
    187,  40, 196, 252,  98,  22, 
    254,  56, 148, 128, 114,  70, 
     87, 160,  62,  40,  13, 117, 
     67, 157,  48,  54, 204, 131, 
    127, 213,  14, 251,  38, 245, 
     22,  97,  44, 215, 197, 160, 
     22, 155, 108,  46, 102,  30, 
     50, 159, 118,  33, 204, 141, 
    251, 133, 132, 121, 242, 123, 
    255,  53, 120,  38, 225,  61, 
     17, 222,  71,  59,  30,  36, 
     33,  82,  55, 247,  24, 134, 
    156, 155,  62, 151, 243, 219, 
     78, 160,  63, 241,  19, 132, 
    251,  16, 250,  60,  71,  66, 
     95, 137, 149,  57,  21, 121, 
    150,  80, 206,  89,  66,  69, 
    123, 175,  43,  12,  42,  92, 
    142,  82,  80,  23, 228,  66, 
    184,  32,  21, 135, 112, 160, 
     74,  67,  61,  16,  18,  84, 
    189,  16,  14,  92, 225,  97, 
    168, 126, 104,   0,  66,  82, 
     10, 249, 169,  33,   8, 151, 
    174,  82,  16,  46,  70, 141, 
     64, 163, 208,  24, 132, 199, 
    165,  38, 160, 201, 102,  14, 
     34,  26, 101, 139,  92, 154, 
    168,  72, 243,  75, 149,  19, 
    190, 232, 255,  27, 158,   1, 
    142, 185,  69, 227,  76,  12, 
    124, 207, 148, 197,  98, 177, 
     88,  44,  22, 139, 197,  98, 
    177,  88,  44,  22, 203, 223, 
    196, 185, 252, 244, 189, 136, 
    214,  79, 158, 136, 231, 199, 
    110,  76, 157, 165,  98,  71, 
    167,  37, 248,   3, 158, 240, 
    116, 180, 118, 210, 175, 133, 
     30, 246,  28,  79, 196, 234, 
    167, 125, 113, 161, 135, 180, 
    163,  71,  61, 233,  37,  92, 
    161,   7, 227, 142,  30, 209, 
     82,  79, 122, 202,  75, 186, 
    142,  78, 199, 165, 158, 208, 
     74, 167,  92, 169, 199, 227, 
     74, 143, 185,  74, 115, 223, 
     57, 191, 244,  89,   8,  95, 
    186,  83, 194, 155, 167,  31, 
    241, 101, 108, 218, 241, 110, 
    210, 119, 124,  25, 207,  72, 
    111, 129, 126, 212, 151, 221, 
     87, 149,  39, 232,  35, 190, 
     23,  57,  72, 250, 136, 175, 
     57, 206,  99,  15, 185, 184, 
    236,  99,  77,  15, 114,  17, 
    162, 118, 172, 217, 199,  58, 
    225, 214,  62, 201, 180, 144, 
      9, 246,  17, 159,  52,  54, 
    101, 236,  24,  45, 246, 156, 
    162, 117, 125, 153, 161, 141, 
    249, 114, 134,  86, 251, 242, 
     26, 109,  15, 246,  17, 135, 
    199, 141,  18, 157, 211, 248, 
    181,  72, 179, 172, 213,  49, 
    150,  98, 211,  49, 214, 168, 
    247, 116, 140,  53, 124, 217, 
    172, 139, 133, 100, 134, 216, 
      2,  99,  51,  16, 107, 169, 
     17, 209, 172, 167, 117,  65, 
    210,  84, 213,  42,  55,  94, 
     20, 126, 204, 158, 191, 161, 
     79,   2, 179, 102, 193, 216, 
     41,   8, 135, 209,   6, 171, 
    195, 191,  83,  55, 241,  85, 
     99, 153,  43, 235,  85,  94, 
     88, 209, 101, 225,  18, 188, 
     54, 243, 175, 140, 101, 125, 
    139, 245, 216, 206,  60, 222, 
    153, 249,  13, 136, 153, 102, 
    111,   5, 183, 115, 119, 131, 
     74, 117, 163,  80, 124,  20, 
     44, 239,  84,  43,  65, 118, 
    167,  92, 204,  87, 215, 115, 
    203,  65, 165, 156,  15,  86, 
    239, 109,  22, 138, 229,  74, 
    176, 180, 119, 191, 180, 179, 
     91,  44,   4, 235,  91, 123, 
      7,  43,  15, 138, 217, 253, 
    205, 221,  92, 241, 160, 186, 
     95,  46, 222, 217, 222, 198, 
    130, 141, 181, 213, 182, 177, 
    181, 252, 108, 169, 176,  37, 
    126,   1,  51, 102, 131,  29, 
     53,  16,   0,   0, 174,   0, 
      0,   0,  23,   0,   1,   0, 
      0, 239,  22,   0, 120,   1, 
    237, 152,  77, 107,  19,  65, 
     24, 199, 159, 125, 233, 100, 
    179, 153,  76, 210, 183, 180, 
    213,  24, 215,  82,  68,  80, 
     74, 181,  30, 196, 147, 173, 
     17, 133,  30,  42, 180, 148, 
     30,  22,  67, 219, 108, 105, 
    161, 218, 144, 164, 210, 147, 
    198,  10, 158, 196, 147, 160, 
     39,  63, 129, 120, 240,   3, 
    180, 165, 197, 187,  72,  15, 
    126,   4, 111, 122,  21, 132, 
    250, 127, 182, 179,  26,  67, 
    197, 163,  34, 243,  35, 191, 
    121, 118, 103, 118, 118, 159, 
    157, 157,  92, 158, 207,   5, 
    138, 121, 245, 238, 206,   4, 
    199,  47,  67, 207, 222, 190, 
    180, 136, 186, 248, 164, 141, 
     90,  31, 183,  68, 207, 251, 
    185,  37,  58, 199,  13, 174, 
     35, 155, 136, 135,  78, 192, 
      3, 120,  13, 242,  88,  34, 
     81, 207, 228, 248, 248, 192, 
     36,  31,  13, 194,  30,  56, 
    175,  29, 134, 105, 200, 115, 
     57,  50,  30,  55, 109,  56, 
    220,   0,  60, 230,  23, 248, 
    209, 124, 191, 118,  92, 110, 
     64, 231,  61, 104, 129, 155, 
    227,  57,  15, 245, 171,  29, 
     11, 231, 198,  36, 247,  76, 
    242,  76, 250, 255,  37, 120, 
     77, 146, 239, 196, 240, 247, 
    104,  71, 193, 100,  61, 203, 
    250,  59, 242,  28, 166, 165, 
    207, 121,  58, 191, 219,  46, 
    252,  29, 135,  32,  89, 235, 
    132, 228, 156, 163, 160, 233, 
     49,  97,  61, 206,  11, 123, 
     63,  47, 156, 220,  69, 129, 
     78, 129,  13,  37,   4,  76, 
     65,  44, 166, 192,  66,  10, 
     31, 102, 160, 132,  89, 136, 
      4,  69,  14, 230,  97,  55, 
    196, 102,  17, 189,  16,  73, 
      9, 228,  39, 176,  87, 197, 
      0, 196, 135,  23,  67,  16, 
    137, 138, 147, 176,   8,  79, 
    193,  18,  60, 173, 115, 113, 
    142, 222,  20, 143, 140,  17, 
    214, 209, 155,  10, 187, 115, 
     39, 253, 159, 240,  26,  36, 
    123, 150, 137, 215,   4, 240, 
     42,  96, 121,  99, 248, 191, 
    106,  48,  24,  12,   6, 131, 
    193,  96,  48,  24,  12,   6, 
    131, 193, 240, 183, 176, 207, 
    108, 109, 147, 211, 218, 125, 
     72,  79, 119, 200, 218, 218, 
    243,  44, 119, 127, 208, 106, 
    237,  29,  58, 223, 182, 185, 
    138,  81,  67, 191,  27, 144, 
    234,  26, 118, 149,  24,  17, 
     42, 117, 182,  79, 101,  84, 
     65, 249, 178,  32, 211, 126, 
     65, 102, 188, 214,   7, 183, 
    251, 130, 155,  83,  69, 165, 
    100,  81, 102, 253, 162, 148, 
     94,  81, 246, 170, 146, 234, 
    145,  37, 217, 237, 151, 100, 
    222,  43, 201,   1,  21, 168, 
    130,  12, 100, 191,  31, 200, 
     62,  47, 144, 142,  82, 202, 
    150,  74,  90, 190, 146, 228, 
     41, 249, 196, 182,  47, 203, 
    236, 149, 143, 150, 202, 145, 
    202,  33, 230,  83, 120,  60, 
     34, 217, 100,  59, 136, 142, 
     79,  45, 155,  30, 184,  93, 
    220,  71,  36,  82,  28,  51, 
    228, 165,  17, 189,  52, 249, 
     25,  68, 153, 197, 200, 163, 
    157, 184, 196, 102, 199, 191, 
     31,  12, 241, 164, 142, 190, 
    184,  62, 211, 209,  23,  31, 
    187, 124, 241,  79, 222, 199, 
     55,  36, 122, 173, 227,   8, 
    228, 250, 164, 165, 171, 124, 
    200, 148,  92,  93,   1, 107, 
     92, 122,  81, 253,  58, 122, 
    240, 134, 143,  25,  79, 215, 
    125,  63, 233, 185,   1, 148, 
    240,  79, 140, 233, 121, 129, 
    142, 156,  43, 215, 150,  84, 
     82,  49, 230,  34,  35, 184, 
    173, 199, 111, 233, 200, 181, 
    168,  12, 236, 204,  99,  69, 
    143,  87,  32, 103,  90, 190, 
     26,  78, 204, 222,  12,  27, 
    205,  74,  53, 186,  31,  78, 
    173,  54,  27,  97, 121, 181, 
     30,  45,  53, 231, 103, 167, 
    194,  70, 125,  41, 156,  89, 
     89, 168,  70, 245,  70, 120, 
    125, 253, 110, 109, 117,  45, 
    170, 134, 243, 139, 235, 155, 
    211, 247, 162, 242, 198, 194, 
    218, 108, 180, 217, 220, 168, 
     71,  55, 150, 151,  49, 161, 
     50,  55, 211, 214,  55, 183, 
     52,  90, 171,  46, 210, 119, 
     47, 240, 107, 144,   0,   0, 
     88,  72,  83,  72,   8,   0, 
      0,   0, 115,  50, 151, 100, 
    249,  46, 212, 174,  88,  80, 
     68,  80,  94,   0,   0,   0, 
     68,  58,  92,  65,  84,  71, 
     92, 115, 116,  95, 100, 101, 
    118,  92,  75, 105, 116, 115, 
     92,  68, 105, 114, 101,  99, 
    116,  88,  84,  75,  92, 115, 
    114,  99,  92,  83, 104,  97, 
    100, 101, 114, 115,  92,  67, 
    111, 109, 112, 105, 108, 101, 
    100,  92,  88,  98, 111, 120, 
     79, 110, 101,  68, 117,  97, 
    108,  84, 101, 120, 116, 117, 
    114, 101,  69, 102, 102, 101, 
     99, 116,  95,  86,  83,  68, 
    117,  97, 108,  84, 101, 120, 
    116, 117, 114, 101,  86,  99, 
     46, 112, 100,  98
};
