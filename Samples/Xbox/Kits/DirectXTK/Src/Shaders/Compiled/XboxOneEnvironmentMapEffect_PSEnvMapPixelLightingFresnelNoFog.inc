#if 0
//
// Generated by Microsoft (R) D3D Shader Disassembler for Durango
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xy          0     NONE   float   xy  
// TEXCOORD                 1   xyzw        1     NONE   float   xyz 
// TEXCOORD                 2   xyz         2     NONE   float   xyz 
// COLOR                    0   xyzw        3     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
// Opaque Custom Data - XBOX Precompiled Shader Header
// First Precompiled Shader at offset:[335]
// Embedded Data:
//  0x0000014f - Offset To First Precompiled Shader
//  0x00000050 - Original Shader Descriptor
//  0x0000014a - Original Shader Size
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[24], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texturecube (float,float,float,float) t1
dcl_input_ps linear v0.xy
dcl_input_ps linear v1.xyz
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyzw
dcl_output o0.xyzw
dcl_temps 4
dp3 r0.x, v2.xyzx, v2.xyzx
rsq r0.x, r0.x
mul r0.xyz, r0.xxxx, v2.xyzx
dp3 r1.x, -cb0[4].xyzx, r0.xyzx
dp3 r1.y, -cb0[5].xyzx, r0.xyzx
dp3 r1.z, -cb0[6].xyzx, r0.xyzx
ge r2.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
and r2.xyz, r2.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
mul r1.xyz, r1.xyzx, r2.xyzx
mul r2.xyz, r1.yyyy, cb0[8].xyzx
mad r1.xyw, r1.xxxx, cb0[7].xyxz, r2.xyxz
mad r1.xyz, r1.zzzz, cb0[9].xyzx, r1.xywx
mad r1.xyz, r1.xyzx, cb0[2].xyzx, cb0[3].xyzx
sample_indexable(texture2d)(float,float,float,float) r2.xyzw, v0.xyxx, t0.xyzw, s0
mul r2.xyzw, r2.xyzw, v3.xyzw
mul r1.xyz, r1.xyzx, r2.xyzx
add r2.xyz, -v1.xyzx, cb0[10].xyzx
dp3 r0.w, r2.xyzx, r2.xyzx
rsq r0.w, r0.w
mul r2.xyz, r0.wwww, r2.xyzx
dp3 r0.w, -r2.xyzx, r0.xyzx
add r0.w, r0.w, r0.w
mad r3.xyz, r0.xyzx, -r0.wwww, -r2.xyzx
dp3 r0.x, r2.xyzx, r0.xyzx
add r0.x, -|r0.x|, l(1.000000)
max r0.x, r0.x, l(0.000000)
log r0.x, r0.x
mul r0.x, r0.x, cb0[1].y
exp r0.x, r0.x
mul r0.x, r0.x, cb0[1].x
sample_indexable(texturecube)(float,float,float,float) r3.xyzw, r3.xyzx, t1.xyzw, s1
mad r0.yzw, r3.xxyz, r2.wwww, -r1.xxyz
mad r0.xyz, r0.xxxx, r0.yzwy, r1.xyzx
mul r0.w, r2.w, r3.w
mov o0.w, r2.w
mad o0.xyz, cb0[0].xyzx, r0.wwww, r0.xyzx
ret 
// Opaque Custom Data - XBOX Precompiled Shader Object
// Offset:[335], bundle is:[281] DWORDS.
// Disassembled Precompiled Shader Object:
// Shader Type               : (PS)
// Shader Hw Stage           : (PS)
// PDB Filename              : D:\ATG\st_dev\Kits\DirectXTK\src\Shaders\Compiled\XboxOneEnvironmentMapEffect_PSEnvMapPixelLightingFresnelNoFog.pdb
// Shader Semantic Hash      : 0xe7a6b63f66e1802a
//
// Shader Data:
; ----------------- PS Data ------------------------
; Input Semantic Mappings
;   [0] generic,  usageIdx 0, channelMask  3, param0, paramSlot0, DefaultVal={0,0,0,0}
;   [1] generic,  usageIdx 1, channelMask  7, param1, paramSlot1, DefaultVal={0,0,0,0}
;   [2] generic,  usageIdx 2, channelMask  7, param2, paramSlot2, DefaultVal={0,0,0,0}
;   [3] generic,  usageIdx 3, channelMask 15, param3, paramSlot3, DefaultVal={0,0,0,0}

codeLenInByte        = 700 bytes;

; launchModeFlags    = 0x0000000E
srdTableSupport      = TRUE
immediateSupportExt  = TRUE
srdTableSupportExt   = TRUE

userElementCount     = 1;
;  userElements[0]      = PTR_EXTENDED_USER_DATA, ReferencedExtUserElements=1, s[0x0:1]
extUserElementCount  = 5;
;  extUserElements 1[0] = IMM_RESOURCE 0, offset 0x0:7 dwords
;  extUserElements 1[1] = IMM_RESOURCE 1, offset 0x8:15 dwords
;  extUserElements 1[2] = IMM_SAMPLER 0, offset 0x10:19 dwords
;  extUserElements 1[3] = IMM_SAMPLER 1, offset 0x14:23 dwords
;  extUserElements 1[4] = IMM_CONST_BUFFER 0, offset 0x18:27 dwords
NumVgprs             = 20;
NumSgprs             = 40;
FloatMode            = 192;
IeeeMode             = 0;
FlatPtr32            = 0;
ScratchSize          = 0 dwords/thread;
LDSByteSize          = 0 bytes/workgroup (compile time only);
ScratchWaveOffsetReg = s65535;
; texSamplerUsage         = 0x00000003
; constBufUsage           = 0x00000001

; SPI_SHADER_PGM_RSRC2_PS = 0x00000004
SSPRP:SCRATCH_EN            = 0
SSPRP:USER_SGPR             = 2
SSPRP:TRAP_PRESENT          = 0
SSPRP:WAVE_CNT_EN           = 0
SSPRP:EXTRA_LDS_SIZE        = 0
SSPRP:EXCP_EN               = 0
; SPI_SHADER_Z_FORMAT     = 0x00000000
SPZF:Z_EXPORT_FORMAT        = 0; SPI_SHADER_ZERO
; SPI_PS_IN_CONTROL       = 0x00000004
SPIC:NUM_INTERP             = 4
SPIC:PARAM_GEN              = 0
SPIC:FOG_ADDR               = 0
SPIC:BC_OPTIMIZE_DISABLE    = 0
SPIC:PASS_FOG_THROUGH_PS    = 0
; SPI_PS_INPUT_ADDR       = 0x00000002
SPIA:PERSP_CENTER_ENA       = 1
; DB_SHADER_CONTROL       = 0x00000010
DB:Z_ORDER                  = 1
DB:CONSERVATIVE_Z_EXPORT    = 0; EXPORT_ANY_Z
; CB_SHADER_MASK          = 0x0000000F
CB:OUTPUT0_ENABLE           = 15

dx9TexCubeMask           = 0x00000002

; export table for mrt0 [patch@(bytes=0x2A8, dwords=0xAA)]
// Export Patch Code (FMT_ZERO):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_nop         0x0000                                  // 000000000000: BF800000
  s_nop         0x0000                                  // 000000000004: BF800000
  exp           null, off, off, off, off done vm        // 000000000008: F8001890 00000000
end
// Export Patch Code (FMT_32_R):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_nop         0x0000                                  // 000000000000: BF800000
  s_nop         0x0000                                  // 000000000004: BF800000
  exp           mrt0, v1, off, off, off done vm         // 000000000008: F8001801 00000001
end
// Export Patch Code (FMT_32_GR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_nop         0x0000                                  // 000000000000: BF800000
  s_nop         0x0000                                  // 000000000004: BF800000
  exp           mrt0, v1, v3, off, off done vm          // 000000000008: F8001803 00000301
end
// Export Patch Code (FMT_32_AR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_nop         0x0000                                  // 000000000000: BF800000
  s_nop         0x0000                                  // 000000000004: BF800000
  exp           mrt0, v1, v0, off, off done vm          // 000000000008: F8001803 00000001
end
// Export Patch Code (FMT_FP16_ABGR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  v_cvt_pkrtz_f16_f32  v1, v1, v3                       // 000000000000: 5E020701
  v_cvt_pkrtz_f16_f32  v0, v4, v0                       // 000000000004: 5E000104
  exp           mrt0, v1, v1, v0, v0 done compr vm      // 000000000008: F8001C0F 00000001
end
// Export Patch Code (FMT_UNORM16_ABGR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  v_cvt_pknorm_u16_f32  v1, v1, v3                      // 000000000000: 5C020701
  v_cvt_pknorm_u16_f32  v0, v4, v0                      // 000000000004: 5C000104
  exp           mrt0, v1, v1, v0, v0 done compr vm      // 000000000008: F8001C0F 00000001
end
// Export Patch Code (FMT_SNORM16_ABGR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  v_cvt_pknorm_i16_f32  v1, v1, v3                      // 000000000000: 5A020701
  v_cvt_pknorm_i16_f32  v0, v4, v0                      // 000000000004: 5A000104
  exp           mrt0, v1, v1, v0, v0 done compr vm      // 000000000008: F8001C0F 00000001
end
// Export Patch Code (FMT_UINT16_ABGR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  v_cvt_pk_u16_u32  v1, v1, v3                          // 000000000000: 60020701
  v_cvt_pk_u16_u32  v0, v4, v0                          // 000000000004: 60000104
  exp           mrt0, v1, v1, v0, v0 done compr vm      // 000000000008: F8001C0F 00000001
end
// Export Patch Code (FMT_SINT16_ABGR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  v_cvt_pk_i16_i32  v1, v1, v3                          // 000000000000: 62020701
  v_cvt_pk_i16_i32  v0, v4, v0                          // 000000000004: 62000104
  exp           mrt0, v1, v1, v0, v0 done compr vm      // 000000000008: F8001C0F 00000001
end
// Export Patch Code (FMT_32_ABGR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_nop         0x0000                                  // 000000000000: BF800000
  s_nop         0x0000                                  // 000000000004: BF800000
  exp           mrt0, v1, v3, v4, v0 done vm            // 000000000008: F800180F 00040301
end

// Shader Instructions:
shader main
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_mov_b64     s[36:37], exec                          // 000000000000: BEA4047E
  s_wqm_b64     exec, exec // wrscc                     // 000000000004: BEFE0A7E
  s_load_dwordx4  s[4:7], s[0:1], 0x18                  // 000000000008: C0820118
  s_waitcnt     lgkmcnt(0)                              // 00000000000C: BF8C007F
  s_buffer_load_dwordx4  s[8:11], s[4:7], 0x28          // 000000000010: C2840528
  s_mov_b32     m0, s2                                  // 000000000014: BEFC0302
  v_interp_p1_f32  v2, v0, attr1.z                      // 000000000018: C8080600
  v_interp_p1_f32  v3, v0, attr2.z                      // 00000000001C: C80C0A00
  v_interp_p1_f32  v4, v0, attr1.y                      // 000000000020: C8100500
  v_interp_p2_f32  v2, v1, attr1.z                      // 000000000024: C8090601
  v_interp_p1_f32  v5, v0, attr2.y                      // 000000000028: C8140900
  v_interp_p2_f32  v3, v1, attr2.z                      // 00000000002C: C80D0A01
  v_interp_p1_f32  v6, v0, attr1.x                      // 000000000030: C8180400
  v_interp_p2_f32  v4, v1, attr1.y                      // 000000000034: C8110501
  s_waitcnt     lgkmcnt(0)                              // 000000000038: BF8C007F
  v_sub_f32     v2, s10, v2                             // 00000000003C: 0804040A
  v_interp_p1_f32  v7, v0, attr2.x                      // 000000000040: C81C0800
  v_interp_p2_f32  v5, v1, attr2.y                      // 000000000044: C8150901
  v_mul_legacy_f32  v8, v3, v3                          // 000000000048: 0E100703
  v_interp_p2_f32  v6, v1, attr1.x                      // 00000000004C: C8190401
  v_sub_f32     v4, s9, v4                              // 000000000050: 08080809
  v_mul_legacy_f32  v9, v2, v2                          // 000000000054: 0E120502
  v_interp_p2_f32  v7, v1, attr2.x                      // 000000000058: C81D0801
  v_mac_f32     v8, v5, v5                              // 00000000005C: 3E100B05
  v_sub_f32     v6, s8, v6                              // 000000000060: 080C0C08
  v_mac_f32     v9, v4, v4                              // 000000000064: 3E120904
  v_mac_f32     v8, v7, v7                              // 000000000068: 3E100F07
  v_mac_f32     v9, v6, v6                              // 00000000006C: 3E120D06
  v_rsq_f32     v8, v8                                  // 000000000070: 7E105D08
  v_rsq_f32     v9, v9                                  // 000000000074: 7E125D09
  v_mul_legacy_f32  v3, v3, v8                          // 000000000078: 0E061103
  v_mul_legacy_f32  v2, v2, v9                          // 00000000007C: 0E041302
  v_mul_legacy_f32  v5, v5, v8                          // 000000000080: 0E0A1105
  v_mul_legacy_f32  v4, v4, v9                          // 000000000084: 0E081304
  v_mul_legacy_f32  v10, v3, -v2                        // 000000000088: D20E000A 40020503
  s_load_dwordx8  s[8:15], s[0:1], 0x00                 // 000000000090: C0C40100
  s_load_dwordx16  s[16:31], s[0:1], 0x08               // 000000000094: C1080108
  v_mul_legacy_f32  v7, v7, v8                          // 000000000098: 0E0E1107
  v_mul_legacy_f32  v6, v6, v9                          // 00000000009C: 0E0C1306
  v_mad_legacy_f32  v10, -v4, v5, v10                   // 0000000000A0: D280000A 242A0B04
  v_mad_legacy_f32  v10, -v6, v7, v10 mul:2             // 0000000000A8: D280000A 2C2A0F06
  v_interp_p1_f32  v8, v0, attr0.x                      // 0000000000B0: C8200000
  v_interp_p1_f32  v9, v0, attr0.y                      // 0000000000B4: C8240100
  v_mad_legacy_f32  v11, v7, -v10, -v6                  // 0000000000B8: D280000B C41A1507
  v_mad_legacy_f32  v12, v5, -v10, -v4                  // 0000000000C0: D280000C C4121505
  v_mad_legacy_f32  v10, v3, -v10, -v2                  // 0000000000C8: D280000A C40A1503
  v_interp_p2_f32  v8, v1, attr0.x                      // 0000000000D0: C8210001
  v_interp_p2_f32  v9, v1, attr0.y                      // 0000000000D4: C8250101
  v_cubema_f32  v13, v11, v12, v10                      // 0000000000D8: D28E000D 042A190B
  v_cubetc_f32  v14, v11, v12, v10                      // 0000000000E0: D28C000E 042A190B
  v_cubesc_f32  v15, v11, v12, v10                      // 0000000000E8: D28A000F 042A190B
  v_rcp_f32     v13, abs(v13)                           // 0000000000F0: D354010D 0000010D
  s_waitcnt     lgkmcnt(0)                              // 0000000000F8: BF8C007F
  image_sample  v[16:19], v[8:9], s[8:15], s[24:27] dmask:0xf // 0000000000FC: F0800F00 00C21008
  v_cubeid_f32  v10, v11, v12, v10                      // 000000000104: D288000A 042A190B
  v_madak_f32   v9, v14, v13, 0x3fc00000                // 00000000010C: 42121B0E 3FC00000
  v_madak_f32   v8, v15, v13, 0x3fc00000                // 000000000114: 42101B0F 3FC00000
  image_sample  v[8:11], v[8:9], s[16:23], s[28:31] dmask:0xf // 00000000011C: F0800F00 00E40808
  s_buffer_load_dwordx4  s[0:3], s[4:7], 0x14           // 000000000124: C2800514
  s_buffer_load_dwordx4  s[8:11], s[4:7], 0x10          // 000000000128: C2840510
  s_buffer_load_dwordx4  s[12:15], s[4:7], 0x18         // 00000000012C: C2860518
  s_buffer_load_dwordx4  s[16:19], s[4:7], 0x20         // 000000000130: C2880520
  s_waitcnt     lgkmcnt(0)                              // 000000000134: BF8C007F
  v_mul_legacy_f32  v12, v3, -s2                        // 000000000138: D20E000C 40000503
  s_buffer_load_dwordx4  s[20:23], s[4:7], 0x1c         // 000000000140: C28A051C
  v_mul_legacy_f32  v13, v3, -s10                       // 000000000144: D20E000D 40001503
  v_mad_legacy_f32  v12, -s1, v5, v12                   // 00000000014C: D280000C 24320A01
  s_buffer_load_dwordx4  s[24:27], s[4:7], 0x0c         // 000000000154: C28C050C
  s_buffer_load_dwordx4  s[28:31], s[4:7], 0x24         // 000000000158: C28E0524
  v_mad_legacy_f32  v13, -s9, v5, v13                   // 00000000015C: D280000D 24360A09
  v_mad_legacy_f32  v12, -s0, v7, v12                   // 000000000164: D280000C 24320E00
  v_mul_legacy_f32  v14, v3, -s14                       // 00000000016C: D20E000E 40001D03
  v_mul_legacy_f32  v2, v3, v2                          // 000000000174: 0E040503
  s_buffer_load_dwordx2  s[0:1], s[4:7], 0x04           // 000000000178: C2400504
  s_buffer_load_dwordx4  s[32:35], s[4:7], 0x08         // 00000000017C: C2900508
  v_mad_legacy_f32  v13, -s8, v7, v13                   // 000000000180: D280000D 24360E08
  v_mad_legacy_f32  v14, -s13, v5, v14                  // 000000000188: D280000E 243A0A0D
  v_cmp_ge_f32  s[2:3], v12, 0                          // 000000000190: D00C0002 0001010C
  v_mac_f32     v2, v4, v5                              // 000000000198: 3E040B04
  v_mad_legacy_f32  v14, -s12, v7, v14                  // 00000000019C: D280000E 243A0E0C
  v_cmp_le_f32  vcc, 0, v13                             // 0000000001A4: 7C061A80
  v_cndmask_b32  v3, 0, v12, s[2:3]                     // 0000000001A8: D2000003 000A1880
  v_mac_f32     v2, v6, v7                              // 0000000001B0: 3E040F06
  v_cmp_ge_f32  s[2:3], v14, 0                          // 0000000001B4: D00C0002 0001010E
  v_cndmask_b32  v4, 0, v13, vcc                        // 0000000001BC: 00081A80
  v_mul_legacy_f32  v5, s16, v3                         // 0000000001C0: 0E0A0610
  v_mul_legacy_f32  v6, s17, v3                         // 0000000001C4: 0E0C0611
  v_mul_legacy_f32  v3, s18, v3                         // 0000000001C8: 0E060612
  v_add_f32     v2, -abs(v2), 1.0                       // 0000000001CC: D2060102 2001E502
  v_cndmask_b32  v7, 0, v14, s[2:3]                     // 0000000001D4: D2000007 000A1C80
  s_waitcnt     lgkmcnt(0)                              // 0000000001DC: BF8C007F
  v_mac_f32     v5, s20, v4                             // 0000000001E0: 3E0A0814
  v_mac_f32     v6, s21, v4                             // 0000000001E4: 3E0C0815
  v_mac_f32     v3, s22, v4                             // 0000000001E8: 3E060816
  v_interp_p1_f32  v4, v0, attr3.x                      // 0000000001EC: C8100C00
  v_interp_p1_f32  v12, v0, attr3.y                     // 0000000001F0: C8300D00
  v_interp_p1_f32  v13, v0, attr3.z                     // 0000000001F4: C8340E00
  v_max_legacy_f32  v2, 0, v2                           // 0000000001F8: 1C040480
  s_buffer_load_dwordx4  s[4:7], s[4:7], 0x00           // 0000000001FC: C2820500
  v_mac_f32     v5, s28, v7                             // 000000000200: 3E0A0E1C
  v_mac_f32     v6, s29, v7                             // 000000000204: 3E0C0E1D
  v_mac_f32     v3, s30, v7                             // 000000000208: 3E060E1E
  v_mov_b32     v7, s24                                 // 00000000020C: 7E0E0218
  v_mov_b32     v14, s25                                // 000000000210: 7E1C0219
  v_mov_b32     v15, s26                                // 000000000214: 7E1E021A
  v_interp_p2_f32  v4, v1, attr3.x                      // 000000000218: C8110C01
  v_interp_p2_f32  v12, v1, attr3.y                     // 00000000021C: C8310D01
  v_interp_p2_f32  v13, v1, attr3.z                     // 000000000220: C8350E01
  v_interp_p1_f32  v0, v0, attr3.w                      // 000000000224: C8000F00
  v_log_f32     v2, v2                                  // 000000000228: 7E044F02
  v_mac_f32     v7, s32, v5                             // 00000000022C: 3E0E0A20
  v_mac_f32     v14, s33, v6                            // 000000000230: 3E1C0C21
  v_mac_f32     v15, s34, v3                            // 000000000234: 3E1E0622
  v_interp_p2_f32  v0, v1, attr3.w                      // 000000000238: C8010F01
  s_waitcnt     vmcnt(1)                                // 00000000023C: BF8C0F71
  v_mul_legacy_f32  v1, v16, v4                         // 000000000240: 0E020910
  v_mul_legacy_f32  v3, v17, v12                        // 000000000244: 0E061911
  v_mul_legacy_f32  v4, v18, v13                        // 000000000248: 0E081B12
  v_mul_legacy_f32  v2, s1, v2                          // 00000000024C: 0E040401
  v_mul_legacy_f32  v0, v19, v0                         // 000000000250: 0E000113
  v_mul_legacy_f32  v1, v7, v1                          // 000000000254: 0E020307
  v_mul_legacy_f32  v3, v14, v3                         // 000000000258: 0E06070E
  v_mul_legacy_f32  v4, v15, v4                         // 00000000025C: 0E08090F
  v_exp_f32     v2, v2                                  // 000000000260: 7E044B02
  v_mul_legacy_f32  v2, s0, v2                          // 000000000264: 0E040400
  s_waitcnt     vmcnt(0)                                // 000000000268: BF8C0F70
  v_mad_legacy_f32  v5, v8, v0, -v1                     // 00000000026C: D2800005 84060108
  v_mad_legacy_f32  v6, v9, v0, -v3                     // 000000000274: D2800006 840E0109
  v_mad_legacy_f32  v7, v10, v0, -v4                    // 00000000027C: D2800007 8412010A
  v_mac_f32     v1, v2, v5                              // 000000000284: 3E020B02
  v_mac_f32     v3, v2, v6                              // 000000000288: 3E060D02
  v_mac_f32     v4, v2, v7                              // 00000000028C: 3E080F02
  v_mul_legacy_f32  v2, v0, v11                         // 000000000290: 0E041700
  s_waitcnt     lgkmcnt(0)                              // 000000000294: BF8C007F
  v_mac_f32     v1, s4, v2                              // 000000000298: 3E020404
  v_mac_f32     v3, s5, v2                              // 00000000029C: 3E060405
  v_mac_f32     v4, s6, v2                              // 0000000002A0: 3E080406
  s_mov_b64     exec, s[36:37]                          // 0000000002A4: BEFE0424
  v_cvt_pkrtz_f16_f32  v1, v1, v3                       // 0000000002A8: 5E020701
  v_cvt_pkrtz_f16_f32  v0, v4, v0                       // 0000000002AC: 5E000104
  exp           mrt0, v1, v1, v0, v0 done compr vm      // 0000000002B0: F8001C0F 00000001
  s_endpgm                                              // 0000000002B8: BF810000
end


// Shader Statistics:
//  NumActiveWaveFront:         40
//  WorkgroupSize:              64
//  NumVRegs:                   20
//  NumSRegs:                   40
//  NumActiveWaveFrontByVReg:   40
//  NumActiveWaveFrontBySReg:   40
//  NumActiveWaveFrontByLDS:    40
//  CycleSim:                   131
//  CycleSimNWaves:             131
//  Code Size:                  700
//Assembler Counts:
//  num_32bit_ops                     : 111
//  num_64bit_ops                     : 31
//  num_alu                           : 112
//  num_fc                            : 27
//  num_inst_exp                      : 1
//  num_inst_ldsgds                   : 0
//  num_inst_mimg                     : 2
//  num_inst_mtbuf                    : 0
//  num_inst_mubuf                    : 0
//  num_inst_sopp                     : 9
//  num_inst_sopc                     : 0
//  num_inst_sop1                     : 4
//  num_inst_sop2                     : 0
//  num_inst_smrd                     : 0
//  num_inst_sopk                     : 0
//  num_inst_vop1                     : 7
//  num_inst_vop2                     : 52
//  num_inst_vop3                     : 17
//  num_inst_vopc                     : 1
//  num_inst_vintrp                   : 24
//  constant_literal_operands         : 0
//  num_tex                           : 3
//  num_vmem_group                    : 2
//  vmem_grouping_started             : 0
//
//Compilation Notes:
//
//  PS has no UAV writes, consider forcing REZ/LATEZ.
// Shader Statistics:
// m_uNumActiveWaveFront             : 40
// m_uVRegLimit                      : 256
// m_uSRegLimit                      : 512
// m_uNumVRegs                       : 20
// m_uNumSRegs                       : 40
// m_uSCCodeSize                     : 700
// m_uWorkgroupSize                  : 64
// m_uNumActiveWaveFrontByVReg       : 40
// m_uNumActiveWaveFrontBySReg       : 40
// m_uNumActiveWaveFrontByLDS        : 40
// m_uCycleSim1Wave                  : 131
// m_uCycleSimNWaves                 : 131

// Assembler Counts:
// num_32bit_ops                     : 111
// num_64bit_ops                     : 31
// num_alu                           : 112
// num_fc                            : 27
// num_inst_exp                      : 1
// num_inst_ldsgds                   : 0
// num_inst_mimg                     : 2
// num_inst_mtbuf                    : 0
// num_inst_mubuf                    : 0
// num_inst_sopp                     : 9
// num_inst_sopc                     : 0
// num_inst_sop1                     : 4
// num_inst_sop2                     : 0
// num_inst_smrd                     : 0
// num_inst_sopk                     : 0
// num_inst_vop1                     : 7
// num_inst_vop2                     : 52
// num_inst_vop3                     : 17
// num_inst_vopc                     : 1
// num_inst_vintrp                   : 24
// num_inst_smem                     : 14
// constant_literal_operands         : 0
// num_tex                           : 3
// num_vmem_group                    : 2
// vmem_grouping_started             : 0
// m_fFullPrecompilePromise          : 0
// m_fIntegerDivideExpansion         : 0
// m_fIntegerModExpansion            : 0
// m_fDoubleDivideExpansion          : 0
// m_fUsesScratch                    : 0
// m_fPerThreadIndirection           : 0
// m_fUsingTableLoads                : 0
// m_fUsingSHmemLoads                : 1
// fSemanticHashFlagOverrideApplied  : 0
// fPSHasNoUAVWrite                  : 1
// m_fRenderTargetsCanBeCompacted    : 0
// version                           : 3
// fCodePatched                      : 0

// Approximately 0 instruction slots used
#endif

const BYTE EnvironmentMapEffect_PSEnvMapPixelLightingFresnelNoFog[] =
{
     68,  88,  66,  67, 217, 224, 
     11, 136, 162, 126,  74, 186, 
    189, 115, 109, 101, 191, 147, 
     69,  45,   1,   0,   0,   0, 
     35,  11,   0,   0,   5,   0, 
      0,   0,  52,   0,   0,   0, 
    180,   0,   0,   0, 232,   0, 
      0,   0, 152,  10,   0,   0, 
    168,  10,   0,   0,  73,  83, 
     71,  78, 120,   0,   0,   0, 
      4,   0,   0,   0,   8,   0, 
      0,   0, 104,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      0,   0,   0,   0,   3,   3, 
      0,   0, 104,   0,   0,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   0,   0,  15,   7, 
      0,   0, 104,   0,   0,   0, 
      2,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      2,   0,   0,   0,   7,   7, 
      0,   0, 113,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      3,   0,   0,   0,  15,  15, 
      0,   0,  84,  69,  88,  67, 
     79,  79,  82,  68,   0,  67, 
     79,  76,  79,  82,   0, 171, 
     79,  83,  71,  78,  44,   0, 
      0,   0,   1,   0,   0,   0, 
      8,   0,   0,   0,  32,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   3,   0, 
      0,   0,   0,   0,   0,   0, 
     15,   0,   0,   0,  83,  86, 
     95,  84,  97, 114, 103, 101, 
    116,   0, 171, 171,  83,  72, 
     69,  88, 168,   9,   0,   0, 
     80,   0,   0,   0, 106,   2, 
      0,   0,  53,  16,   0,   0, 
      5,   0,   0,   0,  79,   1, 
      0,   0,  80,   0,   0,   0, 
     74,   1,   0,   0, 106,   8, 
      0,   1,  89,   0,   0,   4, 
     70, 142,  32,   0,   0,   0, 
      0,   0,  24,   0,   0,   0, 
     90,   0,   0,   3,   0,  96, 
     16,   0,   0,   0,   0,   0, 
     90,   0,   0,   3,   0,  96, 
     16,   0,   1,   0,   0,   0, 
     88,  24,   0,   4,   0, 112, 
     16,   0,   0,   0,   0,   0, 
     85,  85,   0,   0,  88,  48, 
      0,   4,   0, 112,  16,   0, 
      1,   0,   0,   0,  85,  85, 
      0,   0,  98,  16,   0,   3, 
     50,  16,  16,   0,   0,   0, 
      0,   0,  98,  16,   0,   3, 
    114,  16,  16,   0,   1,   0, 
      0,   0,  98,  16,   0,   3, 
    114,  16,  16,   0,   2,   0, 
      0,   0,  98,  16,   0,   3, 
    242,  16,  16,   0,   3,   0, 
      0,   0, 101,   0,   0,   3, 
    242,  32,  16,   0,   0,   0, 
      0,   0, 104,   0,   0,   2, 
      4,   0,   0,   0,  16,   0, 
      0,   7,  18,   0,  16,   0, 
      0,   0,   0,   0,  70,  18, 
     16,   0,   2,   0,   0,   0, 
     70,  18,  16,   0,   2,   0, 
      0,   0,  68,   0,   0,   5, 
     18,   0,  16,   0,   0,   0, 
      0,   0,  10,   0,  16,   0, 
      0,   0,   0,   0,  56,   0, 
      0,   7, 114,   0,  16,   0, 
      0,   0,   0,   0,   6,   0, 
     16,   0,   0,   0,   0,   0, 
     70,  18,  16,   0,   2,   0, 
      0,   0,  16,   0,   0,   9, 
     18,   0,  16,   0,   1,   0, 
      0,   0,  70, 130,  32, 128, 
     65,   0,   0,   0,   0,   0, 
      0,   0,   4,   0,   0,   0, 
     70,   2,  16,   0,   0,   0, 
      0,   0,  16,   0,   0,   9, 
     34,   0,  16,   0,   1,   0, 
      0,   0,  70, 130,  32, 128, 
     65,   0,   0,   0,   0,   0, 
      0,   0,   5,   0,   0,   0, 
     70,   2,  16,   0,   0,   0, 
      0,   0,  16,   0,   0,   9, 
     66,   0,  16,   0,   1,   0, 
      0,   0,  70, 130,  32, 128, 
     65,   0,   0,   0,   0,   0, 
      0,   0,   6,   0,   0,   0, 
     70,   2,  16,   0,   0,   0, 
      0,   0,  29,   0,   0,  10, 
    114,   0,  16,   0,   2,   0, 
      0,   0,  70,   2,  16,   0, 
      1,   0,   0,   0,   2,  64, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      1,   0,   0,  10, 114,   0, 
     16,   0,   2,   0,   0,   0, 
     70,   2,  16,   0,   2,   0, 
      0,   0,   2,  64,   0,   0, 
      0,   0, 128,  63,   0,   0, 
    128,  63,   0,   0, 128,  63, 
      0,   0,   0,   0,  56,   0, 
      0,   7, 114,   0,  16,   0, 
      1,   0,   0,   0,  70,   2, 
     16,   0,   1,   0,   0,   0, 
     70,   2,  16,   0,   2,   0, 
      0,   0,  56,   0,   0,   8, 
    114,   0,  16,   0,   2,   0, 
      0,   0,  86,   5,  16,   0, 
      1,   0,   0,   0,  70, 130, 
     32,   0,   0,   0,   0,   0, 
      8,   0,   0,   0,  50,   0, 
      0,  10, 178,   0,  16,   0, 
      1,   0,   0,   0,   6,   0, 
     16,   0,   1,   0,   0,   0, 
     70, 136,  32,   0,   0,   0, 
      0,   0,   7,   0,   0,   0, 
     70,   8,  16,   0,   2,   0, 
      0,   0,  50,   0,   0,  10, 
    114,   0,  16,   0,   1,   0, 
      0,   0, 166,  10,  16,   0, 
      1,   0,   0,   0,  70, 130, 
     32,   0,   0,   0,   0,   0, 
      9,   0,   0,   0,  70,   3, 
     16,   0,   1,   0,   0,   0, 
     50,   0,   0,  11, 114,   0, 
     16,   0,   1,   0,   0,   0, 
     70,   2,  16,   0,   1,   0, 
      0,   0,  70, 130,  32,   0, 
      0,   0,   0,   0,   2,   0, 
      0,   0,  70, 130,  32,   0, 
      0,   0,   0,   0,   3,   0, 
      0,   0,  69,   0,   0, 139, 
    194,   0,   0, 128,  67,  85, 
     21,   0, 242,   0,  16,   0, 
      2,   0,   0,   0,  70,  16, 
     16,   0,   0,   0,   0,   0, 
     70, 126,  16,   0,   0,   0, 
      0,   0,   0,  96,  16,   0, 
      0,   0,   0,   0,  56,   0, 
      0,   7, 242,   0,  16,   0, 
      2,   0,   0,   0,  70,  14, 
     16,   0,   2,   0,   0,   0, 
     70,  30,  16,   0,   3,   0, 
      0,   0,  56,   0,   0,   7, 
    114,   0,  16,   0,   1,   0, 
      0,   0,  70,   2,  16,   0, 
      1,   0,   0,   0,  70,   2, 
     16,   0,   2,   0,   0,   0, 
      0,   0,   0,   9, 114,   0, 
     16,   0,   2,   0,   0,   0, 
     70,  18,  16, 128,  65,   0, 
      0,   0,   1,   0,   0,   0, 
     70, 130,  32,   0,   0,   0, 
      0,   0,  10,   0,   0,   0, 
     16,   0,   0,   7, 130,   0, 
     16,   0,   0,   0,   0,   0, 
     70,   2,  16,   0,   2,   0, 
      0,   0,  70,   2,  16,   0, 
      2,   0,   0,   0,  68,   0, 
      0,   5, 130,   0,  16,   0, 
      0,   0,   0,   0,  58,   0, 
     16,   0,   0,   0,   0,   0, 
     56,   0,   0,   7, 114,   0, 
     16,   0,   2,   0,   0,   0, 
    246,  15,  16,   0,   0,   0, 
      0,   0,  70,   2,  16,   0, 
      2,   0,   0,   0,  16,   0, 
      0,   8, 130,   0,  16,   0, 
      0,   0,   0,   0,  70,   2, 
     16, 128,  65,   0,   0,   0, 
      2,   0,   0,   0,  70,   2, 
     16,   0,   0,   0,   0,   0, 
      0,   0,   0,   7, 130,   0, 
     16,   0,   0,   0,   0,   0, 
     58,   0,  16,   0,   0,   0, 
      0,   0,  58,   0,  16,   0, 
      0,   0,   0,   0,  50,   0, 
      0,  11, 114,   0,  16,   0, 
      3,   0,   0,   0,  70,   2, 
     16,   0,   0,   0,   0,   0, 
    246,  15,  16, 128,  65,   0, 
      0,   0,   0,   0,   0,   0, 
     70,   2,  16, 128,  65,   0, 
      0,   0,   2,   0,   0,   0, 
     16,   0,   0,   7,  18,   0, 
     16,   0,   0,   0,   0,   0, 
     70,   2,  16,   0,   2,   0, 
      0,   0,  70,   2,  16,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   8,  18,   0,  16,   0, 
      0,   0,   0,   0,  10,   0, 
     16, 128, 193,   0,   0,   0, 
      0,   0,   0,   0,   1,  64, 
      0,   0,   0,   0, 128,  63, 
     52,   0,   0,   7,  18,   0, 
     16,   0,   0,   0,   0,   0, 
     10,   0,  16,   0,   0,   0, 
      0,   0,   1,  64,   0,   0, 
      0,   0,   0,   0,  47,   0, 
      0,   5,  18,   0,  16,   0, 
      0,   0,   0,   0,  10,   0, 
     16,   0,   0,   0,   0,   0, 
     56,   0,   0,   8,  18,   0, 
     16,   0,   0,   0,   0,   0, 
     10,   0,  16,   0,   0,   0, 
      0,   0,  26, 128,  32,   0, 
      0,   0,   0,   0,   1,   0, 
      0,   0,  25,   0,   0,   5, 
     18,   0,  16,   0,   0,   0, 
      0,   0,  10,   0,  16,   0, 
      0,   0,   0,   0,  56,   0, 
      0,   8,  18,   0,  16,   0, 
      0,   0,   0,   0,  10,   0, 
     16,   0,   0,   0,   0,   0, 
     10, 128,  32,   0,   0,   0, 
      0,   0,   1,   0,   0,   0, 
     69,   0,   0, 139, 130,   1, 
      0, 128,  67,  85,  21,   0, 
    242,   0,  16,   0,   3,   0, 
      0,   0,  70,   2,  16,   0, 
      3,   0,   0,   0,  70, 126, 
     16,   0,   1,   0,   0,   0, 
      0,  96,  16,   0,   1,   0, 
      0,   0,  50,   0,   0,  10, 
    226,   0,  16,   0,   0,   0, 
      0,   0,   6,   9,  16,   0, 
      3,   0,   0,   0, 246,  15, 
     16,   0,   2,   0,   0,   0, 
      6,   9,  16, 128,  65,   0, 
      0,   0,   1,   0,   0,   0, 
     50,   0,   0,   9, 114,   0, 
     16,   0,   0,   0,   0,   0, 
      6,   0,  16,   0,   0,   0, 
      0,   0, 150,   7,  16,   0, 
      0,   0,   0,   0,  70,   2, 
     16,   0,   1,   0,   0,   0, 
     56,   0,   0,   7, 130,   0, 
     16,   0,   0,   0,   0,   0, 
     58,   0,  16,   0,   2,   0, 
      0,   0,  58,   0,  16,   0, 
      3,   0,   0,   0,  54,   0, 
      0,   5, 130,  32,  16,   0, 
      0,   0,   0,   0,  58,   0, 
     16,   0,   2,   0,   0,   0, 
     50,   0,   0,  10, 114,  32, 
     16,   0,   0,   0,   0,   0, 
     70, 130,  32,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
    246,  15,  16,   0,   0,   0, 
      0,   0,  70,   2,  16,   0, 
      0,   0,   0,   0,  62,   0, 
      0,   1,  53,  16,   0,   0, 
     27,   1,   0,   0,  23,   0, 
      1,   0,  41,  60,  18,   0, 
    120,   1, 237,  88, 207, 111, 
     27,  69,  20, 126, 179, 158, 
     29, 143, 215, 187, 179, 107, 
     39, 166, 118, 226, 132, 180, 
     50,  34, 138,  16, 130, 182, 
    244,  16, 161, 141,  33, 109, 
     56,   4, 104, 165, 230,  16, 
     85, 238, 175,  52,  78,  98, 
     41, 181,  67,  98,  85,  61, 
     32, 119,  41,  17, 138, 170, 
     40, 234,  17, 245, 196, 161, 
    226, 128, 196,  13, 113,  66, 
     73, 176, 114, 152,   3, 135, 
    202, 252,   5,  72, 109, 185, 
    114, 228, 128,  10, 239, 109, 
    118, 131,  41, 244, 102,   9, 
    132, 252, 201, 223, 188, 249, 
    102, 222, 204, 190, 153, 231, 
    195, 190, 125,  59,  11,  33, 
     30, 125, 253, 205,  12, 217, 
    209,  59,  15, 158, 142, 155, 
      0, 248,   3, 134,  36,  75, 
    248, 220, 161,  22, 224,   7, 
    143,  90, 128, 113, 106, 200, 
    193,   0,  24,  68,  67, 250, 
     59, 236, 151, 163, 126, 204, 
      7,   5,  54, 125, 234,  84, 
     98,  26, 187, 112,   2, 153, 
     67, 126,  26, 177, 129, 124, 
     25, 185, 134,  28,  70, 210, 
    118,   4, 220, 230,   8,  41, 
    106,  16, 156, 154,  46,  36, 
    145, 167, 145,  25,  36, 173, 
    203,  35,  21, 146, 144,  64, 
    118, 239,   1,  85, 106, 254, 
     25,  59,  72, 138, 255,  69, 
    160, 216, 226, 189, 232,  57, 
     20,  39, 129, 206, 246, 111, 
    131, 226, 137,  91,  58,  51, 
    245, 226,  60,  17,  40,  31, 
    221, 160, 251,  57, 244,   6, 
    152, 139, 242,  24, 231, 119, 
     37, 210, 113,  46, 247, 145, 
     47, 194, 239, 136,  34, 117, 
    186,  16, 107, 202, 147,   8, 
    163,  65, 203, 142,   1,  72, 
    180, 198, 171,   0, 184, 191, 
     72,  76,  29,  38, 234, 127, 
    142, 248, 191,  74, 150,  82, 
     64,  87, 235,  34,  99, 196, 
    243,  95,  81,   3, 193,  30, 
    241, 126,  30, 126,  37,  21, 
    107, 134, 250,  48,  87, 135, 
     58,  65,  58, 188, 214,  46, 
    141, 138,  37, 141,  43, 156, 
    193,  21, 183, 120, 164,  43, 
    168,  43,  93, 250,  18, 234, 
     75,  93, 250,  26, 234, 107, 
     93, 122,   1, 245,  66, 172, 
    227, 253, 221, 240, 121,  60, 
    204,  53,  14, 182, 254, 203, 
    236, 199, 216,  27, 246,  99, 
    236,  13, 251,  49, 246, 134, 
    253,  24, 123, 195, 126, 140, 
    189,  97,  63, 198, 222, 176, 
     31,  99, 111,  72, 239, 150, 
     45, 254, 112, 183, 101,  61, 
    219, 205, 179, 187, 251, 119, 
     96, 123, 111, 220, 220, 108, 
     27, 137, 223, 118,  65,  72, 
     13, 150, 173, 193, 244,  52, 
     19,  41,  13, 169,  65, 205, 
     44,  71,   3, 207, 107, 102, 
    102,  52, 249,  90, 156,  75, 
    144,  69, 205,  82,  57, 157, 
     72, 122, 138, 241, 130,  78, 
     73,  41,  13,  51, 171, 152, 
     28, 209, 102, 218, 243, 165, 
    109,  75, 158, 202, 250,  73, 
    215, 243, 133, 147, 245, 229, 
    101, 175, 149, 186, 156, 109, 
     37,  50,  66,  25,   3,  92, 
    153,  25,  75, 241,   1, 169, 
     44,  80, 157, 132, 105, 148, 
    129,  29, 236,  75,  38, 191, 
     79, 102, 148,  18,   3,  54, 
    142,   7,  29, 158, 158,  40, 
    145,  21, 238, 196, 107,   0, 
     99,  26,  88,  73, 167,  81, 
     39, 115,  67,   7,  54,  90, 
     51, 151,  61, 160, 249,  68, 
    206,  58,  96, 112,  92,  51, 
    246, 138, 118,  96, 167, 147, 
     46,  76, 112,   5, 219, 161, 
    117, 225,  94, 104,  29,  54, 
    247, 163, 131,  47, 170,  20, 
     63, 184, 193,  47, 210, 107, 
    131,   5,  91, 225, 156,  26, 
    206, 190, 139, 149, 203, 148, 
     59, 236, 133,  54, 156, 151, 
    143,  97, 208,  12, 218,  30, 
    222,  75, 222, 252, 172,  61, 
    102, 110, 181, 105, 173,  29, 
    198,  11, 229, 162, 121, 175, 
    237,  80,  63,   7, 101, 138, 
    133,  89,  39,  75, 182, 185, 
    221,  46, 153,  59,  56,  30, 
    116,  82, 214, 153,  18, 141, 
    131,  58,  89,  82, 228,  55, 
      2, 229, 132, 201,  21,  55, 
    203, 109, 105, 222,  15, 125, 
    164,  58, 131, 115,  65, 199, 
    177,  38,  75,   6, 216, 143, 
    108, 198, 128, 167, 185,  79, 
     99, 182, 154,  44,   5,  67, 
    226,  99, 124, 117, 239,   4, 
    121,  11, 132, 203, 125, 242, 
     81, 232,  19,  12,  73, 240, 
    132, 165,  50, 194,  86,  89, 
    129, 247, 201,  68, 199, 120, 
    194, 198, 176, 182, 237,   4, 
     69,  43,  60, 227, 160, 180, 
    252, 156, 180, 253, 151, 164, 
    240, 193, 246,  52,  56, 111, 
    104,  80, 167, 117, 192, 121, 
     17, 204, 187, 237, 162, 178, 
    252,  17, 101, 251, 163,  74, 
    248, 121,  67, 181,  10,  70, 
    177,  53, 100, 140, 182, 152, 
    157, 209, 204, 121,  83,  51, 
    245, 150, 198, 226,  67,  27, 
    231, 121, 107, 204,  82, 254, 
    113, 187, 232, 159,  16, 163, 
     62, 115, 153, 254, 200, 221, 
    222, 243,  82, 134, 202,  20, 
    132, 202,  14,  75, 204,  63, 
     87,   3,  12,  84,  50,  97, 
     40, 149,  20, 202,  77,  73, 
    101, 204, 242,  22, 224, 248, 
     26, 250, 154, 120,  30, 201, 
    196, 166,  64, 155,  98, 106, 
     51, 137, 214,  98, 217,  77, 
     35, 109, 248, 134,  35, 124, 
    195, 149,  62,  28, 227, 138, 
    226, 230, 220, 240,  77,  46, 
    124, 193, 165,  95, 226, 207, 
    118, 177, 206, 248,  75, 157, 
      2, 240, 201,  94, 129,  58, 
    244,  39, 126,  30, 242, 208, 
    227,   8,  36, 113,  12,  75, 
    201,  35, 132,  30, 184,  33, 
    213,  86,  49, 240,  74, 195, 
    177, 238, 122,  62, 220,  30, 
    199, 186, 203,  78,  73,  31, 
     13,  16, 143, 163, 197,  37, 
     36, 125, 103,  96,  81, 221, 
     74, 190,  28, 171,  88, 194, 
     68, 240, 211, 210, 212, 183, 
     95, 254,  76, 125,  66,  57, 
     90,  59,  22,  91, 164, 141, 
    252,  19,  15, 169, 249,  27, 
     86,  34, 255, 249, 200, 210, 
    163, 169,  14,  84, 113,   5, 
     30, 125, 188, 216, 138, 230, 
    131, 200, 210, 153, 211, 200, 
    231, 227, 248,  34, 154, 111, 
     34,  41, 210, 179, 147, 149, 
    119, 230, 222, 171, 108,  52, 
    175,  46,  86, 111,  85, 102, 
    107, 205, 141, 202, 217, 218, 
    122, 245,  70, 115, 126, 110, 
    182, 178, 177, 126, 163, 114, 
    113, 229, 250,  98, 117, 125, 
    163,  50, 221, 184, 185,  86, 
     91, 173,  46,  86, 230,  23, 
     26, 183, 207, 215, 171, 231, 
    234, 183, 106, 235, 141, 250, 
    205, 106, 189, 249, 193, 245, 
    181, 115,  75,  75, 184, 230, 
    234, 133, 139,  56, 140, 242, 
     66, 237, 118, 117, 245, 253, 
    218, 242,  74, 179,  86,  95, 
    158,  89, 175, 110, 212, 171, 
    171,  31,  54, 102,  26, 203, 
    175, 175,  45,  46, 192,  31, 
    159, 122,  95, 161,   0,   0, 
     88,  72,  83,  72,   8,   0, 
      0,   0,  42, 128, 225, 102, 
     63, 182, 166, 231,  88,  80, 
     68,  80, 115,   0,   0,   0, 
     68,  58,  92,  65,  84,  71, 
     92, 115, 116,  95, 100, 101, 
    118,  92,  75, 105, 116, 115, 
     92,  68, 105, 114, 101,  99, 
    116,  88,  84,  75,  92, 115, 
    114,  99,  92,  83, 104,  97, 
    100, 101, 114, 115,  92,  67, 
    111, 109, 112, 105, 108, 101, 
    100,  92,  88,  98, 111, 120, 
     79, 110, 101,  69, 110, 118, 
    105, 114, 111, 110, 109, 101, 
    110, 116,  77,  97, 112,  69, 
    102, 102, 101,  99, 116,  95, 
     80,  83,  69, 110, 118,  77, 
     97, 112,  80, 105, 120, 101, 
    108,  76, 105, 103, 104, 116, 
    105, 110, 103,  70, 114, 101, 
    115, 110, 101, 108,  78, 111, 
     70, 111, 103,  46, 112, 100, 
     98
};
