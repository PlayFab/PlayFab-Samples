#if 0
//
// Generated by Microsoft (R) D3D Shader Disassembler for Durango
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xy          0     NONE   float   xy  
// TEXCOORD                 1   xyzw        1     NONE   float   xyzw
// TEXCOORD                 2   xyz         2     NONE   float   xyz 
// COLOR                    0   xyzw        3     NONE   float   xyzw
// SV_Position              0   xyzw        4      POS   float   xyzw
//
vs_5_0
// Opaque Custom Data - XBOX Precompiled Shader Header
// First Precompiled Shader at offset:[166]
// Embedded Data:
//  0x000000a6 - Offset To First Precompiled Shader
//  0x00010050 - Original Shader Descriptor
//  0x000000a1 - Original Shader Size
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[26], immediateIndexed
dcl_input v0.xyzw
dcl_input v1.xyz
dcl_input v2.xy
dcl_output o0.xy
dcl_output o1.xyzw
dcl_output o2.xyz
dcl_output o3.xyzw
dcl_output_siv o4.xyzw, position
dcl_temps 1
mov o0.xy, v2.xyxx
dp4 o1.x, v0.xyzw, cb0[15].xyzw
dp4 o1.y, v0.xyzw, cb0[16].xyzw
dp4 o1.z, v0.xyzw, cb0[17].xyzw
dp4_sat o1.w, v0.xyzw, cb0[14].xyzw
dp3 r0.x, v1.xyzx, cb0[19].xyzx
dp3 r0.y, v1.xyzx, cb0[20].xyzx
dp3 r0.z, v1.xyzx, cb0[21].xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul o2.xyz, r0.wwww, r0.xyzx
mov o3.xyz, l(1.000000,1.000000,1.000000,0)
mov o3.w, cb0[0].w
dp4 o4.x, v0.xyzw, cb0[22].xyzw
dp4 o4.y, v0.xyzw, cb0[23].xyzw
dp4 o4.z, v0.xyzw, cb0[24].xyzw
dp4 o4.w, v0.xyzw, cb0[25].xyzw
ret 
// Opaque Custom Data - XBOX Precompiled Shader Object
// Offset:[166], bundle is:[195] DWORDS.
// Disassembled Precompiled Shader Object:
// Shader Type               : (VS)
// Shader Hw Stage           : (VS)
// PDB Filename              : D:\ATG\st_dev\Kits\DirectXTK\src\Shaders\Compiled\XboxOneNormalMapEffect_VSNormalPixelLightingTx.pdb
// Shader Semantic Hash      : 0x9cc6f69839766c3c
//
// Shader Data:
; ----------------- VS Data ------------------------
; Input Semantic Mappings
;   [0] generic, usageIdx  0, channelMask 15, v[4:7]
;   [1] generic, usageIdx  1, channelMask  7, v[8:10]
;   [2] generic, usageIdx  2, channelMask  3, v[12:13]
; Output Semantic Mappings
;   [0] generic,  usageIdx 0, paramIdx 0, paramSlot 0
;   [1] generic,  usageIdx 1, paramIdx 1, paramSlot 0
;   [2] generic,  usageIdx 2, paramIdx 2, paramSlot 0
;   [3] generic,  usageIdx 3, paramIdx 3, paramSlot 0

codeLenInByte        = 296 bytes;

; launchModeFlags    = 0x0000000E
srdTableSupport      = TRUE
immediateSupportExt  = TRUE
srdTableSupportExt   = TRUE

userElementCount     = 3;
;  userElements[0]      = PTR_VERTEX_BUFFER_TABLE, Element=1 dwords, s[0x2:3]
;  userElements[1]      = PTR_EXTENDED_USER_DATA, ReferencedExtUserElements=1, s[0x2:3]
;  userElements[2]      = SUB_PTR_FETCH_SHADER, s[0x2:3]
extUserElementCount  = 1;
;  extUserElements 1[0] = IMM_CONST_BUFFER 0, offset 0x0:3 dwords
NumVgprs             = 17;
NumSgprs             = 50;
FloatMode            = 192;
IeeeMode             = 0;
FlatPtr32            = 0;
ScratchSize          = 0 dwords/thread;
LDSByteSize          = 0 bytes/workgroup (compile time only);
ScratchWaveOffsetReg = s65535;
; texSamplerUsage         = 0x00000000
; constBufUsage           = 0x00000001

; SPI_SHADER_PGM_RSRC2_VS = 0x00000008
SSPRV:USER_SGPR             = 4
; PA_CL_VS_OUT_CNTL       = 0x00000000
; SPI_VS_OUT_CONFIG       = 0x00000006
SVOC:VS_EXPORT_COUNT        = 3
SVOC:VS_HALF_PACK           = 0
SVOC:VS_EXPORTS_FOG         = 0
SVOC:VS_OUT_FOG_VEC_ADDR    = 0
; SPI_SHADER_POS_FORMAT     = 0x00000004
SSPF:POS0_EXPORT_FORMAT     = 4
SSPF:POS1_EXPORT_FORMAT     = 0
SSPF:POS2_EXPORT_FORMAT     = 0
SSPF:POS3_EXPORT_FORMAT     = 0
VGT_STRMOUT_CONFIG = 0x0
VGT_STRMOUT_CONFIG:RAST_STREAM = 0
VGT_STRMOUT_CONFIG:STREAMOUT_0_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_1_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_2_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_3_EN = 0
; exportVertexSize          = 4

// Shader Instructions:
shader main
  asic(CI)
  type(VS)
  s_swappc_b64  s[2:3], s[2:3]                          // 000000000000: BE822102
  s_load_dwordx4  s[0:3], s[2:3], 0x00                  // 000000000004: C0800300
  s_waitcnt     lgkmcnt(0)                              // 000000000008: BF8C007F
  s_buffer_load_dwordx4  s[4:7], s[0:3], 0x54           // 00000000000C: C2820154
  s_buffer_load_dwordx4  s[8:11], s[0:3], 0x50          // 000000000010: C2840150
  s_buffer_load_dwordx4  s[12:15], s[0:3], 0x4c         // 000000000014: C286014C
  s_buffer_load_dwordx16  s[16:31], s[0:3], 0x38        // 000000000018: C3080138
  s_buffer_load_dwordx16  s[32:47], s[0:3], 0x58        // 00000000001C: C3100158
  s_waitcnt     vmcnt(0) & lgkmcnt(0)                   // 000000000020: BF8C0070
  v_mul_legacy_f32  v0, s6, v10                         // 000000000024: 0E001406
  v_mul_legacy_f32  v1, s10, v10                        // 000000000028: 0E02140A
  v_mac_f32     v0, s5, v9                              // 00000000002C: 3E001205
  s_buffer_load_dword  s0, s[0:3], 0x03                 // 000000000030: C2000103
  v_mul_legacy_f32  v2, s14, v10                        // 000000000034: 0E04140E
  v_mac_f32     v1, s9, v9                              // 000000000038: 3E021209
  v_mac_f32     v0, s4, v8                              // 00000000003C: 3E001004
  v_mac_f32     v2, s13, v9                             // 000000000040: 3E04120D
  v_mac_f32     v1, s8, v8                              // 000000000044: 3E021008
  v_mul_legacy_f32  v3, v0, v0                          // 000000000048: 0E060100
  v_mul_legacy_f32  v9, s23, v7                         // 00000000004C: 0E120E17
  v_mul_legacy_f32  v10, s27, v7                        // 000000000050: 0E140E1B
  v_mul_legacy_f32  v11, s31, v7                        // 000000000054: 0E160E1F
  v_mul_legacy_f32  v14, s19, v7                        // 000000000058: 0E1C0E13
  v_mac_f32     v2, s12, v8                             // 00000000005C: 3E04100C
  v_mac_f32     v3, v1, v1                              // 000000000060: 3E060301
  v_mul_legacy_f32  v8, s35, v7                         // 000000000064: 0E100E23
  v_mul_legacy_f32  v15, s39, v7                        // 000000000068: 0E1E0E27
  v_mul_legacy_f32  v16, s43, v7                        // 00000000006C: 0E200E2B
  v_mul_legacy_f32  v7, s47, v7                         // 000000000070: 0E0E0E2F
  v_mac_f32     v9, s22, v6                             // 000000000074: 3E120C16
  v_mac_f32     v10, s26, v6                            // 000000000078: 3E140C1A
  v_mac_f32     v11, s30, v6                            // 00000000007C: 3E160C1E
  v_mac_f32     v14, s18, v6                            // 000000000080: 3E1C0C12
  v_mac_f32     v3, v2, v2                              // 000000000084: 3E060502
  v_mac_legacy_f32  v8, s34, v6                         // 000000000088: 0C100C22
  v_mac_legacy_f32  v15, s38, v6                        // 00000000008C: 0C1E0C26
  v_mac_legacy_f32  v16, s42, v6                        // 000000000090: 0C200C2A
  v_mac_legacy_f32  v7, s46, v6                         // 000000000094: 0C0E0C2E
  v_mac_f32     v9, s21, v5                             // 000000000098: 3E120A15
  v_mac_f32     v10, s25, v5                            // 00000000009C: 3E140A19
  v_mac_f32     v11, s29, v5                            // 0000000000A0: 3E160A1D
  v_mac_f32     v14, s17, v5                            // 0000000000A4: 3E1C0A11
  v_rsq_f32     v3, v3                                  // 0000000000A8: 7E065D03
  v_mac_legacy_f32  v8, s33, v5                         // 0000000000AC: 0C100A21
  v_mac_legacy_f32  v15, s37, v5                        // 0000000000B0: 0C1E0A25
  v_mac_legacy_f32  v16, s41, v5                        // 0000000000B4: 0C200A29
  v_mac_legacy_f32  v7, s45, v5                         // 0000000000B8: 0C0E0A2D
  v_mac_f32     v9, s20, v4                             // 0000000000BC: 3E120814
  v_mac_f32     v10, s24, v4                            // 0000000000C0: 3E140818
  v_mac_f32     v11, s28, v4                            // 0000000000C4: 3E16081C
  v_mad_legacy_f32  v14, v4, s16, v14 clamp             // 0000000000C8: D280080E 04382104
  v_mul_legacy_f32  v2, v2, v3                          // 0000000000D0: 0E040702
  v_mul_legacy_f32  v1, v1, v3                          // 0000000000D4: 0E020701
  v_mul_legacy_f32  v0, v0, v3                          // 0000000000D8: 0E000700
  v_mac_legacy_f32  v8, s32, v4                         // 0000000000DC: 0C100820
  v_mac_legacy_f32  v15, s36, v4                        // 0000000000E0: 0C1E0824
  v_mac_legacy_f32  v16, s40, v4                        // 0000000000E4: 0C200828
  v_mac_legacy_f32  v7, s44, v4                         // 0000000000E8: 0C0E082C
  v_mov_b32     v3, 0                                   // 0000000000EC: 7E060280
  v_mov_b32     v4, 1.0                                 // 0000000000F0: 7E0802F2
  s_waitcnt     lgkmcnt(0)                              // 0000000000F4: BF8C007F
  v_mov_b32     v5, s0                                  // 0000000000F8: 7E0A0200
  exp           pos0, v8, v15, v16, v7 done             // 0000000000FC: F80008CF 07100F08
  exp           param0, v12, v13, v3, v4                // 000000000104: F800020F 04030D0C
  exp           param1, v9, v10, v11, v14               // 00000000010C: F800021F 0E0B0A09
  exp           param2, v2, v1, v0, v4                  // 000000000114: F800022F 04000102
  exp           param3, v4, v4, v4, v5                  // 00000000011C: F800023F 05040404
  s_endpgm                                              // 000000000124: BF810000
end


// Shader Statistics:
//  NumActiveWaveFront:         36
//  WorkgroupSize:              64
//  NumVRegs:                   17
//  NumSRegs:                   50
//  NumActiveWaveFrontByVReg:   40
//  NumActiveWaveFrontBySReg:   36
//  NumActiveWaveFrontByLDS:    40
//  CycleSim:                   81
//  CycleSimNWaves:             81
//  Code Size:                  296
//Assembler Counts:
//  num_32bit_ops                     : 62
//  num_64bit_ops                     : 6
//  num_alu                           : 51
//  num_fc                            : 12
//  num_inst_exp                      : 5
//  num_inst_ldsgds                   : 0
//  num_inst_mimg                     : 0
//  num_inst_mtbuf                    : 0
//  num_inst_mubuf                    : 0
//  num_inst_sopp                     : 4
//  num_inst_sopc                     : 0
//  num_inst_sop1                     : 1
//  num_inst_sop2                     : 0
//  num_inst_smrd                     : 0
//  num_inst_sopk                     : 0
//  num_inst_vop1                     : 4
//  num_inst_vop2                     : 46
//  num_inst_vop3                     : 0
//  num_inst_vopc                     : 0
//  num_inst_vintrp                   : 0
//  constant_literal_operands         : 0
//  num_tex                           : 5
//  num_vmem_group                    : 0
//  vmem_grouping_started             : 0
// Shader Statistics:
// m_uNumActiveWaveFront             : 36
// m_uVRegLimit                      : 256
// m_uSRegLimit                      : 512
// m_uNumVRegs                       : 17
// m_uNumSRegs                       : 50
// m_uSCCodeSize                     : 296
// m_uWorkgroupSize                  : 64
// m_uNumActiveWaveFrontByVReg       : 40
// m_uNumActiveWaveFrontBySReg       : 36
// m_uNumActiveWaveFrontByLDS        : 40
// m_uCycleSim1Wave                  : 81
// m_uCycleSimNWaves                 : 81

// Assembler Counts:
// num_32bit_ops                     : 62
// num_64bit_ops                     : 6
// num_alu                           : 51
// num_fc                            : 12
// num_inst_exp                      : 5
// num_inst_ldsgds                   : 0
// num_inst_mimg                     : 0
// num_inst_mtbuf                    : 0
// num_inst_mubuf                    : 0
// num_inst_sopp                     : 4
// num_inst_sopc                     : 0
// num_inst_sop1                     : 1
// num_inst_sop2                     : 0
// num_inst_smrd                     : 0
// num_inst_sopk                     : 0
// num_inst_vop1                     : 4
// num_inst_vop2                     : 46
// num_inst_vop3                     : 0
// num_inst_vopc                     : 0
// num_inst_vintrp                   : 0
// num_inst_smem                     : 7
// constant_literal_operands         : 0
// num_tex                           : 5
// num_vmem_group                    : 0
// vmem_grouping_started             : 0
// m_fFullPrecompilePromise          : 0
// m_fIntegerDivideExpansion         : 0
// m_fIntegerModExpansion            : 0
// m_fDoubleDivideExpansion          : 0
// m_fUsesScratch                    : 0
// m_fPerThreadIndirection           : 0
// m_fUsingTableLoads                : 0
// m_fUsingSHmemLoads                : 1
// fSemanticHashFlagOverrideApplied  : 0
// fPSHasNoUAVWrite                  : 0
// m_fRenderTargetsCanBeCompacted    : 0
// version                           : 3
// fCodePatched                      : 0

// Opaque Custom Data - XBOX Precompiled Shader Object
// Offset:[363], bundle is:[209] DWORDS.
// Disassembled Precompiled Shader Object:
// Shader Type               : (VS)
// Shader Hw Stage           : (ES)
// PDB Filename              : D:\ATG\st_dev\Kits\DirectXTK\src\Shaders\Compiled\XboxOneNormalMapEffect_VSNormalPixelLightingTx.pdb
// Shader Semantic Hash      : 0x9cc6f69839766c3c
//
// Shader Data:
; ----------------- VS Data ------------------------
; Input Semantic Mappings
;   [0] generic, usageIdx  0, channelMask 15, v[4:7]
;   [1] generic, usageIdx  1, channelMask  7, v[8:10]
;   [2] generic, usageIdx  2, channelMask  3, v[12:13]
; Output Semantic Mappings
;   [0] position,  usageIdx 4, paramIdx 4, paramSlot 0
;   [1] generic,  usageIdx 0, paramIdx 0, paramSlot 0
;   [2] generic,  usageIdx 1, paramIdx 1, paramSlot 0
;   [3] generic,  usageIdx 2, paramIdx 2, paramSlot 0
;   [4] generic,  usageIdx 3, paramIdx 3, paramSlot 0

codeLenInByte        = 396 bytes;

; launchModeFlags    = 0x0000000E
srdTableSupport      = TRUE
immediateSupportExt  = TRUE
srdTableSupportExt   = TRUE

userElementCount     = 4;
;  userElements[0]      = PTR_VERTEX_BUFFER_TABLE, Element=1 dwords, s[0x2:3]
;  userElements[1]      = PTR_EXTENDED_USER_DATA, ReferencedExtUserElements=1, s[0x2:3]
;  userElements[2]      = PTR_INTERNAL_GLOBAL_TABLE, Element=1 dwords, s[0x2:3]
;  userElements[3]      = SUB_PTR_FETCH_SHADER, s[0x2:3]
extUserElementCount  = 1;
;  extUserElements 1[0] = IMM_CONST_BUFFER 0, offset 0x0:3 dwords
NumVgprs             = 16;
NumSgprs             = 58;
FloatMode            = 192;
IeeeMode             = 0;
FlatPtr32            = 0;
ScratchSize          = 0 dwords/thread;
LDSByteSize          = 0 bytes/workgroup (compile time only);
ScratchWaveOffsetReg = s65535;
; texSamplerUsage         = 0x00000000
; constBufUsage           = 0x00000001

; SPI_SHADER_PGM_RSRC2_VS = 0x00000008
SSPRV:USER_SGPR             = 4
; PA_CL_VS_OUT_CNTL       = 0x00000000
; SPI_VS_OUT_CONFIG       = 0x00000000
SVOC:VS_EXPORT_COUNT        = 0
SVOC:VS_HALF_PACK           = 0
SVOC:VS_EXPORTS_FOG         = 0
SVOC:VS_OUT_FOG_VEC_ADDR    = 0
; SPI_SHADER_POS_FORMAT     = 0x00000004
SSPF:POS0_EXPORT_FORMAT     = 4
SSPF:POS1_EXPORT_FORMAT     = 0
SSPF:POS2_EXPORT_FORMAT     = 0
SSPF:POS3_EXPORT_FORMAT     = 0
VGT_STRMOUT_CONFIG = 0x0
VGT_STRMOUT_CONFIG:RAST_STREAM = 0
VGT_STRMOUT_CONFIG:STREAMOUT_0_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_1_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_2_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_3_EN = 0
; exportVertexSize          = 20
; esGsRingItemSize          = 20

// Shader Instructions:
shader main
  asic(CI)
  type(VS)
  s_swappc_b64  s[2:3], s[2:3]                          // 000000000000: BE822102
  s_load_dwordx4  s[8:11], s[2:3], 0x00                 // 000000000004: C0840300
  s_waitcnt     lgkmcnt(0)                              // 000000000008: BF8C007F
  s_buffer_load_dwordx16  s[12:27], s[8:11], 0x58       // 00000000000C: C3060958
  s_waitcnt     vmcnt(0) & lgkmcnt(0)                   // 000000000010: BF8C0070
  v_mul_legacy_f32  v0, s15, v7                         // 000000000014: 0E000E0F
  s_buffer_load_dwordx16  s[28:43], s[8:11], 0x38       // 000000000018: C30E0938
  s_buffer_load_dwordx4  s[44:47], s[8:11], 0x54        // 00000000001C: C2960954
  s_load_dwordx4  s[0:3], s[2:3], 0x0c                  // 000000000020: C080030C
  v_mac_legacy_f32  v0, s14, v6                         // 000000000024: 0C000C0E
  v_mul_legacy_f32  v1, s19, v7                         // 000000000028: 0E020E13
  s_buffer_load_dwordx4  s[48:51], s[8:11], 0x50        // 00000000002C: C2980950
  v_mac_legacy_f32  v0, s13, v5                         // 000000000030: 0C000A0D
  v_mac_legacy_f32  v1, s18, v6                         // 000000000034: 0C020C12
  v_mul_legacy_f32  v2, s23, v7                         // 000000000038: 0E040E17
  s_buffer_load_dwordx4  s[52:55], s[8:11], 0x4c        // 00000000003C: C29A094C
  v_mac_legacy_f32  v0, s12, v4                         // 000000000040: 0C00080C
  v_mac_legacy_f32  v1, s17, v5                         // 000000000044: 0C020A11
  v_mac_legacy_f32  v2, s22, v6                         // 000000000048: 0C040C16
  v_mul_legacy_f32  v3, s27, v7                         // 00000000004C: 0E060E1B
  v_mac_legacy_f32  v1, s16, v4                         // 000000000050: 0C020810
  v_mac_legacy_f32  v2, s21, v5                         // 000000000054: 0C040A15
  v_mac_legacy_f32  v3, s26, v6                         // 000000000058: 0C060C1A
  v_mac_legacy_f32  v2, s20, v4                         // 00000000005C: 0C040814
  v_mac_legacy_f32  v3, s25, v5                         // 000000000060: 0C060A19
  s_waitcnt     lgkmcnt(0)                              // 000000000064: BF8C007F
  v_mul_legacy_f32  v11, s35, v7                        // 000000000068: 0E160E23
  v_mul_legacy_f32  v14, s46, v10                       // 00000000006C: 0E1C142E
  v_mac_legacy_f32  v3, s24, v4                         // 000000000070: 0C060818
  buffer_store_dword  v0, v0, s[0:3], s4 offset:64 glc slc // 000000000074: E0704040 04400000
  v_mac_legacy_f32  v11, s34, v6                        // 00000000007C: 0C160C22
  v_mul_legacy_f32  v0, s39, v7                         // 000000000080: 0E000E27
  v_mul_legacy_f32  v15, s50, v10                       // 000000000084: 0E1E1432
  v_mac_legacy_f32  v14, s45, v9                        // 000000000088: 0C1C122D
  buffer_store_dword  v1, v0, s[0:3], s4 offset:68 glc slc // 00000000008C: E0704044 04400100
  v_mac_legacy_f32  v11, s33, v5                        // 000000000094: 0C160A21
  v_mac_legacy_f32  v0, s38, v6                         // 000000000098: 0C000C26
  v_mul_legacy_f32  v1, s43, v7                         // 00000000009C: 0E020E2B
  v_mul_legacy_f32  v10, s54, v10                       // 0000000000A0: 0E141436
  v_mac_legacy_f32  v15, s49, v9                        // 0000000000A4: 0C1E1231
  v_mac_legacy_f32  v14, s44, v8                        // 0000000000A8: 0C1C102C
  buffer_store_dword  v2, v0, s[0:3], s4 offset:72 glc slc // 0000000000AC: E0704048 04400200
  v_mac_legacy_f32  v11, s32, v4                        // 0000000000B4: 0C160820
  v_mac_legacy_f32  v0, s37, v5                         // 0000000000B8: 0C000A25
  v_mac_legacy_f32  v1, s42, v6                         // 0000000000BC: 0C020C2A
  v_mul_legacy_f32  v2, s31, v7                         // 0000000000C0: 0E040E1F
  v_mac_legacy_f32  v10, s53, v9                        // 0000000000C4: 0C141235
  v_mac_legacy_f32  v15, s48, v8                        // 0000000000C8: 0C1E1030
  v_mul_legacy_f32  v7, v14, v14                        // 0000000000CC: 0E0E1D0E
  buffer_store_dword  v3, v0, s[0:3], s4 offset:76 glc slc // 0000000000D0: E070404C 04400300
  v_mac_legacy_f32  v0, s36, v4                         // 0000000000D8: 0C000824
  v_mac_legacy_f32  v1, s41, v5                         // 0000000000DC: 0C020A29
  v_mac_legacy_f32  v2, s30, v6                         // 0000000000E0: 0C040C1E
  v_mac_legacy_f32  v10, s52, v8                        // 0000000000E4: 0C141034
  v_mac_legacy_f32  v7, v15, v15                        // 0000000000E8: 0C0E1F0F
  buffer_store_dword  v12, v0, s[0:3], s4 glc slc       // 0000000000EC: E0704000 04400C00
  v_mac_legacy_f32  v1, s40, v4                         // 0000000000F4: 0C020828
  v_mac_legacy_f32  v2, s29, v5                         // 0000000000F8: 0C040A1D
  v_mac_legacy_f32  v7, v10, v10                        // 0000000000FC: 0C0E150A
  buffer_store_dword  v13, v0, s[0:3], s4 offset:4 glc slc // 000000000100: E0704004 04400D00
  v_mad_legacy_f32  v2, v4, s28, v2 clamp               // 000000000108: D2800802 04083904
  v_rsq_f32     v3, v7                                  // 000000000110: 7E065D07
  buffer_store_dword  v11, v0, s[0:3], s4 offset:16 glc slc // 000000000114: E0704010 04400B00
  v_mul_legacy_f32  v4, v10, v3                         // 00000000011C: 0E08070A
  buffer_store_dword  v0, v0, s[0:3], s4 offset:20 glc slc // 000000000120: E0704014 04400000
  s_buffer_load_dword  s5, s[8:11], 0x03                // 000000000128: C2028903
  v_mul_legacy_f32  v0, v15, v3                         // 00000000012C: 0E00070F
  buffer_store_dword  v1, v0, s[0:3], s4 offset:24 glc slc // 000000000130: E0704018 04400100
  v_mul_legacy_f32  v1, v14, v3                         // 000000000138: 0E02070E
  buffer_store_dword  v2, v0, s[0:3], s4 offset:28 glc slc // 00000000013C: E070401C 04400200
  buffer_store_dword  v4, v0, s[0:3], s4 offset:32 glc slc // 000000000144: E0704020 04400400
  v_mov_b32     v2, 1.0                                 // 00000000014C: 7E0402F2
  buffer_store_dword  v0, v0, s[0:3], s4 offset:36 glc slc // 000000000150: E0704024 04400000
  buffer_store_dword  v1, v0, s[0:3], s4 offset:40 glc slc // 000000000158: E0704028 04400100
  buffer_store_dword  v2, v0, s[0:3], s4 offset:48 glc slc // 000000000160: E0704030 04400200
  s_waitcnt     lgkmcnt(0)                              // 000000000168: BF8C007F
  v_mov_b32     v0, s5                                  // 00000000016C: 7E000205
  buffer_store_dword  v2, v0, s[0:3], s4 offset:52 glc slc // 000000000170: E0704034 04400200
  buffer_store_dword  v2, v0, s[0:3], s4 offset:56 glc slc // 000000000178: E0704038 04400200
  buffer_store_dword  v0, v0, s[0:3], s4 offset:60 glc slc // 000000000180: E070403C 04400000
  s_endpgm                                              // 000000000188: BF810000
end


// Shader Statistics:
//  NumActiveWaveFront:         32
//  WorkgroupSize:              64
//  NumVRegs:                   16
//  NumSRegs:                   58
//  NumActiveWaveFrontByVReg:   40
//  NumActiveWaveFrontBySReg:   32
//  NumActiveWaveFrontByLDS:    40
//  CycleSim:                   85
//  CycleSimNWaves:             85
//  Code Size:                  396
//Assembler Counts:
//  num_32bit_ops                     : 63
//  num_64bit_ops                     : 18
//  num_alu                           : 50
//  num_fc                            : 14
//  num_inst_exp                      : 0
//  num_inst_ldsgds                   : 0
//  num_inst_mimg                     : 0
//  num_inst_mtbuf                    : 0
//  num_inst_mubuf                    : 17
//  num_inst_sopp                     : 5
//  num_inst_sopc                     : 0
//  num_inst_sop1                     : 1
//  num_inst_sop2                     : 0
//  num_inst_smrd                     : 0
//  num_inst_sopk                     : 0
//  num_inst_vop1                     : 3
//  num_inst_vop2                     : 46
//  num_inst_vop3                     : 0
//  num_inst_vopc                     : 0
//  num_inst_vintrp                   : 0
//  constant_literal_operands         : 0
//  num_tex                           : 17
//  num_vmem_group                    : 12
//  vmem_grouping_started             : 0
// Shader Statistics:
// m_uNumActiveWaveFront             : 32
// m_uVRegLimit                      : 256
// m_uSRegLimit                      : 512
// m_uNumVRegs                       : 16
// m_uNumSRegs                       : 58
// m_uSCCodeSize                     : 396
// m_uWorkgroupSize                  : 64
// m_uNumActiveWaveFrontByVReg       : 40
// m_uNumActiveWaveFrontBySReg       : 32
// m_uNumActiveWaveFrontByLDS        : 40
// m_uCycleSim1Wave                  : 85
// m_uCycleSimNWaves                 : 85

// Assembler Counts:
// num_32bit_ops                     : 63
// num_64bit_ops                     : 18
// num_alu                           : 50
// num_fc                            : 14
// num_inst_exp                      : 0
// num_inst_ldsgds                   : 0
// num_inst_mimg                     : 0
// num_inst_mtbuf                    : 0
// num_inst_mubuf                    : 17
// num_inst_sopp                     : 5
// num_inst_sopc                     : 0
// num_inst_sop1                     : 1
// num_inst_sop2                     : 0
// num_inst_smrd                     : 0
// num_inst_sopk                     : 0
// num_inst_vop1                     : 3
// num_inst_vop2                     : 46
// num_inst_vop3                     : 0
// num_inst_vopc                     : 0
// num_inst_vintrp                   : 0
// num_inst_smem                     : 8
// constant_literal_operands         : 0
// num_tex                           : 17
// num_vmem_group                    : 12
// vmem_grouping_started             : 0
// m_fFullPrecompilePromise          : 0
// m_fIntegerDivideExpansion         : 0
// m_fIntegerModExpansion            : 0
// m_fDoubleDivideExpansion          : 0
// m_fUsesScratch                    : 0
// m_fPerThreadIndirection           : 0
// m_fUsingTableLoads                : 0
// m_fUsingSHmemLoads                : 1
// fSemanticHashFlagOverrideApplied  : 0
// fPSHasNoUAVWrite                  : 0
// m_fRenderTargetsCanBeCompacted    : 0
// version                           : 3
// fCodePatched                      : 0

// Opaque Custom Data - XBOX Precompiled Shader Object
// Offset:[574], bundle is:[205] DWORDS.
// Disassembled Precompiled Shader Object:
// Shader Type               : (VS)
// Shader Hw Stage           : (LS)
// PDB Filename              : D:\ATG\st_dev\Kits\DirectXTK\src\Shaders\Compiled\XboxOneNormalMapEffect_VSNormalPixelLightingTx.pdb
// Shader Semantic Hash      : 0x9cc6f69839766c3c
//
// Shader Data:
; ----------------- VS Data ------------------------
; Input Semantic Mappings
;   [0] generic, usageIdx  0, channelMask 15, v[4:7]
;   [1] generic, usageIdx  1, channelMask  7, v[8:10]
;   [2] generic, usageIdx  2, channelMask  3, v[12:13]
; Output Semantic Mappings
;   [0] position,  usageIdx 4, paramIdx 4, paramSlot 0
;   [1] generic,  usageIdx 0, paramIdx 0, paramSlot 0
;   [2] generic,  usageIdx 1, paramIdx 1, paramSlot 0
;   [3] generic,  usageIdx 2, paramIdx 2, paramSlot 0
;   [4] generic,  usageIdx 3, paramIdx 3, paramSlot 0

codeLenInByte        = 348 bytes;

; launchModeFlags    = 0x0000000E
srdTableSupport      = TRUE
immediateSupportExt  = TRUE
srdTableSupportExt   = TRUE

userElementCount     = 3;
;  userElements[0]      = PTR_VERTEX_BUFFER_TABLE, Element=1 dwords, s[0x2:3]
;  userElements[1]      = PTR_EXTENDED_USER_DATA, ReferencedExtUserElements=1, s[0x2:3]
;  userElements[2]      = SUB_PTR_FETCH_SHADER, s[0x2:3]
extUserElementCount  = 1;
;  extUserElements 1[0] = IMM_CONST_BUFFER 0, offset 0x0:3 dwords
NumVgprs             = 17;
NumSgprs             = 50;
FloatMode            = 192;
IeeeMode             = 0;
FlatPtr32            = 0;
ScratchSize          = 0 dwords/thread;
LDSByteSize          = 0 bytes/workgroup (compile time only);
ScratchWaveOffsetReg = s65535;
; texSamplerUsage         = 0x00000000
; constBufUsage           = 0x00000001

; SPI_SHADER_PGM_RSRC2_VS = 0x00000008
SSPRV:USER_SGPR             = 4
; PA_CL_VS_OUT_CNTL       = 0x00000000
; SPI_VS_OUT_CONFIG       = 0x00000000
SVOC:VS_EXPORT_COUNT        = 0
SVOC:VS_HALF_PACK           = 0
SVOC:VS_EXPORTS_FOG         = 0
SVOC:VS_OUT_FOG_VEC_ADDR    = 0
; SPI_SHADER_POS_FORMAT     = 0x00000004
SSPF:POS0_EXPORT_FORMAT     = 4
SSPF:POS1_EXPORT_FORMAT     = 0
SSPF:POS2_EXPORT_FORMAT     = 0
SSPF:POS3_EXPORT_FORMAT     = 0
VGT_STRMOUT_CONFIG = 0x0
VGT_STRMOUT_CONFIG:RAST_STREAM = 0
VGT_STRMOUT_CONFIG:STREAMOUT_0_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_1_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_2_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_3_EN = 0
; vgprCompCnt               = 1
; exportVertexSize          = 20
; lsStride                  = 80

// Shader Instructions:
shader main
  asic(CI)
  type(VS)
  s_swappc_b64  s[2:3], s[2:3]                          // 000000000000: BE822102
  s_load_dwordx4  s[0:3], s[2:3], 0x00                  // 000000000004: C0800300
  s_waitcnt     lgkmcnt(0)                              // 000000000008: BF8C007F
  s_buffer_load_dwordx16  s[4:19], s[0:3], 0x38         // 00000000000C: C3020138
  s_buffer_load_dwordx4  s[20:23], s[0:3], 0x4c         // 000000000010: C28A014C
  s_buffer_load_dwordx4  s[24:27], s[0:3], 0x50         // 000000000014: C28C0150
  s_buffer_load_dwordx4  s[28:31], s[0:3], 0x54         // 000000000018: C28E0154
  s_waitcnt     lgkmcnt(0)                              // 00000000001C: BF8C007F
  s_buffer_load_dword  s23, s[0:3], 0x03                // 000000000020: C20B8103
  s_buffer_load_dwordx16  s[32:47], s[0:3], 0x58        // 000000000024: C3100158
  s_mov_b32     m0, 0x00010000                          // 000000000028: BEFC03FF 00010000
  s_waitcnt     vmcnt(0)                                // 000000000030: BF8C0F70
  v_mul_legacy_f32  v0, s11, v7                         // 000000000034: 0E000E0B
  v_mac_legacy_f32  v0, s10, v6                         // 000000000038: 0C000C0A
  v_mac_legacy_f32  v0, s9, v5                          // 00000000003C: 0C000A09
  v_mac_legacy_f32  v0, s8, v4                          // 000000000040: 0C000808
  v_mul_legacy_f32  v2, s15, v7                         // 000000000044: 0E040E0F
  v_mac_legacy_f32  v2, s14, v6                         // 000000000048: 0C040C0E
  v_mac_legacy_f32  v2, s13, v5                         // 00000000004C: 0C040A0D
  v_mac_legacy_f32  v2, s12, v4                         // 000000000050: 0C04080C
  v_mul_legacy_f32  v3, s19, v7                         // 000000000054: 0E060E13
  v_mac_legacy_f32  v3, s18, v6                         // 000000000058: 0C060C12
  v_mac_legacy_f32  v3, s17, v5                         // 00000000005C: 0C060A11
  v_mac_legacy_f32  v3, s16, v4                         // 000000000060: 0C060810
  v_mul_legacy_f32  v11, s7, v7                         // 000000000064: 0E160E07
  v_mac_legacy_f32  v11, s6, v6                         // 000000000068: 0C160C06
  v_mac_legacy_f32  v11, s5, v5                         // 00000000006C: 0C160A05
  v_mad_legacy_f32  v11, v4, s4, v11 clamp              // 000000000070: D280080B 042C0904
  v_mul_legacy_f32  v14, s22, v10                       // 000000000078: 0E1C1416
  v_mac_legacy_f32  v14, s21, v9                        // 00000000007C: 0C1C1215
  v_mac_legacy_f32  v14, s20, v8                        // 000000000080: 0C1C1014
  v_mul_legacy_f32  v15, s26, v10                       // 000000000084: 0E1E141A
  v_mac_legacy_f32  v15, s25, v9                        // 000000000088: 0C1E1219
  v_mac_legacy_f32  v15, s24, v8                        // 00000000008C: 0C1E1018
  v_mul_legacy_f32  v10, s30, v10                       // 000000000090: 0E14141E
  v_mac_legacy_f32  v10, s29, v9                        // 000000000094: 0C14121D
  v_mac_legacy_f32  v10, s28, v8                        // 000000000098: 0C14101C
  v_mul_legacy_f32  v8, v10, v10                        // 00000000009C: 0E10150A
  v_mac_legacy_f32  v8, v15, v15                        // 0000000000A0: 0C101F0F
  v_mac_legacy_f32  v8, v14, v14                        // 0000000000A4: 0C101D0E
  v_rsq_f32     v8, v8                                  // 0000000000A8: 7E105D08
  v_mul_legacy_f32  v9, v14, v8                         // 0000000000AC: 0E12110E
  v_mul_legacy_f32  v14, v15, v8                        // 0000000000B0: 0E1C110F
  v_mul_legacy_f32  v8, v10, v8                         // 0000000000B4: 0E10110A
  s_waitcnt     lgkmcnt(0)                              // 0000000000B8: BF8C007F
  v_mul_legacy_f32  v10, s35, v7                        // 0000000000BC: 0E140E23
  v_mac_legacy_f32  v10, s34, v6                        // 0000000000C0: 0C140C22
  v_mac_legacy_f32  v10, s33, v5                        // 0000000000C4: 0C140A21
  v_mac_legacy_f32  v10, s32, v4                        // 0000000000C8: 0C140820
  v_mul_legacy_f32  v15, s39, v7                        // 0000000000CC: 0E1E0E27
  v_mac_legacy_f32  v15, s38, v6                        // 0000000000D0: 0C1E0C26
  v_mac_legacy_f32  v15, s37, v5                        // 0000000000D4: 0C1E0A25
  v_mac_legacy_f32  v15, s36, v4                        // 0000000000D8: 0C1E0824
  v_mul_legacy_f32  v16, s43, v7                        // 0000000000DC: 0E200E2B
  v_mac_legacy_f32  v16, s42, v6                        // 0000000000E0: 0C200C2A
  v_mac_legacy_f32  v16, s41, v5                        // 0000000000E4: 0C200A29
  v_mac_legacy_f32  v16, s40, v4                        // 0000000000E8: 0C200828
  v_mul_legacy_f32  v7, s47, v7                         // 0000000000EC: 0E0E0E2F
  v_mac_legacy_f32  v7, s46, v6                         // 0000000000F0: 0C0E0C2E
  v_mac_legacy_f32  v7, s45, v5                         // 0000000000F4: 0C0E0A2D
  v_mac_legacy_f32  v7, s44, v4                         // 0000000000F8: 0C0E082C
  s_movk_i32    s0, 0x0050                              // 0000000000FC: B0000050
  v_mul_lo_i32  v1, v1, s0                              // 000000000100: D2D60001 00000101
  ds_write2_b32  v1, v10, v15 offset0:16 offset1:17     // 000000000108: D8381110 000F0A01
  ds_write2_b32  v1, v16, v7 offset0:18 offset1:19      // 000000000110: D8381312 00071001
  ds_write2_b32  v1, v12, v13 offset1:1                 // 000000000118: D8380100 000D0C01
  ds_write2_b32  v1, v0, v2 offset0:4 offset1:5         // 000000000120: D8380504 00020001
  ds_write2_b32  v1, v3, v11 offset0:6 offset1:7        // 000000000128: D8380706 000B0301
  ds_write2_b32  v1, v9, v14 offset0:8 offset1:9        // 000000000130: D8380908 000E0901
  ds_write_b32  v1, v8 offset:40                        // 000000000138: D8340028 00000801
  v_mov_b32     v0, 1.0                                 // 000000000140: 7E0002F2
  ds_write2_b32  v1, v0, v0 offset0:12 offset1:13       // 000000000144: D8380D0C 00000001
  v_mov_b32     v2, s23                                 // 00000000014C: 7E040217
  ds_write2_b32  v1, v0, v2 offset0:14 offset1:15       // 000000000150: D8380F0E 00020001
  s_endpgm                                              // 000000000158: BF810000
end


// Shader Statistics:
//  NumActiveWaveFront:         36
//  WorkgroupSize:              64
//  NumVRegs:                   17
//  NumSRegs:                   50
//  NumActiveWaveFrontByVReg:   40
//  NumActiveWaveFrontBySReg:   36
//  NumActiveWaveFrontByLDS:    40
//  CycleSim:                   92
//  CycleSimNWaves:             92
//  Code Size:                  348
//Assembler Counts:
//  num_32bit_ops                     : 64
//  num_64bit_ops                     : 11
//  num_alu                           : 51
//  num_fc                            : 15
//  num_inst_exp                      : 0
//  num_inst_ldsgds                   : 9
//  num_inst_mimg                     : 0
//  num_inst_mtbuf                    : 0
//  num_inst_mubuf                    : 0
//  num_inst_sopp                     : 5
//  num_inst_sopc                     : 0
//  num_inst_sop1                     : 2
//  num_inst_sop2                     : 0
//  num_inst_smrd                     : 0
//  num_inst_sopk                     : 1
//  num_inst_vop1                     : 3
//  num_inst_vop2                     : 46
//  num_inst_vop3                     : 0
//  num_inst_vopc                     : 0
//  num_inst_vintrp                   : 0
//  constant_literal_operands         : 0
//  num_tex                           : 9
//  num_vmem_group                    : 0
//  vmem_grouping_started             : 0
// Shader Statistics:
// m_uNumActiveWaveFront             : 36
// m_uVRegLimit                      : 256
// m_uSRegLimit                      : 512
// m_uNumVRegs                       : 17
// m_uNumSRegs                       : 50
// m_uSCCodeSize                     : 348
// m_uWorkgroupSize                  : 64
// m_uNumActiveWaveFrontByVReg       : 40
// m_uNumActiveWaveFrontBySReg       : 36
// m_uNumActiveWaveFrontByLDS        : 40
// m_uCycleSim1Wave                  : 92
// m_uCycleSimNWaves                 : 92

// Assembler Counts:
// num_32bit_ops                     : 64
// num_64bit_ops                     : 11
// num_alu                           : 51
// num_fc                            : 15
// num_inst_exp                      : 0
// num_inst_ldsgds                   : 9
// num_inst_mimg                     : 0
// num_inst_mtbuf                    : 0
// num_inst_mubuf                    : 0
// num_inst_sopp                     : 5
// num_inst_sopc                     : 0
// num_inst_sop1                     : 2
// num_inst_sop2                     : 0
// num_inst_smrd                     : 0
// num_inst_sopk                     : 1
// num_inst_vop1                     : 3
// num_inst_vop2                     : 46
// num_inst_vop3                     : 0
// num_inst_vopc                     : 0
// num_inst_vintrp                   : 0
// num_inst_smem                     : 7
// constant_literal_operands         : 0
// num_tex                           : 9
// num_vmem_group                    : 0
// vmem_grouping_started             : 0
// m_fFullPrecompilePromise          : 0
// m_fIntegerDivideExpansion         : 0
// m_fIntegerModExpansion            : 0
// m_fDoubleDivideExpansion          : 0
// m_fUsesScratch                    : 0
// m_fPerThreadIndirection           : 0
// m_fUsingTableLoads                : 0
// m_fUsingSHmemLoads                : 1
// fSemanticHashFlagOverrideApplied  : 0
// fPSHasNoUAVWrite                  : 0
// m_fRenderTargetsCanBeCompacted    : 0
// version                           : 3
// fCodePatched                      : 0

// Approximately 0 instruction slots used
#endif

const BYTE NormalMapEffect_VSNormalPixelLightingTx[] =
{
     68,  88,  66,  67,  60, 164, 
    244,  46,  10, 239, 109, 108, 
    114, 223,   2,  20,  36, 180, 
     75, 233,   1,   0,   0,   0, 
      4,  14,   0,   0,   5,   0, 
      0,   0,  52,   0,   0,   0, 
    168,   0,   0,   0,  76,   1, 
      0,   0, 136,  13,   0,   0, 
    152,  13,   0,   0,  73,  83, 
     71,  78, 108,   0,   0,   0, 
      3,   0,   0,   0,   8,   0, 
      0,   0,  80,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      0,   0,   0,   0,  15,  15, 
      0,   0,  92,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   0,   0,   7,   7, 
      0,   0,  99,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      2,   0,   0,   0,   3,   3, 
      0,   0,  83,  86,  95,  80, 
    111, 115, 105, 116, 105, 111, 
    110,   0,  78,  79,  82,  77, 
     65,  76,   0,  84,  69,  88, 
     67,  79,  79,  82,  68,   0, 
     79,  83,  71,  78, 156,   0, 
      0,   0,   5,   0,   0,   0, 
      8,   0,   0,   0, 128,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   3,   0, 
      0,   0,   0,   0,   0,   0, 
      3,  12,   0,   0, 128,   0, 
      0,   0,   1,   0,   0,   0, 
      0,   0,   0,   0,   3,   0, 
      0,   0,   1,   0,   0,   0, 
     15,   0,   0,   0, 128,   0, 
      0,   0,   2,   0,   0,   0, 
      0,   0,   0,   0,   3,   0, 
      0,   0,   2,   0,   0,   0, 
      7,   8,   0,   0, 137,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   3,   0, 
      0,   0,   3,   0,   0,   0, 
     15,   0,   0,   0, 143,   0, 
      0,   0,   0,   0,   0,   0, 
      1,   0,   0,   0,   3,   0, 
      0,   0,   4,   0,   0,   0, 
     15,   0,   0,   0,  84,  69, 
     88,  67,  79,  79,  82,  68, 
      0,  67,  79,  76,  79,  82, 
      0,  83,  86,  95,  80, 111, 
    115, 105, 116, 105, 111, 110, 
      0, 171,  83,  72,  69,  88, 
     52,  12,   0,   0,  80,   0, 
      1,   0,  13,   3,   0,   0, 
     53,  16,   0,   0,   5,   0, 
      0,   0, 166,   0,   0,   0, 
     80,   0,   1,   0, 161,   0, 
      0,   0, 106,   8,   0,   1, 
     89,   0,   0,   4,  70, 142, 
     32,   0,   0,   0,   0,   0, 
     26,   0,   0,   0,  95,   0, 
      0,   3, 242,  16,  16,   0, 
      0,   0,   0,   0,  95,   0, 
      0,   3, 114,  16,  16,   0, 
      1,   0,   0,   0,  95,   0, 
      0,   3,  50,  16,  16,   0, 
      2,   0,   0,   0, 101,   0, 
      0,   3,  50,  32,  16,   0, 
      0,   0,   0,   0, 101,   0, 
      0,   3, 242,  32,  16,   0, 
      1,   0,   0,   0, 101,   0, 
      0,   3, 114,  32,  16,   0, 
      2,   0,   0,   0, 101,   0, 
      0,   3, 242,  32,  16,   0, 
      3,   0,   0,   0, 103,   0, 
      0,   4, 242,  32,  16,   0, 
      4,   0,   0,   0,   1,   0, 
      0,   0, 104,   0,   0,   2, 
      1,   0,   0,   0,  54,   0, 
      0,   5,  50,  32,  16,   0, 
      0,   0,   0,   0,  70,  16, 
     16,   0,   2,   0,   0,   0, 
     17,   0,   0,   8,  18,  32, 
     16,   0,   1,   0,   0,   0, 
     70,  30,  16,   0,   0,   0, 
      0,   0,  70, 142,  32,   0, 
      0,   0,   0,   0,  15,   0, 
      0,   0,  17,   0,   0,   8, 
     34,  32,  16,   0,   1,   0, 
      0,   0,  70,  30,  16,   0, 
      0,   0,   0,   0,  70, 142, 
     32,   0,   0,   0,   0,   0, 
     16,   0,   0,   0,  17,   0, 
      0,   8,  66,  32,  16,   0, 
      1,   0,   0,   0,  70,  30, 
     16,   0,   0,   0,   0,   0, 
     70, 142,  32,   0,   0,   0, 
      0,   0,  17,   0,   0,   0, 
     17,  32,   0,   8, 130,  32, 
     16,   0,   1,   0,   0,   0, 
     70,  30,  16,   0,   0,   0, 
      0,   0,  70, 142,  32,   0, 
      0,   0,   0,   0,  14,   0, 
      0,   0,  16,   0,   0,   8, 
     18,   0,  16,   0,   0,   0, 
      0,   0,  70,  18,  16,   0, 
      1,   0,   0,   0,  70, 130, 
     32,   0,   0,   0,   0,   0, 
     19,   0,   0,   0,  16,   0, 
      0,   8,  34,   0,  16,   0, 
      0,   0,   0,   0,  70,  18, 
     16,   0,   1,   0,   0,   0, 
     70, 130,  32,   0,   0,   0, 
      0,   0,  20,   0,   0,   0, 
     16,   0,   0,   8,  66,   0, 
     16,   0,   0,   0,   0,   0, 
     70,  18,  16,   0,   1,   0, 
      0,   0,  70, 130,  32,   0, 
      0,   0,   0,   0,  21,   0, 
      0,   0,  16,   0,   0,   7, 
    130,   0,  16,   0,   0,   0, 
      0,   0,  70,   2,  16,   0, 
      0,   0,   0,   0,  70,   2, 
     16,   0,   0,   0,   0,   0, 
     68,   0,   0,   5, 130,   0, 
     16,   0,   0,   0,   0,   0, 
     58,   0,  16,   0,   0,   0, 
      0,   0,  56,   0,   0,   7, 
    114,  32,  16,   0,   2,   0, 
      0,   0, 246,  15,  16,   0, 
      0,   0,   0,   0,  70,   2, 
     16,   0,   0,   0,   0,   0, 
     54,   0,   0,   8, 114,  32, 
     16,   0,   3,   0,   0,   0, 
      2,  64,   0,   0,   0,   0, 
    128,  63,   0,   0, 128,  63, 
      0,   0, 128,  63,   0,   0, 
      0,   0,  54,   0,   0,   6, 
    130,  32,  16,   0,   3,   0, 
      0,   0,  58, 128,  32,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,  17,   0,   0,   8, 
     18,  32,  16,   0,   4,   0, 
      0,   0,  70,  30,  16,   0, 
      0,   0,   0,   0,  70, 142, 
     32,   0,   0,   0,   0,   0, 
     22,   0,   0,   0,  17,   0, 
      0,   8,  34,  32,  16,   0, 
      4,   0,   0,   0,  70,  30, 
     16,   0,   0,   0,   0,   0, 
     70, 142,  32,   0,   0,   0, 
      0,   0,  23,   0,   0,   0, 
     17,   0,   0,   8,  66,  32, 
     16,   0,   4,   0,   0,   0, 
     70,  30,  16,   0,   0,   0, 
      0,   0,  70, 142,  32,   0, 
      0,   0,   0,   0,  24,   0, 
      0,   0,  17,   0,   0,   8, 
    130,  32,  16,   0,   4,   0, 
      0,   0,  70,  30,  16,   0, 
      0,   0,   0,   0,  70, 142, 
     32,   0,   0,   0,   0,   0, 
     25,   0,   0,   0,  62,   0, 
      0,   1,  53,  16,   0,   0, 
    197,   0,   0,   0,  23,   0, 
      1,   0,  32,  73,  23,   0, 
    120,   1, 237, 152,  79,  79, 
     19,  65,  20, 192, 103, 167, 
    219, 233, 118,  25, 134, 101, 
     89, 202, 191,  82, 138, 162, 
    162,  34,  16, 189, 160,  33, 
    163,  34, 198,  24,  80,  16, 
    171, 225, 176, 134,  20, 218, 
     66, 147,   2,  77, 219,  16, 
     18,  99,  45, 132, 232, 197, 
     15, 128, 134, 163,  71,  63, 
    130,  17,   2, 137, 137,  39, 
     19, 227, 135, 240, 236, 193, 
    112, 211, 247, 218,  93, 211, 
    128, 156,  53, 102, 126, 233, 
    239, 189, 157, 217, 237, 238, 
    219, 153,  61, 189, 187, 109, 
    164, 202, 167, 167,  51,  26, 
    230, 129, 153, 119, 115,  91, 
    148, 144,  32,  14,   0,  29, 
      3, 144, 119,  48,  18, 242, 
    173,  21,  35,  33, 125,  24, 
    240,  31, 112, 109,  51, 164, 
    203,  96,  63, 140, 111,  96, 
      6, 241,  60, 230,  55, 175, 
    159, 141, 101,  50,  27,  99, 
    143, 224, 120,  24, 196, 219, 
     60, 240, 148,  32,   3, 175, 
    128,  28, 244, 159,  89, 143, 
    255, 124, 124,  84,  61,  56, 
     63,   8, 214,  19, 194,   0, 
     28, 187,  79,  18, 195, 159, 
     25,   7, 177, 254, 147, 192, 
    218, 124, 240, 190,  88,  39, 
    130, 239, 251, 175, 129, 107, 
    228, 239,  19, 130, 251,  81, 
    143,   0,   3,  32, 178, 237, 
    237, 163, 127, 201,  87, 111, 
    236, 239, 229,  30, 120,  18, 
     63,   1, 127,  95, 124, 252, 
     49, 222, 159, 145, 169,  97, 
    166, 189, 140,  51, 122,  96, 
     49, 152,  96, 112, 146, 193, 
    226,  49, 216, 108,   6, 155, 
    196,  12,  48,  12, 154,  96, 
      3,   8, 139, 202,  26,  65, 
     40, 144,  53, 129,  22,   8, 
    133,  48,  27, 108,   1, 225, 
    157,  24, 212, 199,  34,  32, 
    124, 175, 172,  29, 236,   0, 
     59, 193,  46,  48,  10, 118, 
    131,  49, 176, 167,  86,  11, 
    126,  87,   8, 211, 106, 111, 
    200,  40, 124, 168,   0,  11, 
     96, 133, 255,  63, 184,   6, 
    176, 204,  85, 112,  45, 112, 
    236,  83, 127, 172,  80,  40, 
     20,  10, 133,  66, 161,  80, 
     40,  20,  10, 133,  66, 241, 
    183, 160, 189, 155,  31,  72, 
    160, 178, 247, 156, 188, 218, 
     77, 104, 155, 251, 211, 218, 
    214, 254, 164, 246,  98, 127, 
     68,  51,  14, 102,  53, 235, 
     32,  15, 243, 204,  33, 194, 
    116, 168,   8, 218,  68,   6, 
     52, 178,  47,  28,  93, 132, 
    109,  42, 117, 139, 200,  70, 
     91, 151, 134,  69,  37, 209, 
    152, 104,  19, 182, 232,  18, 
    142, 232,  17,  17, 209,  34, 
    162, 130,  91, 186, 212,   2, 
     76, 158,  22, 150,  56,  39, 
     98, 226, 162, 136, 139,  33, 
     33,  68, 132, 219, 178, 147, 
     59,  50, 198,  35, 210, 230, 
     81,  73, 131,  76, 158, 226, 
     22,  63, 203,  99, 252,   2, 
    143, 243,  65,  46, 120, 171, 
    105, 203,  14, 211, 145, 221, 
    102,  68,  54, 155,  81,  25, 
    120, 194, 202, 189, 166, 197, 
    207, 152,  49, 126, 222, 140, 
    243,  75, 166, 224, 142,  97, 
    203, 118, 195, 145,  81,  35, 
     34, 133,  81, 249, 162, 247, 
    142, 232,  52, 164,  11,  45, 
     68,   5,   9,  17,  17,  55, 
     44, 222, 103, 196, 120, 191, 
     17, 231,   3, 134, 224,  21, 
    202, 202, 223, 169,  81, 198, 
    119,  37, 212,  44, 127,  54, 
    200, 161, 209, 100, 133, 154, 
     40,  57, 228, 141,   1, 189, 
      7, 114, 216, 108,  16,  67, 
    144, 169,  70, 244, 235, 144, 
    117,  93,  15,  18, 178, 177, 
     91, 109, 219, 209, 234, 239, 
     55,  29, 216, 242,  58,  50, 
    103,  97,  56,  50,  87,  61, 
    214, 107, 253,  49, 159, 190, 
      8,  70, 192, 203, 216, 199, 
     13, 131, 154, 215,  57, 236, 
      4, 117, 175, 187,  54, 154, 
     91, 187, 186, 253, 227, 227, 
     14,  30,  35, 174, 247, 159, 
     81,  47, 199,  65, 191,  95, 
     90, 163, 130, 225,  24,  91, 
    222, 245,  37,  47,  99, 173, 
    216, 163,  18, 126,  39,  23, 
     27, 151, 192,  91, 239, 252, 
    142, 151, 177, 191, 213,   0, 
     30, 173, 227, 189, 119,  62, 
     13,  98, 165, 227, 215, 220, 
    155, 137,  59, 110, 177,  52, 
    151,  74, 175, 185,  19, 217, 
     82, 209,  29, 207,  22, 210, 
     11, 165, 217, 196, 132,  91, 
     44,  44, 184,  15, 151, 146, 
    169, 116, 161, 232, 222,  90, 
     93, 206, 103, 115, 233, 148, 
     59,  59, 191, 186,  62, 181, 
    146, 190, 191,  90,  88,  78, 
    230, 238,  37, 243, 183,  51, 
     25, 184, 124, 238, 241, 195, 
    218, 204, 116, 118,  61, 157, 
    155, 204,  46,  46, 149, 178, 
     43, 139, 137, 245, 193, 124, 
    106, 158, 252,   2,  79, 124, 
    123, 240,   0,   0,  53,  16, 
      0,   0, 211,   0,   0,   0, 
     23,   0,   1,   0,  16, 193, 
     23,   0, 120,   1, 237, 152, 
     77,  79,  19,  65,  24, 199, 
    167, 219,  97, 186,  93, 134, 
    105,  41,  75, 121,  43,   5, 
     20,  21,  21,   9,  18,  48, 
     64,  72,  92,  17, 163,   9, 
     40,  40, 213, 112, 168, 225, 
    173,   5, 154, 240, 210,   0, 
     33,  61,  33,  24,  18,  99, 
    228,  98,  98,  12,  49, 124, 
      4, 143, 232,  81,  17,  18, 
    189,  27,  63, 128,  31, 192, 
    147,   7,  79,  36, 250, 127, 
    186, 187, 136,  85, 206,  26, 
    179, 191, 244,  63, 207, 204, 
    236, 179, 187, 255, 157, 153, 
     94, 158, 119,  21,  44, 207, 
    147, 245,  87,  59,  20, 155, 
    239, 188,  28, 221, 208,  24, 
     43, 162,   1,  64,  55,  79, 
    214, 164, 150, 177, 177,  40, 
    181, 140, 213,  83, 227, 131, 
    144,  16,  70, 232, 134,  54, 
     49, 182,  16, 155,  32, 186, 
     78,  49, 246, 225, 105, 239, 
    235, 177, 103, 189,  83, 232, 
    119,  64,  17, 232, 174, 163, 
    203,  16, 141, 219,  32,   5, 
     21,  82,  10, 185,  62, 232, 
     85,  71, 241,  67,  45, 208, 
     81, 116, 106,   0, 221,  39, 
    161,  67, 198, 169, 249,  51, 
    183,  33, 242, 127,  28, 228, 
    141, 158, 231, 226, 250, 164, 
    239, 253, 215, 160,  53, 114, 
    247, 137, 160, 253,  56,  10, 
    121, 231,  16, 113,  80,  78, 
    237, 207, 117,  29, 112, 246, 
    213, 221, 203,  93, 232,  56, 
    190,   3, 247,  57,   4, 245, 
    219,  33, 130, 246,  69, 176, 
    193,  86, 225, 123,  84,  47, 
    180, 253, 176, 192, 132,  64, 
    130, 192,  70,  10,   1,   5, 
     32, 108, 148,   8,  66,   6, 
     84,  12,  97, 179,  68,   9, 
      4, 131,  34,   4, 193, 132, 
    192, 162,  11,  28,  14,  81, 
      6, 225, 155,   4, 252,  10, 
    120,  20,  56, 175, 162,  18, 
    170, 130, 170, 161,  26,  40, 
      6, 213,  66, 113, 168, 206, 
     57,  51, 156,  92,  97,  76, 
     13,  16,  62, 251,  75, 133, 
    102, 159, 104, 225,  39, 167, 
    255,  47, 180,   6, 238, 255, 
    129, 176,  87, 195, 134, 142, 
      8, 201, 195, 195, 195, 195, 
    195, 195, 195, 195, 195, 195, 
    195, 195, 195, 195, 195, 227, 
    111, 162,  53,  60, 124, 195, 
    252,  27, 187,  15, 216, 230, 
    219, 145, 160, 216, 207,  34, 
    134,  20,  83, 157,  65, 181, 
    159,   8,  62, 223, 147, 254, 
    181,  93,  37, 153,  44,  83, 
    154,  26,  10, 110, 237, 149, 
     24,  76,  70, 164,  38,  43, 
     20,  87,   3, 193,  23, 123, 
     82, 103, 178, 212, 208, 100, 
     84, 114,  89, 163, 132,  10, 
    235, 154,  44,  55, 184, 172, 
    150,  66, 154,  58, 151,  85, 
    134, 144, 244, 236, 147,  42, 
    170,  90, 204, 152, 170, 212, 
    133, 180, 172, 236, 103, 198, 
     44, 126,   2, 119, 157, 193, 
    187, 218, 204, 184, 186,  16, 
    137, 201,  62, 154, 247,  89, 
    188, 193, 136, 202, 211, 120, 
    231, 121, 188, 243, 146, 105, 
    170, 139, 145, 184, 108,  14, 
    199, 228,  13, 186, 174,  89, 
    188,  94, 143, 202,  83, 240, 
    113,  14,  62, 234, 224, 163, 
     35,  98, 202, 214, 112,  92, 
    170,  90, 165,   6,  40, 199, 
    111, 241,  70, 248,  58,  11, 
     95, 113, 248, 106,  15, 155, 
     50,  84, 135, 175, 160, 107, 
    210, 226,  77, 240,  88,  11, 
    143,  70, 185, 146, 156, 230, 
     74,  44, 174, 233, 107,  31, 
    121, 151, 206,   3, 247, 197, 
    106, 152, 230, 138,  45, 110, 
      4, 116, 101,  82,  31,  94, 
    253, 143, 181, 189,  80, 128, 
    169,  74,  26, 195, 163,  10, 
    104,  42,  70, 125, 242,  67, 
    145,  91, 252, 171, 198,  87, 
     27, 169, 143, 252,  38, 138, 
    200, 107, 165, 136,  28,  90, 
    131,  34, 141, 173, 182,  59, 
    227,  78,  39, 246,  80,  68, 
     62,  99, 235, 111, 243, 165, 
     66,  45, 255,  59, 164, 138, 
    202, 105,   5, 115, 149, 212, 
     20, 204,  81,  61, 177, 112, 
     46, 223, 231, 118,  61, 206, 
    101, 219, 169,  63, 230, 156, 
    216,   8,   5,  33,  95, 190, 
    162, 200,  88,  53, 196, 157, 
    106,  94, 207, 236,  74, 215, 
    214, 183, 247, 219, 212,  39, 
     62,  57, 247, 236,  56, 145, 
    106, 207, 191, 212, 127, 243, 
     85, 233, 223,  57, 112, 242, 
    191,  56, 145, 188,  82, 157, 
     76, 217,  21,  68, 187,  96, 
     10,  98,  78, 141, 220, 116, 
     34, 213, 213, 138, 161,  66, 
     31, 237, 206, 245,  52,  68, 
     78, 251, 186, 147,  87,  18, 
    215, 147,  75, 203, 163, 169, 
    244,  74, 178,  63, 179, 188, 
    148, 236, 203,  44, 166,  39, 
    151,  71,  18, 253, 201, 165, 
    197, 201, 228, 240, 204, 120, 
     42, 189, 184, 148, 188, 186, 
     48, 151, 205, 204, 166,  83, 
    201, 145, 137, 133, 220, 224, 
    124, 250, 214, 194, 226, 220, 
    248, 236, 205, 241, 236, 181, 
    169,  41, 164, 143, 222,  27, 
    182, 103, 134,  50, 185, 244, 
    236,  64, 102, 122, 102,  57, 
     51,  63, 157, 200, 181, 100, 
     83,  19, 236,   7,  26, 127, 
    153, 246,  53,  16,   0,   0, 
    207,   0,   0,   0,  23,   0, 
      1,   0,   0, 125,  23,   0, 
    120,   1, 237, 152,  59,  79, 
     20,  81,  20, 199, 239, 236, 
     14, 151, 217, 217, 195, 217, 
    217, 101,  88,  64, 151,  97, 
    241, 137,  10, 104, 148,  66, 
    141, 133, 162, 198,   2,  21, 
    162, 196,  80, 140,  33,  60, 
     22, 221, 132, 199,   6,   8, 
    161,  17, 193, 152, 104, 148, 
     24,  75,  11,  63, 128, 133, 
    133, 165, 149,  16,  72, 172, 
     48,  49,  20,   6,  63, 130, 
    157, 177, 176,  50, 193, 255, 
     97, 102, 117,  67,  52, 150, 
     26,  51, 191, 228, 127, 206, 
    125, 205, 157, 115, 207, 189, 
    213, 185,  83, 175, 182,  57, 
    255, 241, 211,  46, 241, 109, 
    215,  94,  14, 220, 143,  41, 
     85,  37, 157,  10,  74, 174, 
     88, 165, 114,  89, 177,  74, 
    237,  19,  99,  64,  88, 155, 
    134,  59,  14, 249, 232, 159, 
    133, 111, 133, 100,  94, 252, 
    187, 245, 135,  93, 163, 163, 
    143, 187, 208,  84, 237,  80, 
      6, 242,  67, 201, 218,  36, 
    116,   2,  74,  65,  66,  66, 
     76,   5, 229,  56, 240, 155, 
     31, 200, 111, 227,  80,   7, 
     84,  73, 181,  24, 176, 115, 
     15,  53,  40, 230, 215, 116, 
     67,  18, 255, 239, 144, 216, 
    132, 242, 158, 229,  56, 229, 
    188, 255,  26, 146, 151, 242, 
     61,   9, 114,  31, 149,  48, 
     36, 121,  19, 214, 235, 196, 
      6, 223,   8,  86, 120, 175, 
    229, 187,  92, 129, 126, 199, 
     22,  48, 165,  81,  65, 185, 
     47, 251, 107, 213, 115,  76, 
     27,  15, 242,  58, 182, 230, 
    104,  12, 104,  76, 106,  92, 
    164, 214,  16,  46,  73,  91, 
     16,  18, 170, 109,   8,  15, 
     64,  19,  84,   3,  33,  64, 
    141,   4, 107,   7,  66,  32, 
     26, 143,  69, 215,  66,  56, 
    147,  70, 188,  26,  49, 106, 
    188,  87, 221,   0,  53,  66, 
    120, 177, 122,  55, 148, 131, 
    154,  32,  15, 106,  14, 223, 
    140,  25,  68, 132,  95, 110, 
    163, 141, 224, 164,  58,  22, 
    188,  36,  29, 151,  72, 255, 
     95,  36,   7,  72, 243,  15, 
    130, 108,   4, 247,  93, 126, 
     34, 189,  98,  34,  34,  34, 
     34,  34,  34,  34,  34,  34, 
     34,  34,  34,  34,  34,  34, 
     34, 254,  18, 177, 150, 123, 
    111,  84, 124,  97, 229, 174, 
     90,  90,  62, 105, 196, 214, 
     46,  27, 143,  86, 123, 141, 
    165, 213,  62, 227, 201, 170, 
    140, 197,  23, 147, 171, 253, 
    134, 179, 182,  21, 255, 246, 
     70, 170,  26, 165, 212, 210, 
    114, 146,  21, 219, 164,  40, 
     97,  43, 178,  44,  69,  41, 
     54, 153, 201, 164,  26, 219, 
     36, 178,  76, 170, 101, 205, 
     25, 210, 148, 182,  53,  57, 
    150, 166, 106, 206, 178, 166, 
     44,  85, 217,  89,  74,  90, 
     11,  27, 102, 162, 205, 204, 
    186,  57, 174, 203, 228, 200, 
    117, 114, 180, 203, 245, 184, 
     49, 227,  81, 131, 227, 145, 
    231, 186, 220, 148, 113,  41, 
    231, 184, 100, 215,  57, 156, 
    106, 118, 136, 155,  28, 178, 
    110,  58, 243, 156, 206, 112, 
     42, 157,  99,  59, 237, 176, 
    196, 182, 151,  93, 222,  67, 
     46, 181, 216,  46, 229,  45, 
    151,  14, 178, 199,   7, 200, 
    163, 253, 182,  71, 251,  44, 
    143, 142, 112, 158,  15,  83, 
    158,  14, 217, 121, 106, 181, 
    242, 116, 148, 153,  59, 136, 
    169, 221, 102, 106, 179, 152, 
    122, 149, 122, 101, 168,  15, 
     27,  82, 178, 114, 210,  39, 
     55,  13,  59, 165,  50, 181, 
    240,  78,  53, 142,  10,  79, 
     53, 202, 172, 130,  87,  49, 
    165, 171, 225, 227,  73, 101, 
     37, 224,  19, 172,  90,  85, 
    231, 166,  97,  41, 245,  37, 
    166, 230, 169,   6,  99, 200, 
    101, 125, 204, 156, 231, 148, 
    180, 165, 246, 181, 184, 188, 
     93, 250,  67,  83, 122, 101, 
     26, 101, 225, 142,  49,  71, 
    204, 142, 177, 237, 182,  41, 
    139, 127, 210,  31, 214,  14, 
     59,  67,  47, 181,  95, 169, 
    151,  26,  97, 181,  81,  10, 
    203, 102,  88, 137,  59,  51, 
     54, 123, 234, 217, 215, 183, 
    207, 165,  45,  60,  13, 191, 
     41, 133,  62,  15,  17, 244, 
     39,  94, 135, 235,  95, 132, 
     94,  98, 149,  26,  23,   7, 
    213, 191, 160, 216,   9,  54, 
    195, 249, 247, 161, 151, 154, 
    152, 212, 156, 119, 198, 241, 
     57, 156,  47,  64,  18, 233, 
    133, 211, 254, 185, 190,  75, 
    254, 244, 204, 192,  72,  97, 
    214, 239,  46, 206,  76, 251, 
     23, 138,  83, 133, 225, 153, 
    254, 190, 110, 127, 122, 106, 
    216, 191, 126, 123, 112, 164, 
     48,  53, 237, 159, 159,  28, 
     47,  21, 199,  10,  35, 126, 
    255, 208, 228,  92, 207,  68, 
    225, 234, 228, 212, 248, 224, 
    216, 149, 193, 210, 197, 209, 
     81,  44,  31, 184, 113,  61, 
     24, 233,  45, 206,  21, 198, 
     46,  23, 111, 221, 158,  41, 
     78, 220, 234, 155, 235,  40, 
    141,  12, 169, 239, 100, 197, 
    133, 183,  88,  72,  83,  72, 
      8,   0,   0,   0,  60, 108, 
    118,  57, 152, 246, 198, 156, 
     88,  80,  68,  80, 100,   0, 
      0,   0,  68,  58,  92,  65, 
     84,  71,  92, 115, 116,  95, 
    100, 101, 118,  92,  75, 105, 
    116, 115,  92,  68, 105, 114, 
    101,  99, 116,  88,  84,  75, 
     92, 115, 114,  99,  92,  83, 
    104,  97, 100, 101, 114, 115, 
     92,  67, 111, 109, 112, 105, 
    108, 101, 100,  92,  88,  98, 
    111, 120,  79, 110, 101,  78, 
    111, 114, 109,  97, 108,  77, 
     97, 112,  69, 102, 102, 101, 
     99, 116,  95,  86,  83,  78, 
    111, 114, 109,  97, 108,  80, 
    105, 120, 101, 108,  76, 105, 
    103, 104, 116, 105, 110, 103, 
     84, 120,  46, 112, 100,  98
};
